Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    BREAK
    CASE
    CATCH
    CLASS
    CONTINUE
    DEBUGGER
    DEFAULT
    DIV_EQUAL
    DO
    EXPORT
    EXTENDS
    FINALLY
    FOR
    GREATEREQUAL
    IMPORT
    IN
    INSTANCEOF
    LESSEQUAL
    MINUS
    MINUS_EQUAL
    MOD_EQUAL
    MUL_EQUAL
    NOT
    OR
    PLUS_EQUAL
    PRINT
    SWITCH
    THIS
    THROW
    TRY
    TWOPOINTS
    TYPEOF
    VOID
    WITH
    YIELD

Grammar

Rule 0     S' -> sentencias
Rule 1     sentencias -> impresion
Rule 2     sentencias -> expression
Rule 3     expression -> ID EQUAL expression
Rule 4     expression -> callMethods
Rule 5     expression -> callFunction
Rule 6     expression -> javaScript_param
Rule 7     expression -> varDeclaration
Rule 8     sentencias -> IF LPAREN logical_expresion RPAREN
Rule 9     sentencias -> IF LPAREN logical_expresion RPAREN sentencias ELSE sentencias
Rule 10    sentencias -> WHILE LPAREN logical_expresion RPAREN block
Rule 11    impresion -> ALERT LPAREN expression RPAREN
Rule 12    impresion -> ALERT LPAREN RPAREN
Rule 13    expression -> expression PLUS term
Rule 14    expression -> expression TIMES term
Rule 15    expression -> expression DIVIDE term
Rule 16    expression -> expression MOD term
Rule 17    expression -> VAR ID
Rule 18    expression -> CONST ID
Rule 19    expression -> logical_expresion
Rule 20    logical_expresion -> expression GREATER term
Rule 21    logical_expresion -> expression LESS term
Rule 22    logical_expresion -> expression ISEQUAL term
Rule 23    logical_expresion -> expression IS_NOT_IDENTICAL term
Rule 24    logical_expresion -> expression IS_IDENTICAL term
Rule 25    expression -> block
Rule 26    block -> LBLOCK sentencias RBLOCK
Rule 27    expression -> term
Rule 28    term -> term TIMES factor
Rule 29    term -> term DIVIDE factor
Rule 30    term -> factor
Rule 31    factor -> NUM
Rule 32    factor -> ID
Rule 33    factor -> LPAREN expression RPAREN
Rule 34    javaScript_param -> STRING
Rule 35    javaScript_param -> NUM
Rule 36    javaScript_param -> boolean
Rule 37    empty -> <empty>
Rule 38    boolean -> TRUE
Rule 39    boolean -> FALSE
Rule 40    varType -> LET
Rule 41    varType -> CONST
Rule 42    varType -> VAR
Rule 43    varType -> empty
Rule 44    varDeclaration -> varType ID EQUAL arrayDeclare COLON
Rule 45    varDeclaration -> varType ID EQUAL declareMap COLON
Rule 46    varDeclaration -> varType ID EQUAL declararSet COLON
Rule 47    callMethods -> ID methodArray COLON
Rule 48    callMethods -> ID methodSet COLON
Rule 49    callMethods -> ID methodMap COLON
Rule 50    arrayDeclare -> LBRACKET arrayValues RBRACKET
Rule 51    arrayDeclare -> NEW ARRAY LPAREN arrayValues RPAREN
Rule 52    arrayValues -> arrayValue
Rule 53    arrayValues -> arrayValue COMMA arrayValue
Rule 54    arrayValue -> LPAREN expression RPAREN
Rule 55    arrayValue -> ID
Rule 56    arrayValue -> NUM
Rule 57    arrayValue -> STRING
Rule 58    arrayValue -> boolean
Rule 59    arrayValue -> empty
Rule 60    methodArray -> PERIOD PUSH LPAREN arrayValue RPAREN
Rule 61    methodArray -> PERIOD UNSHIFT LPAREN arrayValue RPAREN
Rule 62    methodArray -> PERIOD POP LPAREN empty RPAREN
Rule 63    declareMap -> NEW MAP LPAREN iterable RPAREN
Rule 64    iterable -> arrayDeclare
Rule 65    iterable -> declararSet
Rule 66    iterable -> empty
Rule 67    methodMap -> PERIOD CLEAR LPAREN RPAREN
Rule 68    methodMap -> PERIOD LENGTH LPAREN RPAREN
Rule 69    declaration -> varDeclaration
Rule 70    declaration -> declareteFunction
Rule 71    declaration -> callFunction
Rule 72    declareteFunction -> FUNCTION ID LPAREN params RPAREN
Rule 73    declareteFunction -> FUNCTION ID LPAREN params RPAREN sentencesCmpt
Rule 74    sentencesCmpt -> LBLOCK expression RBLOCK
Rule 75    sentencesCmpt -> LBLOCK expression RETURN RBLOCK
Rule 76    callFunction -> ID LPAREN params RPAREN
Rule 77    params -> paramList
Rule 78    params -> empty
Rule 79    param -> ID
Rule 80    param -> ID LBRACKET RBRACKET
Rule 81    paramList -> param
Rule 82    paramList -> param COMMA paramList
Rule 83    args -> argslist
Rule 84    args -> empty
Rule 85    args -> javaScript_param
Rule 86    argslist -> args
Rule 87    argslist -> args COMMA argslist
Rule 88    declararSet -> NEW SET LPAREN setValues RPAREN
Rule 89    contiene -> ID PERIOD HAS LPAREN params RPAREN
Rule 90    setValues -> setValue
Rule 91    setValues -> setValue COMMA setValue
Rule 92    setValue -> ID
Rule 93    setValue -> NUM
Rule 94    setValue -> STRING
Rule 95    setValue -> boolean
Rule 96    setValue -> empty
Rule 97    methodSet -> PERIOD ADD LPAREN setValue RPAREN
Rule 98    methodSet -> PERIOD DELETE LPAREN setValue RPAREN
Rule 99    methodSet -> PERIOD CLEAR LPAREN empty RPAREN

Terminals, with rules where they appear

ADD                  : 97
ALERT                : 11 12
AND                  : 
ARRAY                : 51
BREAK                : 
CASE                 : 
CATCH                : 
CLASS                : 
CLEAR                : 67 99
COLON                : 44 45 46 47 48 49
COMMA                : 53 82 87 91
CONST                : 18 41
CONTINUE             : 
DEBUGGER             : 
DEFAULT              : 
DELETE               : 98
DIVIDE               : 15 29
DIV_EQUAL            : 
DO                   : 
ELSE                 : 9
EQUAL                : 3 44 45 46
EXPORT               : 
EXTENDS              : 
FALSE                : 39
FINALLY              : 
FOR                  : 
FUNCTION             : 72 73
GREATER              : 20
GREATEREQUAL         : 
HAS                  : 89
ID                   : 3 17 18 32 44 45 46 47 48 49 55 72 73 76 79 80 89 92
IF                   : 8 9
IMPORT               : 
IN                   : 
INSTANCEOF           : 
ISEQUAL              : 22
IS_IDENTICAL         : 24
IS_NOT_IDENTICAL     : 23
LBLOCK               : 26 74 75
LBRACKET             : 50 80
LENGTH               : 68
LESS                 : 21
LESSEQUAL            : 
LET                  : 40
LPAREN               : 8 9 10 11 12 33 51 54 60 61 62 63 67 68 72 73 76 88 89 97 98 99
MAP                  : 63
MINUS                : 
MINUS_EQUAL          : 
MOD                  : 16
MOD_EQUAL            : 
MUL_EQUAL            : 
NEW                  : 51 63 88
NOT                  : 
NUM                  : 31 35 56 93
OR                   : 
PERIOD               : 60 61 62 67 68 89 97 98 99
PLUS                 : 13
PLUS_EQUAL           : 
POP                  : 62
PRINT                : 
PUSH                 : 60
RBLOCK               : 26 74 75
RBRACKET             : 50 80
RETURN               : 75
RPAREN               : 8 9 10 11 12 33 51 54 60 61 62 63 67 68 72 73 76 88 89 97 98 99
SET                  : 88
STRING               : 34 57 94
SWITCH               : 
THIS                 : 
THROW                : 
TIMES                : 14 28
TRUE                 : 38
TRY                  : 
TWOPOINTS            : 
TYPEOF               : 
UNSHIFT              : 61
VAR                  : 17 42
VOID                 : 
WHILE                : 10
WITH                 : 
YIELD                : 
error                : 

Nonterminals, with rules where they appear

args                 : 86 87
argslist             : 83 87
arrayDeclare         : 44 64
arrayValue           : 52 53 53 60 61
arrayValues          : 50 51
block                : 10 25
boolean              : 36 58 95
callFunction         : 5 71
callMethods          : 4
contiene             : 
declararSet          : 46 65
declaration          : 
declareMap           : 45
declareteFunction    : 70
empty                : 43 59 62 66 78 84 96 99
expression           : 2 3 11 13 14 15 16 20 21 22 23 24 33 54 74 75
factor               : 28 29 30
impresion            : 1
iterable             : 63
javaScript_param     : 6 85
logical_expresion    : 8 9 10 19
methodArray          : 47
methodMap            : 49
methodSet            : 48
param                : 81 82
paramList            : 77 82
params               : 72 73 76 89
sentencesCmpt        : 73
sentencias           : 9 9 26 0
setValue             : 90 91 91 97 98
setValues            : 88
term                 : 13 14 15 16 20 21 22 23 24 27 28 29
varDeclaration       : 7 69
varType              : 44 45 46

Parsing method: LALR

state 0

    (0) S' -> . sentencias
    (1) sentencias -> . impresion
    (2) sentencias -> . expression
    (8) sentencias -> . IF LPAREN logical_expresion RPAREN
    (9) sentencias -> . IF LPAREN logical_expresion RPAREN sentencias ELSE sentencias
    (10) sentencias -> . WHILE LPAREN logical_expresion RPAREN block
    (11) impresion -> . ALERT LPAREN expression RPAREN
    (12) impresion -> . ALERT LPAREN RPAREN
    (3) expression -> . ID EQUAL expression
    (4) expression -> . callMethods
    (5) expression -> . callFunction
    (6) expression -> . javaScript_param
    (7) expression -> . varDeclaration
    (13) expression -> . expression PLUS term
    (14) expression -> . expression TIMES term
    (15) expression -> . expression DIVIDE term
    (16) expression -> . expression MOD term
    (17) expression -> . VAR ID
    (18) expression -> . CONST ID
    (19) expression -> . logical_expresion
    (25) expression -> . block
    (27) expression -> . term
    (47) callMethods -> . ID methodArray COLON
    (48) callMethods -> . ID methodSet COLON
    (49) callMethods -> . ID methodMap COLON
    (76) callFunction -> . ID LPAREN params RPAREN
    (34) javaScript_param -> . STRING
    (35) javaScript_param -> . NUM
    (36) javaScript_param -> . boolean
    (44) varDeclaration -> . varType ID EQUAL arrayDeclare COLON
    (45) varDeclaration -> . varType ID EQUAL declareMap COLON
    (46) varDeclaration -> . varType ID EQUAL declararSet COLON
    (20) logical_expresion -> . expression GREATER term
    (21) logical_expresion -> . expression LESS term
    (22) logical_expresion -> . expression ISEQUAL term
    (23) logical_expresion -> . expression IS_NOT_IDENTICAL term
    (24) logical_expresion -> . expression IS_IDENTICAL term
    (26) block -> . LBLOCK sentencias RBLOCK
    (28) term -> . term TIMES factor
    (29) term -> . term DIVIDE factor
    (30) term -> . factor
    (38) boolean -> . TRUE
    (39) boolean -> . FALSE
    (40) varType -> . LET
    (41) varType -> . CONST
    (42) varType -> . VAR
    (43) varType -> . empty
    (31) factor -> . NUM
    (32) factor -> . ID
    (33) factor -> . LPAREN expression RPAREN
    (37) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    IF              shift and go to state 4
    WHILE           shift and go to state 7
    ALERT           shift and go to state 9
    ID              shift and go to state 10
    VAR             shift and go to state 16
    CONST           shift and go to state 17
    STRING          shift and go to state 18
    NUM             shift and go to state 19
    LBLOCK          shift and go to state 22
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    LET             shift and go to state 26
    LPAREN          shift and go to state 5

  ! ID              [ reduce using rule 37 (empty -> .) ]

    sentencias                     shift and go to state 1
    impresion                      shift and go to state 2
    expression                     shift and go to state 3
    logical_expresion              shift and go to state 6
    block                          shift and go to state 8
    callMethods                    shift and go to state 11
    callFunction                   shift and go to state 12
    javaScript_param               shift and go to state 13
    varDeclaration                 shift and go to state 14
    term                           shift and go to state 15
    boolean                        shift and go to state 20
    varType                        shift and go to state 21
    factor                         shift and go to state 23
    empty                          shift and go to state 27

state 1

    (0) S' -> sentencias .



state 2

    (1) sentencias -> impresion .

    $end            reduce using rule 1 (sentencias -> impresion .)
    RBLOCK          reduce using rule 1 (sentencias -> impresion .)
    ELSE            reduce using rule 1 (sentencias -> impresion .)


state 3

    (2) sentencias -> expression .
    (13) expression -> expression . PLUS term
    (14) expression -> expression . TIMES term
    (15) expression -> expression . DIVIDE term
    (16) expression -> expression . MOD term
    (20) logical_expresion -> expression . GREATER term
    (21) logical_expresion -> expression . LESS term
    (22) logical_expresion -> expression . ISEQUAL term
    (23) logical_expresion -> expression . IS_NOT_IDENTICAL term
    (24) logical_expresion -> expression . IS_IDENTICAL term

    $end            reduce using rule 2 (sentencias -> expression .)
    RBLOCK          reduce using rule 2 (sentencias -> expression .)
    ELSE            reduce using rule 2 (sentencias -> expression .)
    PLUS            shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MOD             shift and go to state 31
    GREATER         shift and go to state 32
    LESS            shift and go to state 33
    ISEQUAL         shift and go to state 34
    IS_NOT_IDENTICAL shift and go to state 35
    IS_IDENTICAL    shift and go to state 36


state 4

    (8) sentencias -> IF . LPAREN logical_expresion RPAREN
    (9) sentencias -> IF . LPAREN logical_expresion RPAREN sentencias ELSE sentencias

    LPAREN          shift and go to state 37


state 5

    (33) factor -> LPAREN . expression RPAREN
    (3) expression -> . ID EQUAL expression
    (4) expression -> . callMethods
    (5) expression -> . callFunction
    (6) expression -> . javaScript_param
    (7) expression -> . varDeclaration
    (13) expression -> . expression PLUS term
    (14) expression -> . expression TIMES term
    (15) expression -> . expression DIVIDE term
    (16) expression -> . expression MOD term
    (17) expression -> . VAR ID
    (18) expression -> . CONST ID
    (19) expression -> . logical_expresion
    (25) expression -> . block
    (27) expression -> . term
    (47) callMethods -> . ID methodArray COLON
    (48) callMethods -> . ID methodSet COLON
    (49) callMethods -> . ID methodMap COLON
    (76) callFunction -> . ID LPAREN params RPAREN
    (34) javaScript_param -> . STRING
    (35) javaScript_param -> . NUM
    (36) javaScript_param -> . boolean
    (44) varDeclaration -> . varType ID EQUAL arrayDeclare COLON
    (45) varDeclaration -> . varType ID EQUAL declareMap COLON
    (46) varDeclaration -> . varType ID EQUAL declararSet COLON
    (20) logical_expresion -> . expression GREATER term
    (21) logical_expresion -> . expression LESS term
    (22) logical_expresion -> . expression ISEQUAL term
    (23) logical_expresion -> . expression IS_NOT_IDENTICAL term
    (24) logical_expresion -> . expression IS_IDENTICAL term
    (26) block -> . LBLOCK sentencias RBLOCK
    (28) term -> . term TIMES factor
    (29) term -> . term DIVIDE factor
    (30) term -> . factor
    (38) boolean -> . TRUE
    (39) boolean -> . FALSE
    (40) varType -> . LET
    (41) varType -> . CONST
    (42) varType -> . VAR
    (43) varType -> . empty
    (31) factor -> . NUM
    (32) factor -> . ID
    (33) factor -> . LPAREN expression RPAREN
    (37) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 10
    VAR             shift and go to state 16
    CONST           shift and go to state 17
    STRING          shift and go to state 18
    NUM             shift and go to state 19
    LBLOCK          shift and go to state 22
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    LET             shift and go to state 26
    LPAREN          shift and go to state 5

  ! ID              [ reduce using rule 37 (empty -> .) ]

    expression                     shift and go to state 38
    callMethods                    shift and go to state 11
    callFunction                   shift and go to state 12
    javaScript_param               shift and go to state 13
    varDeclaration                 shift and go to state 14
    term                           shift and go to state 15
    logical_expresion              shift and go to state 6
    block                          shift and go to state 8
    boolean                        shift and go to state 20
    varType                        shift and go to state 21
    factor                         shift and go to state 23
    empty                          shift and go to state 27

state 6

    (19) expression -> logical_expresion .

    PLUS            reduce using rule 19 (expression -> logical_expresion .)
    TIMES           reduce using rule 19 (expression -> logical_expresion .)
    DIVIDE          reduce using rule 19 (expression -> logical_expresion .)
    MOD             reduce using rule 19 (expression -> logical_expresion .)
    GREATER         reduce using rule 19 (expression -> logical_expresion .)
    LESS            reduce using rule 19 (expression -> logical_expresion .)
    ISEQUAL         reduce using rule 19 (expression -> logical_expresion .)
    IS_NOT_IDENTICAL reduce using rule 19 (expression -> logical_expresion .)
    IS_IDENTICAL    reduce using rule 19 (expression -> logical_expresion .)
    $end            reduce using rule 19 (expression -> logical_expresion .)
    RPAREN          reduce using rule 19 (expression -> logical_expresion .)
    RBLOCK          reduce using rule 19 (expression -> logical_expresion .)
    ELSE            reduce using rule 19 (expression -> logical_expresion .)


state 7

    (10) sentencias -> WHILE . LPAREN logical_expresion RPAREN block

    LPAREN          shift and go to state 39


state 8

    (25) expression -> block .

    PLUS            reduce using rule 25 (expression -> block .)
    TIMES           reduce using rule 25 (expression -> block .)
    DIVIDE          reduce using rule 25 (expression -> block .)
    MOD             reduce using rule 25 (expression -> block .)
    GREATER         reduce using rule 25 (expression -> block .)
    LESS            reduce using rule 25 (expression -> block .)
    ISEQUAL         reduce using rule 25 (expression -> block .)
    IS_NOT_IDENTICAL reduce using rule 25 (expression -> block .)
    IS_IDENTICAL    reduce using rule 25 (expression -> block .)
    $end            reduce using rule 25 (expression -> block .)
    RPAREN          reduce using rule 25 (expression -> block .)
    RBLOCK          reduce using rule 25 (expression -> block .)
    ELSE            reduce using rule 25 (expression -> block .)


state 9

    (11) impresion -> ALERT . LPAREN expression RPAREN
    (12) impresion -> ALERT . LPAREN RPAREN

    LPAREN          shift and go to state 40


state 10

    (3) expression -> ID . EQUAL expression
    (47) callMethods -> ID . methodArray COLON
    (48) callMethods -> ID . methodSet COLON
    (49) callMethods -> ID . methodMap COLON
    (76) callFunction -> ID . LPAREN params RPAREN
    (32) factor -> ID .
    (60) methodArray -> . PERIOD PUSH LPAREN arrayValue RPAREN
    (61) methodArray -> . PERIOD UNSHIFT LPAREN arrayValue RPAREN
    (62) methodArray -> . PERIOD POP LPAREN empty RPAREN
    (97) methodSet -> . PERIOD ADD LPAREN setValue RPAREN
    (98) methodSet -> . PERIOD DELETE LPAREN setValue RPAREN
    (99) methodSet -> . PERIOD CLEAR LPAREN empty RPAREN
    (67) methodMap -> . PERIOD CLEAR LPAREN RPAREN
    (68) methodMap -> . PERIOD LENGTH LPAREN RPAREN

    EQUAL           shift and go to state 41
    LPAREN          shift and go to state 45
    TIMES           reduce using rule 32 (factor -> ID .)
    DIVIDE          reduce using rule 32 (factor -> ID .)
    PLUS            reduce using rule 32 (factor -> ID .)
    MOD             reduce using rule 32 (factor -> ID .)
    GREATER         reduce using rule 32 (factor -> ID .)
    LESS            reduce using rule 32 (factor -> ID .)
    ISEQUAL         reduce using rule 32 (factor -> ID .)
    IS_NOT_IDENTICAL reduce using rule 32 (factor -> ID .)
    IS_IDENTICAL    reduce using rule 32 (factor -> ID .)
    $end            reduce using rule 32 (factor -> ID .)
    RPAREN          reduce using rule 32 (factor -> ID .)
    RBLOCK          reduce using rule 32 (factor -> ID .)
    ELSE            reduce using rule 32 (factor -> ID .)
    PERIOD          shift and go to state 46

    methodArray                    shift and go to state 42
    methodSet                      shift and go to state 43
    methodMap                      shift and go to state 44

state 11

    (4) expression -> callMethods .

    PLUS            reduce using rule 4 (expression -> callMethods .)
    TIMES           reduce using rule 4 (expression -> callMethods .)
    DIVIDE          reduce using rule 4 (expression -> callMethods .)
    MOD             reduce using rule 4 (expression -> callMethods .)
    GREATER         reduce using rule 4 (expression -> callMethods .)
    LESS            reduce using rule 4 (expression -> callMethods .)
    ISEQUAL         reduce using rule 4 (expression -> callMethods .)
    IS_NOT_IDENTICAL reduce using rule 4 (expression -> callMethods .)
    IS_IDENTICAL    reduce using rule 4 (expression -> callMethods .)
    $end            reduce using rule 4 (expression -> callMethods .)
    RPAREN          reduce using rule 4 (expression -> callMethods .)
    RBLOCK          reduce using rule 4 (expression -> callMethods .)
    ELSE            reduce using rule 4 (expression -> callMethods .)


state 12

    (5) expression -> callFunction .

    PLUS            reduce using rule 5 (expression -> callFunction .)
    TIMES           reduce using rule 5 (expression -> callFunction .)
    DIVIDE          reduce using rule 5 (expression -> callFunction .)
    MOD             reduce using rule 5 (expression -> callFunction .)
    GREATER         reduce using rule 5 (expression -> callFunction .)
    LESS            reduce using rule 5 (expression -> callFunction .)
    ISEQUAL         reduce using rule 5 (expression -> callFunction .)
    IS_NOT_IDENTICAL reduce using rule 5 (expression -> callFunction .)
    IS_IDENTICAL    reduce using rule 5 (expression -> callFunction .)
    $end            reduce using rule 5 (expression -> callFunction .)
    RPAREN          reduce using rule 5 (expression -> callFunction .)
    RBLOCK          reduce using rule 5 (expression -> callFunction .)
    ELSE            reduce using rule 5 (expression -> callFunction .)


state 13

    (6) expression -> javaScript_param .

    PLUS            reduce using rule 6 (expression -> javaScript_param .)
    TIMES           reduce using rule 6 (expression -> javaScript_param .)
    DIVIDE          reduce using rule 6 (expression -> javaScript_param .)
    MOD             reduce using rule 6 (expression -> javaScript_param .)
    GREATER         reduce using rule 6 (expression -> javaScript_param .)
    LESS            reduce using rule 6 (expression -> javaScript_param .)
    ISEQUAL         reduce using rule 6 (expression -> javaScript_param .)
    IS_NOT_IDENTICAL reduce using rule 6 (expression -> javaScript_param .)
    IS_IDENTICAL    reduce using rule 6 (expression -> javaScript_param .)
    $end            reduce using rule 6 (expression -> javaScript_param .)
    RPAREN          reduce using rule 6 (expression -> javaScript_param .)
    RBLOCK          reduce using rule 6 (expression -> javaScript_param .)
    ELSE            reduce using rule 6 (expression -> javaScript_param .)


state 14

    (7) expression -> varDeclaration .

    PLUS            reduce using rule 7 (expression -> varDeclaration .)
    TIMES           reduce using rule 7 (expression -> varDeclaration .)
    DIVIDE          reduce using rule 7 (expression -> varDeclaration .)
    MOD             reduce using rule 7 (expression -> varDeclaration .)
    GREATER         reduce using rule 7 (expression -> varDeclaration .)
    LESS            reduce using rule 7 (expression -> varDeclaration .)
    ISEQUAL         reduce using rule 7 (expression -> varDeclaration .)
    IS_NOT_IDENTICAL reduce using rule 7 (expression -> varDeclaration .)
    IS_IDENTICAL    reduce using rule 7 (expression -> varDeclaration .)
    $end            reduce using rule 7 (expression -> varDeclaration .)
    RPAREN          reduce using rule 7 (expression -> varDeclaration .)
    RBLOCK          reduce using rule 7 (expression -> varDeclaration .)
    ELSE            reduce using rule 7 (expression -> varDeclaration .)


state 15

    (27) expression -> term .
    (28) term -> term . TIMES factor
    (29) term -> term . DIVIDE factor

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    PLUS            reduce using rule 27 (expression -> term .)
    MOD             reduce using rule 27 (expression -> term .)
    GREATER         reduce using rule 27 (expression -> term .)
    LESS            reduce using rule 27 (expression -> term .)
    ISEQUAL         reduce using rule 27 (expression -> term .)
    IS_NOT_IDENTICAL reduce using rule 27 (expression -> term .)
    IS_IDENTICAL    reduce using rule 27 (expression -> term .)
    $end            reduce using rule 27 (expression -> term .)
    RPAREN          reduce using rule 27 (expression -> term .)
    RBLOCK          reduce using rule 27 (expression -> term .)
    ELSE            reduce using rule 27 (expression -> term .)
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48

  ! TIMES           [ reduce using rule 27 (expression -> term .) ]
  ! DIVIDE          [ reduce using rule 27 (expression -> term .) ]


state 16

    (17) expression -> VAR . ID
    (42) varType -> VAR .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 49

  ! ID              [ reduce using rule 42 (varType -> VAR .) ]


state 17

    (18) expression -> CONST . ID
    (41) varType -> CONST .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 50

  ! ID              [ reduce using rule 41 (varType -> CONST .) ]


state 18

    (34) javaScript_param -> STRING .

    PLUS            reduce using rule 34 (javaScript_param -> STRING .)
    TIMES           reduce using rule 34 (javaScript_param -> STRING .)
    DIVIDE          reduce using rule 34 (javaScript_param -> STRING .)
    MOD             reduce using rule 34 (javaScript_param -> STRING .)
    GREATER         reduce using rule 34 (javaScript_param -> STRING .)
    LESS            reduce using rule 34 (javaScript_param -> STRING .)
    ISEQUAL         reduce using rule 34 (javaScript_param -> STRING .)
    IS_NOT_IDENTICAL reduce using rule 34 (javaScript_param -> STRING .)
    IS_IDENTICAL    reduce using rule 34 (javaScript_param -> STRING .)
    $end            reduce using rule 34 (javaScript_param -> STRING .)
    RPAREN          reduce using rule 34 (javaScript_param -> STRING .)
    RBLOCK          reduce using rule 34 (javaScript_param -> STRING .)
    ELSE            reduce using rule 34 (javaScript_param -> STRING .)


state 19

    (35) javaScript_param -> NUM .
    (31) factor -> NUM .

  ! reduce/reduce conflict for TIMES resolved using rule 31 (factor -> NUM .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 31 (factor -> NUM .)
  ! reduce/reduce conflict for PLUS resolved using rule 31 (factor -> NUM .)
  ! reduce/reduce conflict for MOD resolved using rule 31 (factor -> NUM .)
  ! reduce/reduce conflict for GREATER resolved using rule 31 (factor -> NUM .)
  ! reduce/reduce conflict for LESS resolved using rule 31 (factor -> NUM .)
  ! reduce/reduce conflict for ISEQUAL resolved using rule 31 (factor -> NUM .)
  ! reduce/reduce conflict for IS_NOT_IDENTICAL resolved using rule 31 (factor -> NUM .)
  ! reduce/reduce conflict for IS_IDENTICAL resolved using rule 31 (factor -> NUM .)
  ! reduce/reduce conflict for $end resolved using rule 31 (factor -> NUM .)
  ! reduce/reduce conflict for RPAREN resolved using rule 31 (factor -> NUM .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 31 (factor -> NUM .)
  ! reduce/reduce conflict for ELSE resolved using rule 31 (factor -> NUM .)
    TIMES           reduce using rule 31 (factor -> NUM .)
    DIVIDE          reduce using rule 31 (factor -> NUM .)
    PLUS            reduce using rule 31 (factor -> NUM .)
    MOD             reduce using rule 31 (factor -> NUM .)
    GREATER         reduce using rule 31 (factor -> NUM .)
    LESS            reduce using rule 31 (factor -> NUM .)
    ISEQUAL         reduce using rule 31 (factor -> NUM .)
    IS_NOT_IDENTICAL reduce using rule 31 (factor -> NUM .)
    IS_IDENTICAL    reduce using rule 31 (factor -> NUM .)
    $end            reduce using rule 31 (factor -> NUM .)
    RPAREN          reduce using rule 31 (factor -> NUM .)
    RBLOCK          reduce using rule 31 (factor -> NUM .)
    ELSE            reduce using rule 31 (factor -> NUM .)

  ! PLUS            [ reduce using rule 35 (javaScript_param -> NUM .) ]
  ! TIMES           [ reduce using rule 35 (javaScript_param -> NUM .) ]
  ! DIVIDE          [ reduce using rule 35 (javaScript_param -> NUM .) ]
  ! MOD             [ reduce using rule 35 (javaScript_param -> NUM .) ]
  ! GREATER         [ reduce using rule 35 (javaScript_param -> NUM .) ]
  ! LESS            [ reduce using rule 35 (javaScript_param -> NUM .) ]
  ! ISEQUAL         [ reduce using rule 35 (javaScript_param -> NUM .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 35 (javaScript_param -> NUM .) ]
  ! IS_IDENTICAL    [ reduce using rule 35 (javaScript_param -> NUM .) ]
  ! $end            [ reduce using rule 35 (javaScript_param -> NUM .) ]
  ! RPAREN          [ reduce using rule 35 (javaScript_param -> NUM .) ]
  ! RBLOCK          [ reduce using rule 35 (javaScript_param -> NUM .) ]
  ! ELSE            [ reduce using rule 35 (javaScript_param -> NUM .) ]


state 20

    (36) javaScript_param -> boolean .

    PLUS            reduce using rule 36 (javaScript_param -> boolean .)
    TIMES           reduce using rule 36 (javaScript_param -> boolean .)
    DIVIDE          reduce using rule 36 (javaScript_param -> boolean .)
    MOD             reduce using rule 36 (javaScript_param -> boolean .)
    GREATER         reduce using rule 36 (javaScript_param -> boolean .)
    LESS            reduce using rule 36 (javaScript_param -> boolean .)
    ISEQUAL         reduce using rule 36 (javaScript_param -> boolean .)
    IS_NOT_IDENTICAL reduce using rule 36 (javaScript_param -> boolean .)
    IS_IDENTICAL    reduce using rule 36 (javaScript_param -> boolean .)
    $end            reduce using rule 36 (javaScript_param -> boolean .)
    RPAREN          reduce using rule 36 (javaScript_param -> boolean .)
    RBLOCK          reduce using rule 36 (javaScript_param -> boolean .)
    ELSE            reduce using rule 36 (javaScript_param -> boolean .)


state 21

    (44) varDeclaration -> varType . ID EQUAL arrayDeclare COLON
    (45) varDeclaration -> varType . ID EQUAL declareMap COLON
    (46) varDeclaration -> varType . ID EQUAL declararSet COLON

    ID              shift and go to state 51


state 22

    (26) block -> LBLOCK . sentencias RBLOCK
    (1) sentencias -> . impresion
    (2) sentencias -> . expression
    (8) sentencias -> . IF LPAREN logical_expresion RPAREN
    (9) sentencias -> . IF LPAREN logical_expresion RPAREN sentencias ELSE sentencias
    (10) sentencias -> . WHILE LPAREN logical_expresion RPAREN block
    (11) impresion -> . ALERT LPAREN expression RPAREN
    (12) impresion -> . ALERT LPAREN RPAREN
    (3) expression -> . ID EQUAL expression
    (4) expression -> . callMethods
    (5) expression -> . callFunction
    (6) expression -> . javaScript_param
    (7) expression -> . varDeclaration
    (13) expression -> . expression PLUS term
    (14) expression -> . expression TIMES term
    (15) expression -> . expression DIVIDE term
    (16) expression -> . expression MOD term
    (17) expression -> . VAR ID
    (18) expression -> . CONST ID
    (19) expression -> . logical_expresion
    (25) expression -> . block
    (27) expression -> . term
    (47) callMethods -> . ID methodArray COLON
    (48) callMethods -> . ID methodSet COLON
    (49) callMethods -> . ID methodMap COLON
    (76) callFunction -> . ID LPAREN params RPAREN
    (34) javaScript_param -> . STRING
    (35) javaScript_param -> . NUM
    (36) javaScript_param -> . boolean
    (44) varDeclaration -> . varType ID EQUAL arrayDeclare COLON
    (45) varDeclaration -> . varType ID EQUAL declareMap COLON
    (46) varDeclaration -> . varType ID EQUAL declararSet COLON
    (20) logical_expresion -> . expression GREATER term
    (21) logical_expresion -> . expression LESS term
    (22) logical_expresion -> . expression ISEQUAL term
    (23) logical_expresion -> . expression IS_NOT_IDENTICAL term
    (24) logical_expresion -> . expression IS_IDENTICAL term
    (26) block -> . LBLOCK sentencias RBLOCK
    (28) term -> . term TIMES factor
    (29) term -> . term DIVIDE factor
    (30) term -> . factor
    (38) boolean -> . TRUE
    (39) boolean -> . FALSE
    (40) varType -> . LET
    (41) varType -> . CONST
    (42) varType -> . VAR
    (43) varType -> . empty
    (31) factor -> . NUM
    (32) factor -> . ID
    (33) factor -> . LPAREN expression RPAREN
    (37) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    IF              shift and go to state 4
    WHILE           shift and go to state 7
    ALERT           shift and go to state 9
    ID              shift and go to state 10
    VAR             shift and go to state 16
    CONST           shift and go to state 17
    STRING          shift and go to state 18
    NUM             shift and go to state 19
    LBLOCK          shift and go to state 22
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    LET             shift and go to state 26
    LPAREN          shift and go to state 5

  ! ID              [ reduce using rule 37 (empty -> .) ]

    sentencias                     shift and go to state 52
    impresion                      shift and go to state 2
    expression                     shift and go to state 3
    logical_expresion              shift and go to state 6
    block                          shift and go to state 8
    callMethods                    shift and go to state 11
    callFunction                   shift and go to state 12
    javaScript_param               shift and go to state 13
    varDeclaration                 shift and go to state 14
    term                           shift and go to state 15
    boolean                        shift and go to state 20
    varType                        shift and go to state 21
    factor                         shift and go to state 23
    empty                          shift and go to state 27

state 23

    (30) term -> factor .

    TIMES           reduce using rule 30 (term -> factor .)
    DIVIDE          reduce using rule 30 (term -> factor .)
    PLUS            reduce using rule 30 (term -> factor .)
    MOD             reduce using rule 30 (term -> factor .)
    GREATER         reduce using rule 30 (term -> factor .)
    LESS            reduce using rule 30 (term -> factor .)
    ISEQUAL         reduce using rule 30 (term -> factor .)
    IS_NOT_IDENTICAL reduce using rule 30 (term -> factor .)
    IS_IDENTICAL    reduce using rule 30 (term -> factor .)
    $end            reduce using rule 30 (term -> factor .)
    RPAREN          reduce using rule 30 (term -> factor .)
    RBLOCK          reduce using rule 30 (term -> factor .)
    ELSE            reduce using rule 30 (term -> factor .)


state 24

    (38) boolean -> TRUE .

    PLUS            reduce using rule 38 (boolean -> TRUE .)
    TIMES           reduce using rule 38 (boolean -> TRUE .)
    DIVIDE          reduce using rule 38 (boolean -> TRUE .)
    MOD             reduce using rule 38 (boolean -> TRUE .)
    GREATER         reduce using rule 38 (boolean -> TRUE .)
    LESS            reduce using rule 38 (boolean -> TRUE .)
    ISEQUAL         reduce using rule 38 (boolean -> TRUE .)
    IS_NOT_IDENTICAL reduce using rule 38 (boolean -> TRUE .)
    IS_IDENTICAL    reduce using rule 38 (boolean -> TRUE .)
    $end            reduce using rule 38 (boolean -> TRUE .)
    RPAREN          reduce using rule 38 (boolean -> TRUE .)
    RBLOCK          reduce using rule 38 (boolean -> TRUE .)
    ELSE            reduce using rule 38 (boolean -> TRUE .)
    COMMA           reduce using rule 38 (boolean -> TRUE .)
    RBRACKET        reduce using rule 38 (boolean -> TRUE .)


state 25

    (39) boolean -> FALSE .

    PLUS            reduce using rule 39 (boolean -> FALSE .)
    TIMES           reduce using rule 39 (boolean -> FALSE .)
    DIVIDE          reduce using rule 39 (boolean -> FALSE .)
    MOD             reduce using rule 39 (boolean -> FALSE .)
    GREATER         reduce using rule 39 (boolean -> FALSE .)
    LESS            reduce using rule 39 (boolean -> FALSE .)
    ISEQUAL         reduce using rule 39 (boolean -> FALSE .)
    IS_NOT_IDENTICAL reduce using rule 39 (boolean -> FALSE .)
    IS_IDENTICAL    reduce using rule 39 (boolean -> FALSE .)
    $end            reduce using rule 39 (boolean -> FALSE .)
    RPAREN          reduce using rule 39 (boolean -> FALSE .)
    RBLOCK          reduce using rule 39 (boolean -> FALSE .)
    ELSE            reduce using rule 39 (boolean -> FALSE .)
    COMMA           reduce using rule 39 (boolean -> FALSE .)
    RBRACKET        reduce using rule 39 (boolean -> FALSE .)


state 26

    (40) varType -> LET .

    ID              reduce using rule 40 (varType -> LET .)


state 27

    (43) varType -> empty .

    ID              reduce using rule 43 (varType -> empty .)


state 28

    (13) expression -> expression PLUS . term
    (28) term -> . term TIMES factor
    (29) term -> . term DIVIDE factor
    (30) term -> . factor
    (31) factor -> . NUM
    (32) factor -> . ID
    (33) factor -> . LPAREN expression RPAREN

    NUM             shift and go to state 54
    ID              shift and go to state 55
    LPAREN          shift and go to state 5

    term                           shift and go to state 53
    factor                         shift and go to state 23

state 29

    (14) expression -> expression TIMES . term
    (28) term -> . term TIMES factor
    (29) term -> . term DIVIDE factor
    (30) term -> . factor
    (31) factor -> . NUM
    (32) factor -> . ID
    (33) factor -> . LPAREN expression RPAREN

    NUM             shift and go to state 54
    ID              shift and go to state 55
    LPAREN          shift and go to state 5

    term                           shift and go to state 56
    factor                         shift and go to state 23

state 30

    (15) expression -> expression DIVIDE . term
    (28) term -> . term TIMES factor
    (29) term -> . term DIVIDE factor
    (30) term -> . factor
    (31) factor -> . NUM
    (32) factor -> . ID
    (33) factor -> . LPAREN expression RPAREN

    NUM             shift and go to state 54
    ID              shift and go to state 55
    LPAREN          shift and go to state 5

    term                           shift and go to state 57
    factor                         shift and go to state 23

state 31

    (16) expression -> expression MOD . term
    (28) term -> . term TIMES factor
    (29) term -> . term DIVIDE factor
    (30) term -> . factor
    (31) factor -> . NUM
    (32) factor -> . ID
    (33) factor -> . LPAREN expression RPAREN

    NUM             shift and go to state 54
    ID              shift and go to state 55
    LPAREN          shift and go to state 5

    term                           shift and go to state 58
    factor                         shift and go to state 23

state 32

    (20) logical_expresion -> expression GREATER . term
    (28) term -> . term TIMES factor
    (29) term -> . term DIVIDE factor
    (30) term -> . factor
    (31) factor -> . NUM
    (32) factor -> . ID
    (33) factor -> . LPAREN expression RPAREN

    NUM             shift and go to state 54
    ID              shift and go to state 55
    LPAREN          shift and go to state 5

    term                           shift and go to state 59
    factor                         shift and go to state 23

state 33

    (21) logical_expresion -> expression LESS . term
    (28) term -> . term TIMES factor
    (29) term -> . term DIVIDE factor
    (30) term -> . factor
    (31) factor -> . NUM
    (32) factor -> . ID
    (33) factor -> . LPAREN expression RPAREN

    NUM             shift and go to state 54
    ID              shift and go to state 55
    LPAREN          shift and go to state 5

    term                           shift and go to state 60
    factor                         shift and go to state 23

state 34

    (22) logical_expresion -> expression ISEQUAL . term
    (28) term -> . term TIMES factor
    (29) term -> . term DIVIDE factor
    (30) term -> . factor
    (31) factor -> . NUM
    (32) factor -> . ID
    (33) factor -> . LPAREN expression RPAREN

    NUM             shift and go to state 54
    ID              shift and go to state 55
    LPAREN          shift and go to state 5

    term                           shift and go to state 61
    factor                         shift and go to state 23

state 35

    (23) logical_expresion -> expression IS_NOT_IDENTICAL . term
    (28) term -> . term TIMES factor
    (29) term -> . term DIVIDE factor
    (30) term -> . factor
    (31) factor -> . NUM
    (32) factor -> . ID
    (33) factor -> . LPAREN expression RPAREN

    NUM             shift and go to state 54
    ID              shift and go to state 55
    LPAREN          shift and go to state 5

    term                           shift and go to state 62
    factor                         shift and go to state 23

state 36

    (24) logical_expresion -> expression IS_IDENTICAL . term
    (28) term -> . term TIMES factor
    (29) term -> . term DIVIDE factor
    (30) term -> . factor
    (31) factor -> . NUM
    (32) factor -> . ID
    (33) factor -> . LPAREN expression RPAREN

    NUM             shift and go to state 54
    ID              shift and go to state 55
    LPAREN          shift and go to state 5

    term                           shift and go to state 63
    factor                         shift and go to state 23

state 37

    (8) sentencias -> IF LPAREN . logical_expresion RPAREN
    (9) sentencias -> IF LPAREN . logical_expresion RPAREN sentencias ELSE sentencias
    (20) logical_expresion -> . expression GREATER term
    (21) logical_expresion -> . expression LESS term
    (22) logical_expresion -> . expression ISEQUAL term
    (23) logical_expresion -> . expression IS_NOT_IDENTICAL term
    (24) logical_expresion -> . expression IS_IDENTICAL term
    (3) expression -> . ID EQUAL expression
    (4) expression -> . callMethods
    (5) expression -> . callFunction
    (6) expression -> . javaScript_param
    (7) expression -> . varDeclaration
    (13) expression -> . expression PLUS term
    (14) expression -> . expression TIMES term
    (15) expression -> . expression DIVIDE term
    (16) expression -> . expression MOD term
    (17) expression -> . VAR ID
    (18) expression -> . CONST ID
    (19) expression -> . logical_expresion
    (25) expression -> . block
    (27) expression -> . term
    (47) callMethods -> . ID methodArray COLON
    (48) callMethods -> . ID methodSet COLON
    (49) callMethods -> . ID methodMap COLON
    (76) callFunction -> . ID LPAREN params RPAREN
    (34) javaScript_param -> . STRING
    (35) javaScript_param -> . NUM
    (36) javaScript_param -> . boolean
    (44) varDeclaration -> . varType ID EQUAL arrayDeclare COLON
    (45) varDeclaration -> . varType ID EQUAL declareMap COLON
    (46) varDeclaration -> . varType ID EQUAL declararSet COLON
    (26) block -> . LBLOCK sentencias RBLOCK
    (28) term -> . term TIMES factor
    (29) term -> . term DIVIDE factor
    (30) term -> . factor
    (38) boolean -> . TRUE
    (39) boolean -> . FALSE
    (40) varType -> . LET
    (41) varType -> . CONST
    (42) varType -> . VAR
    (43) varType -> . empty
    (31) factor -> . NUM
    (32) factor -> . ID
    (33) factor -> . LPAREN expression RPAREN
    (37) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 10
    VAR             shift and go to state 16
    CONST           shift and go to state 17
    STRING          shift and go to state 18
    NUM             shift and go to state 19
    LBLOCK          shift and go to state 22
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    LET             shift and go to state 26
    LPAREN          shift and go to state 5

  ! ID              [ reduce using rule 37 (empty -> .) ]

    logical_expresion              shift and go to state 64
    expression                     shift and go to state 65
    term                           shift and go to state 15
    callMethods                    shift and go to state 11
    callFunction                   shift and go to state 12
    javaScript_param               shift and go to state 13
    varDeclaration                 shift and go to state 14
    block                          shift and go to state 8
    boolean                        shift and go to state 20
    varType                        shift and go to state 21
    factor                         shift and go to state 23
    empty                          shift and go to state 27

state 38

    (33) factor -> LPAREN expression . RPAREN
    (13) expression -> expression . PLUS term
    (14) expression -> expression . TIMES term
    (15) expression -> expression . DIVIDE term
    (16) expression -> expression . MOD term
    (20) logical_expresion -> expression . GREATER term
    (21) logical_expresion -> expression . LESS term
    (22) logical_expresion -> expression . ISEQUAL term
    (23) logical_expresion -> expression . IS_NOT_IDENTICAL term
    (24) logical_expresion -> expression . IS_IDENTICAL term

    RPAREN          shift and go to state 66
    PLUS            shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MOD             shift and go to state 31
    GREATER         shift and go to state 32
    LESS            shift and go to state 33
    ISEQUAL         shift and go to state 34
    IS_NOT_IDENTICAL shift and go to state 35
    IS_IDENTICAL    shift and go to state 36


state 39

    (10) sentencias -> WHILE LPAREN . logical_expresion RPAREN block
    (20) logical_expresion -> . expression GREATER term
    (21) logical_expresion -> . expression LESS term
    (22) logical_expresion -> . expression ISEQUAL term
    (23) logical_expresion -> . expression IS_NOT_IDENTICAL term
    (24) logical_expresion -> . expression IS_IDENTICAL term
    (3) expression -> . ID EQUAL expression
    (4) expression -> . callMethods
    (5) expression -> . callFunction
    (6) expression -> . javaScript_param
    (7) expression -> . varDeclaration
    (13) expression -> . expression PLUS term
    (14) expression -> . expression TIMES term
    (15) expression -> . expression DIVIDE term
    (16) expression -> . expression MOD term
    (17) expression -> . VAR ID
    (18) expression -> . CONST ID
    (19) expression -> . logical_expresion
    (25) expression -> . block
    (27) expression -> . term
    (47) callMethods -> . ID methodArray COLON
    (48) callMethods -> . ID methodSet COLON
    (49) callMethods -> . ID methodMap COLON
    (76) callFunction -> . ID LPAREN params RPAREN
    (34) javaScript_param -> . STRING
    (35) javaScript_param -> . NUM
    (36) javaScript_param -> . boolean
    (44) varDeclaration -> . varType ID EQUAL arrayDeclare COLON
    (45) varDeclaration -> . varType ID EQUAL declareMap COLON
    (46) varDeclaration -> . varType ID EQUAL declararSet COLON
    (26) block -> . LBLOCK sentencias RBLOCK
    (28) term -> . term TIMES factor
    (29) term -> . term DIVIDE factor
    (30) term -> . factor
    (38) boolean -> . TRUE
    (39) boolean -> . FALSE
    (40) varType -> . LET
    (41) varType -> . CONST
    (42) varType -> . VAR
    (43) varType -> . empty
    (31) factor -> . NUM
    (32) factor -> . ID
    (33) factor -> . LPAREN expression RPAREN
    (37) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 10
    VAR             shift and go to state 16
    CONST           shift and go to state 17
    STRING          shift and go to state 18
    NUM             shift and go to state 19
    LBLOCK          shift and go to state 22
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    LET             shift and go to state 26
    LPAREN          shift and go to state 5

  ! ID              [ reduce using rule 37 (empty -> .) ]

    logical_expresion              shift and go to state 67
    block                          shift and go to state 8
    expression                     shift and go to state 65
    term                           shift and go to state 15
    callMethods                    shift and go to state 11
    callFunction                   shift and go to state 12
    javaScript_param               shift and go to state 13
    varDeclaration                 shift and go to state 14
    boolean                        shift and go to state 20
    varType                        shift and go to state 21
    factor                         shift and go to state 23
    empty                          shift and go to state 27

state 40

    (11) impresion -> ALERT LPAREN . expression RPAREN
    (12) impresion -> ALERT LPAREN . RPAREN
    (3) expression -> . ID EQUAL expression
    (4) expression -> . callMethods
    (5) expression -> . callFunction
    (6) expression -> . javaScript_param
    (7) expression -> . varDeclaration
    (13) expression -> . expression PLUS term
    (14) expression -> . expression TIMES term
    (15) expression -> . expression DIVIDE term
    (16) expression -> . expression MOD term
    (17) expression -> . VAR ID
    (18) expression -> . CONST ID
    (19) expression -> . logical_expresion
    (25) expression -> . block
    (27) expression -> . term
    (47) callMethods -> . ID methodArray COLON
    (48) callMethods -> . ID methodSet COLON
    (49) callMethods -> . ID methodMap COLON
    (76) callFunction -> . ID LPAREN params RPAREN
    (34) javaScript_param -> . STRING
    (35) javaScript_param -> . NUM
    (36) javaScript_param -> . boolean
    (44) varDeclaration -> . varType ID EQUAL arrayDeclare COLON
    (45) varDeclaration -> . varType ID EQUAL declareMap COLON
    (46) varDeclaration -> . varType ID EQUAL declararSet COLON
    (20) logical_expresion -> . expression GREATER term
    (21) logical_expresion -> . expression LESS term
    (22) logical_expresion -> . expression ISEQUAL term
    (23) logical_expresion -> . expression IS_NOT_IDENTICAL term
    (24) logical_expresion -> . expression IS_IDENTICAL term
    (26) block -> . LBLOCK sentencias RBLOCK
    (28) term -> . term TIMES factor
    (29) term -> . term DIVIDE factor
    (30) term -> . factor
    (38) boolean -> . TRUE
    (39) boolean -> . FALSE
    (40) varType -> . LET
    (41) varType -> . CONST
    (42) varType -> . VAR
    (43) varType -> . empty
    (31) factor -> . NUM
    (32) factor -> . ID
    (33) factor -> . LPAREN expression RPAREN
    (37) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    RPAREN          shift and go to state 69
    ID              shift and go to state 10
    VAR             shift and go to state 16
    CONST           shift and go to state 17
    STRING          shift and go to state 18
    NUM             shift and go to state 19
    LBLOCK          shift and go to state 22
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    LET             shift and go to state 26
    LPAREN          shift and go to state 5

  ! ID              [ reduce using rule 37 (empty -> .) ]

    expression                     shift and go to state 68
    callMethods                    shift and go to state 11
    callFunction                   shift and go to state 12
    javaScript_param               shift and go to state 13
    varDeclaration                 shift and go to state 14
    term                           shift and go to state 15
    logical_expresion              shift and go to state 6
    block                          shift and go to state 8
    boolean                        shift and go to state 20
    varType                        shift and go to state 21
    factor                         shift and go to state 23
    empty                          shift and go to state 27

state 41

    (3) expression -> ID EQUAL . expression
    (3) expression -> . ID EQUAL expression
    (4) expression -> . callMethods
    (5) expression -> . callFunction
    (6) expression -> . javaScript_param
    (7) expression -> . varDeclaration
    (13) expression -> . expression PLUS term
    (14) expression -> . expression TIMES term
    (15) expression -> . expression DIVIDE term
    (16) expression -> . expression MOD term
    (17) expression -> . VAR ID
    (18) expression -> . CONST ID
    (19) expression -> . logical_expresion
    (25) expression -> . block
    (27) expression -> . term
    (47) callMethods -> . ID methodArray COLON
    (48) callMethods -> . ID methodSet COLON
    (49) callMethods -> . ID methodMap COLON
    (76) callFunction -> . ID LPAREN params RPAREN
    (34) javaScript_param -> . STRING
    (35) javaScript_param -> . NUM
    (36) javaScript_param -> . boolean
    (44) varDeclaration -> . varType ID EQUAL arrayDeclare COLON
    (45) varDeclaration -> . varType ID EQUAL declareMap COLON
    (46) varDeclaration -> . varType ID EQUAL declararSet COLON
    (20) logical_expresion -> . expression GREATER term
    (21) logical_expresion -> . expression LESS term
    (22) logical_expresion -> . expression ISEQUAL term
    (23) logical_expresion -> . expression IS_NOT_IDENTICAL term
    (24) logical_expresion -> . expression IS_IDENTICAL term
    (26) block -> . LBLOCK sentencias RBLOCK
    (28) term -> . term TIMES factor
    (29) term -> . term DIVIDE factor
    (30) term -> . factor
    (38) boolean -> . TRUE
    (39) boolean -> . FALSE
    (40) varType -> . LET
    (41) varType -> . CONST
    (42) varType -> . VAR
    (43) varType -> . empty
    (31) factor -> . NUM
    (32) factor -> . ID
    (33) factor -> . LPAREN expression RPAREN
    (37) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 10
    VAR             shift and go to state 16
    CONST           shift and go to state 17
    STRING          shift and go to state 18
    NUM             shift and go to state 19
    LBLOCK          shift and go to state 22
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    LET             shift and go to state 26
    LPAREN          shift and go to state 5

  ! ID              [ reduce using rule 37 (empty -> .) ]

    expression                     shift and go to state 70
    callMethods                    shift and go to state 11
    callFunction                   shift and go to state 12
    javaScript_param               shift and go to state 13
    varDeclaration                 shift and go to state 14
    term                           shift and go to state 15
    logical_expresion              shift and go to state 6
    block                          shift and go to state 8
    boolean                        shift and go to state 20
    varType                        shift and go to state 21
    factor                         shift and go to state 23
    empty                          shift and go to state 27

state 42

    (47) callMethods -> ID methodArray . COLON

    COLON           shift and go to state 71


state 43

    (48) callMethods -> ID methodSet . COLON

    COLON           shift and go to state 72


state 44

    (49) callMethods -> ID methodMap . COLON

    COLON           shift and go to state 73


state 45

    (76) callFunction -> ID LPAREN . params RPAREN
    (77) params -> . paramList
    (78) params -> . empty
    (81) paramList -> . param
    (82) paramList -> . param COMMA paramList
    (37) empty -> .
    (79) param -> . ID
    (80) param -> . ID LBRACKET RBRACKET

    RPAREN          reduce using rule 37 (empty -> .)
    ID              shift and go to state 74

    params                         shift and go to state 75
    paramList                      shift and go to state 76
    empty                          shift and go to state 77
    param                          shift and go to state 78

state 46

    (60) methodArray -> PERIOD . PUSH LPAREN arrayValue RPAREN
    (61) methodArray -> PERIOD . UNSHIFT LPAREN arrayValue RPAREN
    (62) methodArray -> PERIOD . POP LPAREN empty RPAREN
    (97) methodSet -> PERIOD . ADD LPAREN setValue RPAREN
    (98) methodSet -> PERIOD . DELETE LPAREN setValue RPAREN
    (99) methodSet -> PERIOD . CLEAR LPAREN empty RPAREN
    (67) methodMap -> PERIOD . CLEAR LPAREN RPAREN
    (68) methodMap -> PERIOD . LENGTH LPAREN RPAREN

    PUSH            shift and go to state 79
    UNSHIFT         shift and go to state 80
    POP             shift and go to state 81
    ADD             shift and go to state 82
    DELETE          shift and go to state 83
    CLEAR           shift and go to state 84
    LENGTH          shift and go to state 85


state 47

    (28) term -> term TIMES . factor
    (31) factor -> . NUM
    (32) factor -> . ID
    (33) factor -> . LPAREN expression RPAREN

    NUM             shift and go to state 54
    ID              shift and go to state 55
    LPAREN          shift and go to state 5

    factor                         shift and go to state 86

state 48

    (29) term -> term DIVIDE . factor
    (31) factor -> . NUM
    (32) factor -> . ID
    (33) factor -> . LPAREN expression RPAREN

    NUM             shift and go to state 54
    ID              shift and go to state 55
    LPAREN          shift and go to state 5

    factor                         shift and go to state 87

state 49

    (17) expression -> VAR ID .

    PLUS            reduce using rule 17 (expression -> VAR ID .)
    TIMES           reduce using rule 17 (expression -> VAR ID .)
    DIVIDE          reduce using rule 17 (expression -> VAR ID .)
    MOD             reduce using rule 17 (expression -> VAR ID .)
    GREATER         reduce using rule 17 (expression -> VAR ID .)
    LESS            reduce using rule 17 (expression -> VAR ID .)
    ISEQUAL         reduce using rule 17 (expression -> VAR ID .)
    IS_NOT_IDENTICAL reduce using rule 17 (expression -> VAR ID .)
    IS_IDENTICAL    reduce using rule 17 (expression -> VAR ID .)
    $end            reduce using rule 17 (expression -> VAR ID .)
    RPAREN          reduce using rule 17 (expression -> VAR ID .)
    RBLOCK          reduce using rule 17 (expression -> VAR ID .)
    ELSE            reduce using rule 17 (expression -> VAR ID .)


state 50

    (18) expression -> CONST ID .

    PLUS            reduce using rule 18 (expression -> CONST ID .)
    TIMES           reduce using rule 18 (expression -> CONST ID .)
    DIVIDE          reduce using rule 18 (expression -> CONST ID .)
    MOD             reduce using rule 18 (expression -> CONST ID .)
    GREATER         reduce using rule 18 (expression -> CONST ID .)
    LESS            reduce using rule 18 (expression -> CONST ID .)
    ISEQUAL         reduce using rule 18 (expression -> CONST ID .)
    IS_NOT_IDENTICAL reduce using rule 18 (expression -> CONST ID .)
    IS_IDENTICAL    reduce using rule 18 (expression -> CONST ID .)
    $end            reduce using rule 18 (expression -> CONST ID .)
    RPAREN          reduce using rule 18 (expression -> CONST ID .)
    RBLOCK          reduce using rule 18 (expression -> CONST ID .)
    ELSE            reduce using rule 18 (expression -> CONST ID .)


state 51

    (44) varDeclaration -> varType ID . EQUAL arrayDeclare COLON
    (45) varDeclaration -> varType ID . EQUAL declareMap COLON
    (46) varDeclaration -> varType ID . EQUAL declararSet COLON

    EQUAL           shift and go to state 88


state 52

    (26) block -> LBLOCK sentencias . RBLOCK

    RBLOCK          shift and go to state 89


state 53

    (13) expression -> expression PLUS term .
    (28) term -> term . TIMES factor
    (29) term -> term . DIVIDE factor

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    PLUS            reduce using rule 13 (expression -> expression PLUS term .)
    MOD             reduce using rule 13 (expression -> expression PLUS term .)
    GREATER         reduce using rule 13 (expression -> expression PLUS term .)
    LESS            reduce using rule 13 (expression -> expression PLUS term .)
    ISEQUAL         reduce using rule 13 (expression -> expression PLUS term .)
    IS_NOT_IDENTICAL reduce using rule 13 (expression -> expression PLUS term .)
    IS_IDENTICAL    reduce using rule 13 (expression -> expression PLUS term .)
    $end            reduce using rule 13 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 13 (expression -> expression PLUS term .)
    RBLOCK          reduce using rule 13 (expression -> expression PLUS term .)
    ELSE            reduce using rule 13 (expression -> expression PLUS term .)
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48

  ! TIMES           [ reduce using rule 13 (expression -> expression PLUS term .) ]
  ! DIVIDE          [ reduce using rule 13 (expression -> expression PLUS term .) ]


state 54

    (31) factor -> NUM .

    TIMES           reduce using rule 31 (factor -> NUM .)
    DIVIDE          reduce using rule 31 (factor -> NUM .)
    PLUS            reduce using rule 31 (factor -> NUM .)
    MOD             reduce using rule 31 (factor -> NUM .)
    GREATER         reduce using rule 31 (factor -> NUM .)
    LESS            reduce using rule 31 (factor -> NUM .)
    ISEQUAL         reduce using rule 31 (factor -> NUM .)
    IS_NOT_IDENTICAL reduce using rule 31 (factor -> NUM .)
    IS_IDENTICAL    reduce using rule 31 (factor -> NUM .)
    $end            reduce using rule 31 (factor -> NUM .)
    RPAREN          reduce using rule 31 (factor -> NUM .)
    RBLOCK          reduce using rule 31 (factor -> NUM .)
    ELSE            reduce using rule 31 (factor -> NUM .)


state 55

    (32) factor -> ID .

    TIMES           reduce using rule 32 (factor -> ID .)
    DIVIDE          reduce using rule 32 (factor -> ID .)
    PLUS            reduce using rule 32 (factor -> ID .)
    MOD             reduce using rule 32 (factor -> ID .)
    GREATER         reduce using rule 32 (factor -> ID .)
    LESS            reduce using rule 32 (factor -> ID .)
    ISEQUAL         reduce using rule 32 (factor -> ID .)
    IS_NOT_IDENTICAL reduce using rule 32 (factor -> ID .)
    IS_IDENTICAL    reduce using rule 32 (factor -> ID .)
    $end            reduce using rule 32 (factor -> ID .)
    RPAREN          reduce using rule 32 (factor -> ID .)
    RBLOCK          reduce using rule 32 (factor -> ID .)
    ELSE            reduce using rule 32 (factor -> ID .)


state 56

    (14) expression -> expression TIMES term .
    (28) term -> term . TIMES factor
    (29) term -> term . DIVIDE factor

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    PLUS            reduce using rule 14 (expression -> expression TIMES term .)
    MOD             reduce using rule 14 (expression -> expression TIMES term .)
    GREATER         reduce using rule 14 (expression -> expression TIMES term .)
    LESS            reduce using rule 14 (expression -> expression TIMES term .)
    ISEQUAL         reduce using rule 14 (expression -> expression TIMES term .)
    IS_NOT_IDENTICAL reduce using rule 14 (expression -> expression TIMES term .)
    IS_IDENTICAL    reduce using rule 14 (expression -> expression TIMES term .)
    $end            reduce using rule 14 (expression -> expression TIMES term .)
    RPAREN          reduce using rule 14 (expression -> expression TIMES term .)
    RBLOCK          reduce using rule 14 (expression -> expression TIMES term .)
    ELSE            reduce using rule 14 (expression -> expression TIMES term .)
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48

  ! TIMES           [ reduce using rule 14 (expression -> expression TIMES term .) ]
  ! DIVIDE          [ reduce using rule 14 (expression -> expression TIMES term .) ]


state 57

    (15) expression -> expression DIVIDE term .
    (28) term -> term . TIMES factor
    (29) term -> term . DIVIDE factor

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    PLUS            reduce using rule 15 (expression -> expression DIVIDE term .)
    MOD             reduce using rule 15 (expression -> expression DIVIDE term .)
    GREATER         reduce using rule 15 (expression -> expression DIVIDE term .)
    LESS            reduce using rule 15 (expression -> expression DIVIDE term .)
    ISEQUAL         reduce using rule 15 (expression -> expression DIVIDE term .)
    IS_NOT_IDENTICAL reduce using rule 15 (expression -> expression DIVIDE term .)
    IS_IDENTICAL    reduce using rule 15 (expression -> expression DIVIDE term .)
    $end            reduce using rule 15 (expression -> expression DIVIDE term .)
    RPAREN          reduce using rule 15 (expression -> expression DIVIDE term .)
    RBLOCK          reduce using rule 15 (expression -> expression DIVIDE term .)
    ELSE            reduce using rule 15 (expression -> expression DIVIDE term .)
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48

  ! TIMES           [ reduce using rule 15 (expression -> expression DIVIDE term .) ]
  ! DIVIDE          [ reduce using rule 15 (expression -> expression DIVIDE term .) ]


state 58

    (16) expression -> expression MOD term .
    (28) term -> term . TIMES factor
    (29) term -> term . DIVIDE factor

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    PLUS            reduce using rule 16 (expression -> expression MOD term .)
    MOD             reduce using rule 16 (expression -> expression MOD term .)
    GREATER         reduce using rule 16 (expression -> expression MOD term .)
    LESS            reduce using rule 16 (expression -> expression MOD term .)
    ISEQUAL         reduce using rule 16 (expression -> expression MOD term .)
    IS_NOT_IDENTICAL reduce using rule 16 (expression -> expression MOD term .)
    IS_IDENTICAL    reduce using rule 16 (expression -> expression MOD term .)
    $end            reduce using rule 16 (expression -> expression MOD term .)
    RPAREN          reduce using rule 16 (expression -> expression MOD term .)
    RBLOCK          reduce using rule 16 (expression -> expression MOD term .)
    ELSE            reduce using rule 16 (expression -> expression MOD term .)
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48

  ! TIMES           [ reduce using rule 16 (expression -> expression MOD term .) ]
  ! DIVIDE          [ reduce using rule 16 (expression -> expression MOD term .) ]


state 59

    (20) logical_expresion -> expression GREATER term .
    (28) term -> term . TIMES factor
    (29) term -> term . DIVIDE factor

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    PLUS            reduce using rule 20 (logical_expresion -> expression GREATER term .)
    MOD             reduce using rule 20 (logical_expresion -> expression GREATER term .)
    GREATER         reduce using rule 20 (logical_expresion -> expression GREATER term .)
    LESS            reduce using rule 20 (logical_expresion -> expression GREATER term .)
    ISEQUAL         reduce using rule 20 (logical_expresion -> expression GREATER term .)
    IS_NOT_IDENTICAL reduce using rule 20 (logical_expresion -> expression GREATER term .)
    IS_IDENTICAL    reduce using rule 20 (logical_expresion -> expression GREATER term .)
    $end            reduce using rule 20 (logical_expresion -> expression GREATER term .)
    RPAREN          reduce using rule 20 (logical_expresion -> expression GREATER term .)
    RBLOCK          reduce using rule 20 (logical_expresion -> expression GREATER term .)
    ELSE            reduce using rule 20 (logical_expresion -> expression GREATER term .)
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48

  ! TIMES           [ reduce using rule 20 (logical_expresion -> expression GREATER term .) ]
  ! DIVIDE          [ reduce using rule 20 (logical_expresion -> expression GREATER term .) ]


state 60

    (21) logical_expresion -> expression LESS term .
    (28) term -> term . TIMES factor
    (29) term -> term . DIVIDE factor

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    PLUS            reduce using rule 21 (logical_expresion -> expression LESS term .)
    MOD             reduce using rule 21 (logical_expresion -> expression LESS term .)
    GREATER         reduce using rule 21 (logical_expresion -> expression LESS term .)
    LESS            reduce using rule 21 (logical_expresion -> expression LESS term .)
    ISEQUAL         reduce using rule 21 (logical_expresion -> expression LESS term .)
    IS_NOT_IDENTICAL reduce using rule 21 (logical_expresion -> expression LESS term .)
    IS_IDENTICAL    reduce using rule 21 (logical_expresion -> expression LESS term .)
    $end            reduce using rule 21 (logical_expresion -> expression LESS term .)
    RPAREN          reduce using rule 21 (logical_expresion -> expression LESS term .)
    RBLOCK          reduce using rule 21 (logical_expresion -> expression LESS term .)
    ELSE            reduce using rule 21 (logical_expresion -> expression LESS term .)
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48

  ! TIMES           [ reduce using rule 21 (logical_expresion -> expression LESS term .) ]
  ! DIVIDE          [ reduce using rule 21 (logical_expresion -> expression LESS term .) ]


state 61

    (22) logical_expresion -> expression ISEQUAL term .
    (28) term -> term . TIMES factor
    (29) term -> term . DIVIDE factor

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    PLUS            reduce using rule 22 (logical_expresion -> expression ISEQUAL term .)
    MOD             reduce using rule 22 (logical_expresion -> expression ISEQUAL term .)
    GREATER         reduce using rule 22 (logical_expresion -> expression ISEQUAL term .)
    LESS            reduce using rule 22 (logical_expresion -> expression ISEQUAL term .)
    ISEQUAL         reduce using rule 22 (logical_expresion -> expression ISEQUAL term .)
    IS_NOT_IDENTICAL reduce using rule 22 (logical_expresion -> expression ISEQUAL term .)
    IS_IDENTICAL    reduce using rule 22 (logical_expresion -> expression ISEQUAL term .)
    $end            reduce using rule 22 (logical_expresion -> expression ISEQUAL term .)
    RPAREN          reduce using rule 22 (logical_expresion -> expression ISEQUAL term .)
    RBLOCK          reduce using rule 22 (logical_expresion -> expression ISEQUAL term .)
    ELSE            reduce using rule 22 (logical_expresion -> expression ISEQUAL term .)
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48

  ! TIMES           [ reduce using rule 22 (logical_expresion -> expression ISEQUAL term .) ]
  ! DIVIDE          [ reduce using rule 22 (logical_expresion -> expression ISEQUAL term .) ]


state 62

    (23) logical_expresion -> expression IS_NOT_IDENTICAL term .
    (28) term -> term . TIMES factor
    (29) term -> term . DIVIDE factor

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    PLUS            reduce using rule 23 (logical_expresion -> expression IS_NOT_IDENTICAL term .)
    MOD             reduce using rule 23 (logical_expresion -> expression IS_NOT_IDENTICAL term .)
    GREATER         reduce using rule 23 (logical_expresion -> expression IS_NOT_IDENTICAL term .)
    LESS            reduce using rule 23 (logical_expresion -> expression IS_NOT_IDENTICAL term .)
    ISEQUAL         reduce using rule 23 (logical_expresion -> expression IS_NOT_IDENTICAL term .)
    IS_NOT_IDENTICAL reduce using rule 23 (logical_expresion -> expression IS_NOT_IDENTICAL term .)
    IS_IDENTICAL    reduce using rule 23 (logical_expresion -> expression IS_NOT_IDENTICAL term .)
    $end            reduce using rule 23 (logical_expresion -> expression IS_NOT_IDENTICAL term .)
    RPAREN          reduce using rule 23 (logical_expresion -> expression IS_NOT_IDENTICAL term .)
    RBLOCK          reduce using rule 23 (logical_expresion -> expression IS_NOT_IDENTICAL term .)
    ELSE            reduce using rule 23 (logical_expresion -> expression IS_NOT_IDENTICAL term .)
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48

  ! TIMES           [ reduce using rule 23 (logical_expresion -> expression IS_NOT_IDENTICAL term .) ]
  ! DIVIDE          [ reduce using rule 23 (logical_expresion -> expression IS_NOT_IDENTICAL term .) ]


state 63

    (24) logical_expresion -> expression IS_IDENTICAL term .
    (28) term -> term . TIMES factor
    (29) term -> term . DIVIDE factor

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    PLUS            reduce using rule 24 (logical_expresion -> expression IS_IDENTICAL term .)
    MOD             reduce using rule 24 (logical_expresion -> expression IS_IDENTICAL term .)
    GREATER         reduce using rule 24 (logical_expresion -> expression IS_IDENTICAL term .)
    LESS            reduce using rule 24 (logical_expresion -> expression IS_IDENTICAL term .)
    ISEQUAL         reduce using rule 24 (logical_expresion -> expression IS_IDENTICAL term .)
    IS_NOT_IDENTICAL reduce using rule 24 (logical_expresion -> expression IS_IDENTICAL term .)
    IS_IDENTICAL    reduce using rule 24 (logical_expresion -> expression IS_IDENTICAL term .)
    $end            reduce using rule 24 (logical_expresion -> expression IS_IDENTICAL term .)
    RPAREN          reduce using rule 24 (logical_expresion -> expression IS_IDENTICAL term .)
    RBLOCK          reduce using rule 24 (logical_expresion -> expression IS_IDENTICAL term .)
    ELSE            reduce using rule 24 (logical_expresion -> expression IS_IDENTICAL term .)
    TIMES           shift and go to state 47
    DIVIDE          shift and go to state 48

  ! TIMES           [ reduce using rule 24 (logical_expresion -> expression IS_IDENTICAL term .) ]
  ! DIVIDE          [ reduce using rule 24 (logical_expresion -> expression IS_IDENTICAL term .) ]


state 64

    (8) sentencias -> IF LPAREN logical_expresion . RPAREN
    (9) sentencias -> IF LPAREN logical_expresion . RPAREN sentencias ELSE sentencias
    (19) expression -> logical_expresion .

    RPAREN          shift and go to state 90
    GREATER         reduce using rule 19 (expression -> logical_expresion .)
    LESS            reduce using rule 19 (expression -> logical_expresion .)
    ISEQUAL         reduce using rule 19 (expression -> logical_expresion .)
    IS_NOT_IDENTICAL reduce using rule 19 (expression -> logical_expresion .)
    IS_IDENTICAL    reduce using rule 19 (expression -> logical_expresion .)
    PLUS            reduce using rule 19 (expression -> logical_expresion .)
    TIMES           reduce using rule 19 (expression -> logical_expresion .)
    DIVIDE          reduce using rule 19 (expression -> logical_expresion .)
    MOD             reduce using rule 19 (expression -> logical_expresion .)


state 65

    (20) logical_expresion -> expression . GREATER term
    (21) logical_expresion -> expression . LESS term
    (22) logical_expresion -> expression . ISEQUAL term
    (23) logical_expresion -> expression . IS_NOT_IDENTICAL term
    (24) logical_expresion -> expression . IS_IDENTICAL term
    (13) expression -> expression . PLUS term
    (14) expression -> expression . TIMES term
    (15) expression -> expression . DIVIDE term
    (16) expression -> expression . MOD term

    GREATER         shift and go to state 32
    LESS            shift and go to state 33
    ISEQUAL         shift and go to state 34
    IS_NOT_IDENTICAL shift and go to state 35
    IS_IDENTICAL    shift and go to state 36
    PLUS            shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MOD             shift and go to state 31


state 66

    (33) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    MOD             reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    LESS            reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    ISEQUAL         reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    IS_IDENTICAL    reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    $end            reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    RBLOCK          reduce using rule 33 (factor -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 33 (factor -> LPAREN expression RPAREN .)


state 67

    (10) sentencias -> WHILE LPAREN logical_expresion . RPAREN block
    (19) expression -> logical_expresion .

    RPAREN          shift and go to state 91
    GREATER         reduce using rule 19 (expression -> logical_expresion .)
    LESS            reduce using rule 19 (expression -> logical_expresion .)
    ISEQUAL         reduce using rule 19 (expression -> logical_expresion .)
    IS_NOT_IDENTICAL reduce using rule 19 (expression -> logical_expresion .)
    IS_IDENTICAL    reduce using rule 19 (expression -> logical_expresion .)
    PLUS            reduce using rule 19 (expression -> logical_expresion .)
    TIMES           reduce using rule 19 (expression -> logical_expresion .)
    DIVIDE          reduce using rule 19 (expression -> logical_expresion .)
    MOD             reduce using rule 19 (expression -> logical_expresion .)


state 68

    (11) impresion -> ALERT LPAREN expression . RPAREN
    (13) expression -> expression . PLUS term
    (14) expression -> expression . TIMES term
    (15) expression -> expression . DIVIDE term
    (16) expression -> expression . MOD term
    (20) logical_expresion -> expression . GREATER term
    (21) logical_expresion -> expression . LESS term
    (22) logical_expresion -> expression . ISEQUAL term
    (23) logical_expresion -> expression . IS_NOT_IDENTICAL term
    (24) logical_expresion -> expression . IS_IDENTICAL term

    RPAREN          shift and go to state 92
    PLUS            shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MOD             shift and go to state 31
    GREATER         shift and go to state 32
    LESS            shift and go to state 33
    ISEQUAL         shift and go to state 34
    IS_NOT_IDENTICAL shift and go to state 35
    IS_IDENTICAL    shift and go to state 36


state 69

    (12) impresion -> ALERT LPAREN RPAREN .

    $end            reduce using rule 12 (impresion -> ALERT LPAREN RPAREN .)
    RBLOCK          reduce using rule 12 (impresion -> ALERT LPAREN RPAREN .)
    ELSE            reduce using rule 12 (impresion -> ALERT LPAREN RPAREN .)


state 70

    (3) expression -> ID EQUAL expression .
    (13) expression -> expression . PLUS term
    (14) expression -> expression . TIMES term
    (15) expression -> expression . DIVIDE term
    (16) expression -> expression . MOD term
    (20) logical_expresion -> expression . GREATER term
    (21) logical_expresion -> expression . LESS term
    (22) logical_expresion -> expression . ISEQUAL term
    (23) logical_expresion -> expression . IS_NOT_IDENTICAL term
    (24) logical_expresion -> expression . IS_IDENTICAL term

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for IS_NOT_IDENTICAL resolved as shift
  ! shift/reduce conflict for IS_IDENTICAL resolved as shift
    $end            reduce using rule 3 (expression -> ID EQUAL expression .)
    RPAREN          reduce using rule 3 (expression -> ID EQUAL expression .)
    RBLOCK          reduce using rule 3 (expression -> ID EQUAL expression .)
    ELSE            reduce using rule 3 (expression -> ID EQUAL expression .)
    PLUS            shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MOD             shift and go to state 31
    GREATER         shift and go to state 32
    LESS            shift and go to state 33
    ISEQUAL         shift and go to state 34
    IS_NOT_IDENTICAL shift and go to state 35
    IS_IDENTICAL    shift and go to state 36

  ! PLUS            [ reduce using rule 3 (expression -> ID EQUAL expression .) ]
  ! TIMES           [ reduce using rule 3 (expression -> ID EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 3 (expression -> ID EQUAL expression .) ]
  ! MOD             [ reduce using rule 3 (expression -> ID EQUAL expression .) ]
  ! GREATER         [ reduce using rule 3 (expression -> ID EQUAL expression .) ]
  ! LESS            [ reduce using rule 3 (expression -> ID EQUAL expression .) ]
  ! ISEQUAL         [ reduce using rule 3 (expression -> ID EQUAL expression .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 3 (expression -> ID EQUAL expression .) ]
  ! IS_IDENTICAL    [ reduce using rule 3 (expression -> ID EQUAL expression .) ]


state 71

    (47) callMethods -> ID methodArray COLON .

    PLUS            reduce using rule 47 (callMethods -> ID methodArray COLON .)
    TIMES           reduce using rule 47 (callMethods -> ID methodArray COLON .)
    DIVIDE          reduce using rule 47 (callMethods -> ID methodArray COLON .)
    MOD             reduce using rule 47 (callMethods -> ID methodArray COLON .)
    GREATER         reduce using rule 47 (callMethods -> ID methodArray COLON .)
    LESS            reduce using rule 47 (callMethods -> ID methodArray COLON .)
    ISEQUAL         reduce using rule 47 (callMethods -> ID methodArray COLON .)
    IS_NOT_IDENTICAL reduce using rule 47 (callMethods -> ID methodArray COLON .)
    IS_IDENTICAL    reduce using rule 47 (callMethods -> ID methodArray COLON .)
    $end            reduce using rule 47 (callMethods -> ID methodArray COLON .)
    RPAREN          reduce using rule 47 (callMethods -> ID methodArray COLON .)
    RBLOCK          reduce using rule 47 (callMethods -> ID methodArray COLON .)
    ELSE            reduce using rule 47 (callMethods -> ID methodArray COLON .)


state 72

    (48) callMethods -> ID methodSet COLON .

    PLUS            reduce using rule 48 (callMethods -> ID methodSet COLON .)
    TIMES           reduce using rule 48 (callMethods -> ID methodSet COLON .)
    DIVIDE          reduce using rule 48 (callMethods -> ID methodSet COLON .)
    MOD             reduce using rule 48 (callMethods -> ID methodSet COLON .)
    GREATER         reduce using rule 48 (callMethods -> ID methodSet COLON .)
    LESS            reduce using rule 48 (callMethods -> ID methodSet COLON .)
    ISEQUAL         reduce using rule 48 (callMethods -> ID methodSet COLON .)
    IS_NOT_IDENTICAL reduce using rule 48 (callMethods -> ID methodSet COLON .)
    IS_IDENTICAL    reduce using rule 48 (callMethods -> ID methodSet COLON .)
    $end            reduce using rule 48 (callMethods -> ID methodSet COLON .)
    RPAREN          reduce using rule 48 (callMethods -> ID methodSet COLON .)
    RBLOCK          reduce using rule 48 (callMethods -> ID methodSet COLON .)
    ELSE            reduce using rule 48 (callMethods -> ID methodSet COLON .)


state 73

    (49) callMethods -> ID methodMap COLON .

    PLUS            reduce using rule 49 (callMethods -> ID methodMap COLON .)
    TIMES           reduce using rule 49 (callMethods -> ID methodMap COLON .)
    DIVIDE          reduce using rule 49 (callMethods -> ID methodMap COLON .)
    MOD             reduce using rule 49 (callMethods -> ID methodMap COLON .)
    GREATER         reduce using rule 49 (callMethods -> ID methodMap COLON .)
    LESS            reduce using rule 49 (callMethods -> ID methodMap COLON .)
    ISEQUAL         reduce using rule 49 (callMethods -> ID methodMap COLON .)
    IS_NOT_IDENTICAL reduce using rule 49 (callMethods -> ID methodMap COLON .)
    IS_IDENTICAL    reduce using rule 49 (callMethods -> ID methodMap COLON .)
    $end            reduce using rule 49 (callMethods -> ID methodMap COLON .)
    RPAREN          reduce using rule 49 (callMethods -> ID methodMap COLON .)
    RBLOCK          reduce using rule 49 (callMethods -> ID methodMap COLON .)
    ELSE            reduce using rule 49 (callMethods -> ID methodMap COLON .)


state 74

    (79) param -> ID .
    (80) param -> ID . LBRACKET RBRACKET

    COMMA           reduce using rule 79 (param -> ID .)
    RPAREN          reduce using rule 79 (param -> ID .)
    LBRACKET        shift and go to state 93


state 75

    (76) callFunction -> ID LPAREN params . RPAREN

    RPAREN          shift and go to state 94


state 76

    (77) params -> paramList .

    RPAREN          reduce using rule 77 (params -> paramList .)


state 77

    (78) params -> empty .

    RPAREN          reduce using rule 78 (params -> empty .)


state 78

    (81) paramList -> param .
    (82) paramList -> param . COMMA paramList

    RPAREN          reduce using rule 81 (paramList -> param .)
    COMMA           shift and go to state 95


state 79

    (60) methodArray -> PERIOD PUSH . LPAREN arrayValue RPAREN

    LPAREN          shift and go to state 96


state 80

    (61) methodArray -> PERIOD UNSHIFT . LPAREN arrayValue RPAREN

    LPAREN          shift and go to state 97


state 81

    (62) methodArray -> PERIOD POP . LPAREN empty RPAREN

    LPAREN          shift and go to state 98


state 82

    (97) methodSet -> PERIOD ADD . LPAREN setValue RPAREN

    LPAREN          shift and go to state 99


state 83

    (98) methodSet -> PERIOD DELETE . LPAREN setValue RPAREN

    LPAREN          shift and go to state 100


state 84

    (99) methodSet -> PERIOD CLEAR . LPAREN empty RPAREN
    (67) methodMap -> PERIOD CLEAR . LPAREN RPAREN

    LPAREN          shift and go to state 101


state 85

    (68) methodMap -> PERIOD LENGTH . LPAREN RPAREN

    LPAREN          shift and go to state 102


state 86

    (28) term -> term TIMES factor .

    TIMES           reduce using rule 28 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 28 (term -> term TIMES factor .)
    PLUS            reduce using rule 28 (term -> term TIMES factor .)
    MOD             reduce using rule 28 (term -> term TIMES factor .)
    GREATER         reduce using rule 28 (term -> term TIMES factor .)
    LESS            reduce using rule 28 (term -> term TIMES factor .)
    ISEQUAL         reduce using rule 28 (term -> term TIMES factor .)
    IS_NOT_IDENTICAL reduce using rule 28 (term -> term TIMES factor .)
    IS_IDENTICAL    reduce using rule 28 (term -> term TIMES factor .)
    $end            reduce using rule 28 (term -> term TIMES factor .)
    RPAREN          reduce using rule 28 (term -> term TIMES factor .)
    RBLOCK          reduce using rule 28 (term -> term TIMES factor .)
    ELSE            reduce using rule 28 (term -> term TIMES factor .)


state 87

    (29) term -> term DIVIDE factor .

    TIMES           reduce using rule 29 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 29 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 29 (term -> term DIVIDE factor .)
    MOD             reduce using rule 29 (term -> term DIVIDE factor .)
    GREATER         reduce using rule 29 (term -> term DIVIDE factor .)
    LESS            reduce using rule 29 (term -> term DIVIDE factor .)
    ISEQUAL         reduce using rule 29 (term -> term DIVIDE factor .)
    IS_NOT_IDENTICAL reduce using rule 29 (term -> term DIVIDE factor .)
    IS_IDENTICAL    reduce using rule 29 (term -> term DIVIDE factor .)
    $end            reduce using rule 29 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 29 (term -> term DIVIDE factor .)
    RBLOCK          reduce using rule 29 (term -> term DIVIDE factor .)
    ELSE            reduce using rule 29 (term -> term DIVIDE factor .)


state 88

    (44) varDeclaration -> varType ID EQUAL . arrayDeclare COLON
    (45) varDeclaration -> varType ID EQUAL . declareMap COLON
    (46) varDeclaration -> varType ID EQUAL . declararSet COLON
    (50) arrayDeclare -> . LBRACKET arrayValues RBRACKET
    (51) arrayDeclare -> . NEW ARRAY LPAREN arrayValues RPAREN
    (63) declareMap -> . NEW MAP LPAREN iterable RPAREN
    (88) declararSet -> . NEW SET LPAREN setValues RPAREN

    LBRACKET        shift and go to state 106
    NEW             shift and go to state 107

    arrayDeclare                   shift and go to state 103
    declareMap                     shift and go to state 104
    declararSet                    shift and go to state 105

state 89

    (26) block -> LBLOCK sentencias RBLOCK .

    PLUS            reduce using rule 26 (block -> LBLOCK sentencias RBLOCK .)
    TIMES           reduce using rule 26 (block -> LBLOCK sentencias RBLOCK .)
    DIVIDE          reduce using rule 26 (block -> LBLOCK sentencias RBLOCK .)
    MOD             reduce using rule 26 (block -> LBLOCK sentencias RBLOCK .)
    GREATER         reduce using rule 26 (block -> LBLOCK sentencias RBLOCK .)
    LESS            reduce using rule 26 (block -> LBLOCK sentencias RBLOCK .)
    ISEQUAL         reduce using rule 26 (block -> LBLOCK sentencias RBLOCK .)
    IS_NOT_IDENTICAL reduce using rule 26 (block -> LBLOCK sentencias RBLOCK .)
    IS_IDENTICAL    reduce using rule 26 (block -> LBLOCK sentencias RBLOCK .)
    $end            reduce using rule 26 (block -> LBLOCK sentencias RBLOCK .)
    RPAREN          reduce using rule 26 (block -> LBLOCK sentencias RBLOCK .)
    RBLOCK          reduce using rule 26 (block -> LBLOCK sentencias RBLOCK .)
    ELSE            reduce using rule 26 (block -> LBLOCK sentencias RBLOCK .)


state 90

    (8) sentencias -> IF LPAREN logical_expresion RPAREN .
    (9) sentencias -> IF LPAREN logical_expresion RPAREN . sentencias ELSE sentencias
    (1) sentencias -> . impresion
    (2) sentencias -> . expression
    (8) sentencias -> . IF LPAREN logical_expresion RPAREN
    (9) sentencias -> . IF LPAREN logical_expresion RPAREN sentencias ELSE sentencias
    (10) sentencias -> . WHILE LPAREN logical_expresion RPAREN block
    (11) impresion -> . ALERT LPAREN expression RPAREN
    (12) impresion -> . ALERT LPAREN RPAREN
    (3) expression -> . ID EQUAL expression
    (4) expression -> . callMethods
    (5) expression -> . callFunction
    (6) expression -> . javaScript_param
    (7) expression -> . varDeclaration
    (13) expression -> . expression PLUS term
    (14) expression -> . expression TIMES term
    (15) expression -> . expression DIVIDE term
    (16) expression -> . expression MOD term
    (17) expression -> . VAR ID
    (18) expression -> . CONST ID
    (19) expression -> . logical_expresion
    (25) expression -> . block
    (27) expression -> . term
    (47) callMethods -> . ID methodArray COLON
    (48) callMethods -> . ID methodSet COLON
    (49) callMethods -> . ID methodMap COLON
    (76) callFunction -> . ID LPAREN params RPAREN
    (34) javaScript_param -> . STRING
    (35) javaScript_param -> . NUM
    (36) javaScript_param -> . boolean
    (44) varDeclaration -> . varType ID EQUAL arrayDeclare COLON
    (45) varDeclaration -> . varType ID EQUAL declareMap COLON
    (46) varDeclaration -> . varType ID EQUAL declararSet COLON
    (20) logical_expresion -> . expression GREATER term
    (21) logical_expresion -> . expression LESS term
    (22) logical_expresion -> . expression ISEQUAL term
    (23) logical_expresion -> . expression IS_NOT_IDENTICAL term
    (24) logical_expresion -> . expression IS_IDENTICAL term
    (26) block -> . LBLOCK sentencias RBLOCK
    (28) term -> . term TIMES factor
    (29) term -> . term DIVIDE factor
    (30) term -> . factor
    (38) boolean -> . TRUE
    (39) boolean -> . FALSE
    (40) varType -> . LET
    (41) varType -> . CONST
    (42) varType -> . VAR
    (43) varType -> . empty
    (31) factor -> . NUM
    (32) factor -> . ID
    (33) factor -> . LPAREN expression RPAREN
    (37) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    $end            reduce using rule 8 (sentencias -> IF LPAREN logical_expresion RPAREN .)
    RBLOCK          reduce using rule 8 (sentencias -> IF LPAREN logical_expresion RPAREN .)
    ELSE            reduce using rule 8 (sentencias -> IF LPAREN logical_expresion RPAREN .)
    IF              shift and go to state 4
    WHILE           shift and go to state 7
    ALERT           shift and go to state 9
    ID              shift and go to state 10
    VAR             shift and go to state 16
    CONST           shift and go to state 17
    STRING          shift and go to state 18
    NUM             shift and go to state 19
    LBLOCK          shift and go to state 22
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    LET             shift and go to state 26
    LPAREN          shift and go to state 5

  ! ID              [ reduce using rule 37 (empty -> .) ]

    logical_expresion              shift and go to state 6
    sentencias                     shift and go to state 108
    impresion                      shift and go to state 2
    expression                     shift and go to state 3
    block                          shift and go to state 8
    callMethods                    shift and go to state 11
    callFunction                   shift and go to state 12
    javaScript_param               shift and go to state 13
    varDeclaration                 shift and go to state 14
    term                           shift and go to state 15
    boolean                        shift and go to state 20
    varType                        shift and go to state 21
    factor                         shift and go to state 23
    empty                          shift and go to state 27

state 91

    (10) sentencias -> WHILE LPAREN logical_expresion RPAREN . block
    (26) block -> . LBLOCK sentencias RBLOCK

    LBLOCK          shift and go to state 22

    block                          shift and go to state 109

state 92

    (11) impresion -> ALERT LPAREN expression RPAREN .

    $end            reduce using rule 11 (impresion -> ALERT LPAREN expression RPAREN .)
    RBLOCK          reduce using rule 11 (impresion -> ALERT LPAREN expression RPAREN .)
    ELSE            reduce using rule 11 (impresion -> ALERT LPAREN expression RPAREN .)


state 93

    (80) param -> ID LBRACKET . RBRACKET

    RBRACKET        shift and go to state 110


state 94

    (76) callFunction -> ID LPAREN params RPAREN .

    PLUS            reduce using rule 76 (callFunction -> ID LPAREN params RPAREN .)
    TIMES           reduce using rule 76 (callFunction -> ID LPAREN params RPAREN .)
    DIVIDE          reduce using rule 76 (callFunction -> ID LPAREN params RPAREN .)
    MOD             reduce using rule 76 (callFunction -> ID LPAREN params RPAREN .)
    GREATER         reduce using rule 76 (callFunction -> ID LPAREN params RPAREN .)
    LESS            reduce using rule 76 (callFunction -> ID LPAREN params RPAREN .)
    ISEQUAL         reduce using rule 76 (callFunction -> ID LPAREN params RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 76 (callFunction -> ID LPAREN params RPAREN .)
    IS_IDENTICAL    reduce using rule 76 (callFunction -> ID LPAREN params RPAREN .)
    $end            reduce using rule 76 (callFunction -> ID LPAREN params RPAREN .)
    RPAREN          reduce using rule 76 (callFunction -> ID LPAREN params RPAREN .)
    RBLOCK          reduce using rule 76 (callFunction -> ID LPAREN params RPAREN .)
    ELSE            reduce using rule 76 (callFunction -> ID LPAREN params RPAREN .)


state 95

    (82) paramList -> param COMMA . paramList
    (81) paramList -> . param
    (82) paramList -> . param COMMA paramList
    (79) param -> . ID
    (80) param -> . ID LBRACKET RBRACKET

    ID              shift and go to state 74

    param                          shift and go to state 78
    paramList                      shift and go to state 111

state 96

    (60) methodArray -> PERIOD PUSH LPAREN . arrayValue RPAREN
    (54) arrayValue -> . LPAREN expression RPAREN
    (55) arrayValue -> . ID
    (56) arrayValue -> . NUM
    (57) arrayValue -> . STRING
    (58) arrayValue -> . boolean
    (59) arrayValue -> . empty
    (38) boolean -> . TRUE
    (39) boolean -> . FALSE
    (37) empty -> .

    LPAREN          shift and go to state 112
    ID              shift and go to state 114
    NUM             shift and go to state 115
    STRING          shift and go to state 116
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    RPAREN          reduce using rule 37 (empty -> .)

    arrayValue                     shift and go to state 113
    boolean                        shift and go to state 117
    empty                          shift and go to state 118

state 97

    (61) methodArray -> PERIOD UNSHIFT LPAREN . arrayValue RPAREN
    (54) arrayValue -> . LPAREN expression RPAREN
    (55) arrayValue -> . ID
    (56) arrayValue -> . NUM
    (57) arrayValue -> . STRING
    (58) arrayValue -> . boolean
    (59) arrayValue -> . empty
    (38) boolean -> . TRUE
    (39) boolean -> . FALSE
    (37) empty -> .

    LPAREN          shift and go to state 112
    ID              shift and go to state 114
    NUM             shift and go to state 115
    STRING          shift and go to state 116
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    RPAREN          reduce using rule 37 (empty -> .)

    arrayValue                     shift and go to state 119
    boolean                        shift and go to state 117
    empty                          shift and go to state 118

state 98

    (62) methodArray -> PERIOD POP LPAREN . empty RPAREN
    (37) empty -> .

    RPAREN          reduce using rule 37 (empty -> .)

    empty                          shift and go to state 120

state 99

    (97) methodSet -> PERIOD ADD LPAREN . setValue RPAREN
    (92) setValue -> . ID
    (93) setValue -> . NUM
    (94) setValue -> . STRING
    (95) setValue -> . boolean
    (96) setValue -> . empty
    (38) boolean -> . TRUE
    (39) boolean -> . FALSE
    (37) empty -> .

    ID              shift and go to state 122
    NUM             shift and go to state 123
    STRING          shift and go to state 124
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    RPAREN          reduce using rule 37 (empty -> .)

    setValue                       shift and go to state 121
    boolean                        shift and go to state 125
    empty                          shift and go to state 126

state 100

    (98) methodSet -> PERIOD DELETE LPAREN . setValue RPAREN
    (92) setValue -> . ID
    (93) setValue -> . NUM
    (94) setValue -> . STRING
    (95) setValue -> . boolean
    (96) setValue -> . empty
    (38) boolean -> . TRUE
    (39) boolean -> . FALSE
    (37) empty -> .

    ID              shift and go to state 122
    NUM             shift and go to state 123
    STRING          shift and go to state 124
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    RPAREN          reduce using rule 37 (empty -> .)

    setValue                       shift and go to state 127
    boolean                        shift and go to state 125
    empty                          shift and go to state 126

state 101

    (99) methodSet -> PERIOD CLEAR LPAREN . empty RPAREN
    (67) methodMap -> PERIOD CLEAR LPAREN . RPAREN
    (37) empty -> .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 129

  ! RPAREN          [ reduce using rule 37 (empty -> .) ]

    empty                          shift and go to state 128

state 102

    (68) methodMap -> PERIOD LENGTH LPAREN . RPAREN

    RPAREN          shift and go to state 130


state 103

    (44) varDeclaration -> varType ID EQUAL arrayDeclare . COLON

    COLON           shift and go to state 131


state 104

    (45) varDeclaration -> varType ID EQUAL declareMap . COLON

    COLON           shift and go to state 132


state 105

    (46) varDeclaration -> varType ID EQUAL declararSet . COLON

    COLON           shift and go to state 133


state 106

    (50) arrayDeclare -> LBRACKET . arrayValues RBRACKET
    (52) arrayValues -> . arrayValue
    (53) arrayValues -> . arrayValue COMMA arrayValue
    (54) arrayValue -> . LPAREN expression RPAREN
    (55) arrayValue -> . ID
    (56) arrayValue -> . NUM
    (57) arrayValue -> . STRING
    (58) arrayValue -> . boolean
    (59) arrayValue -> . empty
    (38) boolean -> . TRUE
    (39) boolean -> . FALSE
    (37) empty -> .

    LPAREN          shift and go to state 112
    ID              shift and go to state 114
    NUM             shift and go to state 115
    STRING          shift and go to state 116
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    COMMA           reduce using rule 37 (empty -> .)
    RBRACKET        reduce using rule 37 (empty -> .)

    arrayValues                    shift and go to state 134
    arrayValue                     shift and go to state 135
    boolean                        shift and go to state 117
    empty                          shift and go to state 118

state 107

    (51) arrayDeclare -> NEW . ARRAY LPAREN arrayValues RPAREN
    (63) declareMap -> NEW . MAP LPAREN iterable RPAREN
    (88) declararSet -> NEW . SET LPAREN setValues RPAREN

    ARRAY           shift and go to state 136
    MAP             shift and go to state 137
    SET             shift and go to state 138


state 108

    (9) sentencias -> IF LPAREN logical_expresion RPAREN sentencias . ELSE sentencias

    ELSE            shift and go to state 139


state 109

    (10) sentencias -> WHILE LPAREN logical_expresion RPAREN block .

    $end            reduce using rule 10 (sentencias -> WHILE LPAREN logical_expresion RPAREN block .)
    RBLOCK          reduce using rule 10 (sentencias -> WHILE LPAREN logical_expresion RPAREN block .)
    ELSE            reduce using rule 10 (sentencias -> WHILE LPAREN logical_expresion RPAREN block .)


state 110

    (80) param -> ID LBRACKET RBRACKET .

    COMMA           reduce using rule 80 (param -> ID LBRACKET RBRACKET .)
    RPAREN          reduce using rule 80 (param -> ID LBRACKET RBRACKET .)


state 111

    (82) paramList -> param COMMA paramList .

    RPAREN          reduce using rule 82 (paramList -> param COMMA paramList .)


state 112

    (54) arrayValue -> LPAREN . expression RPAREN
    (3) expression -> . ID EQUAL expression
    (4) expression -> . callMethods
    (5) expression -> . callFunction
    (6) expression -> . javaScript_param
    (7) expression -> . varDeclaration
    (13) expression -> . expression PLUS term
    (14) expression -> . expression TIMES term
    (15) expression -> . expression DIVIDE term
    (16) expression -> . expression MOD term
    (17) expression -> . VAR ID
    (18) expression -> . CONST ID
    (19) expression -> . logical_expresion
    (25) expression -> . block
    (27) expression -> . term
    (47) callMethods -> . ID methodArray COLON
    (48) callMethods -> . ID methodSet COLON
    (49) callMethods -> . ID methodMap COLON
    (76) callFunction -> . ID LPAREN params RPAREN
    (34) javaScript_param -> . STRING
    (35) javaScript_param -> . NUM
    (36) javaScript_param -> . boolean
    (44) varDeclaration -> . varType ID EQUAL arrayDeclare COLON
    (45) varDeclaration -> . varType ID EQUAL declareMap COLON
    (46) varDeclaration -> . varType ID EQUAL declararSet COLON
    (20) logical_expresion -> . expression GREATER term
    (21) logical_expresion -> . expression LESS term
    (22) logical_expresion -> . expression ISEQUAL term
    (23) logical_expresion -> . expression IS_NOT_IDENTICAL term
    (24) logical_expresion -> . expression IS_IDENTICAL term
    (26) block -> . LBLOCK sentencias RBLOCK
    (28) term -> . term TIMES factor
    (29) term -> . term DIVIDE factor
    (30) term -> . factor
    (38) boolean -> . TRUE
    (39) boolean -> . FALSE
    (40) varType -> . LET
    (41) varType -> . CONST
    (42) varType -> . VAR
    (43) varType -> . empty
    (31) factor -> . NUM
    (32) factor -> . ID
    (33) factor -> . LPAREN expression RPAREN
    (37) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 10
    VAR             shift and go to state 16
    CONST           shift and go to state 17
    STRING          shift and go to state 18
    NUM             shift and go to state 19
    LBLOCK          shift and go to state 22
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    LET             shift and go to state 26
    LPAREN          shift and go to state 5

  ! ID              [ reduce using rule 37 (empty -> .) ]

    expression                     shift and go to state 140
    callMethods                    shift and go to state 11
    callFunction                   shift and go to state 12
    javaScript_param               shift and go to state 13
    varDeclaration                 shift and go to state 14
    term                           shift and go to state 15
    logical_expresion              shift and go to state 6
    block                          shift and go to state 8
    boolean                        shift and go to state 20
    varType                        shift and go to state 21
    factor                         shift and go to state 23
    empty                          shift and go to state 27

state 113

    (60) methodArray -> PERIOD PUSH LPAREN arrayValue . RPAREN

    RPAREN          shift and go to state 141


state 114

    (55) arrayValue -> ID .

    RPAREN          reduce using rule 55 (arrayValue -> ID .)
    COMMA           reduce using rule 55 (arrayValue -> ID .)
    RBRACKET        reduce using rule 55 (arrayValue -> ID .)


state 115

    (56) arrayValue -> NUM .

    RPAREN          reduce using rule 56 (arrayValue -> NUM .)
    COMMA           reduce using rule 56 (arrayValue -> NUM .)
    RBRACKET        reduce using rule 56 (arrayValue -> NUM .)


state 116

    (57) arrayValue -> STRING .

    RPAREN          reduce using rule 57 (arrayValue -> STRING .)
    COMMA           reduce using rule 57 (arrayValue -> STRING .)
    RBRACKET        reduce using rule 57 (arrayValue -> STRING .)


state 117

    (58) arrayValue -> boolean .

    RPAREN          reduce using rule 58 (arrayValue -> boolean .)
    COMMA           reduce using rule 58 (arrayValue -> boolean .)
    RBRACKET        reduce using rule 58 (arrayValue -> boolean .)


state 118

    (59) arrayValue -> empty .

    RPAREN          reduce using rule 59 (arrayValue -> empty .)
    COMMA           reduce using rule 59 (arrayValue -> empty .)
    RBRACKET        reduce using rule 59 (arrayValue -> empty .)


state 119

    (61) methodArray -> PERIOD UNSHIFT LPAREN arrayValue . RPAREN

    RPAREN          shift and go to state 142


state 120

    (62) methodArray -> PERIOD POP LPAREN empty . RPAREN

    RPAREN          shift and go to state 143


state 121

    (97) methodSet -> PERIOD ADD LPAREN setValue . RPAREN

    RPAREN          shift and go to state 144


state 122

    (92) setValue -> ID .

    RPAREN          reduce using rule 92 (setValue -> ID .)
    COMMA           reduce using rule 92 (setValue -> ID .)


state 123

    (93) setValue -> NUM .

    RPAREN          reduce using rule 93 (setValue -> NUM .)
    COMMA           reduce using rule 93 (setValue -> NUM .)


state 124

    (94) setValue -> STRING .

    RPAREN          reduce using rule 94 (setValue -> STRING .)
    COMMA           reduce using rule 94 (setValue -> STRING .)


state 125

    (95) setValue -> boolean .

    RPAREN          reduce using rule 95 (setValue -> boolean .)
    COMMA           reduce using rule 95 (setValue -> boolean .)


state 126

    (96) setValue -> empty .

    RPAREN          reduce using rule 96 (setValue -> empty .)
    COMMA           reduce using rule 96 (setValue -> empty .)


state 127

    (98) methodSet -> PERIOD DELETE LPAREN setValue . RPAREN

    RPAREN          shift and go to state 145


state 128

    (99) methodSet -> PERIOD CLEAR LPAREN empty . RPAREN

    RPAREN          shift and go to state 146


state 129

    (67) methodMap -> PERIOD CLEAR LPAREN RPAREN .

    COLON           reduce using rule 67 (methodMap -> PERIOD CLEAR LPAREN RPAREN .)


state 130

    (68) methodMap -> PERIOD LENGTH LPAREN RPAREN .

    COLON           reduce using rule 68 (methodMap -> PERIOD LENGTH LPAREN RPAREN .)


state 131

    (44) varDeclaration -> varType ID EQUAL arrayDeclare COLON .

    PLUS            reduce using rule 44 (varDeclaration -> varType ID EQUAL arrayDeclare COLON .)
    TIMES           reduce using rule 44 (varDeclaration -> varType ID EQUAL arrayDeclare COLON .)
    DIVIDE          reduce using rule 44 (varDeclaration -> varType ID EQUAL arrayDeclare COLON .)
    MOD             reduce using rule 44 (varDeclaration -> varType ID EQUAL arrayDeclare COLON .)
    GREATER         reduce using rule 44 (varDeclaration -> varType ID EQUAL arrayDeclare COLON .)
    LESS            reduce using rule 44 (varDeclaration -> varType ID EQUAL arrayDeclare COLON .)
    ISEQUAL         reduce using rule 44 (varDeclaration -> varType ID EQUAL arrayDeclare COLON .)
    IS_NOT_IDENTICAL reduce using rule 44 (varDeclaration -> varType ID EQUAL arrayDeclare COLON .)
    IS_IDENTICAL    reduce using rule 44 (varDeclaration -> varType ID EQUAL arrayDeclare COLON .)
    $end            reduce using rule 44 (varDeclaration -> varType ID EQUAL arrayDeclare COLON .)
    RPAREN          reduce using rule 44 (varDeclaration -> varType ID EQUAL arrayDeclare COLON .)
    RBLOCK          reduce using rule 44 (varDeclaration -> varType ID EQUAL arrayDeclare COLON .)
    ELSE            reduce using rule 44 (varDeclaration -> varType ID EQUAL arrayDeclare COLON .)


state 132

    (45) varDeclaration -> varType ID EQUAL declareMap COLON .

    PLUS            reduce using rule 45 (varDeclaration -> varType ID EQUAL declareMap COLON .)
    TIMES           reduce using rule 45 (varDeclaration -> varType ID EQUAL declareMap COLON .)
    DIVIDE          reduce using rule 45 (varDeclaration -> varType ID EQUAL declareMap COLON .)
    MOD             reduce using rule 45 (varDeclaration -> varType ID EQUAL declareMap COLON .)
    GREATER         reduce using rule 45 (varDeclaration -> varType ID EQUAL declareMap COLON .)
    LESS            reduce using rule 45 (varDeclaration -> varType ID EQUAL declareMap COLON .)
    ISEQUAL         reduce using rule 45 (varDeclaration -> varType ID EQUAL declareMap COLON .)
    IS_NOT_IDENTICAL reduce using rule 45 (varDeclaration -> varType ID EQUAL declareMap COLON .)
    IS_IDENTICAL    reduce using rule 45 (varDeclaration -> varType ID EQUAL declareMap COLON .)
    $end            reduce using rule 45 (varDeclaration -> varType ID EQUAL declareMap COLON .)
    RPAREN          reduce using rule 45 (varDeclaration -> varType ID EQUAL declareMap COLON .)
    RBLOCK          reduce using rule 45 (varDeclaration -> varType ID EQUAL declareMap COLON .)
    ELSE            reduce using rule 45 (varDeclaration -> varType ID EQUAL declareMap COLON .)


state 133

    (46) varDeclaration -> varType ID EQUAL declararSet COLON .

    PLUS            reduce using rule 46 (varDeclaration -> varType ID EQUAL declararSet COLON .)
    TIMES           reduce using rule 46 (varDeclaration -> varType ID EQUAL declararSet COLON .)
    DIVIDE          reduce using rule 46 (varDeclaration -> varType ID EQUAL declararSet COLON .)
    MOD             reduce using rule 46 (varDeclaration -> varType ID EQUAL declararSet COLON .)
    GREATER         reduce using rule 46 (varDeclaration -> varType ID EQUAL declararSet COLON .)
    LESS            reduce using rule 46 (varDeclaration -> varType ID EQUAL declararSet COLON .)
    ISEQUAL         reduce using rule 46 (varDeclaration -> varType ID EQUAL declararSet COLON .)
    IS_NOT_IDENTICAL reduce using rule 46 (varDeclaration -> varType ID EQUAL declararSet COLON .)
    IS_IDENTICAL    reduce using rule 46 (varDeclaration -> varType ID EQUAL declararSet COLON .)
    $end            reduce using rule 46 (varDeclaration -> varType ID EQUAL declararSet COLON .)
    RPAREN          reduce using rule 46 (varDeclaration -> varType ID EQUAL declararSet COLON .)
    RBLOCK          reduce using rule 46 (varDeclaration -> varType ID EQUAL declararSet COLON .)
    ELSE            reduce using rule 46 (varDeclaration -> varType ID EQUAL declararSet COLON .)


state 134

    (50) arrayDeclare -> LBRACKET arrayValues . RBRACKET

    RBRACKET        shift and go to state 147


state 135

    (52) arrayValues -> arrayValue .
    (53) arrayValues -> arrayValue . COMMA arrayValue

    RBRACKET        reduce using rule 52 (arrayValues -> arrayValue .)
    RPAREN          reduce using rule 52 (arrayValues -> arrayValue .)
    COMMA           shift and go to state 148


state 136

    (51) arrayDeclare -> NEW ARRAY . LPAREN arrayValues RPAREN

    LPAREN          shift and go to state 149


state 137

    (63) declareMap -> NEW MAP . LPAREN iterable RPAREN

    LPAREN          shift and go to state 150


state 138

    (88) declararSet -> NEW SET . LPAREN setValues RPAREN

    LPAREN          shift and go to state 151


state 139

    (9) sentencias -> IF LPAREN logical_expresion RPAREN sentencias ELSE . sentencias
    (1) sentencias -> . impresion
    (2) sentencias -> . expression
    (8) sentencias -> . IF LPAREN logical_expresion RPAREN
    (9) sentencias -> . IF LPAREN logical_expresion RPAREN sentencias ELSE sentencias
    (10) sentencias -> . WHILE LPAREN logical_expresion RPAREN block
    (11) impresion -> . ALERT LPAREN expression RPAREN
    (12) impresion -> . ALERT LPAREN RPAREN
    (3) expression -> . ID EQUAL expression
    (4) expression -> . callMethods
    (5) expression -> . callFunction
    (6) expression -> . javaScript_param
    (7) expression -> . varDeclaration
    (13) expression -> . expression PLUS term
    (14) expression -> . expression TIMES term
    (15) expression -> . expression DIVIDE term
    (16) expression -> . expression MOD term
    (17) expression -> . VAR ID
    (18) expression -> . CONST ID
    (19) expression -> . logical_expresion
    (25) expression -> . block
    (27) expression -> . term
    (47) callMethods -> . ID methodArray COLON
    (48) callMethods -> . ID methodSet COLON
    (49) callMethods -> . ID methodMap COLON
    (76) callFunction -> . ID LPAREN params RPAREN
    (34) javaScript_param -> . STRING
    (35) javaScript_param -> . NUM
    (36) javaScript_param -> . boolean
    (44) varDeclaration -> . varType ID EQUAL arrayDeclare COLON
    (45) varDeclaration -> . varType ID EQUAL declareMap COLON
    (46) varDeclaration -> . varType ID EQUAL declararSet COLON
    (20) logical_expresion -> . expression GREATER term
    (21) logical_expresion -> . expression LESS term
    (22) logical_expresion -> . expression ISEQUAL term
    (23) logical_expresion -> . expression IS_NOT_IDENTICAL term
    (24) logical_expresion -> . expression IS_IDENTICAL term
    (26) block -> . LBLOCK sentencias RBLOCK
    (28) term -> . term TIMES factor
    (29) term -> . term DIVIDE factor
    (30) term -> . factor
    (38) boolean -> . TRUE
    (39) boolean -> . FALSE
    (40) varType -> . LET
    (41) varType -> . CONST
    (42) varType -> . VAR
    (43) varType -> . empty
    (31) factor -> . NUM
    (32) factor -> . ID
    (33) factor -> . LPAREN expression RPAREN
    (37) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    IF              shift and go to state 4
    WHILE           shift and go to state 7
    ALERT           shift and go to state 9
    ID              shift and go to state 10
    VAR             shift and go to state 16
    CONST           shift and go to state 17
    STRING          shift and go to state 18
    NUM             shift and go to state 19
    LBLOCK          shift and go to state 22
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    LET             shift and go to state 26
    LPAREN          shift and go to state 5

  ! ID              [ reduce using rule 37 (empty -> .) ]

    logical_expresion              shift and go to state 6
    sentencias                     shift and go to state 152
    impresion                      shift and go to state 2
    expression                     shift and go to state 3
    block                          shift and go to state 8
    callMethods                    shift and go to state 11
    callFunction                   shift and go to state 12
    javaScript_param               shift and go to state 13
    varDeclaration                 shift and go to state 14
    term                           shift and go to state 15
    boolean                        shift and go to state 20
    varType                        shift and go to state 21
    factor                         shift and go to state 23
    empty                          shift and go to state 27

state 140

    (54) arrayValue -> LPAREN expression . RPAREN
    (13) expression -> expression . PLUS term
    (14) expression -> expression . TIMES term
    (15) expression -> expression . DIVIDE term
    (16) expression -> expression . MOD term
    (20) logical_expresion -> expression . GREATER term
    (21) logical_expresion -> expression . LESS term
    (22) logical_expresion -> expression . ISEQUAL term
    (23) logical_expresion -> expression . IS_NOT_IDENTICAL term
    (24) logical_expresion -> expression . IS_IDENTICAL term

    RPAREN          shift and go to state 153
    PLUS            shift and go to state 28
    TIMES           shift and go to state 29
    DIVIDE          shift and go to state 30
    MOD             shift and go to state 31
    GREATER         shift and go to state 32
    LESS            shift and go to state 33
    ISEQUAL         shift and go to state 34
    IS_NOT_IDENTICAL shift and go to state 35
    IS_IDENTICAL    shift and go to state 36


state 141

    (60) methodArray -> PERIOD PUSH LPAREN arrayValue RPAREN .

    COLON           reduce using rule 60 (methodArray -> PERIOD PUSH LPAREN arrayValue RPAREN .)


state 142

    (61) methodArray -> PERIOD UNSHIFT LPAREN arrayValue RPAREN .

    COLON           reduce using rule 61 (methodArray -> PERIOD UNSHIFT LPAREN arrayValue RPAREN .)


state 143

    (62) methodArray -> PERIOD POP LPAREN empty RPAREN .

    COLON           reduce using rule 62 (methodArray -> PERIOD POP LPAREN empty RPAREN .)


state 144

    (97) methodSet -> PERIOD ADD LPAREN setValue RPAREN .

    COLON           reduce using rule 97 (methodSet -> PERIOD ADD LPAREN setValue RPAREN .)


state 145

    (98) methodSet -> PERIOD DELETE LPAREN setValue RPAREN .

    COLON           reduce using rule 98 (methodSet -> PERIOD DELETE LPAREN setValue RPAREN .)


state 146

    (99) methodSet -> PERIOD CLEAR LPAREN empty RPAREN .

    COLON           reduce using rule 99 (methodSet -> PERIOD CLEAR LPAREN empty RPAREN .)


state 147

    (50) arrayDeclare -> LBRACKET arrayValues RBRACKET .

    COLON           reduce using rule 50 (arrayDeclare -> LBRACKET arrayValues RBRACKET .)
    RPAREN          reduce using rule 50 (arrayDeclare -> LBRACKET arrayValues RBRACKET .)


state 148

    (53) arrayValues -> arrayValue COMMA . arrayValue
    (54) arrayValue -> . LPAREN expression RPAREN
    (55) arrayValue -> . ID
    (56) arrayValue -> . NUM
    (57) arrayValue -> . STRING
    (58) arrayValue -> . boolean
    (59) arrayValue -> . empty
    (38) boolean -> . TRUE
    (39) boolean -> . FALSE
    (37) empty -> .

    LPAREN          shift and go to state 112
    ID              shift and go to state 114
    NUM             shift and go to state 115
    STRING          shift and go to state 116
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    RBRACKET        reduce using rule 37 (empty -> .)
    RPAREN          reduce using rule 37 (empty -> .)

    arrayValue                     shift and go to state 154
    boolean                        shift and go to state 117
    empty                          shift and go to state 118

state 149

    (51) arrayDeclare -> NEW ARRAY LPAREN . arrayValues RPAREN
    (52) arrayValues -> . arrayValue
    (53) arrayValues -> . arrayValue COMMA arrayValue
    (54) arrayValue -> . LPAREN expression RPAREN
    (55) arrayValue -> . ID
    (56) arrayValue -> . NUM
    (57) arrayValue -> . STRING
    (58) arrayValue -> . boolean
    (59) arrayValue -> . empty
    (38) boolean -> . TRUE
    (39) boolean -> . FALSE
    (37) empty -> .

    LPAREN          shift and go to state 112
    ID              shift and go to state 114
    NUM             shift and go to state 115
    STRING          shift and go to state 116
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    COMMA           reduce using rule 37 (empty -> .)
    RPAREN          reduce using rule 37 (empty -> .)

    arrayValues                    shift and go to state 155
    arrayValue                     shift and go to state 135
    boolean                        shift and go to state 117
    empty                          shift and go to state 118

state 150

    (63) declareMap -> NEW MAP LPAREN . iterable RPAREN
    (64) iterable -> . arrayDeclare
    (65) iterable -> . declararSet
    (66) iterable -> . empty
    (50) arrayDeclare -> . LBRACKET arrayValues RBRACKET
    (51) arrayDeclare -> . NEW ARRAY LPAREN arrayValues RPAREN
    (88) declararSet -> . NEW SET LPAREN setValues RPAREN
    (37) empty -> .

    LBRACKET        shift and go to state 106
    NEW             shift and go to state 156
    RPAREN          reduce using rule 37 (empty -> .)

    iterable                       shift and go to state 157
    arrayDeclare                   shift and go to state 158
    declararSet                    shift and go to state 159
    empty                          shift and go to state 160

state 151

    (88) declararSet -> NEW SET LPAREN . setValues RPAREN
    (90) setValues -> . setValue
    (91) setValues -> . setValue COMMA setValue
    (92) setValue -> . ID
    (93) setValue -> . NUM
    (94) setValue -> . STRING
    (95) setValue -> . boolean
    (96) setValue -> . empty
    (38) boolean -> . TRUE
    (39) boolean -> . FALSE
    (37) empty -> .

    ID              shift and go to state 122
    NUM             shift and go to state 123
    STRING          shift and go to state 124
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    COMMA           reduce using rule 37 (empty -> .)
    RPAREN          reduce using rule 37 (empty -> .)

    setValues                      shift and go to state 161
    setValue                       shift and go to state 162
    boolean                        shift and go to state 125
    empty                          shift and go to state 126

state 152

    (9) sentencias -> IF LPAREN logical_expresion RPAREN sentencias ELSE sentencias .

    $end            reduce using rule 9 (sentencias -> IF LPAREN logical_expresion RPAREN sentencias ELSE sentencias .)
    RBLOCK          reduce using rule 9 (sentencias -> IF LPAREN logical_expresion RPAREN sentencias ELSE sentencias .)
    ELSE            reduce using rule 9 (sentencias -> IF LPAREN logical_expresion RPAREN sentencias ELSE sentencias .)


state 153

    (54) arrayValue -> LPAREN expression RPAREN .

    RPAREN          reduce using rule 54 (arrayValue -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 54 (arrayValue -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 54 (arrayValue -> LPAREN expression RPAREN .)


state 154

    (53) arrayValues -> arrayValue COMMA arrayValue .

    RBRACKET        reduce using rule 53 (arrayValues -> arrayValue COMMA arrayValue .)
    RPAREN          reduce using rule 53 (arrayValues -> arrayValue COMMA arrayValue .)


state 155

    (51) arrayDeclare -> NEW ARRAY LPAREN arrayValues . RPAREN

    RPAREN          shift and go to state 163


state 156

    (51) arrayDeclare -> NEW . ARRAY LPAREN arrayValues RPAREN
    (88) declararSet -> NEW . SET LPAREN setValues RPAREN

    ARRAY           shift and go to state 136
    SET             shift and go to state 138


state 157

    (63) declareMap -> NEW MAP LPAREN iterable . RPAREN

    RPAREN          shift and go to state 164


state 158

    (64) iterable -> arrayDeclare .

    RPAREN          reduce using rule 64 (iterable -> arrayDeclare .)


state 159

    (65) iterable -> declararSet .

    RPAREN          reduce using rule 65 (iterable -> declararSet .)


state 160

    (66) iterable -> empty .

    RPAREN          reduce using rule 66 (iterable -> empty .)


state 161

    (88) declararSet -> NEW SET LPAREN setValues . RPAREN

    RPAREN          shift and go to state 165


state 162

    (90) setValues -> setValue .
    (91) setValues -> setValue . COMMA setValue

    RPAREN          reduce using rule 90 (setValues -> setValue .)
    COMMA           shift and go to state 166


state 163

    (51) arrayDeclare -> NEW ARRAY LPAREN arrayValues RPAREN .

    COLON           reduce using rule 51 (arrayDeclare -> NEW ARRAY LPAREN arrayValues RPAREN .)
    RPAREN          reduce using rule 51 (arrayDeclare -> NEW ARRAY LPAREN arrayValues RPAREN .)


state 164

    (63) declareMap -> NEW MAP LPAREN iterable RPAREN .

    COLON           reduce using rule 63 (declareMap -> NEW MAP LPAREN iterable RPAREN .)


state 165

    (88) declararSet -> NEW SET LPAREN setValues RPAREN .

    COLON           reduce using rule 88 (declararSet -> NEW SET LPAREN setValues RPAREN .)
    RPAREN          reduce using rule 88 (declararSet -> NEW SET LPAREN setValues RPAREN .)


state 166

    (91) setValues -> setValue COMMA . setValue
    (92) setValue -> . ID
    (93) setValue -> . NUM
    (94) setValue -> . STRING
    (95) setValue -> . boolean
    (96) setValue -> . empty
    (38) boolean -> . TRUE
    (39) boolean -> . FALSE
    (37) empty -> .

    ID              shift and go to state 122
    NUM             shift and go to state 123
    STRING          shift and go to state 124
    TRUE            shift and go to state 24
    FALSE           shift and go to state 25
    RPAREN          reduce using rule 37 (empty -> .)

    setValue                       shift and go to state 167
    boolean                        shift and go to state 125
    empty                          shift and go to state 126

state 167

    (91) setValues -> setValue COMMA setValue .

    RPAREN          reduce using rule 91 (setValues -> setValue COMMA setValue .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 0 resolved as shift
WARNING: shift/reduce conflict for ID in state 5 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 15 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 15 resolved as shift
WARNING: shift/reduce conflict for ID in state 16 resolved as shift
WARNING: shift/reduce conflict for ID in state 17 resolved as shift
WARNING: shift/reduce conflict for ID in state 22 resolved as shift
WARNING: shift/reduce conflict for ID in state 37 resolved as shift
WARNING: shift/reduce conflict for ID in state 39 resolved as shift
WARNING: shift/reduce conflict for ID in state 40 resolved as shift
WARNING: shift/reduce conflict for ID in state 41 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 53 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 53 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 56 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 56 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 57 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 57 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 58 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 58 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 59 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 59 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 60 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 60 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 61 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 61 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 62 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 62 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 63 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 63 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 70 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 70 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 70 resolved as shift
WARNING: shift/reduce conflict for MOD in state 70 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 70 resolved as shift
WARNING: shift/reduce conflict for LESS in state 70 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 70 resolved as shift
WARNING: shift/reduce conflict for IS_NOT_IDENTICAL in state 70 resolved as shift
WARNING: shift/reduce conflict for IS_IDENTICAL in state 70 resolved as shift
WARNING: shift/reduce conflict for ID in state 90 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 101 resolved as shift
WARNING: shift/reduce conflict for ID in state 112 resolved as shift
WARNING: shift/reduce conflict for ID in state 139 resolved as shift
WARNING: reduce/reduce conflict in state 19 resolved using rule (factor -> NUM)
WARNING: rejected rule (javaScript_param -> NUM) in state 19
WARNING: Rule (javaScript_param -> NUM) is never reduced
