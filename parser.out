Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    AWAIT
    BREAK
    CASE
    CATCH
    CLASS
    COLON
    COMMA
    CONST
    CONTINUE
    DEBUGGER
    DEFAULT
    DELETE
    DIV_EQUAL
    DO
    EQUAL
    EXPORT
    EXTENDS
    FINALLY
    FOR
    FUNCTION
    GREATEREQUAL
    IMPORT
    IN
    INSTANCEOF
    LBRACKET
    LESSEQUAL
    MINUS
    MINUS_EQUAL
    MOD_EQUAL
    MUL_EQUAL
    NEW
    NOT
    OR
    PERIOD
    PLUS_EQUAL
    RBRACKET
    RETURN
    SUPER
    SWITCH
    THIS
    THROW
    TRY
    TWOPOINTS
    TYPEOF
    VAR
    VOID
    WITH
    YIELD

Grammar

Rule 0     S' -> sentencias
Rule 1     sentencias -> impresion
Rule 2     sentencias -> expression
Rule 3     sentencias -> IF LPAREN logical_expresion RPAREN
Rule 4     sentencias -> IF LPAREN logical_expresion RPAREN sentencias ELSE sentencias
Rule 5     sentencias -> WHILE LPAREN logical_expresion RPAREN block
Rule 6     impresion -> ALERT LPAREN expression RPAREN
Rule 7     impresion -> ALERT LPAREN RPAREN
Rule 8     expression -> expression PLUS term
Rule 9     expression -> expression TIMES term
Rule 10    expression -> expression DIVIDE term
Rule 11    expression -> expression MOD term
Rule 12    expression -> logical_expresion
Rule 13    logical_expresion -> expression GREATER term
Rule 14    logical_expresion -> expression LESS term
Rule 15    logical_expresion -> expression ISEQUAL term
Rule 16    logical_expresion -> expression IS_NOT_IDENTICAL term
Rule 17    logical_expresion -> expression IS_IDENTICAL term
Rule 18    expression -> block
Rule 19    block -> LBLOCK sentencias RBLOCK
Rule 20    expression -> term
Rule 21    term -> term TIMES factor
Rule 22    term -> term DIVIDE factor
Rule 23    term -> factor
Rule 24    factor -> NUMBER
Rule 25    factor -> ID
Rule 26    factor -> LPAREN expression RPAREN

Terminals, with rules where they appear

ALERT                : 6 7
AND                  : 
AWAIT                : 
BREAK                : 
CASE                 : 
CATCH                : 
CLASS                : 
COLON                : 
COMMA                : 
CONST                : 
CONTINUE             : 
DEBUGGER             : 
DEFAULT              : 
DELETE               : 
DIVIDE               : 10 22
DIV_EQUAL            : 
DO                   : 
ELSE                 : 4
EQUAL                : 
EXPORT               : 
EXTENDS              : 
FINALLY              : 
FOR                  : 
FUNCTION             : 
GREATER              : 13
GREATEREQUAL         : 
ID                   : 25
IF                   : 3 4
IMPORT               : 
IN                   : 
INSTANCEOF           : 
ISEQUAL              : 15
IS_IDENTICAL         : 17
IS_NOT_IDENTICAL     : 16
LBLOCK               : 19
LBRACKET             : 
LESS                 : 14
LESSEQUAL            : 
LPAREN               : 3 4 5 6 7 26
MINUS                : 
MINUS_EQUAL          : 
MOD                  : 11
MOD_EQUAL            : 
MUL_EQUAL            : 
NEW                  : 
NOT                  : 
NUMBER               : 24
OR                   : 
PERIOD               : 
PLUS                 : 8
PLUS_EQUAL           : 
RBLOCK               : 19
RBRACKET             : 
RETURN               : 
RPAREN               : 3 4 5 6 7 26
SUPER                : 
SWITCH               : 
THIS                 : 
THROW                : 
TIMES                : 9 21
TRY                  : 
TWOPOINTS            : 
TYPEOF               : 
VAR                  : 
VOID                 : 
WHILE                : 5
WITH                 : 
YIELD                : 
error                : 

Nonterminals, with rules where they appear

block                : 5 18
expression           : 2 6 8 9 10 11 13 14 15 16 17 26
factor               : 21 22 23
impresion            : 1
logical_expresion    : 3 4 5 12
sentencias           : 4 4 19 0
term                 : 8 9 10 11 13 14 15 16 17 20 21 22

Parsing method: LALR

state 0

    (0) S' -> . sentencias
    (1) sentencias -> . impresion
    (2) sentencias -> . expression
    (3) sentencias -> . IF LPAREN logical_expresion RPAREN
    (4) sentencias -> . IF LPAREN logical_expresion RPAREN sentencias ELSE sentencias
    (5) sentencias -> . WHILE LPAREN logical_expresion RPAREN block
    (6) impresion -> . ALERT LPAREN expression RPAREN
    (7) impresion -> . ALERT LPAREN RPAREN
    (8) expression -> . expression PLUS term
    (9) expression -> . expression TIMES term
    (10) expression -> . expression DIVIDE term
    (11) expression -> . expression MOD term
    (12) expression -> . logical_expresion
    (18) expression -> . block
    (20) expression -> . term
    (13) logical_expresion -> . expression GREATER term
    (14) logical_expresion -> . expression LESS term
    (15) logical_expresion -> . expression ISEQUAL term
    (16) logical_expresion -> . expression IS_NOT_IDENTICAL term
    (17) logical_expresion -> . expression IS_IDENTICAL term
    (19) block -> . LBLOCK sentencias RBLOCK
    (21) term -> . term TIMES factor
    (22) term -> . term DIVIDE factor
    (23) term -> . factor
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    IF              shift and go to state 4
    WHILE           shift and go to state 7
    ALERT           shift and go to state 9
    LBLOCK          shift and go to state 11
    NUMBER          shift and go to state 13
    ID              shift and go to state 14
    LPAREN          shift and go to state 5

    sentencias                     shift and go to state 1
    impresion                      shift and go to state 2
    expression                     shift and go to state 3
    logical_expresion              shift and go to state 6
    block                          shift and go to state 8
    term                           shift and go to state 10
    factor                         shift and go to state 12

state 1

    (0) S' -> sentencias .



state 2

    (1) sentencias -> impresion .

    $end            reduce using rule 1 (sentencias -> impresion .)
    RBLOCK          reduce using rule 1 (sentencias -> impresion .)
    ELSE            reduce using rule 1 (sentencias -> impresion .)


state 3

    (2) sentencias -> expression .
    (8) expression -> expression . PLUS term
    (9) expression -> expression . TIMES term
    (10) expression -> expression . DIVIDE term
    (11) expression -> expression . MOD term
    (13) logical_expresion -> expression . GREATER term
    (14) logical_expresion -> expression . LESS term
    (15) logical_expresion -> expression . ISEQUAL term
    (16) logical_expresion -> expression . IS_NOT_IDENTICAL term
    (17) logical_expresion -> expression . IS_IDENTICAL term

    $end            reduce using rule 2 (sentencias -> expression .)
    RBLOCK          reduce using rule 2 (sentencias -> expression .)
    ELSE            reduce using rule 2 (sentencias -> expression .)
    PLUS            shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    MOD             shift and go to state 18
    GREATER         shift and go to state 19
    LESS            shift and go to state 20
    ISEQUAL         shift and go to state 21
    IS_NOT_IDENTICAL shift and go to state 22
    IS_IDENTICAL    shift and go to state 23


state 4

    (3) sentencias -> IF . LPAREN logical_expresion RPAREN
    (4) sentencias -> IF . LPAREN logical_expresion RPAREN sentencias ELSE sentencias

    LPAREN          shift and go to state 24


state 5

    (26) factor -> LPAREN . expression RPAREN
    (8) expression -> . expression PLUS term
    (9) expression -> . expression TIMES term
    (10) expression -> . expression DIVIDE term
    (11) expression -> . expression MOD term
    (12) expression -> . logical_expresion
    (18) expression -> . block
    (20) expression -> . term
    (13) logical_expresion -> . expression GREATER term
    (14) logical_expresion -> . expression LESS term
    (15) logical_expresion -> . expression ISEQUAL term
    (16) logical_expresion -> . expression IS_NOT_IDENTICAL term
    (17) logical_expresion -> . expression IS_IDENTICAL term
    (19) block -> . LBLOCK sentencias RBLOCK
    (21) term -> . term TIMES factor
    (22) term -> . term DIVIDE factor
    (23) term -> . factor
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    LBLOCK          shift and go to state 11
    NUMBER          shift and go to state 13
    ID              shift and go to state 14
    LPAREN          shift and go to state 5

    expression                     shift and go to state 25
    term                           shift and go to state 10
    logical_expresion              shift and go to state 6
    block                          shift and go to state 8
    factor                         shift and go to state 12

state 6

    (12) expression -> logical_expresion .

    PLUS            reduce using rule 12 (expression -> logical_expresion .)
    TIMES           reduce using rule 12 (expression -> logical_expresion .)
    DIVIDE          reduce using rule 12 (expression -> logical_expresion .)
    MOD             reduce using rule 12 (expression -> logical_expresion .)
    GREATER         reduce using rule 12 (expression -> logical_expresion .)
    LESS            reduce using rule 12 (expression -> logical_expresion .)
    ISEQUAL         reduce using rule 12 (expression -> logical_expresion .)
    IS_NOT_IDENTICAL reduce using rule 12 (expression -> logical_expresion .)
    IS_IDENTICAL    reduce using rule 12 (expression -> logical_expresion .)
    $end            reduce using rule 12 (expression -> logical_expresion .)
    RPAREN          reduce using rule 12 (expression -> logical_expresion .)
    RBLOCK          reduce using rule 12 (expression -> logical_expresion .)
    ELSE            reduce using rule 12 (expression -> logical_expresion .)


state 7

    (5) sentencias -> WHILE . LPAREN logical_expresion RPAREN block

    LPAREN          shift and go to state 26


state 8

    (18) expression -> block .

    PLUS            reduce using rule 18 (expression -> block .)
    TIMES           reduce using rule 18 (expression -> block .)
    DIVIDE          reduce using rule 18 (expression -> block .)
    MOD             reduce using rule 18 (expression -> block .)
    GREATER         reduce using rule 18 (expression -> block .)
    LESS            reduce using rule 18 (expression -> block .)
    ISEQUAL         reduce using rule 18 (expression -> block .)
    IS_NOT_IDENTICAL reduce using rule 18 (expression -> block .)
    IS_IDENTICAL    reduce using rule 18 (expression -> block .)
    $end            reduce using rule 18 (expression -> block .)
    RPAREN          reduce using rule 18 (expression -> block .)
    RBLOCK          reduce using rule 18 (expression -> block .)
    ELSE            reduce using rule 18 (expression -> block .)


state 9

    (6) impresion -> ALERT . LPAREN expression RPAREN
    (7) impresion -> ALERT . LPAREN RPAREN

    LPAREN          shift and go to state 27


state 10

    (20) expression -> term .
    (21) term -> term . TIMES factor
    (22) term -> term . DIVIDE factor

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    PLUS            reduce using rule 20 (expression -> term .)
    MOD             reduce using rule 20 (expression -> term .)
    GREATER         reduce using rule 20 (expression -> term .)
    LESS            reduce using rule 20 (expression -> term .)
    ISEQUAL         reduce using rule 20 (expression -> term .)
    IS_NOT_IDENTICAL reduce using rule 20 (expression -> term .)
    IS_IDENTICAL    reduce using rule 20 (expression -> term .)
    $end            reduce using rule 20 (expression -> term .)
    RPAREN          reduce using rule 20 (expression -> term .)
    RBLOCK          reduce using rule 20 (expression -> term .)
    ELSE            reduce using rule 20 (expression -> term .)
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29

  ! TIMES           [ reduce using rule 20 (expression -> term .) ]
  ! DIVIDE          [ reduce using rule 20 (expression -> term .) ]


state 11

    (19) block -> LBLOCK . sentencias RBLOCK
    (1) sentencias -> . impresion
    (2) sentencias -> . expression
    (3) sentencias -> . IF LPAREN logical_expresion RPAREN
    (4) sentencias -> . IF LPAREN logical_expresion RPAREN sentencias ELSE sentencias
    (5) sentencias -> . WHILE LPAREN logical_expresion RPAREN block
    (6) impresion -> . ALERT LPAREN expression RPAREN
    (7) impresion -> . ALERT LPAREN RPAREN
    (8) expression -> . expression PLUS term
    (9) expression -> . expression TIMES term
    (10) expression -> . expression DIVIDE term
    (11) expression -> . expression MOD term
    (12) expression -> . logical_expresion
    (18) expression -> . block
    (20) expression -> . term
    (13) logical_expresion -> . expression GREATER term
    (14) logical_expresion -> . expression LESS term
    (15) logical_expresion -> . expression ISEQUAL term
    (16) logical_expresion -> . expression IS_NOT_IDENTICAL term
    (17) logical_expresion -> . expression IS_IDENTICAL term
    (19) block -> . LBLOCK sentencias RBLOCK
    (21) term -> . term TIMES factor
    (22) term -> . term DIVIDE factor
    (23) term -> . factor
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    IF              shift and go to state 4
    WHILE           shift and go to state 7
    ALERT           shift and go to state 9
    LBLOCK          shift and go to state 11
    NUMBER          shift and go to state 13
    ID              shift and go to state 14
    LPAREN          shift and go to state 5

    sentencias                     shift and go to state 30
    impresion                      shift and go to state 2
    expression                     shift and go to state 3
    logical_expresion              shift and go to state 6
    block                          shift and go to state 8
    term                           shift and go to state 10
    factor                         shift and go to state 12

state 12

    (23) term -> factor .

    TIMES           reduce using rule 23 (term -> factor .)
    DIVIDE          reduce using rule 23 (term -> factor .)
    PLUS            reduce using rule 23 (term -> factor .)
    MOD             reduce using rule 23 (term -> factor .)
    GREATER         reduce using rule 23 (term -> factor .)
    LESS            reduce using rule 23 (term -> factor .)
    ISEQUAL         reduce using rule 23 (term -> factor .)
    IS_NOT_IDENTICAL reduce using rule 23 (term -> factor .)
    IS_IDENTICAL    reduce using rule 23 (term -> factor .)
    $end            reduce using rule 23 (term -> factor .)
    RPAREN          reduce using rule 23 (term -> factor .)
    RBLOCK          reduce using rule 23 (term -> factor .)
    ELSE            reduce using rule 23 (term -> factor .)


state 13

    (24) factor -> NUMBER .

    TIMES           reduce using rule 24 (factor -> NUMBER .)
    DIVIDE          reduce using rule 24 (factor -> NUMBER .)
    PLUS            reduce using rule 24 (factor -> NUMBER .)
    MOD             reduce using rule 24 (factor -> NUMBER .)
    GREATER         reduce using rule 24 (factor -> NUMBER .)
    LESS            reduce using rule 24 (factor -> NUMBER .)
    ISEQUAL         reduce using rule 24 (factor -> NUMBER .)
    IS_NOT_IDENTICAL reduce using rule 24 (factor -> NUMBER .)
    IS_IDENTICAL    reduce using rule 24 (factor -> NUMBER .)
    $end            reduce using rule 24 (factor -> NUMBER .)
    RPAREN          reduce using rule 24 (factor -> NUMBER .)
    RBLOCK          reduce using rule 24 (factor -> NUMBER .)
    ELSE            reduce using rule 24 (factor -> NUMBER .)


state 14

    (25) factor -> ID .

    TIMES           reduce using rule 25 (factor -> ID .)
    DIVIDE          reduce using rule 25 (factor -> ID .)
    PLUS            reduce using rule 25 (factor -> ID .)
    MOD             reduce using rule 25 (factor -> ID .)
    GREATER         reduce using rule 25 (factor -> ID .)
    LESS            reduce using rule 25 (factor -> ID .)
    ISEQUAL         reduce using rule 25 (factor -> ID .)
    IS_NOT_IDENTICAL reduce using rule 25 (factor -> ID .)
    IS_IDENTICAL    reduce using rule 25 (factor -> ID .)
    $end            reduce using rule 25 (factor -> ID .)
    RPAREN          reduce using rule 25 (factor -> ID .)
    RBLOCK          reduce using rule 25 (factor -> ID .)
    ELSE            reduce using rule 25 (factor -> ID .)


state 15

    (8) expression -> expression PLUS . term
    (21) term -> . term TIMES factor
    (22) term -> . term DIVIDE factor
    (23) term -> . factor
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 13
    ID              shift and go to state 14
    LPAREN          shift and go to state 5

    term                           shift and go to state 31
    factor                         shift and go to state 12

state 16

    (9) expression -> expression TIMES . term
    (21) term -> . term TIMES factor
    (22) term -> . term DIVIDE factor
    (23) term -> . factor
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 13
    ID              shift and go to state 14
    LPAREN          shift and go to state 5

    term                           shift and go to state 32
    factor                         shift and go to state 12

state 17

    (10) expression -> expression DIVIDE . term
    (21) term -> . term TIMES factor
    (22) term -> . term DIVIDE factor
    (23) term -> . factor
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 13
    ID              shift and go to state 14
    LPAREN          shift and go to state 5

    term                           shift and go to state 33
    factor                         shift and go to state 12

state 18

    (11) expression -> expression MOD . term
    (21) term -> . term TIMES factor
    (22) term -> . term DIVIDE factor
    (23) term -> . factor
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 13
    ID              shift and go to state 14
    LPAREN          shift and go to state 5

    term                           shift and go to state 34
    factor                         shift and go to state 12

state 19

    (13) logical_expresion -> expression GREATER . term
    (21) term -> . term TIMES factor
    (22) term -> . term DIVIDE factor
    (23) term -> . factor
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 13
    ID              shift and go to state 14
    LPAREN          shift and go to state 5

    term                           shift and go to state 35
    factor                         shift and go to state 12

state 20

    (14) logical_expresion -> expression LESS . term
    (21) term -> . term TIMES factor
    (22) term -> . term DIVIDE factor
    (23) term -> . factor
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 13
    ID              shift and go to state 14
    LPAREN          shift and go to state 5

    term                           shift and go to state 36
    factor                         shift and go to state 12

state 21

    (15) logical_expresion -> expression ISEQUAL . term
    (21) term -> . term TIMES factor
    (22) term -> . term DIVIDE factor
    (23) term -> . factor
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 13
    ID              shift and go to state 14
    LPAREN          shift and go to state 5

    term                           shift and go to state 37
    factor                         shift and go to state 12

state 22

    (16) logical_expresion -> expression IS_NOT_IDENTICAL . term
    (21) term -> . term TIMES factor
    (22) term -> . term DIVIDE factor
    (23) term -> . factor
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 13
    ID              shift and go to state 14
    LPAREN          shift and go to state 5

    term                           shift and go to state 38
    factor                         shift and go to state 12

state 23

    (17) logical_expresion -> expression IS_IDENTICAL . term
    (21) term -> . term TIMES factor
    (22) term -> . term DIVIDE factor
    (23) term -> . factor
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 13
    ID              shift and go to state 14
    LPAREN          shift and go to state 5

    term                           shift and go to state 39
    factor                         shift and go to state 12

state 24

    (3) sentencias -> IF LPAREN . logical_expresion RPAREN
    (4) sentencias -> IF LPAREN . logical_expresion RPAREN sentencias ELSE sentencias
    (13) logical_expresion -> . expression GREATER term
    (14) logical_expresion -> . expression LESS term
    (15) logical_expresion -> . expression ISEQUAL term
    (16) logical_expresion -> . expression IS_NOT_IDENTICAL term
    (17) logical_expresion -> . expression IS_IDENTICAL term
    (8) expression -> . expression PLUS term
    (9) expression -> . expression TIMES term
    (10) expression -> . expression DIVIDE term
    (11) expression -> . expression MOD term
    (12) expression -> . logical_expresion
    (18) expression -> . block
    (20) expression -> . term
    (19) block -> . LBLOCK sentencias RBLOCK
    (21) term -> . term TIMES factor
    (22) term -> . term DIVIDE factor
    (23) term -> . factor
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    LBLOCK          shift and go to state 11
    NUMBER          shift and go to state 13
    ID              shift and go to state 14
    LPAREN          shift and go to state 5

    logical_expresion              shift and go to state 40
    expression                     shift and go to state 41
    term                           shift and go to state 10
    block                          shift and go to state 8
    factor                         shift and go to state 12

state 25

    (26) factor -> LPAREN expression . RPAREN
    (8) expression -> expression . PLUS term
    (9) expression -> expression . TIMES term
    (10) expression -> expression . DIVIDE term
    (11) expression -> expression . MOD term
    (13) logical_expresion -> expression . GREATER term
    (14) logical_expresion -> expression . LESS term
    (15) logical_expresion -> expression . ISEQUAL term
    (16) logical_expresion -> expression . IS_NOT_IDENTICAL term
    (17) logical_expresion -> expression . IS_IDENTICAL term

    RPAREN          shift and go to state 42
    PLUS            shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    MOD             shift and go to state 18
    GREATER         shift and go to state 19
    LESS            shift and go to state 20
    ISEQUAL         shift and go to state 21
    IS_NOT_IDENTICAL shift and go to state 22
    IS_IDENTICAL    shift and go to state 23


state 26

    (5) sentencias -> WHILE LPAREN . logical_expresion RPAREN block
    (13) logical_expresion -> . expression GREATER term
    (14) logical_expresion -> . expression LESS term
    (15) logical_expresion -> . expression ISEQUAL term
    (16) logical_expresion -> . expression IS_NOT_IDENTICAL term
    (17) logical_expresion -> . expression IS_IDENTICAL term
    (8) expression -> . expression PLUS term
    (9) expression -> . expression TIMES term
    (10) expression -> . expression DIVIDE term
    (11) expression -> . expression MOD term
    (12) expression -> . logical_expresion
    (18) expression -> . block
    (20) expression -> . term
    (19) block -> . LBLOCK sentencias RBLOCK
    (21) term -> . term TIMES factor
    (22) term -> . term DIVIDE factor
    (23) term -> . factor
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    LBLOCK          shift and go to state 11
    NUMBER          shift and go to state 13
    ID              shift and go to state 14
    LPAREN          shift and go to state 5

    logical_expresion              shift and go to state 43
    block                          shift and go to state 8
    expression                     shift and go to state 41
    term                           shift and go to state 10
    factor                         shift and go to state 12

state 27

    (6) impresion -> ALERT LPAREN . expression RPAREN
    (7) impresion -> ALERT LPAREN . RPAREN
    (8) expression -> . expression PLUS term
    (9) expression -> . expression TIMES term
    (10) expression -> . expression DIVIDE term
    (11) expression -> . expression MOD term
    (12) expression -> . logical_expresion
    (18) expression -> . block
    (20) expression -> . term
    (13) logical_expresion -> . expression GREATER term
    (14) logical_expresion -> . expression LESS term
    (15) logical_expresion -> . expression ISEQUAL term
    (16) logical_expresion -> . expression IS_NOT_IDENTICAL term
    (17) logical_expresion -> . expression IS_IDENTICAL term
    (19) block -> . LBLOCK sentencias RBLOCK
    (21) term -> . term TIMES factor
    (22) term -> . term DIVIDE factor
    (23) term -> . factor
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    RPAREN          shift and go to state 45
    LBLOCK          shift and go to state 11
    NUMBER          shift and go to state 13
    ID              shift and go to state 14
    LPAREN          shift and go to state 5

    expression                     shift and go to state 44
    term                           shift and go to state 10
    logical_expresion              shift and go to state 6
    block                          shift and go to state 8
    factor                         shift and go to state 12

state 28

    (21) term -> term TIMES . factor
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 13
    ID              shift and go to state 14
    LPAREN          shift and go to state 5

    factor                         shift and go to state 46

state 29

    (22) term -> term DIVIDE . factor
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 13
    ID              shift and go to state 14
    LPAREN          shift and go to state 5

    factor                         shift and go to state 47

state 30

    (19) block -> LBLOCK sentencias . RBLOCK

    RBLOCK          shift and go to state 48


state 31

    (8) expression -> expression PLUS term .
    (21) term -> term . TIMES factor
    (22) term -> term . DIVIDE factor

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    PLUS            reduce using rule 8 (expression -> expression PLUS term .)
    MOD             reduce using rule 8 (expression -> expression PLUS term .)
    GREATER         reduce using rule 8 (expression -> expression PLUS term .)
    LESS            reduce using rule 8 (expression -> expression PLUS term .)
    ISEQUAL         reduce using rule 8 (expression -> expression PLUS term .)
    IS_NOT_IDENTICAL reduce using rule 8 (expression -> expression PLUS term .)
    IS_IDENTICAL    reduce using rule 8 (expression -> expression PLUS term .)
    $end            reduce using rule 8 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 8 (expression -> expression PLUS term .)
    RBLOCK          reduce using rule 8 (expression -> expression PLUS term .)
    ELSE            reduce using rule 8 (expression -> expression PLUS term .)
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29

  ! TIMES           [ reduce using rule 8 (expression -> expression PLUS term .) ]
  ! DIVIDE          [ reduce using rule 8 (expression -> expression PLUS term .) ]


state 32

    (9) expression -> expression TIMES term .
    (21) term -> term . TIMES factor
    (22) term -> term . DIVIDE factor

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    PLUS            reduce using rule 9 (expression -> expression TIMES term .)
    MOD             reduce using rule 9 (expression -> expression TIMES term .)
    GREATER         reduce using rule 9 (expression -> expression TIMES term .)
    LESS            reduce using rule 9 (expression -> expression TIMES term .)
    ISEQUAL         reduce using rule 9 (expression -> expression TIMES term .)
    IS_NOT_IDENTICAL reduce using rule 9 (expression -> expression TIMES term .)
    IS_IDENTICAL    reduce using rule 9 (expression -> expression TIMES term .)
    $end            reduce using rule 9 (expression -> expression TIMES term .)
    RPAREN          reduce using rule 9 (expression -> expression TIMES term .)
    RBLOCK          reduce using rule 9 (expression -> expression TIMES term .)
    ELSE            reduce using rule 9 (expression -> expression TIMES term .)
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29

  ! TIMES           [ reduce using rule 9 (expression -> expression TIMES term .) ]
  ! DIVIDE          [ reduce using rule 9 (expression -> expression TIMES term .) ]


state 33

    (10) expression -> expression DIVIDE term .
    (21) term -> term . TIMES factor
    (22) term -> term . DIVIDE factor

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    PLUS            reduce using rule 10 (expression -> expression DIVIDE term .)
    MOD             reduce using rule 10 (expression -> expression DIVIDE term .)
    GREATER         reduce using rule 10 (expression -> expression DIVIDE term .)
    LESS            reduce using rule 10 (expression -> expression DIVIDE term .)
    ISEQUAL         reduce using rule 10 (expression -> expression DIVIDE term .)
    IS_NOT_IDENTICAL reduce using rule 10 (expression -> expression DIVIDE term .)
    IS_IDENTICAL    reduce using rule 10 (expression -> expression DIVIDE term .)
    $end            reduce using rule 10 (expression -> expression DIVIDE term .)
    RPAREN          reduce using rule 10 (expression -> expression DIVIDE term .)
    RBLOCK          reduce using rule 10 (expression -> expression DIVIDE term .)
    ELSE            reduce using rule 10 (expression -> expression DIVIDE term .)
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29

  ! TIMES           [ reduce using rule 10 (expression -> expression DIVIDE term .) ]
  ! DIVIDE          [ reduce using rule 10 (expression -> expression DIVIDE term .) ]


state 34

    (11) expression -> expression MOD term .
    (21) term -> term . TIMES factor
    (22) term -> term . DIVIDE factor

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    PLUS            reduce using rule 11 (expression -> expression MOD term .)
    MOD             reduce using rule 11 (expression -> expression MOD term .)
    GREATER         reduce using rule 11 (expression -> expression MOD term .)
    LESS            reduce using rule 11 (expression -> expression MOD term .)
    ISEQUAL         reduce using rule 11 (expression -> expression MOD term .)
    IS_NOT_IDENTICAL reduce using rule 11 (expression -> expression MOD term .)
    IS_IDENTICAL    reduce using rule 11 (expression -> expression MOD term .)
    $end            reduce using rule 11 (expression -> expression MOD term .)
    RPAREN          reduce using rule 11 (expression -> expression MOD term .)
    RBLOCK          reduce using rule 11 (expression -> expression MOD term .)
    ELSE            reduce using rule 11 (expression -> expression MOD term .)
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29

  ! TIMES           [ reduce using rule 11 (expression -> expression MOD term .) ]
  ! DIVIDE          [ reduce using rule 11 (expression -> expression MOD term .) ]


state 35

    (13) logical_expresion -> expression GREATER term .
    (21) term -> term . TIMES factor
    (22) term -> term . DIVIDE factor

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    PLUS            reduce using rule 13 (logical_expresion -> expression GREATER term .)
    MOD             reduce using rule 13 (logical_expresion -> expression GREATER term .)
    GREATER         reduce using rule 13 (logical_expresion -> expression GREATER term .)
    LESS            reduce using rule 13 (logical_expresion -> expression GREATER term .)
    ISEQUAL         reduce using rule 13 (logical_expresion -> expression GREATER term .)
    IS_NOT_IDENTICAL reduce using rule 13 (logical_expresion -> expression GREATER term .)
    IS_IDENTICAL    reduce using rule 13 (logical_expresion -> expression GREATER term .)
    $end            reduce using rule 13 (logical_expresion -> expression GREATER term .)
    RPAREN          reduce using rule 13 (logical_expresion -> expression GREATER term .)
    RBLOCK          reduce using rule 13 (logical_expresion -> expression GREATER term .)
    ELSE            reduce using rule 13 (logical_expresion -> expression GREATER term .)
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29

  ! TIMES           [ reduce using rule 13 (logical_expresion -> expression GREATER term .) ]
  ! DIVIDE          [ reduce using rule 13 (logical_expresion -> expression GREATER term .) ]


state 36

    (14) logical_expresion -> expression LESS term .
    (21) term -> term . TIMES factor
    (22) term -> term . DIVIDE factor

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    PLUS            reduce using rule 14 (logical_expresion -> expression LESS term .)
    MOD             reduce using rule 14 (logical_expresion -> expression LESS term .)
    GREATER         reduce using rule 14 (logical_expresion -> expression LESS term .)
    LESS            reduce using rule 14 (logical_expresion -> expression LESS term .)
    ISEQUAL         reduce using rule 14 (logical_expresion -> expression LESS term .)
    IS_NOT_IDENTICAL reduce using rule 14 (logical_expresion -> expression LESS term .)
    IS_IDENTICAL    reduce using rule 14 (logical_expresion -> expression LESS term .)
    $end            reduce using rule 14 (logical_expresion -> expression LESS term .)
    RPAREN          reduce using rule 14 (logical_expresion -> expression LESS term .)
    RBLOCK          reduce using rule 14 (logical_expresion -> expression LESS term .)
    ELSE            reduce using rule 14 (logical_expresion -> expression LESS term .)
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29

  ! TIMES           [ reduce using rule 14 (logical_expresion -> expression LESS term .) ]
  ! DIVIDE          [ reduce using rule 14 (logical_expresion -> expression LESS term .) ]


state 37

    (15) logical_expresion -> expression ISEQUAL term .
    (21) term -> term . TIMES factor
    (22) term -> term . DIVIDE factor

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    PLUS            reduce using rule 15 (logical_expresion -> expression ISEQUAL term .)
    MOD             reduce using rule 15 (logical_expresion -> expression ISEQUAL term .)
    GREATER         reduce using rule 15 (logical_expresion -> expression ISEQUAL term .)
    LESS            reduce using rule 15 (logical_expresion -> expression ISEQUAL term .)
    ISEQUAL         reduce using rule 15 (logical_expresion -> expression ISEQUAL term .)
    IS_NOT_IDENTICAL reduce using rule 15 (logical_expresion -> expression ISEQUAL term .)
    IS_IDENTICAL    reduce using rule 15 (logical_expresion -> expression ISEQUAL term .)
    $end            reduce using rule 15 (logical_expresion -> expression ISEQUAL term .)
    RPAREN          reduce using rule 15 (logical_expresion -> expression ISEQUAL term .)
    RBLOCK          reduce using rule 15 (logical_expresion -> expression ISEQUAL term .)
    ELSE            reduce using rule 15 (logical_expresion -> expression ISEQUAL term .)
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29

  ! TIMES           [ reduce using rule 15 (logical_expresion -> expression ISEQUAL term .) ]
  ! DIVIDE          [ reduce using rule 15 (logical_expresion -> expression ISEQUAL term .) ]


state 38

    (16) logical_expresion -> expression IS_NOT_IDENTICAL term .
    (21) term -> term . TIMES factor
    (22) term -> term . DIVIDE factor

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    PLUS            reduce using rule 16 (logical_expresion -> expression IS_NOT_IDENTICAL term .)
    MOD             reduce using rule 16 (logical_expresion -> expression IS_NOT_IDENTICAL term .)
    GREATER         reduce using rule 16 (logical_expresion -> expression IS_NOT_IDENTICAL term .)
    LESS            reduce using rule 16 (logical_expresion -> expression IS_NOT_IDENTICAL term .)
    ISEQUAL         reduce using rule 16 (logical_expresion -> expression IS_NOT_IDENTICAL term .)
    IS_NOT_IDENTICAL reduce using rule 16 (logical_expresion -> expression IS_NOT_IDENTICAL term .)
    IS_IDENTICAL    reduce using rule 16 (logical_expresion -> expression IS_NOT_IDENTICAL term .)
    $end            reduce using rule 16 (logical_expresion -> expression IS_NOT_IDENTICAL term .)
    RPAREN          reduce using rule 16 (logical_expresion -> expression IS_NOT_IDENTICAL term .)
    RBLOCK          reduce using rule 16 (logical_expresion -> expression IS_NOT_IDENTICAL term .)
    ELSE            reduce using rule 16 (logical_expresion -> expression IS_NOT_IDENTICAL term .)
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29

  ! TIMES           [ reduce using rule 16 (logical_expresion -> expression IS_NOT_IDENTICAL term .) ]
  ! DIVIDE          [ reduce using rule 16 (logical_expresion -> expression IS_NOT_IDENTICAL term .) ]


state 39

    (17) logical_expresion -> expression IS_IDENTICAL term .
    (21) term -> term . TIMES factor
    (22) term -> term . DIVIDE factor

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    PLUS            reduce using rule 17 (logical_expresion -> expression IS_IDENTICAL term .)
    MOD             reduce using rule 17 (logical_expresion -> expression IS_IDENTICAL term .)
    GREATER         reduce using rule 17 (logical_expresion -> expression IS_IDENTICAL term .)
    LESS            reduce using rule 17 (logical_expresion -> expression IS_IDENTICAL term .)
    ISEQUAL         reduce using rule 17 (logical_expresion -> expression IS_IDENTICAL term .)
    IS_NOT_IDENTICAL reduce using rule 17 (logical_expresion -> expression IS_IDENTICAL term .)
    IS_IDENTICAL    reduce using rule 17 (logical_expresion -> expression IS_IDENTICAL term .)
    $end            reduce using rule 17 (logical_expresion -> expression IS_IDENTICAL term .)
    RPAREN          reduce using rule 17 (logical_expresion -> expression IS_IDENTICAL term .)
    RBLOCK          reduce using rule 17 (logical_expresion -> expression IS_IDENTICAL term .)
    ELSE            reduce using rule 17 (logical_expresion -> expression IS_IDENTICAL term .)
    TIMES           shift and go to state 28
    DIVIDE          shift and go to state 29

  ! TIMES           [ reduce using rule 17 (logical_expresion -> expression IS_IDENTICAL term .) ]
  ! DIVIDE          [ reduce using rule 17 (logical_expresion -> expression IS_IDENTICAL term .) ]


state 40

    (3) sentencias -> IF LPAREN logical_expresion . RPAREN
    (4) sentencias -> IF LPAREN logical_expresion . RPAREN sentencias ELSE sentencias
    (12) expression -> logical_expresion .

    RPAREN          shift and go to state 49
    GREATER         reduce using rule 12 (expression -> logical_expresion .)
    LESS            reduce using rule 12 (expression -> logical_expresion .)
    ISEQUAL         reduce using rule 12 (expression -> logical_expresion .)
    IS_NOT_IDENTICAL reduce using rule 12 (expression -> logical_expresion .)
    IS_IDENTICAL    reduce using rule 12 (expression -> logical_expresion .)
    PLUS            reduce using rule 12 (expression -> logical_expresion .)
    TIMES           reduce using rule 12 (expression -> logical_expresion .)
    DIVIDE          reduce using rule 12 (expression -> logical_expresion .)
    MOD             reduce using rule 12 (expression -> logical_expresion .)


state 41

    (13) logical_expresion -> expression . GREATER term
    (14) logical_expresion -> expression . LESS term
    (15) logical_expresion -> expression . ISEQUAL term
    (16) logical_expresion -> expression . IS_NOT_IDENTICAL term
    (17) logical_expresion -> expression . IS_IDENTICAL term
    (8) expression -> expression . PLUS term
    (9) expression -> expression . TIMES term
    (10) expression -> expression . DIVIDE term
    (11) expression -> expression . MOD term

    GREATER         shift and go to state 19
    LESS            shift and go to state 20
    ISEQUAL         shift and go to state 21
    IS_NOT_IDENTICAL shift and go to state 22
    IS_IDENTICAL    shift and go to state 23
    PLUS            shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    MOD             shift and go to state 18


state 42

    (26) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    MOD             reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    LESS            reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    ISEQUAL         reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    IS_IDENTICAL    reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    $end            reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    RBLOCK          reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 26 (factor -> LPAREN expression RPAREN .)


state 43

    (5) sentencias -> WHILE LPAREN logical_expresion . RPAREN block
    (12) expression -> logical_expresion .

    RPAREN          shift and go to state 50
    GREATER         reduce using rule 12 (expression -> logical_expresion .)
    LESS            reduce using rule 12 (expression -> logical_expresion .)
    ISEQUAL         reduce using rule 12 (expression -> logical_expresion .)
    IS_NOT_IDENTICAL reduce using rule 12 (expression -> logical_expresion .)
    IS_IDENTICAL    reduce using rule 12 (expression -> logical_expresion .)
    PLUS            reduce using rule 12 (expression -> logical_expresion .)
    TIMES           reduce using rule 12 (expression -> logical_expresion .)
    DIVIDE          reduce using rule 12 (expression -> logical_expresion .)
    MOD             reduce using rule 12 (expression -> logical_expresion .)


state 44

    (6) impresion -> ALERT LPAREN expression . RPAREN
    (8) expression -> expression . PLUS term
    (9) expression -> expression . TIMES term
    (10) expression -> expression . DIVIDE term
    (11) expression -> expression . MOD term
    (13) logical_expresion -> expression . GREATER term
    (14) logical_expresion -> expression . LESS term
    (15) logical_expresion -> expression . ISEQUAL term
    (16) logical_expresion -> expression . IS_NOT_IDENTICAL term
    (17) logical_expresion -> expression . IS_IDENTICAL term

    RPAREN          shift and go to state 51
    PLUS            shift and go to state 15
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17
    MOD             shift and go to state 18
    GREATER         shift and go to state 19
    LESS            shift and go to state 20
    ISEQUAL         shift and go to state 21
    IS_NOT_IDENTICAL shift and go to state 22
    IS_IDENTICAL    shift and go to state 23


state 45

    (7) impresion -> ALERT LPAREN RPAREN .

    $end            reduce using rule 7 (impresion -> ALERT LPAREN RPAREN .)
    RBLOCK          reduce using rule 7 (impresion -> ALERT LPAREN RPAREN .)
    ELSE            reduce using rule 7 (impresion -> ALERT LPAREN RPAREN .)


state 46

    (21) term -> term TIMES factor .

    TIMES           reduce using rule 21 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 21 (term -> term TIMES factor .)
    PLUS            reduce using rule 21 (term -> term TIMES factor .)
    MOD             reduce using rule 21 (term -> term TIMES factor .)
    GREATER         reduce using rule 21 (term -> term TIMES factor .)
    LESS            reduce using rule 21 (term -> term TIMES factor .)
    ISEQUAL         reduce using rule 21 (term -> term TIMES factor .)
    IS_NOT_IDENTICAL reduce using rule 21 (term -> term TIMES factor .)
    IS_IDENTICAL    reduce using rule 21 (term -> term TIMES factor .)
    $end            reduce using rule 21 (term -> term TIMES factor .)
    RPAREN          reduce using rule 21 (term -> term TIMES factor .)
    RBLOCK          reduce using rule 21 (term -> term TIMES factor .)
    ELSE            reduce using rule 21 (term -> term TIMES factor .)


state 47

    (22) term -> term DIVIDE factor .

    TIMES           reduce using rule 22 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 22 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 22 (term -> term DIVIDE factor .)
    MOD             reduce using rule 22 (term -> term DIVIDE factor .)
    GREATER         reduce using rule 22 (term -> term DIVIDE factor .)
    LESS            reduce using rule 22 (term -> term DIVIDE factor .)
    ISEQUAL         reduce using rule 22 (term -> term DIVIDE factor .)
    IS_NOT_IDENTICAL reduce using rule 22 (term -> term DIVIDE factor .)
    IS_IDENTICAL    reduce using rule 22 (term -> term DIVIDE factor .)
    $end            reduce using rule 22 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 22 (term -> term DIVIDE factor .)
    RBLOCK          reduce using rule 22 (term -> term DIVIDE factor .)
    ELSE            reduce using rule 22 (term -> term DIVIDE factor .)


state 48

    (19) block -> LBLOCK sentencias RBLOCK .

    PLUS            reduce using rule 19 (block -> LBLOCK sentencias RBLOCK .)
    TIMES           reduce using rule 19 (block -> LBLOCK sentencias RBLOCK .)
    DIVIDE          reduce using rule 19 (block -> LBLOCK sentencias RBLOCK .)
    MOD             reduce using rule 19 (block -> LBLOCK sentencias RBLOCK .)
    GREATER         reduce using rule 19 (block -> LBLOCK sentencias RBLOCK .)
    LESS            reduce using rule 19 (block -> LBLOCK sentencias RBLOCK .)
    ISEQUAL         reduce using rule 19 (block -> LBLOCK sentencias RBLOCK .)
    IS_NOT_IDENTICAL reduce using rule 19 (block -> LBLOCK sentencias RBLOCK .)
    IS_IDENTICAL    reduce using rule 19 (block -> LBLOCK sentencias RBLOCK .)
    $end            reduce using rule 19 (block -> LBLOCK sentencias RBLOCK .)
    RPAREN          reduce using rule 19 (block -> LBLOCK sentencias RBLOCK .)
    RBLOCK          reduce using rule 19 (block -> LBLOCK sentencias RBLOCK .)
    ELSE            reduce using rule 19 (block -> LBLOCK sentencias RBLOCK .)


state 49

    (3) sentencias -> IF LPAREN logical_expresion RPAREN .
    (4) sentencias -> IF LPAREN logical_expresion RPAREN . sentencias ELSE sentencias
    (1) sentencias -> . impresion
    (2) sentencias -> . expression
    (3) sentencias -> . IF LPAREN logical_expresion RPAREN
    (4) sentencias -> . IF LPAREN logical_expresion RPAREN sentencias ELSE sentencias
    (5) sentencias -> . WHILE LPAREN logical_expresion RPAREN block
    (6) impresion -> . ALERT LPAREN expression RPAREN
    (7) impresion -> . ALERT LPAREN RPAREN
    (8) expression -> . expression PLUS term
    (9) expression -> . expression TIMES term
    (10) expression -> . expression DIVIDE term
    (11) expression -> . expression MOD term
    (12) expression -> . logical_expresion
    (18) expression -> . block
    (20) expression -> . term
    (13) logical_expresion -> . expression GREATER term
    (14) logical_expresion -> . expression LESS term
    (15) logical_expresion -> . expression ISEQUAL term
    (16) logical_expresion -> . expression IS_NOT_IDENTICAL term
    (17) logical_expresion -> . expression IS_IDENTICAL term
    (19) block -> . LBLOCK sentencias RBLOCK
    (21) term -> . term TIMES factor
    (22) term -> . term DIVIDE factor
    (23) term -> . factor
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    $end            reduce using rule 3 (sentencias -> IF LPAREN logical_expresion RPAREN .)
    RBLOCK          reduce using rule 3 (sentencias -> IF LPAREN logical_expresion RPAREN .)
    ELSE            reduce using rule 3 (sentencias -> IF LPAREN logical_expresion RPAREN .)
    IF              shift and go to state 4
    WHILE           shift and go to state 7
    ALERT           shift and go to state 9
    LBLOCK          shift and go to state 11
    NUMBER          shift and go to state 13
    ID              shift and go to state 14
    LPAREN          shift and go to state 5

    logical_expresion              shift and go to state 6
    sentencias                     shift and go to state 52
    impresion                      shift and go to state 2
    expression                     shift and go to state 3
    block                          shift and go to state 8
    term                           shift and go to state 10
    factor                         shift and go to state 12

state 50

    (5) sentencias -> WHILE LPAREN logical_expresion RPAREN . block
    (19) block -> . LBLOCK sentencias RBLOCK

    LBLOCK          shift and go to state 11

    block                          shift and go to state 53

state 51

    (6) impresion -> ALERT LPAREN expression RPAREN .

    $end            reduce using rule 6 (impresion -> ALERT LPAREN expression RPAREN .)
    RBLOCK          reduce using rule 6 (impresion -> ALERT LPAREN expression RPAREN .)
    ELSE            reduce using rule 6 (impresion -> ALERT LPAREN expression RPAREN .)


state 52

    (4) sentencias -> IF LPAREN logical_expresion RPAREN sentencias . ELSE sentencias

    ELSE            shift and go to state 54


state 53

    (5) sentencias -> WHILE LPAREN logical_expresion RPAREN block .

    $end            reduce using rule 5 (sentencias -> WHILE LPAREN logical_expresion RPAREN block .)
    RBLOCK          reduce using rule 5 (sentencias -> WHILE LPAREN logical_expresion RPAREN block .)
    ELSE            reduce using rule 5 (sentencias -> WHILE LPAREN logical_expresion RPAREN block .)


state 54

    (4) sentencias -> IF LPAREN logical_expresion RPAREN sentencias ELSE . sentencias
    (1) sentencias -> . impresion
    (2) sentencias -> . expression
    (3) sentencias -> . IF LPAREN logical_expresion RPAREN
    (4) sentencias -> . IF LPAREN logical_expresion RPAREN sentencias ELSE sentencias
    (5) sentencias -> . WHILE LPAREN logical_expresion RPAREN block
    (6) impresion -> . ALERT LPAREN expression RPAREN
    (7) impresion -> . ALERT LPAREN RPAREN
    (8) expression -> . expression PLUS term
    (9) expression -> . expression TIMES term
    (10) expression -> . expression DIVIDE term
    (11) expression -> . expression MOD term
    (12) expression -> . logical_expresion
    (18) expression -> . block
    (20) expression -> . term
    (13) logical_expresion -> . expression GREATER term
    (14) logical_expresion -> . expression LESS term
    (15) logical_expresion -> . expression ISEQUAL term
    (16) logical_expresion -> . expression IS_NOT_IDENTICAL term
    (17) logical_expresion -> . expression IS_IDENTICAL term
    (19) block -> . LBLOCK sentencias RBLOCK
    (21) term -> . term TIMES factor
    (22) term -> . term DIVIDE factor
    (23) term -> . factor
    (24) factor -> . NUMBER
    (25) factor -> . ID
    (26) factor -> . LPAREN expression RPAREN

    IF              shift and go to state 4
    WHILE           shift and go to state 7
    ALERT           shift and go to state 9
    LBLOCK          shift and go to state 11
    NUMBER          shift and go to state 13
    ID              shift and go to state 14
    LPAREN          shift and go to state 5

    logical_expresion              shift and go to state 6
    sentencias                     shift and go to state 55
    impresion                      shift and go to state 2
    expression                     shift and go to state 3
    block                          shift and go to state 8
    term                           shift and go to state 10
    factor                         shift and go to state 12

state 55

    (4) sentencias -> IF LPAREN logical_expresion RPAREN sentencias ELSE sentencias .

    $end            reduce using rule 4 (sentencias -> IF LPAREN logical_expresion RPAREN sentencias ELSE sentencias .)
    RBLOCK          reduce using rule 4 (sentencias -> IF LPAREN logical_expresion RPAREN sentencias ELSE sentencias .)
    ELSE            reduce using rule 4 (sentencias -> IF LPAREN logical_expresion RPAREN sentencias ELSE sentencias .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for TIMES in state 10 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 10 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 31 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 31 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 32 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 32 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 33 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 33 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 34 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 34 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 35 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 35 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 36 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 36 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 37 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 37 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 38 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 38 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 39 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 39 resolved as shift
