Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DIV_EQUAL
    GET
    HAS
    MINUS_EQUAL
    MOD
    MOD_EQUAL
    MUL_EQUAL
    PLUS_EQUAL
    TWOPOINTS
    WITH
    YIELD

Grammar

Rule 0     S' -> sentencia
Rule 1     sentencia -> callMethods
Rule 2     sentencia -> callFunction COLON
Rule 3     sentencia -> varDeclaration
Rule 4     sentencia -> controlExpression
Rule 5     sentencia -> declareteFunction
Rule 6     sentencia -> assingOperadores COLON
Rule 7     sentencia -> inicializarOp
Rule 8     expression -> conditionalEspecifico
Rule 9     expression -> inicializarOp
Rule 10    asignarID -> ID EQUAL
Rule 11    asignarID -> varType_const ID EQUAL
Rule 12    asignarID -> varType_let ID EQUAL
Rule 13    assingOperadores -> asignarID inicializarOp
Rule 14    controlExpression -> sentencias_if
Rule 15    controlExpression -> sentencias_if_else
Rule 16    controlExpression -> sentencias_while
Rule 17    controlExpression -> impresion
Rule 18    controlExpression -> impresion_vacio
Rule 19    opConditional -> ISEQUAL
Rule 20    opConditional -> IS_NOT_IDENTICAL
Rule 21    opConditional -> IS_IDENTICAL
Rule 22    opConditional -> GREATER
Rule 23    opConditional -> GREATEREQUAL
Rule 24    opConditional -> LESS
Rule 25    opConditional -> LESSEQUAL
Rule 26    opConditional -> boolean
Rule 27    operadorLogical -> AND
Rule 28    operadorLogical -> OR
Rule 29    operadorLogical -> NOT
Rule 30    sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias
Rule 31    sentencias_if -> IF LPAREN expression RPAREN cuerpo_de_sentencias
Rule 32    sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias
Rule 33    sentencias_if_else -> IF LPAREN expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias
Rule 34    cuerpo_de_sentencias -> LBLOCK sentencia RBLOCK
Rule 35    cuerpo_de_sentencias -> LBLOCK RBLOCK
Rule 36    sentencias_while -> WHILE LPAREN expression RPAREN cuerpo_de_sentencias
Rule 37    sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias
Rule 38    impresion -> ALERT LPAREN valores_de_impresion RPAREN COLON
Rule 39    valores_de_impresion -> inicializarOp
Rule 40    valores_de_impresion -> javaScript_param
Rule 41    valores_de_impresion -> callFunction
Rule 42    valores_de_impresion -> estructuras_datos
Rule 43    valores_de_impresion -> return_ops
Rule 44    impresion_vacio -> ALERT LPAREN RPAREN COLON
Rule 45    javaScript_param -> STRING
Rule 46    javaScript_param -> NUM
Rule 47    javaScript_param -> boolean
Rule 48    javaScript_param -> ID
Rule 49    javaScript_param -> enteros
Rule 50    javaScript_param -> decimales
Rule 51    boolean -> TRUE
Rule 52    boolean -> FALSE
Rule 53    varType_const -> CONST
Rule 54    varType_let -> LET
Rule 55    varType_let -> VAR
Rule 56    varDeclaration -> asignarID assign
Rule 57    varDeclaration -> varType_let ID COLON
Rule 58    assign -> estructuras_datos COLON
Rule 59    assign -> javaScript_param COLON
Rule 60    estructuras_datos -> arrayDeclare
Rule 61    estructuras_datos -> declararSet
Rule 62    estructuras_datos -> declareMap
Rule 63    callMethods -> ID methodArray COLON
Rule 64    callMethods -> ID methodSet COLON
Rule 65    callMethods -> ID methodMap COLON
Rule 66    arrayDeclare -> LBRACKET RBRACKET
Rule 67    arrayDeclare -> LBRACKET arrayValues RBRACKET
Rule 68    arrayDeclare -> NEW ARRAY LPAREN arrayValues RPAREN
Rule 69    arrayDeclare -> NEW ARRAY LPAREN RPAREN
Rule 70    arrayValues -> javaScript_param
Rule 71    arrayValues -> javaScript_param COMMA arrayValues
Rule 72    methodArray -> PERIOD PUSH LPAREN javaScript_param RPAREN
Rule 73    methodArray -> PERIOD UNSHIFT LPAREN arrayValues RPAREN
Rule 74    methodArray -> PERIOD POP LPAREN RPAREN
Rule 75    declareMap -> NEW MAP LPAREN LBRACKET iterableMap RBRACKET RPAREN
Rule 76    declareMap -> NEW MAP LPAREN RPAREN
Rule 77    iterableMap -> LBRACKET keyValue COMMA keyValue RBRACKET
Rule 78    iterableMap -> LBRACKET keyValue COMMA keyValue RBRACKET COMMA iterableMap
Rule 79    keyValue -> javaScript_param
Rule 80    keyValue -> declararSet
Rule 81    keyValue -> declareMap
Rule 82    keyValue -> arrayDeclare
Rule 83    iterableSet -> keyValue
Rule 84    iterableSet -> keyValue COMMA iterableSet
Rule 85    iterableSet -> <empty>
Rule 86    methodMap -> PERIOD CLEAR LPAREN RPAREN
Rule 87    methodMap -> PERIOD LENGTH LPAREN RPAREN
Rule 88    declareteFunction -> FUNCTION ID LPAREN params RPAREN sentencesCmpt
Rule 89    declareteFunction -> FUNCTION ID LPAREN RPAREN sentencesCmpt
Rule 90    sentencesCmpt -> LBLOCK sentencia RBLOCK
Rule 91    sentencesCmpt -> LBLOCK RBLOCK
Rule 92    sentencesCmpt -> LBLOCK RETURN valores_de_impresion COLON RBLOCK
Rule 93    sentencesCmpt -> LBLOCK sentencia RETURN valores_de_impresion COLON RBLOCK
Rule 94    return_ops -> javaScript_param
Rule 95    return_ops -> javaScript_param operadores_mat return_ops
Rule 96    operadores_mat -> PLUS
Rule 97    operadores_mat -> MINUS
Rule 98    operadores_mat -> DIVIDE
Rule 99    operadores_mat -> TIMES
Rule 100   callFunction -> ID LPAREN params RPAREN
Rule 101   callFunction -> ID LPAREN RPAREN
Rule 102   params -> paramList
Rule 103   paramList -> javaScript_param
Rule 104   paramList -> javaScript_param COMMA paramList
Rule 105   declararSet -> NEW SET LPAREN RPAREN
Rule 106   declararSet -> NEW SET LPAREN LBRACKET iterableSet RBRACKET RPAREN
Rule 107   methodSet -> PERIOD ADD LPAREN javaScript_param RPAREN
Rule 108   methodSet -> PERIOD DELETE LPAREN javaScript_param RPAREN
Rule 109   methodSet -> PERIOD CLEAR LPAREN RPAREN
Rule 110   inicializarOp -> suma
Rule 111   inicializarOp -> resta
Rule 112   suma -> numOperadores PLUS numOperadores
Rule 113   suma -> numOperadores PLUS LPAREN numOperadores RPAREN
Rule 114   suma -> numOperadores PLUS suma
Rule 115   suma -> numOperadores PLUS LPAREN numOperadores RPAREN suma
Rule 116   resta -> numOperadores MINUS numOperadores
Rule 117   resta -> numOperadores MINUS LPAREN numOperadores RPAREN
Rule 118   resta -> numOperadores MINUS resta
Rule 119   resta -> numOperadores MINUS LPAREN numOperadores RPAREN resta
Rule 120   numOperadores -> enteros
Rule 121   numOperadores -> decimales
Rule 122   enteros -> NUM
Rule 123   enteros -> numNegative
Rule 124   numNegative -> MINUS NUM
Rule 125   numNegative -> <empty>
Rule 126   decimales -> enteros PERIOD NUM
Rule 127   conditionalEspecifico -> ID opConditional dataCondi
Rule 128   conditionalEspecifico -> NUM opConditional NUM
Rule 129   conditionalEspecifico -> STRING opConditional STRING
Rule 130   dataCondi -> STRING
Rule 131   dataCondi -> NUM

Terminals, with rules where they appear

ADD                  : 107
ALERT                : 38 44
AND                  : 27
ARRAY                : 68 69
CLEAR                : 86 109
COLON                : 2 6 38 44 57 58 59 63 64 65 92 93
COMMA                : 71 77 78 78 84 104
CONST                : 53
DELETE               : 108
DIVIDE               : 98
DIV_EQUAL            : 
ELSE                 : 32 33
EQUAL                : 10 11 12
FALSE                : 52
FUNCTION             : 88 89
GET                  : 
GREATER              : 22
GREATEREQUAL         : 23
HAS                  : 
ID                   : 10 11 12 48 57 63 64 65 88 89 100 101 127
IF                   : 30 31 32 33
ISEQUAL              : 19
IS_IDENTICAL         : 21
IS_NOT_IDENTICAL     : 20
LBLOCK               : 34 35 90 91 92 93
LBRACKET             : 66 67 75 77 78 106
LENGTH               : 87
LESS                 : 24
LESSEQUAL            : 25
LET                  : 54
LPAREN               : 30 31 32 33 36 37 38 44 68 69 72 73 74 75 76 86 87 88 89 100 101 105 106 107 108 109 113 115 117 119
MAP                  : 75 76
MINUS                : 97 116 117 118 119 124
MINUS_EQUAL          : 
MOD                  : 
MOD_EQUAL            : 
MUL_EQUAL            : 
NEW                  : 68 69 75 76 105 106
NOT                  : 29
NUM                  : 46 122 124 126 128 128 131
OR                   : 28
PERIOD               : 72 73 74 86 87 107 108 109 126
PLUS                 : 96 112 113 114 115
PLUS_EQUAL           : 
POP                  : 74
PUSH                 : 72
RBLOCK               : 34 35 90 91 92 93
RBRACKET             : 66 67 75 77 78 106
RETURN               : 92 93
RPAREN               : 30 31 32 33 36 37 38 44 68 69 72 73 74 75 76 86 87 88 89 100 101 105 106 107 108 109 113 115 117 119
SET                  : 105 106
STRING               : 45 129 129 130
TIMES                : 99
TRUE                 : 51
TWOPOINTS            : 
UNSHIFT              : 73
VAR                  : 55
WHILE                : 36 37
WITH                 : 
YIELD                : 
error                : 

Nonterminals, with rules where they appear

arrayDeclare         : 60 82
arrayValues          : 67 68 71 73
asignarID            : 13 56
assign               : 56
assingOperadores     : 6
boolean              : 26 47
callFunction         : 2 41
callMethods          : 1
conditionalEspecifico : 8
controlExpression    : 4
cuerpo_de_sentencias : 30 31 32 32 33 33 36 37
dataCondi            : 127
decimales            : 50 121
declararSet          : 61 80
declareMap           : 62 81
declareteFunction    : 5
enteros              : 49 120 126
estructuras_datos    : 42 58
expression           : 30 30 31 32 32 33 36 37 37
impresion            : 17
impresion_vacio      : 18
inicializarOp        : 7 9 13 39
iterableMap          : 75 78
iterableSet          : 84 106
javaScript_param     : 40 59 70 71 72 79 94 95 103 104 107 108
keyValue             : 77 77 78 78 83 84
methodArray          : 63
methodMap            : 65
methodSet            : 64
numNegative          : 123
numOperadores        : 112 112 113 113 114 115 115 116 116 117 117 118 119 119
opConditional        : 127 128 129
operadorLogical      : 30 32 37
operadores_mat       : 95
paramList            : 102 104
params               : 88 100
resta                : 111 118 119
return_ops           : 43 95
sentencesCmpt        : 88 89
sentencia            : 34 90 93 0
sentencias_if        : 14
sentencias_if_else   : 15
sentencias_while     : 16
suma                 : 110 114 115
valores_de_impresion : 38 92 93
varDeclaration       : 3
varType_const        : 11
varType_let          : 12 57

Parsing method: LALR

state 0

    (0) S' -> . sentencia
    (1) sentencia -> . callMethods
    (2) sentencia -> . callFunction COLON
    (3) sentencia -> . varDeclaration
    (4) sentencia -> . controlExpression
    (5) sentencia -> . declareteFunction
    (6) sentencia -> . assingOperadores COLON
    (7) sentencia -> . inicializarOp
    (63) callMethods -> . ID methodArray COLON
    (64) callMethods -> . ID methodSet COLON
    (65) callMethods -> . ID methodMap COLON
    (100) callFunction -> . ID LPAREN params RPAREN
    (101) callFunction -> . ID LPAREN RPAREN
    (56) varDeclaration -> . asignarID assign
    (57) varDeclaration -> . varType_let ID COLON
    (14) controlExpression -> . sentencias_if
    (15) controlExpression -> . sentencias_if_else
    (16) controlExpression -> . sentencias_while
    (17) controlExpression -> . impresion
    (18) controlExpression -> . impresion_vacio
    (88) declareteFunction -> . FUNCTION ID LPAREN params RPAREN sentencesCmpt
    (89) declareteFunction -> . FUNCTION ID LPAREN RPAREN sentencesCmpt
    (13) assingOperadores -> . asignarID inicializarOp
    (110) inicializarOp -> . suma
    (111) inicializarOp -> . resta
    (10) asignarID -> . ID EQUAL
    (11) asignarID -> . varType_const ID EQUAL
    (12) asignarID -> . varType_let ID EQUAL
    (54) varType_let -> . LET
    (55) varType_let -> . VAR
    (30) sentencias_if -> . IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias
    (31) sentencias_if -> . IF LPAREN expression RPAREN cuerpo_de_sentencias
    (32) sentencias_if_else -> . IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias
    (33) sentencias_if_else -> . IF LPAREN expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias
    (36) sentencias_while -> . WHILE LPAREN expression RPAREN cuerpo_de_sentencias
    (37) sentencias_while -> . WHILE LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias
    (38) impresion -> . ALERT LPAREN valores_de_impresion RPAREN COLON
    (44) impresion_vacio -> . ALERT LPAREN RPAREN COLON
    (112) suma -> . numOperadores PLUS numOperadores
    (113) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (114) suma -> . numOperadores PLUS suma
    (115) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN suma
    (116) resta -> . numOperadores MINUS numOperadores
    (117) resta -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (118) resta -> . numOperadores MINUS resta
    (119) resta -> . numOperadores MINUS LPAREN numOperadores RPAREN resta
    (53) varType_const -> . CONST
    (120) numOperadores -> . enteros
    (121) numOperadores -> . decimales
    (122) enteros -> . NUM
    (123) enteros -> . numNegative
    (126) decimales -> . enteros PERIOD NUM
    (124) numNegative -> . MINUS NUM
    (125) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
    ID              shift and go to state 9
    FUNCTION        shift and go to state 17
    LET             shift and go to state 21
    VAR             shift and go to state 22
    IF              shift and go to state 23
    WHILE           shift and go to state 24
    ALERT           shift and go to state 25
    CONST           shift and go to state 28
    NUM             shift and go to state 31
    MINUS           shift and go to state 27
    PERIOD          reduce using rule 125 (numNegative -> .)
    PLUS            reduce using rule 125 (numNegative -> .)

  ! MINUS           [ reduce using rule 125 (numNegative -> .) ]

    sentencia                      shift and go to state 1
    callMethods                    shift and go to state 2
    callFunction                   shift and go to state 3
    varDeclaration                 shift and go to state 4
    controlExpression              shift and go to state 5
    declareteFunction              shift and go to state 6
    assingOperadores               shift and go to state 7
    inicializarOp                  shift and go to state 8
    asignarID                      shift and go to state 10
    varType_let                    shift and go to state 11
    sentencias_if                  shift and go to state 12
    sentencias_if_else             shift and go to state 13
    sentencias_while               shift and go to state 14
    impresion                      shift and go to state 15
    impresion_vacio                shift and go to state 16
    suma                           shift and go to state 18
    resta                          shift and go to state 19
    varType_const                  shift and go to state 20
    numOperadores                  shift and go to state 26
    enteros                        shift and go to state 29
    decimales                      shift and go to state 30
    numNegative                    shift and go to state 32

state 1

    (0) S' -> sentencia .



state 2

    (1) sentencia -> callMethods .

    $end            reduce using rule 1 (sentencia -> callMethods .)
    RBLOCK          reduce using rule 1 (sentencia -> callMethods .)
    RETURN          reduce using rule 1 (sentencia -> callMethods .)


state 3

    (2) sentencia -> callFunction . COLON

    COLON           shift and go to state 33


state 4

    (3) sentencia -> varDeclaration .

    $end            reduce using rule 3 (sentencia -> varDeclaration .)
    RBLOCK          reduce using rule 3 (sentencia -> varDeclaration .)
    RETURN          reduce using rule 3 (sentencia -> varDeclaration .)


state 5

    (4) sentencia -> controlExpression .

    $end            reduce using rule 4 (sentencia -> controlExpression .)
    RBLOCK          reduce using rule 4 (sentencia -> controlExpression .)
    RETURN          reduce using rule 4 (sentencia -> controlExpression .)


state 6

    (5) sentencia -> declareteFunction .

    $end            reduce using rule 5 (sentencia -> declareteFunction .)
    RBLOCK          reduce using rule 5 (sentencia -> declareteFunction .)
    RETURN          reduce using rule 5 (sentencia -> declareteFunction .)


state 7

    (6) sentencia -> assingOperadores . COLON

    COLON           shift and go to state 34


state 8

    (7) sentencia -> inicializarOp .

    $end            reduce using rule 7 (sentencia -> inicializarOp .)
    RBLOCK          reduce using rule 7 (sentencia -> inicializarOp .)
    RETURN          reduce using rule 7 (sentencia -> inicializarOp .)


state 9

    (63) callMethods -> ID . methodArray COLON
    (64) callMethods -> ID . methodSet COLON
    (65) callMethods -> ID . methodMap COLON
    (100) callFunction -> ID . LPAREN params RPAREN
    (101) callFunction -> ID . LPAREN RPAREN
    (10) asignarID -> ID . EQUAL
    (72) methodArray -> . PERIOD PUSH LPAREN javaScript_param RPAREN
    (73) methodArray -> . PERIOD UNSHIFT LPAREN arrayValues RPAREN
    (74) methodArray -> . PERIOD POP LPAREN RPAREN
    (107) methodSet -> . PERIOD ADD LPAREN javaScript_param RPAREN
    (108) methodSet -> . PERIOD DELETE LPAREN javaScript_param RPAREN
    (109) methodSet -> . PERIOD CLEAR LPAREN RPAREN
    (86) methodMap -> . PERIOD CLEAR LPAREN RPAREN
    (87) methodMap -> . PERIOD LENGTH LPAREN RPAREN

    LPAREN          shift and go to state 38
    EQUAL           shift and go to state 39
    PERIOD          shift and go to state 40

    methodArray                    shift and go to state 35
    methodSet                      shift and go to state 36
    methodMap                      shift and go to state 37

state 10

    (56) varDeclaration -> asignarID . assign
    (13) assingOperadores -> asignarID . inicializarOp
    (58) assign -> . estructuras_datos COLON
    (59) assign -> . javaScript_param COLON
    (110) inicializarOp -> . suma
    (111) inicializarOp -> . resta
    (60) estructuras_datos -> . arrayDeclare
    (61) estructuras_datos -> . declararSet
    (62) estructuras_datos -> . declareMap
    (45) javaScript_param -> . STRING
    (46) javaScript_param -> . NUM
    (47) javaScript_param -> . boolean
    (48) javaScript_param -> . ID
    (49) javaScript_param -> . enteros
    (50) javaScript_param -> . decimales
    (112) suma -> . numOperadores PLUS numOperadores
    (113) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (114) suma -> . numOperadores PLUS suma
    (115) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN suma
    (116) resta -> . numOperadores MINUS numOperadores
    (117) resta -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (118) resta -> . numOperadores MINUS resta
    (119) resta -> . numOperadores MINUS LPAREN numOperadores RPAREN resta
    (66) arrayDeclare -> . LBRACKET RBRACKET
    (67) arrayDeclare -> . LBRACKET arrayValues RBRACKET
    (68) arrayDeclare -> . NEW ARRAY LPAREN arrayValues RPAREN
    (69) arrayDeclare -> . NEW ARRAY LPAREN RPAREN
    (105) declararSet -> . NEW SET LPAREN RPAREN
    (106) declararSet -> . NEW SET LPAREN LBRACKET iterableSet RBRACKET RPAREN
    (75) declareMap -> . NEW MAP LPAREN LBRACKET iterableMap RBRACKET RPAREN
    (76) declareMap -> . NEW MAP LPAREN RPAREN
    (51) boolean -> . TRUE
    (52) boolean -> . FALSE
    (122) enteros -> . NUM
    (123) enteros -> . numNegative
    (126) decimales -> . enteros PERIOD NUM
    (120) numOperadores -> . enteros
    (121) numOperadores -> . decimales
    (124) numNegative -> . MINUS NUM
    (125) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
    STRING          shift and go to state 48
    NUM             shift and go to state 49
    ID              shift and go to state 51
    LBRACKET        shift and go to state 54
    NEW             shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    MINUS           shift and go to state 27
    PERIOD          reduce using rule 125 (numNegative -> .)
    COLON           reduce using rule 125 (numNegative -> .)
    PLUS            reduce using rule 125 (numNegative -> .)

  ! MINUS           [ reduce using rule 125 (numNegative -> .) ]

    assign                         shift and go to state 41
    inicializarOp                  shift and go to state 42
    estructuras_datos              shift and go to state 43
    javaScript_param               shift and go to state 44
    suma                           shift and go to state 18
    resta                          shift and go to state 19
    arrayDeclare                   shift and go to state 45
    declararSet                    shift and go to state 46
    declareMap                     shift and go to state 47
    boolean                        shift and go to state 50
    enteros                        shift and go to state 52
    decimales                      shift and go to state 53
    numOperadores                  shift and go to state 26
    numNegative                    shift and go to state 32

state 11

    (57) varDeclaration -> varType_let . ID COLON
    (12) asignarID -> varType_let . ID EQUAL

    ID              shift and go to state 58


state 12

    (14) controlExpression -> sentencias_if .

    $end            reduce using rule 14 (controlExpression -> sentencias_if .)
    RBLOCK          reduce using rule 14 (controlExpression -> sentencias_if .)
    RETURN          reduce using rule 14 (controlExpression -> sentencias_if .)


state 13

    (15) controlExpression -> sentencias_if_else .

    $end            reduce using rule 15 (controlExpression -> sentencias_if_else .)
    RBLOCK          reduce using rule 15 (controlExpression -> sentencias_if_else .)
    RETURN          reduce using rule 15 (controlExpression -> sentencias_if_else .)


state 14

    (16) controlExpression -> sentencias_while .

    $end            reduce using rule 16 (controlExpression -> sentencias_while .)
    RBLOCK          reduce using rule 16 (controlExpression -> sentencias_while .)
    RETURN          reduce using rule 16 (controlExpression -> sentencias_while .)


state 15

    (17) controlExpression -> impresion .

    $end            reduce using rule 17 (controlExpression -> impresion .)
    RBLOCK          reduce using rule 17 (controlExpression -> impresion .)
    RETURN          reduce using rule 17 (controlExpression -> impresion .)


state 16

    (18) controlExpression -> impresion_vacio .

    $end            reduce using rule 18 (controlExpression -> impresion_vacio .)
    RBLOCK          reduce using rule 18 (controlExpression -> impresion_vacio .)
    RETURN          reduce using rule 18 (controlExpression -> impresion_vacio .)


state 17

    (88) declareteFunction -> FUNCTION . ID LPAREN params RPAREN sentencesCmpt
    (89) declareteFunction -> FUNCTION . ID LPAREN RPAREN sentencesCmpt

    ID              shift and go to state 59


state 18

    (110) inicializarOp -> suma .

    $end            reduce using rule 110 (inicializarOp -> suma .)
    COLON           reduce using rule 110 (inicializarOp -> suma .)
    RPAREN          reduce using rule 110 (inicializarOp -> suma .)
    AND             reduce using rule 110 (inicializarOp -> suma .)
    OR              reduce using rule 110 (inicializarOp -> suma .)
    NOT             reduce using rule 110 (inicializarOp -> suma .)
    RBLOCK          reduce using rule 110 (inicializarOp -> suma .)
    RETURN          reduce using rule 110 (inicializarOp -> suma .)


state 19

    (111) inicializarOp -> resta .

    $end            reduce using rule 111 (inicializarOp -> resta .)
    COLON           reduce using rule 111 (inicializarOp -> resta .)
    RPAREN          reduce using rule 111 (inicializarOp -> resta .)
    AND             reduce using rule 111 (inicializarOp -> resta .)
    OR              reduce using rule 111 (inicializarOp -> resta .)
    NOT             reduce using rule 111 (inicializarOp -> resta .)
    RBLOCK          reduce using rule 111 (inicializarOp -> resta .)
    RETURN          reduce using rule 111 (inicializarOp -> resta .)


state 20

    (11) asignarID -> varType_const . ID EQUAL

    ID              shift and go to state 60


state 21

    (54) varType_let -> LET .

    ID              reduce using rule 54 (varType_let -> LET .)


state 22

    (55) varType_let -> VAR .

    ID              reduce using rule 55 (varType_let -> VAR .)


state 23

    (30) sentencias_if -> IF . LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias
    (31) sentencias_if -> IF . LPAREN expression RPAREN cuerpo_de_sentencias
    (32) sentencias_if_else -> IF . LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias
    (33) sentencias_if_else -> IF . LPAREN expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias

    LPAREN          shift and go to state 61


state 24

    (36) sentencias_while -> WHILE . LPAREN expression RPAREN cuerpo_de_sentencias
    (37) sentencias_while -> WHILE . LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias

    LPAREN          shift and go to state 62


state 25

    (38) impresion -> ALERT . LPAREN valores_de_impresion RPAREN COLON
    (44) impresion_vacio -> ALERT . LPAREN RPAREN COLON

    LPAREN          shift and go to state 63


state 26

    (112) suma -> numOperadores . PLUS numOperadores
    (113) suma -> numOperadores . PLUS LPAREN numOperadores RPAREN
    (114) suma -> numOperadores . PLUS suma
    (115) suma -> numOperadores . PLUS LPAREN numOperadores RPAREN suma
    (116) resta -> numOperadores . MINUS numOperadores
    (117) resta -> numOperadores . MINUS LPAREN numOperadores RPAREN
    (118) resta -> numOperadores . MINUS resta
    (119) resta -> numOperadores . MINUS LPAREN numOperadores RPAREN resta

    PLUS            shift and go to state 64
    MINUS           shift and go to state 65


state 27

    (124) numNegative -> MINUS . NUM

    NUM             shift and go to state 66


state 28

    (53) varType_const -> CONST .

    ID              reduce using rule 53 (varType_const -> CONST .)


state 29

    (120) numOperadores -> enteros .
    (126) decimales -> enteros . PERIOD NUM

    PLUS            reduce using rule 120 (numOperadores -> enteros .)
    MINUS           reduce using rule 120 (numOperadores -> enteros .)
    $end            reduce using rule 120 (numOperadores -> enteros .)
    COLON           reduce using rule 120 (numOperadores -> enteros .)
    RPAREN          reduce using rule 120 (numOperadores -> enteros .)
    AND             reduce using rule 120 (numOperadores -> enteros .)
    OR              reduce using rule 120 (numOperadores -> enteros .)
    NOT             reduce using rule 120 (numOperadores -> enteros .)
    RBLOCK          reduce using rule 120 (numOperadores -> enteros .)
    RETURN          reduce using rule 120 (numOperadores -> enteros .)
    PERIOD          shift and go to state 67


state 30

    (121) numOperadores -> decimales .

    PLUS            reduce using rule 121 (numOperadores -> decimales .)
    MINUS           reduce using rule 121 (numOperadores -> decimales .)
    $end            reduce using rule 121 (numOperadores -> decimales .)
    COLON           reduce using rule 121 (numOperadores -> decimales .)
    RPAREN          reduce using rule 121 (numOperadores -> decimales .)
    AND             reduce using rule 121 (numOperadores -> decimales .)
    OR              reduce using rule 121 (numOperadores -> decimales .)
    NOT             reduce using rule 121 (numOperadores -> decimales .)
    RBLOCK          reduce using rule 121 (numOperadores -> decimales .)
    RETURN          reduce using rule 121 (numOperadores -> decimales .)


state 31

    (122) enteros -> NUM .

    PERIOD          reduce using rule 122 (enteros -> NUM .)
    PLUS            reduce using rule 122 (enteros -> NUM .)
    MINUS           reduce using rule 122 (enteros -> NUM .)
    $end            reduce using rule 122 (enteros -> NUM .)
    COLON           reduce using rule 122 (enteros -> NUM .)
    RPAREN          reduce using rule 122 (enteros -> NUM .)
    AND             reduce using rule 122 (enteros -> NUM .)
    OR              reduce using rule 122 (enteros -> NUM .)
    NOT             reduce using rule 122 (enteros -> NUM .)
    RBLOCK          reduce using rule 122 (enteros -> NUM .)
    RETURN          reduce using rule 122 (enteros -> NUM .)


state 32

    (123) enteros -> numNegative .

    PERIOD          reduce using rule 123 (enteros -> numNegative .)
    PLUS            reduce using rule 123 (enteros -> numNegative .)
    MINUS           reduce using rule 123 (enteros -> numNegative .)
    COLON           reduce using rule 123 (enteros -> numNegative .)
    COMMA           reduce using rule 123 (enteros -> numNegative .)
    RPAREN          reduce using rule 123 (enteros -> numNegative .)
    RBRACKET        reduce using rule 123 (enteros -> numNegative .)
    DIVIDE          reduce using rule 123 (enteros -> numNegative .)
    TIMES           reduce using rule 123 (enteros -> numNegative .)
    $end            reduce using rule 123 (enteros -> numNegative .)
    AND             reduce using rule 123 (enteros -> numNegative .)
    OR              reduce using rule 123 (enteros -> numNegative .)
    NOT             reduce using rule 123 (enteros -> numNegative .)
    RBLOCK          reduce using rule 123 (enteros -> numNegative .)
    RETURN          reduce using rule 123 (enteros -> numNegative .)


state 33

    (2) sentencia -> callFunction COLON .

    $end            reduce using rule 2 (sentencia -> callFunction COLON .)
    RBLOCK          reduce using rule 2 (sentencia -> callFunction COLON .)
    RETURN          reduce using rule 2 (sentencia -> callFunction COLON .)


state 34

    (6) sentencia -> assingOperadores COLON .

    $end            reduce using rule 6 (sentencia -> assingOperadores COLON .)
    RBLOCK          reduce using rule 6 (sentencia -> assingOperadores COLON .)
    RETURN          reduce using rule 6 (sentencia -> assingOperadores COLON .)


state 35

    (63) callMethods -> ID methodArray . COLON

    COLON           shift and go to state 68


state 36

    (64) callMethods -> ID methodSet . COLON

    COLON           shift and go to state 69


state 37

    (65) callMethods -> ID methodMap . COLON

    COLON           shift and go to state 70


state 38

    (100) callFunction -> ID LPAREN . params RPAREN
    (101) callFunction -> ID LPAREN . RPAREN
    (102) params -> . paramList
    (103) paramList -> . javaScript_param
    (104) paramList -> . javaScript_param COMMA paramList
    (45) javaScript_param -> . STRING
    (46) javaScript_param -> . NUM
    (47) javaScript_param -> . boolean
    (48) javaScript_param -> . ID
    (49) javaScript_param -> . enteros
    (50) javaScript_param -> . decimales
    (51) boolean -> . TRUE
    (52) boolean -> . FALSE
    (122) enteros -> . NUM
    (123) enteros -> . numNegative
    (126) decimales -> . enteros PERIOD NUM
    (124) numNegative -> . MINUS NUM
    (125) numNegative -> .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 72
    STRING          shift and go to state 48
    NUM             shift and go to state 49
    ID              shift and go to state 51
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    MINUS           shift and go to state 27
    PERIOD          reduce using rule 125 (numNegative -> .)
    COMMA           reduce using rule 125 (numNegative -> .)

  ! RPAREN          [ reduce using rule 125 (numNegative -> .) ]

    params                         shift and go to state 71
    paramList                      shift and go to state 73
    javaScript_param               shift and go to state 74
    boolean                        shift and go to state 50
    enteros                        shift and go to state 75
    decimales                      shift and go to state 76
    numNegative                    shift and go to state 32

state 39

    (10) asignarID -> ID EQUAL .

    STRING          reduce using rule 10 (asignarID -> ID EQUAL .)
    NUM             reduce using rule 10 (asignarID -> ID EQUAL .)
    ID              reduce using rule 10 (asignarID -> ID EQUAL .)
    LBRACKET        reduce using rule 10 (asignarID -> ID EQUAL .)
    NEW             reduce using rule 10 (asignarID -> ID EQUAL .)
    TRUE            reduce using rule 10 (asignarID -> ID EQUAL .)
    FALSE           reduce using rule 10 (asignarID -> ID EQUAL .)
    MINUS           reduce using rule 10 (asignarID -> ID EQUAL .)
    COLON           reduce using rule 10 (asignarID -> ID EQUAL .)
    PERIOD          reduce using rule 10 (asignarID -> ID EQUAL .)
    PLUS            reduce using rule 10 (asignarID -> ID EQUAL .)


state 40

    (72) methodArray -> PERIOD . PUSH LPAREN javaScript_param RPAREN
    (73) methodArray -> PERIOD . UNSHIFT LPAREN arrayValues RPAREN
    (74) methodArray -> PERIOD . POP LPAREN RPAREN
    (107) methodSet -> PERIOD . ADD LPAREN javaScript_param RPAREN
    (108) methodSet -> PERIOD . DELETE LPAREN javaScript_param RPAREN
    (109) methodSet -> PERIOD . CLEAR LPAREN RPAREN
    (86) methodMap -> PERIOD . CLEAR LPAREN RPAREN
    (87) methodMap -> PERIOD . LENGTH LPAREN RPAREN

    PUSH            shift and go to state 77
    UNSHIFT         shift and go to state 78
    POP             shift and go to state 79
    ADD             shift and go to state 80
    DELETE          shift and go to state 81
    CLEAR           shift and go to state 82
    LENGTH          shift and go to state 83


state 41

    (56) varDeclaration -> asignarID assign .

    $end            reduce using rule 56 (varDeclaration -> asignarID assign .)
    RBLOCK          reduce using rule 56 (varDeclaration -> asignarID assign .)
    RETURN          reduce using rule 56 (varDeclaration -> asignarID assign .)


state 42

    (13) assingOperadores -> asignarID inicializarOp .

    COLON           reduce using rule 13 (assingOperadores -> asignarID inicializarOp .)


state 43

    (58) assign -> estructuras_datos . COLON

    COLON           shift and go to state 84


state 44

    (59) assign -> javaScript_param . COLON

    COLON           shift and go to state 85


state 45

    (60) estructuras_datos -> arrayDeclare .

    COLON           reduce using rule 60 (estructuras_datos -> arrayDeclare .)
    RPAREN          reduce using rule 60 (estructuras_datos -> arrayDeclare .)


state 46

    (61) estructuras_datos -> declararSet .

    COLON           reduce using rule 61 (estructuras_datos -> declararSet .)
    RPAREN          reduce using rule 61 (estructuras_datos -> declararSet .)


state 47

    (62) estructuras_datos -> declareMap .

    COLON           reduce using rule 62 (estructuras_datos -> declareMap .)
    RPAREN          reduce using rule 62 (estructuras_datos -> declareMap .)


state 48

    (45) javaScript_param -> STRING .

    COLON           reduce using rule 45 (javaScript_param -> STRING .)
    COMMA           reduce using rule 45 (javaScript_param -> STRING .)
    RPAREN          reduce using rule 45 (javaScript_param -> STRING .)
    RBRACKET        reduce using rule 45 (javaScript_param -> STRING .)
    PLUS            reduce using rule 45 (javaScript_param -> STRING .)
    MINUS           reduce using rule 45 (javaScript_param -> STRING .)
    DIVIDE          reduce using rule 45 (javaScript_param -> STRING .)
    TIMES           reduce using rule 45 (javaScript_param -> STRING .)


state 49

    (46) javaScript_param -> NUM .
    (122) enteros -> NUM .

  ! reduce/reduce conflict for COLON resolved using rule 46 (javaScript_param -> NUM .)
  ! reduce/reduce conflict for PLUS resolved using rule 46 (javaScript_param -> NUM .)
  ! reduce/reduce conflict for MINUS resolved using rule 46 (javaScript_param -> NUM .)
  ! reduce/reduce conflict for COMMA resolved using rule 46 (javaScript_param -> NUM .)
  ! reduce/reduce conflict for RPAREN resolved using rule 46 (javaScript_param -> NUM .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 46 (javaScript_param -> NUM .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 46 (javaScript_param -> NUM .)
  ! reduce/reduce conflict for TIMES resolved using rule 46 (javaScript_param -> NUM .)
    COLON           reduce using rule 46 (javaScript_param -> NUM .)
    COMMA           reduce using rule 46 (javaScript_param -> NUM .)
    RPAREN          reduce using rule 46 (javaScript_param -> NUM .)
    RBRACKET        reduce using rule 46 (javaScript_param -> NUM .)
    PLUS            reduce using rule 46 (javaScript_param -> NUM .)
    MINUS           reduce using rule 46 (javaScript_param -> NUM .)
    DIVIDE          reduce using rule 46 (javaScript_param -> NUM .)
    TIMES           reduce using rule 46 (javaScript_param -> NUM .)
    PERIOD          reduce using rule 122 (enteros -> NUM .)

  ! COLON           [ reduce using rule 122 (enteros -> NUM .) ]
  ! PLUS            [ reduce using rule 122 (enteros -> NUM .) ]
  ! MINUS           [ reduce using rule 122 (enteros -> NUM .) ]
  ! COMMA           [ reduce using rule 122 (enteros -> NUM .) ]
  ! RPAREN          [ reduce using rule 122 (enteros -> NUM .) ]
  ! RBRACKET        [ reduce using rule 122 (enteros -> NUM .) ]
  ! DIVIDE          [ reduce using rule 122 (enteros -> NUM .) ]
  ! TIMES           [ reduce using rule 122 (enteros -> NUM .) ]


state 50

    (47) javaScript_param -> boolean .

    COLON           reduce using rule 47 (javaScript_param -> boolean .)
    COMMA           reduce using rule 47 (javaScript_param -> boolean .)
    RPAREN          reduce using rule 47 (javaScript_param -> boolean .)
    RBRACKET        reduce using rule 47 (javaScript_param -> boolean .)
    PLUS            reduce using rule 47 (javaScript_param -> boolean .)
    MINUS           reduce using rule 47 (javaScript_param -> boolean .)
    DIVIDE          reduce using rule 47 (javaScript_param -> boolean .)
    TIMES           reduce using rule 47 (javaScript_param -> boolean .)


state 51

    (48) javaScript_param -> ID .

    COLON           reduce using rule 48 (javaScript_param -> ID .)
    COMMA           reduce using rule 48 (javaScript_param -> ID .)
    RPAREN          reduce using rule 48 (javaScript_param -> ID .)
    RBRACKET        reduce using rule 48 (javaScript_param -> ID .)
    PLUS            reduce using rule 48 (javaScript_param -> ID .)
    MINUS           reduce using rule 48 (javaScript_param -> ID .)
    DIVIDE          reduce using rule 48 (javaScript_param -> ID .)
    TIMES           reduce using rule 48 (javaScript_param -> ID .)


state 52

    (49) javaScript_param -> enteros .
    (126) decimales -> enteros . PERIOD NUM
    (120) numOperadores -> enteros .

  ! reduce/reduce conflict for PLUS resolved using rule 49 (javaScript_param -> enteros .)
  ! reduce/reduce conflict for MINUS resolved using rule 49 (javaScript_param -> enteros .)
    COLON           reduce using rule 49 (javaScript_param -> enteros .)
    PLUS            reduce using rule 49 (javaScript_param -> enteros .)
    MINUS           reduce using rule 49 (javaScript_param -> enteros .)
    DIVIDE          reduce using rule 49 (javaScript_param -> enteros .)
    TIMES           reduce using rule 49 (javaScript_param -> enteros .)
    RPAREN          reduce using rule 49 (javaScript_param -> enteros .)
    PERIOD          shift and go to state 67

  ! PLUS            [ reduce using rule 120 (numOperadores -> enteros .) ]
  ! MINUS           [ reduce using rule 120 (numOperadores -> enteros .) ]


state 53

    (50) javaScript_param -> decimales .
    (121) numOperadores -> decimales .

  ! reduce/reduce conflict for PLUS resolved using rule 50 (javaScript_param -> decimales .)
  ! reduce/reduce conflict for MINUS resolved using rule 50 (javaScript_param -> decimales .)
    COLON           reduce using rule 50 (javaScript_param -> decimales .)
    PLUS            reduce using rule 50 (javaScript_param -> decimales .)
    MINUS           reduce using rule 50 (javaScript_param -> decimales .)
    DIVIDE          reduce using rule 50 (javaScript_param -> decimales .)
    TIMES           reduce using rule 50 (javaScript_param -> decimales .)
    RPAREN          reduce using rule 50 (javaScript_param -> decimales .)

  ! PLUS            [ reduce using rule 121 (numOperadores -> decimales .) ]
  ! MINUS           [ reduce using rule 121 (numOperadores -> decimales .) ]


state 54

    (66) arrayDeclare -> LBRACKET . RBRACKET
    (67) arrayDeclare -> LBRACKET . arrayValues RBRACKET
    (70) arrayValues -> . javaScript_param
    (71) arrayValues -> . javaScript_param COMMA arrayValues
    (45) javaScript_param -> . STRING
    (46) javaScript_param -> . NUM
    (47) javaScript_param -> . boolean
    (48) javaScript_param -> . ID
    (49) javaScript_param -> . enteros
    (50) javaScript_param -> . decimales
    (51) boolean -> . TRUE
    (52) boolean -> . FALSE
    (122) enteros -> . NUM
    (123) enteros -> . numNegative
    (126) decimales -> . enteros PERIOD NUM
    (124) numNegative -> . MINUS NUM
    (125) numNegative -> .

  ! shift/reduce conflict for RBRACKET resolved as shift
    RBRACKET        shift and go to state 86
    STRING          shift and go to state 48
    NUM             shift and go to state 49
    ID              shift and go to state 51
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    MINUS           shift and go to state 27
    PERIOD          reduce using rule 125 (numNegative -> .)
    COMMA           reduce using rule 125 (numNegative -> .)

  ! RBRACKET        [ reduce using rule 125 (numNegative -> .) ]

    arrayValues                    shift and go to state 87
    javaScript_param               shift and go to state 88
    boolean                        shift and go to state 50
    enteros                        shift and go to state 75
    decimales                      shift and go to state 76
    numNegative                    shift and go to state 32

state 55

    (68) arrayDeclare -> NEW . ARRAY LPAREN arrayValues RPAREN
    (69) arrayDeclare -> NEW . ARRAY LPAREN RPAREN
    (105) declararSet -> NEW . SET LPAREN RPAREN
    (106) declararSet -> NEW . SET LPAREN LBRACKET iterableSet RBRACKET RPAREN
    (75) declareMap -> NEW . MAP LPAREN LBRACKET iterableMap RBRACKET RPAREN
    (76) declareMap -> NEW . MAP LPAREN RPAREN

    ARRAY           shift and go to state 89
    SET             shift and go to state 90
    MAP             shift and go to state 91


state 56

    (51) boolean -> TRUE .

    COLON           reduce using rule 51 (boolean -> TRUE .)
    COMMA           reduce using rule 51 (boolean -> TRUE .)
    RPAREN          reduce using rule 51 (boolean -> TRUE .)
    RBRACKET        reduce using rule 51 (boolean -> TRUE .)
    PLUS            reduce using rule 51 (boolean -> TRUE .)
    MINUS           reduce using rule 51 (boolean -> TRUE .)
    DIVIDE          reduce using rule 51 (boolean -> TRUE .)
    TIMES           reduce using rule 51 (boolean -> TRUE .)
    STRING          reduce using rule 51 (boolean -> TRUE .)
    NUM             reduce using rule 51 (boolean -> TRUE .)


state 57

    (52) boolean -> FALSE .

    COLON           reduce using rule 52 (boolean -> FALSE .)
    COMMA           reduce using rule 52 (boolean -> FALSE .)
    RPAREN          reduce using rule 52 (boolean -> FALSE .)
    RBRACKET        reduce using rule 52 (boolean -> FALSE .)
    PLUS            reduce using rule 52 (boolean -> FALSE .)
    MINUS           reduce using rule 52 (boolean -> FALSE .)
    DIVIDE          reduce using rule 52 (boolean -> FALSE .)
    TIMES           reduce using rule 52 (boolean -> FALSE .)
    STRING          reduce using rule 52 (boolean -> FALSE .)
    NUM             reduce using rule 52 (boolean -> FALSE .)


state 58

    (57) varDeclaration -> varType_let ID . COLON
    (12) asignarID -> varType_let ID . EQUAL

    COLON           shift and go to state 92
    EQUAL           shift and go to state 93


state 59

    (88) declareteFunction -> FUNCTION ID . LPAREN params RPAREN sentencesCmpt
    (89) declareteFunction -> FUNCTION ID . LPAREN RPAREN sentencesCmpt

    LPAREN          shift and go to state 94


state 60

    (11) asignarID -> varType_const ID . EQUAL

    EQUAL           shift and go to state 95


state 61

    (30) sentencias_if -> IF LPAREN . expression operadorLogical expression RPAREN cuerpo_de_sentencias
    (31) sentencias_if -> IF LPAREN . expression RPAREN cuerpo_de_sentencias
    (32) sentencias_if_else -> IF LPAREN . expression operadorLogical expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias
    (33) sentencias_if_else -> IF LPAREN . expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias
    (8) expression -> . conditionalEspecifico
    (9) expression -> . inicializarOp
    (127) conditionalEspecifico -> . ID opConditional dataCondi
    (128) conditionalEspecifico -> . NUM opConditional NUM
    (129) conditionalEspecifico -> . STRING opConditional STRING
    (110) inicializarOp -> . suma
    (111) inicializarOp -> . resta
    (112) suma -> . numOperadores PLUS numOperadores
    (113) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (114) suma -> . numOperadores PLUS suma
    (115) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN suma
    (116) resta -> . numOperadores MINUS numOperadores
    (117) resta -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (118) resta -> . numOperadores MINUS resta
    (119) resta -> . numOperadores MINUS LPAREN numOperadores RPAREN resta
    (120) numOperadores -> . enteros
    (121) numOperadores -> . decimales
    (122) enteros -> . NUM
    (123) enteros -> . numNegative
    (126) decimales -> . enteros PERIOD NUM
    (124) numNegative -> . MINUS NUM
    (125) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
    ID              shift and go to state 99
    NUM             shift and go to state 100
    STRING          shift and go to state 101
    MINUS           shift and go to state 27
    PERIOD          reduce using rule 125 (numNegative -> .)
    PLUS            reduce using rule 125 (numNegative -> .)

  ! MINUS           [ reduce using rule 125 (numNegative -> .) ]

    expression                     shift and go to state 96
    conditionalEspecifico          shift and go to state 97
    inicializarOp                  shift and go to state 98
    suma                           shift and go to state 18
    resta                          shift and go to state 19
    numOperadores                  shift and go to state 26
    enteros                        shift and go to state 29
    decimales                      shift and go to state 30
    numNegative                    shift and go to state 32

state 62

    (36) sentencias_while -> WHILE LPAREN . expression RPAREN cuerpo_de_sentencias
    (37) sentencias_while -> WHILE LPAREN . expression operadorLogical expression RPAREN cuerpo_de_sentencias
    (8) expression -> . conditionalEspecifico
    (9) expression -> . inicializarOp
    (127) conditionalEspecifico -> . ID opConditional dataCondi
    (128) conditionalEspecifico -> . NUM opConditional NUM
    (129) conditionalEspecifico -> . STRING opConditional STRING
    (110) inicializarOp -> . suma
    (111) inicializarOp -> . resta
    (112) suma -> . numOperadores PLUS numOperadores
    (113) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (114) suma -> . numOperadores PLUS suma
    (115) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN suma
    (116) resta -> . numOperadores MINUS numOperadores
    (117) resta -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (118) resta -> . numOperadores MINUS resta
    (119) resta -> . numOperadores MINUS LPAREN numOperadores RPAREN resta
    (120) numOperadores -> . enteros
    (121) numOperadores -> . decimales
    (122) enteros -> . NUM
    (123) enteros -> . numNegative
    (126) decimales -> . enteros PERIOD NUM
    (124) numNegative -> . MINUS NUM
    (125) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
    ID              shift and go to state 99
    NUM             shift and go to state 100
    STRING          shift and go to state 101
    MINUS           shift and go to state 27
    PERIOD          reduce using rule 125 (numNegative -> .)
    PLUS            reduce using rule 125 (numNegative -> .)

  ! MINUS           [ reduce using rule 125 (numNegative -> .) ]

    expression                     shift and go to state 102
    conditionalEspecifico          shift and go to state 97
    inicializarOp                  shift and go to state 98
    suma                           shift and go to state 18
    resta                          shift and go to state 19
    numOperadores                  shift and go to state 26
    enteros                        shift and go to state 29
    decimales                      shift and go to state 30
    numNegative                    shift and go to state 32

state 63

    (38) impresion -> ALERT LPAREN . valores_de_impresion RPAREN COLON
    (44) impresion_vacio -> ALERT LPAREN . RPAREN COLON
    (39) valores_de_impresion -> . inicializarOp
    (40) valores_de_impresion -> . javaScript_param
    (41) valores_de_impresion -> . callFunction
    (42) valores_de_impresion -> . estructuras_datos
    (43) valores_de_impresion -> . return_ops
    (110) inicializarOp -> . suma
    (111) inicializarOp -> . resta
    (45) javaScript_param -> . STRING
    (46) javaScript_param -> . NUM
    (47) javaScript_param -> . boolean
    (48) javaScript_param -> . ID
    (49) javaScript_param -> . enteros
    (50) javaScript_param -> . decimales
    (100) callFunction -> . ID LPAREN params RPAREN
    (101) callFunction -> . ID LPAREN RPAREN
    (60) estructuras_datos -> . arrayDeclare
    (61) estructuras_datos -> . declararSet
    (62) estructuras_datos -> . declareMap
    (94) return_ops -> . javaScript_param
    (95) return_ops -> . javaScript_param operadores_mat return_ops
    (112) suma -> . numOperadores PLUS numOperadores
    (113) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (114) suma -> . numOperadores PLUS suma
    (115) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN suma
    (116) resta -> . numOperadores MINUS numOperadores
    (117) resta -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (118) resta -> . numOperadores MINUS resta
    (119) resta -> . numOperadores MINUS LPAREN numOperadores RPAREN resta
    (51) boolean -> . TRUE
    (52) boolean -> . FALSE
    (122) enteros -> . NUM
    (123) enteros -> . numNegative
    (126) decimales -> . enteros PERIOD NUM
    (66) arrayDeclare -> . LBRACKET RBRACKET
    (67) arrayDeclare -> . LBRACKET arrayValues RBRACKET
    (68) arrayDeclare -> . NEW ARRAY LPAREN arrayValues RPAREN
    (69) arrayDeclare -> . NEW ARRAY LPAREN RPAREN
    (105) declararSet -> . NEW SET LPAREN RPAREN
    (106) declararSet -> . NEW SET LPAREN LBRACKET iterableSet RBRACKET RPAREN
    (75) declareMap -> . NEW MAP LPAREN LBRACKET iterableMap RBRACKET RPAREN
    (76) declareMap -> . NEW MAP LPAREN RPAREN
    (120) numOperadores -> . enteros
    (121) numOperadores -> . decimales
    (124) numNegative -> . MINUS NUM
    (125) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 104
    STRING          shift and go to state 48
    NUM             shift and go to state 49
    ID              shift and go to state 110
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    LBRACKET        shift and go to state 54
    NEW             shift and go to state 55
    MINUS           shift and go to state 27
    PERIOD          reduce using rule 125 (numNegative -> .)
    PLUS            reduce using rule 125 (numNegative -> .)
    DIVIDE          reduce using rule 125 (numNegative -> .)
    TIMES           reduce using rule 125 (numNegative -> .)

  ! MINUS           [ reduce using rule 125 (numNegative -> .) ]
  ! RPAREN          [ reduce using rule 125 (numNegative -> .) ]

    valores_de_impresion           shift and go to state 103
    inicializarOp                  shift and go to state 105
    javaScript_param               shift and go to state 106
    callFunction                   shift and go to state 107
    estructuras_datos              shift and go to state 108
    return_ops                     shift and go to state 109
    suma                           shift and go to state 18
    resta                          shift and go to state 19
    boolean                        shift and go to state 50
    enteros                        shift and go to state 52
    decimales                      shift and go to state 53
    arrayDeclare                   shift and go to state 45
    declararSet                    shift and go to state 46
    declareMap                     shift and go to state 47
    numOperadores                  shift and go to state 26
    numNegative                    shift and go to state 32

state 64

    (112) suma -> numOperadores PLUS . numOperadores
    (113) suma -> numOperadores PLUS . LPAREN numOperadores RPAREN
    (114) suma -> numOperadores PLUS . suma
    (115) suma -> numOperadores PLUS . LPAREN numOperadores RPAREN suma
    (120) numOperadores -> . enteros
    (121) numOperadores -> . decimales
    (112) suma -> . numOperadores PLUS numOperadores
    (113) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (114) suma -> . numOperadores PLUS suma
    (115) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN suma
    (122) enteros -> . NUM
    (123) enteros -> . numNegative
    (126) decimales -> . enteros PERIOD NUM
    (124) numNegative -> . MINUS NUM
    (125) numNegative -> .

    LPAREN          shift and go to state 112
    NUM             shift and go to state 31
    MINUS           shift and go to state 27
    PERIOD          reduce using rule 125 (numNegative -> .)
    PLUS            reduce using rule 125 (numNegative -> .)
    $end            reduce using rule 125 (numNegative -> .)
    COLON           reduce using rule 125 (numNegative -> .)
    RPAREN          reduce using rule 125 (numNegative -> .)
    AND             reduce using rule 125 (numNegative -> .)
    OR              reduce using rule 125 (numNegative -> .)
    NOT             reduce using rule 125 (numNegative -> .)
    RBLOCK          reduce using rule 125 (numNegative -> .)
    RETURN          reduce using rule 125 (numNegative -> .)

    numOperadores                  shift and go to state 111
    suma                           shift and go to state 113
    enteros                        shift and go to state 29
    decimales                      shift and go to state 30
    numNegative                    shift and go to state 32

state 65

    (116) resta -> numOperadores MINUS . numOperadores
    (117) resta -> numOperadores MINUS . LPAREN numOperadores RPAREN
    (118) resta -> numOperadores MINUS . resta
    (119) resta -> numOperadores MINUS . LPAREN numOperadores RPAREN resta
    (120) numOperadores -> . enteros
    (121) numOperadores -> . decimales
    (116) resta -> . numOperadores MINUS numOperadores
    (117) resta -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (118) resta -> . numOperadores MINUS resta
    (119) resta -> . numOperadores MINUS LPAREN numOperadores RPAREN resta
    (122) enteros -> . NUM
    (123) enteros -> . numNegative
    (126) decimales -> . enteros PERIOD NUM
    (124) numNegative -> . MINUS NUM
    (125) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
    LPAREN          shift and go to state 115
    NUM             shift and go to state 31
    MINUS           shift and go to state 27
    PERIOD          reduce using rule 125 (numNegative -> .)
    $end            reduce using rule 125 (numNegative -> .)
    COLON           reduce using rule 125 (numNegative -> .)
    RPAREN          reduce using rule 125 (numNegative -> .)
    AND             reduce using rule 125 (numNegative -> .)
    OR              reduce using rule 125 (numNegative -> .)
    NOT             reduce using rule 125 (numNegative -> .)
    RBLOCK          reduce using rule 125 (numNegative -> .)
    RETURN          reduce using rule 125 (numNegative -> .)

  ! MINUS           [ reduce using rule 125 (numNegative -> .) ]

    numOperadores                  shift and go to state 114
    resta                          shift and go to state 116
    enteros                        shift and go to state 29
    decimales                      shift and go to state 30
    numNegative                    shift and go to state 32

state 66

    (124) numNegative -> MINUS NUM .

    PERIOD          reduce using rule 124 (numNegative -> MINUS NUM .)
    PLUS            reduce using rule 124 (numNegative -> MINUS NUM .)
    MINUS           reduce using rule 124 (numNegative -> MINUS NUM .)
    COLON           reduce using rule 124 (numNegative -> MINUS NUM .)
    COMMA           reduce using rule 124 (numNegative -> MINUS NUM .)
    RPAREN          reduce using rule 124 (numNegative -> MINUS NUM .)
    RBRACKET        reduce using rule 124 (numNegative -> MINUS NUM .)
    DIVIDE          reduce using rule 124 (numNegative -> MINUS NUM .)
    TIMES           reduce using rule 124 (numNegative -> MINUS NUM .)
    $end            reduce using rule 124 (numNegative -> MINUS NUM .)
    AND             reduce using rule 124 (numNegative -> MINUS NUM .)
    OR              reduce using rule 124 (numNegative -> MINUS NUM .)
    NOT             reduce using rule 124 (numNegative -> MINUS NUM .)
    RBLOCK          reduce using rule 124 (numNegative -> MINUS NUM .)
    RETURN          reduce using rule 124 (numNegative -> MINUS NUM .)


state 67

    (126) decimales -> enteros PERIOD . NUM

    NUM             shift and go to state 117


state 68

    (63) callMethods -> ID methodArray COLON .

    $end            reduce using rule 63 (callMethods -> ID methodArray COLON .)
    RBLOCK          reduce using rule 63 (callMethods -> ID methodArray COLON .)
    RETURN          reduce using rule 63 (callMethods -> ID methodArray COLON .)


state 69

    (64) callMethods -> ID methodSet COLON .

    $end            reduce using rule 64 (callMethods -> ID methodSet COLON .)
    RBLOCK          reduce using rule 64 (callMethods -> ID methodSet COLON .)
    RETURN          reduce using rule 64 (callMethods -> ID methodSet COLON .)


state 70

    (65) callMethods -> ID methodMap COLON .

    $end            reduce using rule 65 (callMethods -> ID methodMap COLON .)
    RBLOCK          reduce using rule 65 (callMethods -> ID methodMap COLON .)
    RETURN          reduce using rule 65 (callMethods -> ID methodMap COLON .)


state 71

    (100) callFunction -> ID LPAREN params . RPAREN

    RPAREN          shift and go to state 118


state 72

    (101) callFunction -> ID LPAREN RPAREN .

    COLON           reduce using rule 101 (callFunction -> ID LPAREN RPAREN .)
    RPAREN          reduce using rule 101 (callFunction -> ID LPAREN RPAREN .)


state 73

    (102) params -> paramList .

    RPAREN          reduce using rule 102 (params -> paramList .)


state 74

    (103) paramList -> javaScript_param .
    (104) paramList -> javaScript_param . COMMA paramList

    RPAREN          reduce using rule 103 (paramList -> javaScript_param .)
    COMMA           shift and go to state 119


state 75

    (49) javaScript_param -> enteros .
    (126) decimales -> enteros . PERIOD NUM

    COMMA           reduce using rule 49 (javaScript_param -> enteros .)
    RPAREN          reduce using rule 49 (javaScript_param -> enteros .)
    RBRACKET        reduce using rule 49 (javaScript_param -> enteros .)
    PLUS            reduce using rule 49 (javaScript_param -> enteros .)
    MINUS           reduce using rule 49 (javaScript_param -> enteros .)
    DIVIDE          reduce using rule 49 (javaScript_param -> enteros .)
    TIMES           reduce using rule 49 (javaScript_param -> enteros .)
    COLON           reduce using rule 49 (javaScript_param -> enteros .)
    PERIOD          shift and go to state 67


state 76

    (50) javaScript_param -> decimales .

    COMMA           reduce using rule 50 (javaScript_param -> decimales .)
    RPAREN          reduce using rule 50 (javaScript_param -> decimales .)
    RBRACKET        reduce using rule 50 (javaScript_param -> decimales .)
    PLUS            reduce using rule 50 (javaScript_param -> decimales .)
    MINUS           reduce using rule 50 (javaScript_param -> decimales .)
    DIVIDE          reduce using rule 50 (javaScript_param -> decimales .)
    TIMES           reduce using rule 50 (javaScript_param -> decimales .)
    COLON           reduce using rule 50 (javaScript_param -> decimales .)


state 77

    (72) methodArray -> PERIOD PUSH . LPAREN javaScript_param RPAREN

    LPAREN          shift and go to state 120


state 78

    (73) methodArray -> PERIOD UNSHIFT . LPAREN arrayValues RPAREN

    LPAREN          shift and go to state 121


state 79

    (74) methodArray -> PERIOD POP . LPAREN RPAREN

    LPAREN          shift and go to state 122


state 80

    (107) methodSet -> PERIOD ADD . LPAREN javaScript_param RPAREN

    LPAREN          shift and go to state 123


state 81

    (108) methodSet -> PERIOD DELETE . LPAREN javaScript_param RPAREN

    LPAREN          shift and go to state 124


state 82

    (109) methodSet -> PERIOD CLEAR . LPAREN RPAREN
    (86) methodMap -> PERIOD CLEAR . LPAREN RPAREN

    LPAREN          shift and go to state 125


state 83

    (87) methodMap -> PERIOD LENGTH . LPAREN RPAREN

    LPAREN          shift and go to state 126


state 84

    (58) assign -> estructuras_datos COLON .

    $end            reduce using rule 58 (assign -> estructuras_datos COLON .)
    RBLOCK          reduce using rule 58 (assign -> estructuras_datos COLON .)
    RETURN          reduce using rule 58 (assign -> estructuras_datos COLON .)


state 85

    (59) assign -> javaScript_param COLON .

    $end            reduce using rule 59 (assign -> javaScript_param COLON .)
    RBLOCK          reduce using rule 59 (assign -> javaScript_param COLON .)
    RETURN          reduce using rule 59 (assign -> javaScript_param COLON .)


state 86

    (66) arrayDeclare -> LBRACKET RBRACKET .

    COLON           reduce using rule 66 (arrayDeclare -> LBRACKET RBRACKET .)
    RPAREN          reduce using rule 66 (arrayDeclare -> LBRACKET RBRACKET .)
    COMMA           reduce using rule 66 (arrayDeclare -> LBRACKET RBRACKET .)
    RBRACKET        reduce using rule 66 (arrayDeclare -> LBRACKET RBRACKET .)


state 87

    (67) arrayDeclare -> LBRACKET arrayValues . RBRACKET

    RBRACKET        shift and go to state 127


state 88

    (70) arrayValues -> javaScript_param .
    (71) arrayValues -> javaScript_param . COMMA arrayValues

    RBRACKET        reduce using rule 70 (arrayValues -> javaScript_param .)
    RPAREN          reduce using rule 70 (arrayValues -> javaScript_param .)
    COMMA           shift and go to state 128


state 89

    (68) arrayDeclare -> NEW ARRAY . LPAREN arrayValues RPAREN
    (69) arrayDeclare -> NEW ARRAY . LPAREN RPAREN

    LPAREN          shift and go to state 129


state 90

    (105) declararSet -> NEW SET . LPAREN RPAREN
    (106) declararSet -> NEW SET . LPAREN LBRACKET iterableSet RBRACKET RPAREN

    LPAREN          shift and go to state 130


state 91

    (75) declareMap -> NEW MAP . LPAREN LBRACKET iterableMap RBRACKET RPAREN
    (76) declareMap -> NEW MAP . LPAREN RPAREN

    LPAREN          shift and go to state 131


state 92

    (57) varDeclaration -> varType_let ID COLON .

    $end            reduce using rule 57 (varDeclaration -> varType_let ID COLON .)
    RBLOCK          reduce using rule 57 (varDeclaration -> varType_let ID COLON .)
    RETURN          reduce using rule 57 (varDeclaration -> varType_let ID COLON .)


state 93

    (12) asignarID -> varType_let ID EQUAL .

    STRING          reduce using rule 12 (asignarID -> varType_let ID EQUAL .)
    NUM             reduce using rule 12 (asignarID -> varType_let ID EQUAL .)
    ID              reduce using rule 12 (asignarID -> varType_let ID EQUAL .)
    LBRACKET        reduce using rule 12 (asignarID -> varType_let ID EQUAL .)
    NEW             reduce using rule 12 (asignarID -> varType_let ID EQUAL .)
    TRUE            reduce using rule 12 (asignarID -> varType_let ID EQUAL .)
    FALSE           reduce using rule 12 (asignarID -> varType_let ID EQUAL .)
    MINUS           reduce using rule 12 (asignarID -> varType_let ID EQUAL .)
    COLON           reduce using rule 12 (asignarID -> varType_let ID EQUAL .)
    PERIOD          reduce using rule 12 (asignarID -> varType_let ID EQUAL .)
    PLUS            reduce using rule 12 (asignarID -> varType_let ID EQUAL .)


state 94

    (88) declareteFunction -> FUNCTION ID LPAREN . params RPAREN sentencesCmpt
    (89) declareteFunction -> FUNCTION ID LPAREN . RPAREN sentencesCmpt
    (102) params -> . paramList
    (103) paramList -> . javaScript_param
    (104) paramList -> . javaScript_param COMMA paramList
    (45) javaScript_param -> . STRING
    (46) javaScript_param -> . NUM
    (47) javaScript_param -> . boolean
    (48) javaScript_param -> . ID
    (49) javaScript_param -> . enteros
    (50) javaScript_param -> . decimales
    (51) boolean -> . TRUE
    (52) boolean -> . FALSE
    (122) enteros -> . NUM
    (123) enteros -> . numNegative
    (126) decimales -> . enteros PERIOD NUM
    (124) numNegative -> . MINUS NUM
    (125) numNegative -> .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 133
    STRING          shift and go to state 48
    NUM             shift and go to state 49
    ID              shift and go to state 51
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    MINUS           shift and go to state 27
    PERIOD          reduce using rule 125 (numNegative -> .)
    COMMA           reduce using rule 125 (numNegative -> .)

  ! RPAREN          [ reduce using rule 125 (numNegative -> .) ]

    params                         shift and go to state 132
    paramList                      shift and go to state 73
    javaScript_param               shift and go to state 74
    boolean                        shift and go to state 50
    enteros                        shift and go to state 75
    decimales                      shift and go to state 76
    numNegative                    shift and go to state 32

state 95

    (11) asignarID -> varType_const ID EQUAL .

    STRING          reduce using rule 11 (asignarID -> varType_const ID EQUAL .)
    NUM             reduce using rule 11 (asignarID -> varType_const ID EQUAL .)
    ID              reduce using rule 11 (asignarID -> varType_const ID EQUAL .)
    LBRACKET        reduce using rule 11 (asignarID -> varType_const ID EQUAL .)
    NEW             reduce using rule 11 (asignarID -> varType_const ID EQUAL .)
    TRUE            reduce using rule 11 (asignarID -> varType_const ID EQUAL .)
    FALSE           reduce using rule 11 (asignarID -> varType_const ID EQUAL .)
    MINUS           reduce using rule 11 (asignarID -> varType_const ID EQUAL .)
    COLON           reduce using rule 11 (asignarID -> varType_const ID EQUAL .)
    PERIOD          reduce using rule 11 (asignarID -> varType_const ID EQUAL .)
    PLUS            reduce using rule 11 (asignarID -> varType_const ID EQUAL .)


state 96

    (30) sentencias_if -> IF LPAREN expression . operadorLogical expression RPAREN cuerpo_de_sentencias
    (31) sentencias_if -> IF LPAREN expression . RPAREN cuerpo_de_sentencias
    (32) sentencias_if_else -> IF LPAREN expression . operadorLogical expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias
    (33) sentencias_if_else -> IF LPAREN expression . RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias
    (27) operadorLogical -> . AND
    (28) operadorLogical -> . OR
    (29) operadorLogical -> . NOT

    RPAREN          shift and go to state 135
    AND             shift and go to state 136
    OR              shift and go to state 137
    NOT             shift and go to state 138

    operadorLogical                shift and go to state 134

state 97

    (8) expression -> conditionalEspecifico .

    RPAREN          reduce using rule 8 (expression -> conditionalEspecifico .)
    AND             reduce using rule 8 (expression -> conditionalEspecifico .)
    OR              reduce using rule 8 (expression -> conditionalEspecifico .)
    NOT             reduce using rule 8 (expression -> conditionalEspecifico .)


state 98

    (9) expression -> inicializarOp .

    RPAREN          reduce using rule 9 (expression -> inicializarOp .)
    AND             reduce using rule 9 (expression -> inicializarOp .)
    OR              reduce using rule 9 (expression -> inicializarOp .)
    NOT             reduce using rule 9 (expression -> inicializarOp .)


state 99

    (127) conditionalEspecifico -> ID . opConditional dataCondi
    (19) opConditional -> . ISEQUAL
    (20) opConditional -> . IS_NOT_IDENTICAL
    (21) opConditional -> . IS_IDENTICAL
    (22) opConditional -> . GREATER
    (23) opConditional -> . GREATEREQUAL
    (24) opConditional -> . LESS
    (25) opConditional -> . LESSEQUAL
    (26) opConditional -> . boolean
    (51) boolean -> . TRUE
    (52) boolean -> . FALSE

    ISEQUAL         shift and go to state 140
    IS_NOT_IDENTICAL shift and go to state 141
    IS_IDENTICAL    shift and go to state 142
    GREATER         shift and go to state 143
    GREATEREQUAL    shift and go to state 144
    LESS            shift and go to state 145
    LESSEQUAL       shift and go to state 146
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57

    opConditional                  shift and go to state 139
    boolean                        shift and go to state 147

state 100

    (128) conditionalEspecifico -> NUM . opConditional NUM
    (122) enteros -> NUM .
    (19) opConditional -> . ISEQUAL
    (20) opConditional -> . IS_NOT_IDENTICAL
    (21) opConditional -> . IS_IDENTICAL
    (22) opConditional -> . GREATER
    (23) opConditional -> . GREATEREQUAL
    (24) opConditional -> . LESS
    (25) opConditional -> . LESSEQUAL
    (26) opConditional -> . boolean
    (51) boolean -> . TRUE
    (52) boolean -> . FALSE

    PERIOD          reduce using rule 122 (enteros -> NUM .)
    PLUS            reduce using rule 122 (enteros -> NUM .)
    MINUS           reduce using rule 122 (enteros -> NUM .)
    ISEQUAL         shift and go to state 140
    IS_NOT_IDENTICAL shift and go to state 141
    IS_IDENTICAL    shift and go to state 142
    GREATER         shift and go to state 143
    GREATEREQUAL    shift and go to state 144
    LESS            shift and go to state 145
    LESSEQUAL       shift and go to state 146
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57

    opConditional                  shift and go to state 148
    boolean                        shift and go to state 147

state 101

    (129) conditionalEspecifico -> STRING . opConditional STRING
    (19) opConditional -> . ISEQUAL
    (20) opConditional -> . IS_NOT_IDENTICAL
    (21) opConditional -> . IS_IDENTICAL
    (22) opConditional -> . GREATER
    (23) opConditional -> . GREATEREQUAL
    (24) opConditional -> . LESS
    (25) opConditional -> . LESSEQUAL
    (26) opConditional -> . boolean
    (51) boolean -> . TRUE
    (52) boolean -> . FALSE

    ISEQUAL         shift and go to state 140
    IS_NOT_IDENTICAL shift and go to state 141
    IS_IDENTICAL    shift and go to state 142
    GREATER         shift and go to state 143
    GREATEREQUAL    shift and go to state 144
    LESS            shift and go to state 145
    LESSEQUAL       shift and go to state 146
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57

    opConditional                  shift and go to state 149
    boolean                        shift and go to state 147

state 102

    (36) sentencias_while -> WHILE LPAREN expression . RPAREN cuerpo_de_sentencias
    (37) sentencias_while -> WHILE LPAREN expression . operadorLogical expression RPAREN cuerpo_de_sentencias
    (27) operadorLogical -> . AND
    (28) operadorLogical -> . OR
    (29) operadorLogical -> . NOT

    RPAREN          shift and go to state 150
    AND             shift and go to state 136
    OR              shift and go to state 137
    NOT             shift and go to state 138

    operadorLogical                shift and go to state 151

state 103

    (38) impresion -> ALERT LPAREN valores_de_impresion . RPAREN COLON

    RPAREN          shift and go to state 152


state 104

    (44) impresion_vacio -> ALERT LPAREN RPAREN . COLON

    COLON           shift and go to state 153


state 105

    (39) valores_de_impresion -> inicializarOp .

    RPAREN          reduce using rule 39 (valores_de_impresion -> inicializarOp .)
    COLON           reduce using rule 39 (valores_de_impresion -> inicializarOp .)


state 106

    (40) valores_de_impresion -> javaScript_param .
    (94) return_ops -> javaScript_param .
    (95) return_ops -> javaScript_param . operadores_mat return_ops
    (96) operadores_mat -> . PLUS
    (97) operadores_mat -> . MINUS
    (98) operadores_mat -> . DIVIDE
    (99) operadores_mat -> . TIMES

  ! reduce/reduce conflict for RPAREN resolved using rule 40 (valores_de_impresion -> javaScript_param .)
  ! reduce/reduce conflict for COLON resolved using rule 40 (valores_de_impresion -> javaScript_param .)
    RPAREN          reduce using rule 40 (valores_de_impresion -> javaScript_param .)
    COLON           reduce using rule 40 (valores_de_impresion -> javaScript_param .)
    PLUS            shift and go to state 155
    MINUS           shift and go to state 156
    DIVIDE          shift and go to state 157
    TIMES           shift and go to state 158

  ! RPAREN          [ reduce using rule 94 (return_ops -> javaScript_param .) ]
  ! COLON           [ reduce using rule 94 (return_ops -> javaScript_param .) ]

    operadores_mat                 shift and go to state 154

state 107

    (41) valores_de_impresion -> callFunction .

    RPAREN          reduce using rule 41 (valores_de_impresion -> callFunction .)
    COLON           reduce using rule 41 (valores_de_impresion -> callFunction .)


state 108

    (42) valores_de_impresion -> estructuras_datos .

    RPAREN          reduce using rule 42 (valores_de_impresion -> estructuras_datos .)
    COLON           reduce using rule 42 (valores_de_impresion -> estructuras_datos .)


state 109

    (43) valores_de_impresion -> return_ops .

    RPAREN          reduce using rule 43 (valores_de_impresion -> return_ops .)
    COLON           reduce using rule 43 (valores_de_impresion -> return_ops .)


state 110

    (48) javaScript_param -> ID .
    (100) callFunction -> ID . LPAREN params RPAREN
    (101) callFunction -> ID . LPAREN RPAREN

    PLUS            reduce using rule 48 (javaScript_param -> ID .)
    MINUS           reduce using rule 48 (javaScript_param -> ID .)
    DIVIDE          reduce using rule 48 (javaScript_param -> ID .)
    TIMES           reduce using rule 48 (javaScript_param -> ID .)
    RPAREN          reduce using rule 48 (javaScript_param -> ID .)
    COLON           reduce using rule 48 (javaScript_param -> ID .)
    LPAREN          shift and go to state 38


state 111

    (112) suma -> numOperadores PLUS numOperadores .
    (112) suma -> numOperadores . PLUS numOperadores
    (113) suma -> numOperadores . PLUS LPAREN numOperadores RPAREN
    (114) suma -> numOperadores . PLUS suma
    (115) suma -> numOperadores . PLUS LPAREN numOperadores RPAREN suma

    $end            reduce using rule 112 (suma -> numOperadores PLUS numOperadores .)
    COLON           reduce using rule 112 (suma -> numOperadores PLUS numOperadores .)
    RPAREN          reduce using rule 112 (suma -> numOperadores PLUS numOperadores .)
    AND             reduce using rule 112 (suma -> numOperadores PLUS numOperadores .)
    OR              reduce using rule 112 (suma -> numOperadores PLUS numOperadores .)
    NOT             reduce using rule 112 (suma -> numOperadores PLUS numOperadores .)
    RBLOCK          reduce using rule 112 (suma -> numOperadores PLUS numOperadores .)
    RETURN          reduce using rule 112 (suma -> numOperadores PLUS numOperadores .)
    PLUS            shift and go to state 64


state 112

    (113) suma -> numOperadores PLUS LPAREN . numOperadores RPAREN
    (115) suma -> numOperadores PLUS LPAREN . numOperadores RPAREN suma
    (120) numOperadores -> . enteros
    (121) numOperadores -> . decimales
    (122) enteros -> . NUM
    (123) enteros -> . numNegative
    (126) decimales -> . enteros PERIOD NUM
    (124) numNegative -> . MINUS NUM
    (125) numNegative -> .

    NUM             shift and go to state 31
    MINUS           shift and go to state 27
    PERIOD          reduce using rule 125 (numNegative -> .)
    RPAREN          reduce using rule 125 (numNegative -> .)

    numOperadores                  shift and go to state 159
    enteros                        shift and go to state 29
    decimales                      shift and go to state 30
    numNegative                    shift and go to state 32

state 113

    (114) suma -> numOperadores PLUS suma .

    $end            reduce using rule 114 (suma -> numOperadores PLUS suma .)
    COLON           reduce using rule 114 (suma -> numOperadores PLUS suma .)
    RPAREN          reduce using rule 114 (suma -> numOperadores PLUS suma .)
    AND             reduce using rule 114 (suma -> numOperadores PLUS suma .)
    OR              reduce using rule 114 (suma -> numOperadores PLUS suma .)
    NOT             reduce using rule 114 (suma -> numOperadores PLUS suma .)
    RBLOCK          reduce using rule 114 (suma -> numOperadores PLUS suma .)
    RETURN          reduce using rule 114 (suma -> numOperadores PLUS suma .)


state 114

    (116) resta -> numOperadores MINUS numOperadores .
    (116) resta -> numOperadores . MINUS numOperadores
    (117) resta -> numOperadores . MINUS LPAREN numOperadores RPAREN
    (118) resta -> numOperadores . MINUS resta
    (119) resta -> numOperadores . MINUS LPAREN numOperadores RPAREN resta

    $end            reduce using rule 116 (resta -> numOperadores MINUS numOperadores .)
    COLON           reduce using rule 116 (resta -> numOperadores MINUS numOperadores .)
    RPAREN          reduce using rule 116 (resta -> numOperadores MINUS numOperadores .)
    AND             reduce using rule 116 (resta -> numOperadores MINUS numOperadores .)
    OR              reduce using rule 116 (resta -> numOperadores MINUS numOperadores .)
    NOT             reduce using rule 116 (resta -> numOperadores MINUS numOperadores .)
    RBLOCK          reduce using rule 116 (resta -> numOperadores MINUS numOperadores .)
    RETURN          reduce using rule 116 (resta -> numOperadores MINUS numOperadores .)
    MINUS           shift and go to state 65


state 115

    (117) resta -> numOperadores MINUS LPAREN . numOperadores RPAREN
    (119) resta -> numOperadores MINUS LPAREN . numOperadores RPAREN resta
    (120) numOperadores -> . enteros
    (121) numOperadores -> . decimales
    (122) enteros -> . NUM
    (123) enteros -> . numNegative
    (126) decimales -> . enteros PERIOD NUM
    (124) numNegative -> . MINUS NUM
    (125) numNegative -> .

    NUM             shift and go to state 31
    MINUS           shift and go to state 27
    PERIOD          reduce using rule 125 (numNegative -> .)
    RPAREN          reduce using rule 125 (numNegative -> .)

    numOperadores                  shift and go to state 160
    enteros                        shift and go to state 29
    decimales                      shift and go to state 30
    numNegative                    shift and go to state 32

state 116

    (118) resta -> numOperadores MINUS resta .

    $end            reduce using rule 118 (resta -> numOperadores MINUS resta .)
    COLON           reduce using rule 118 (resta -> numOperadores MINUS resta .)
    RPAREN          reduce using rule 118 (resta -> numOperadores MINUS resta .)
    AND             reduce using rule 118 (resta -> numOperadores MINUS resta .)
    OR              reduce using rule 118 (resta -> numOperadores MINUS resta .)
    NOT             reduce using rule 118 (resta -> numOperadores MINUS resta .)
    RBLOCK          reduce using rule 118 (resta -> numOperadores MINUS resta .)
    RETURN          reduce using rule 118 (resta -> numOperadores MINUS resta .)


state 117

    (126) decimales -> enteros PERIOD NUM .

    PLUS            reduce using rule 126 (decimales -> enteros PERIOD NUM .)
    MINUS           reduce using rule 126 (decimales -> enteros PERIOD NUM .)
    COLON           reduce using rule 126 (decimales -> enteros PERIOD NUM .)
    COMMA           reduce using rule 126 (decimales -> enteros PERIOD NUM .)
    RPAREN          reduce using rule 126 (decimales -> enteros PERIOD NUM .)
    RBRACKET        reduce using rule 126 (decimales -> enteros PERIOD NUM .)
    DIVIDE          reduce using rule 126 (decimales -> enteros PERIOD NUM .)
    TIMES           reduce using rule 126 (decimales -> enteros PERIOD NUM .)
    $end            reduce using rule 126 (decimales -> enteros PERIOD NUM .)
    AND             reduce using rule 126 (decimales -> enteros PERIOD NUM .)
    OR              reduce using rule 126 (decimales -> enteros PERIOD NUM .)
    NOT             reduce using rule 126 (decimales -> enteros PERIOD NUM .)
    RBLOCK          reduce using rule 126 (decimales -> enteros PERIOD NUM .)
    RETURN          reduce using rule 126 (decimales -> enteros PERIOD NUM .)


state 118

    (100) callFunction -> ID LPAREN params RPAREN .

    COLON           reduce using rule 100 (callFunction -> ID LPAREN params RPAREN .)
    RPAREN          reduce using rule 100 (callFunction -> ID LPAREN params RPAREN .)


state 119

    (104) paramList -> javaScript_param COMMA . paramList
    (103) paramList -> . javaScript_param
    (104) paramList -> . javaScript_param COMMA paramList
    (45) javaScript_param -> . STRING
    (46) javaScript_param -> . NUM
    (47) javaScript_param -> . boolean
    (48) javaScript_param -> . ID
    (49) javaScript_param -> . enteros
    (50) javaScript_param -> . decimales
    (51) boolean -> . TRUE
    (52) boolean -> . FALSE
    (122) enteros -> . NUM
    (123) enteros -> . numNegative
    (126) decimales -> . enteros PERIOD NUM
    (124) numNegative -> . MINUS NUM
    (125) numNegative -> .

    STRING          shift and go to state 48
    NUM             shift and go to state 49
    ID              shift and go to state 51
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    MINUS           shift and go to state 27
    PERIOD          reduce using rule 125 (numNegative -> .)
    COMMA           reduce using rule 125 (numNegative -> .)
    RPAREN          reduce using rule 125 (numNegative -> .)

    javaScript_param               shift and go to state 74
    paramList                      shift and go to state 161
    boolean                        shift and go to state 50
    enteros                        shift and go to state 75
    decimales                      shift and go to state 76
    numNegative                    shift and go to state 32

state 120

    (72) methodArray -> PERIOD PUSH LPAREN . javaScript_param RPAREN
    (45) javaScript_param -> . STRING
    (46) javaScript_param -> . NUM
    (47) javaScript_param -> . boolean
    (48) javaScript_param -> . ID
    (49) javaScript_param -> . enteros
    (50) javaScript_param -> . decimales
    (51) boolean -> . TRUE
    (52) boolean -> . FALSE
    (122) enteros -> . NUM
    (123) enteros -> . numNegative
    (126) decimales -> . enteros PERIOD NUM
    (124) numNegative -> . MINUS NUM
    (125) numNegative -> .

    STRING          shift and go to state 48
    NUM             shift and go to state 49
    ID              shift and go to state 51
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    MINUS           shift and go to state 27
    PERIOD          reduce using rule 125 (numNegative -> .)
    RPAREN          reduce using rule 125 (numNegative -> .)

    javaScript_param               shift and go to state 162
    boolean                        shift and go to state 50
    enteros                        shift and go to state 75
    decimales                      shift and go to state 76
    numNegative                    shift and go to state 32

state 121

    (73) methodArray -> PERIOD UNSHIFT LPAREN . arrayValues RPAREN
    (70) arrayValues -> . javaScript_param
    (71) arrayValues -> . javaScript_param COMMA arrayValues
    (45) javaScript_param -> . STRING
    (46) javaScript_param -> . NUM
    (47) javaScript_param -> . boolean
    (48) javaScript_param -> . ID
    (49) javaScript_param -> . enteros
    (50) javaScript_param -> . decimales
    (51) boolean -> . TRUE
    (52) boolean -> . FALSE
    (122) enteros -> . NUM
    (123) enteros -> . numNegative
    (126) decimales -> . enteros PERIOD NUM
    (124) numNegative -> . MINUS NUM
    (125) numNegative -> .

    STRING          shift and go to state 48
    NUM             shift and go to state 49
    ID              shift and go to state 51
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    MINUS           shift and go to state 27
    PERIOD          reduce using rule 125 (numNegative -> .)
    COMMA           reduce using rule 125 (numNegative -> .)
    RPAREN          reduce using rule 125 (numNegative -> .)

    arrayValues                    shift and go to state 163
    javaScript_param               shift and go to state 88
    boolean                        shift and go to state 50
    enteros                        shift and go to state 75
    decimales                      shift and go to state 76
    numNegative                    shift and go to state 32

state 122

    (74) methodArray -> PERIOD POP LPAREN . RPAREN

    RPAREN          shift and go to state 164


state 123

    (107) methodSet -> PERIOD ADD LPAREN . javaScript_param RPAREN
    (45) javaScript_param -> . STRING
    (46) javaScript_param -> . NUM
    (47) javaScript_param -> . boolean
    (48) javaScript_param -> . ID
    (49) javaScript_param -> . enteros
    (50) javaScript_param -> . decimales
    (51) boolean -> . TRUE
    (52) boolean -> . FALSE
    (122) enteros -> . NUM
    (123) enteros -> . numNegative
    (126) decimales -> . enteros PERIOD NUM
    (124) numNegative -> . MINUS NUM
    (125) numNegative -> .

    STRING          shift and go to state 48
    NUM             shift and go to state 49
    ID              shift and go to state 51
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    MINUS           shift and go to state 27
    PERIOD          reduce using rule 125 (numNegative -> .)
    RPAREN          reduce using rule 125 (numNegative -> .)

    javaScript_param               shift and go to state 165
    boolean                        shift and go to state 50
    enteros                        shift and go to state 75
    decimales                      shift and go to state 76
    numNegative                    shift and go to state 32

state 124

    (108) methodSet -> PERIOD DELETE LPAREN . javaScript_param RPAREN
    (45) javaScript_param -> . STRING
    (46) javaScript_param -> . NUM
    (47) javaScript_param -> . boolean
    (48) javaScript_param -> . ID
    (49) javaScript_param -> . enteros
    (50) javaScript_param -> . decimales
    (51) boolean -> . TRUE
    (52) boolean -> . FALSE
    (122) enteros -> . NUM
    (123) enteros -> . numNegative
    (126) decimales -> . enteros PERIOD NUM
    (124) numNegative -> . MINUS NUM
    (125) numNegative -> .

    STRING          shift and go to state 48
    NUM             shift and go to state 49
    ID              shift and go to state 51
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    MINUS           shift and go to state 27
    PERIOD          reduce using rule 125 (numNegative -> .)
    RPAREN          reduce using rule 125 (numNegative -> .)

    javaScript_param               shift and go to state 166
    boolean                        shift and go to state 50
    enteros                        shift and go to state 75
    decimales                      shift and go to state 76
    numNegative                    shift and go to state 32

state 125

    (109) methodSet -> PERIOD CLEAR LPAREN . RPAREN
    (86) methodMap -> PERIOD CLEAR LPAREN . RPAREN

    RPAREN          shift and go to state 167


state 126

    (87) methodMap -> PERIOD LENGTH LPAREN . RPAREN

    RPAREN          shift and go to state 168


state 127

    (67) arrayDeclare -> LBRACKET arrayValues RBRACKET .

    COLON           reduce using rule 67 (arrayDeclare -> LBRACKET arrayValues RBRACKET .)
    RPAREN          reduce using rule 67 (arrayDeclare -> LBRACKET arrayValues RBRACKET .)
    COMMA           reduce using rule 67 (arrayDeclare -> LBRACKET arrayValues RBRACKET .)
    RBRACKET        reduce using rule 67 (arrayDeclare -> LBRACKET arrayValues RBRACKET .)


state 128

    (71) arrayValues -> javaScript_param COMMA . arrayValues
    (70) arrayValues -> . javaScript_param
    (71) arrayValues -> . javaScript_param COMMA arrayValues
    (45) javaScript_param -> . STRING
    (46) javaScript_param -> . NUM
    (47) javaScript_param -> . boolean
    (48) javaScript_param -> . ID
    (49) javaScript_param -> . enteros
    (50) javaScript_param -> . decimales
    (51) boolean -> . TRUE
    (52) boolean -> . FALSE
    (122) enteros -> . NUM
    (123) enteros -> . numNegative
    (126) decimales -> . enteros PERIOD NUM
    (124) numNegative -> . MINUS NUM
    (125) numNegative -> .

    STRING          shift and go to state 48
    NUM             shift and go to state 49
    ID              shift and go to state 51
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    MINUS           shift and go to state 27
    PERIOD          reduce using rule 125 (numNegative -> .)
    COMMA           reduce using rule 125 (numNegative -> .)
    RBRACKET        reduce using rule 125 (numNegative -> .)
    RPAREN          reduce using rule 125 (numNegative -> .)

    javaScript_param               shift and go to state 88
    arrayValues                    shift and go to state 169
    boolean                        shift and go to state 50
    enteros                        shift and go to state 75
    decimales                      shift and go to state 76
    numNegative                    shift and go to state 32

state 129

    (68) arrayDeclare -> NEW ARRAY LPAREN . arrayValues RPAREN
    (69) arrayDeclare -> NEW ARRAY LPAREN . RPAREN
    (70) arrayValues -> . javaScript_param
    (71) arrayValues -> . javaScript_param COMMA arrayValues
    (45) javaScript_param -> . STRING
    (46) javaScript_param -> . NUM
    (47) javaScript_param -> . boolean
    (48) javaScript_param -> . ID
    (49) javaScript_param -> . enteros
    (50) javaScript_param -> . decimales
    (51) boolean -> . TRUE
    (52) boolean -> . FALSE
    (122) enteros -> . NUM
    (123) enteros -> . numNegative
    (126) decimales -> . enteros PERIOD NUM
    (124) numNegative -> . MINUS NUM
    (125) numNegative -> .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 171
    STRING          shift and go to state 48
    NUM             shift and go to state 49
    ID              shift and go to state 51
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    MINUS           shift and go to state 27
    PERIOD          reduce using rule 125 (numNegative -> .)
    COMMA           reduce using rule 125 (numNegative -> .)

  ! RPAREN          [ reduce using rule 125 (numNegative -> .) ]

    arrayValues                    shift and go to state 170
    javaScript_param               shift and go to state 88
    boolean                        shift and go to state 50
    enteros                        shift and go to state 75
    decimales                      shift and go to state 76
    numNegative                    shift and go to state 32

state 130

    (105) declararSet -> NEW SET LPAREN . RPAREN
    (106) declararSet -> NEW SET LPAREN . LBRACKET iterableSet RBRACKET RPAREN

    RPAREN          shift and go to state 172
    LBRACKET        shift and go to state 173


state 131

    (75) declareMap -> NEW MAP LPAREN . LBRACKET iterableMap RBRACKET RPAREN
    (76) declareMap -> NEW MAP LPAREN . RPAREN

    LBRACKET        shift and go to state 174
    RPAREN          shift and go to state 175


state 132

    (88) declareteFunction -> FUNCTION ID LPAREN params . RPAREN sentencesCmpt

    RPAREN          shift and go to state 176


state 133

    (89) declareteFunction -> FUNCTION ID LPAREN RPAREN . sentencesCmpt
    (90) sentencesCmpt -> . LBLOCK sentencia RBLOCK
    (91) sentencesCmpt -> . LBLOCK RBLOCK
    (92) sentencesCmpt -> . LBLOCK RETURN valores_de_impresion COLON RBLOCK
    (93) sentencesCmpt -> . LBLOCK sentencia RETURN valores_de_impresion COLON RBLOCK

    LBLOCK          shift and go to state 178

    sentencesCmpt                  shift and go to state 177

state 134

    (30) sentencias_if -> IF LPAREN expression operadorLogical . expression RPAREN cuerpo_de_sentencias
    (32) sentencias_if_else -> IF LPAREN expression operadorLogical . expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias
    (8) expression -> . conditionalEspecifico
    (9) expression -> . inicializarOp
    (127) conditionalEspecifico -> . ID opConditional dataCondi
    (128) conditionalEspecifico -> . NUM opConditional NUM
    (129) conditionalEspecifico -> . STRING opConditional STRING
    (110) inicializarOp -> . suma
    (111) inicializarOp -> . resta
    (112) suma -> . numOperadores PLUS numOperadores
    (113) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (114) suma -> . numOperadores PLUS suma
    (115) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN suma
    (116) resta -> . numOperadores MINUS numOperadores
    (117) resta -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (118) resta -> . numOperadores MINUS resta
    (119) resta -> . numOperadores MINUS LPAREN numOperadores RPAREN resta
    (120) numOperadores -> . enteros
    (121) numOperadores -> . decimales
    (122) enteros -> . NUM
    (123) enteros -> . numNegative
    (126) decimales -> . enteros PERIOD NUM
    (124) numNegative -> . MINUS NUM
    (125) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
    ID              shift and go to state 99
    NUM             shift and go to state 100
    STRING          shift and go to state 101
    MINUS           shift and go to state 27
    PERIOD          reduce using rule 125 (numNegative -> .)
    PLUS            reduce using rule 125 (numNegative -> .)

  ! MINUS           [ reduce using rule 125 (numNegative -> .) ]

    expression                     shift and go to state 179
    conditionalEspecifico          shift and go to state 97
    inicializarOp                  shift and go to state 98
    suma                           shift and go to state 18
    resta                          shift and go to state 19
    numOperadores                  shift and go to state 26
    enteros                        shift and go to state 29
    decimales                      shift and go to state 30
    numNegative                    shift and go to state 32

state 135

    (31) sentencias_if -> IF LPAREN expression RPAREN . cuerpo_de_sentencias
    (33) sentencias_if_else -> IF LPAREN expression RPAREN . cuerpo_de_sentencias ELSE cuerpo_de_sentencias
    (34) cuerpo_de_sentencias -> . LBLOCK sentencia RBLOCK
    (35) cuerpo_de_sentencias -> . LBLOCK RBLOCK

    LBLOCK          shift and go to state 181

    cuerpo_de_sentencias           shift and go to state 180

state 136

    (27) operadorLogical -> AND .

    ID              reduce using rule 27 (operadorLogical -> AND .)
    NUM             reduce using rule 27 (operadorLogical -> AND .)
    STRING          reduce using rule 27 (operadorLogical -> AND .)
    MINUS           reduce using rule 27 (operadorLogical -> AND .)
    PLUS            reduce using rule 27 (operadorLogical -> AND .)
    PERIOD          reduce using rule 27 (operadorLogical -> AND .)


state 137

    (28) operadorLogical -> OR .

    ID              reduce using rule 28 (operadorLogical -> OR .)
    NUM             reduce using rule 28 (operadorLogical -> OR .)
    STRING          reduce using rule 28 (operadorLogical -> OR .)
    MINUS           reduce using rule 28 (operadorLogical -> OR .)
    PLUS            reduce using rule 28 (operadorLogical -> OR .)
    PERIOD          reduce using rule 28 (operadorLogical -> OR .)


state 138

    (29) operadorLogical -> NOT .

    ID              reduce using rule 29 (operadorLogical -> NOT .)
    NUM             reduce using rule 29 (operadorLogical -> NOT .)
    STRING          reduce using rule 29 (operadorLogical -> NOT .)
    MINUS           reduce using rule 29 (operadorLogical -> NOT .)
    PLUS            reduce using rule 29 (operadorLogical -> NOT .)
    PERIOD          reduce using rule 29 (operadorLogical -> NOT .)


state 139

    (127) conditionalEspecifico -> ID opConditional . dataCondi
    (130) dataCondi -> . STRING
    (131) dataCondi -> . NUM

    STRING          shift and go to state 183
    NUM             shift and go to state 184

    dataCondi                      shift and go to state 182

state 140

    (19) opConditional -> ISEQUAL .

    STRING          reduce using rule 19 (opConditional -> ISEQUAL .)
    NUM             reduce using rule 19 (opConditional -> ISEQUAL .)


state 141

    (20) opConditional -> IS_NOT_IDENTICAL .

    STRING          reduce using rule 20 (opConditional -> IS_NOT_IDENTICAL .)
    NUM             reduce using rule 20 (opConditional -> IS_NOT_IDENTICAL .)


state 142

    (21) opConditional -> IS_IDENTICAL .

    STRING          reduce using rule 21 (opConditional -> IS_IDENTICAL .)
    NUM             reduce using rule 21 (opConditional -> IS_IDENTICAL .)


state 143

    (22) opConditional -> GREATER .

    STRING          reduce using rule 22 (opConditional -> GREATER .)
    NUM             reduce using rule 22 (opConditional -> GREATER .)


state 144

    (23) opConditional -> GREATEREQUAL .

    STRING          reduce using rule 23 (opConditional -> GREATEREQUAL .)
    NUM             reduce using rule 23 (opConditional -> GREATEREQUAL .)


state 145

    (24) opConditional -> LESS .

    STRING          reduce using rule 24 (opConditional -> LESS .)
    NUM             reduce using rule 24 (opConditional -> LESS .)


state 146

    (25) opConditional -> LESSEQUAL .

    STRING          reduce using rule 25 (opConditional -> LESSEQUAL .)
    NUM             reduce using rule 25 (opConditional -> LESSEQUAL .)


state 147

    (26) opConditional -> boolean .

    STRING          reduce using rule 26 (opConditional -> boolean .)
    NUM             reduce using rule 26 (opConditional -> boolean .)


state 148

    (128) conditionalEspecifico -> NUM opConditional . NUM

    NUM             shift and go to state 185


state 149

    (129) conditionalEspecifico -> STRING opConditional . STRING

    STRING          shift and go to state 186


state 150

    (36) sentencias_while -> WHILE LPAREN expression RPAREN . cuerpo_de_sentencias
    (34) cuerpo_de_sentencias -> . LBLOCK sentencia RBLOCK
    (35) cuerpo_de_sentencias -> . LBLOCK RBLOCK

    LBLOCK          shift and go to state 181

    cuerpo_de_sentencias           shift and go to state 187

state 151

    (37) sentencias_while -> WHILE LPAREN expression operadorLogical . expression RPAREN cuerpo_de_sentencias
    (8) expression -> . conditionalEspecifico
    (9) expression -> . inicializarOp
    (127) conditionalEspecifico -> . ID opConditional dataCondi
    (128) conditionalEspecifico -> . NUM opConditional NUM
    (129) conditionalEspecifico -> . STRING opConditional STRING
    (110) inicializarOp -> . suma
    (111) inicializarOp -> . resta
    (112) suma -> . numOperadores PLUS numOperadores
    (113) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (114) suma -> . numOperadores PLUS suma
    (115) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN suma
    (116) resta -> . numOperadores MINUS numOperadores
    (117) resta -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (118) resta -> . numOperadores MINUS resta
    (119) resta -> . numOperadores MINUS LPAREN numOperadores RPAREN resta
    (120) numOperadores -> . enteros
    (121) numOperadores -> . decimales
    (122) enteros -> . NUM
    (123) enteros -> . numNegative
    (126) decimales -> . enteros PERIOD NUM
    (124) numNegative -> . MINUS NUM
    (125) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
    ID              shift and go to state 99
    NUM             shift and go to state 100
    STRING          shift and go to state 101
    MINUS           shift and go to state 27
    PERIOD          reduce using rule 125 (numNegative -> .)
    PLUS            reduce using rule 125 (numNegative -> .)

  ! MINUS           [ reduce using rule 125 (numNegative -> .) ]

    expression                     shift and go to state 188
    conditionalEspecifico          shift and go to state 97
    inicializarOp                  shift and go to state 98
    suma                           shift and go to state 18
    resta                          shift and go to state 19
    numOperadores                  shift and go to state 26
    enteros                        shift and go to state 29
    decimales                      shift and go to state 30
    numNegative                    shift and go to state 32

state 152

    (38) impresion -> ALERT LPAREN valores_de_impresion RPAREN . COLON

    COLON           shift and go to state 189


state 153

    (44) impresion_vacio -> ALERT LPAREN RPAREN COLON .

    $end            reduce using rule 44 (impresion_vacio -> ALERT LPAREN RPAREN COLON .)
    RBLOCK          reduce using rule 44 (impresion_vacio -> ALERT LPAREN RPAREN COLON .)
    RETURN          reduce using rule 44 (impresion_vacio -> ALERT LPAREN RPAREN COLON .)


state 154

    (95) return_ops -> javaScript_param operadores_mat . return_ops
    (94) return_ops -> . javaScript_param
    (95) return_ops -> . javaScript_param operadores_mat return_ops
    (45) javaScript_param -> . STRING
    (46) javaScript_param -> . NUM
    (47) javaScript_param -> . boolean
    (48) javaScript_param -> . ID
    (49) javaScript_param -> . enteros
    (50) javaScript_param -> . decimales
    (51) boolean -> . TRUE
    (52) boolean -> . FALSE
    (122) enteros -> . NUM
    (123) enteros -> . numNegative
    (126) decimales -> . enteros PERIOD NUM
    (124) numNegative -> . MINUS NUM
    (125) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
    STRING          shift and go to state 48
    NUM             shift and go to state 49
    ID              shift and go to state 51
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    MINUS           shift and go to state 27
    PERIOD          reduce using rule 125 (numNegative -> .)
    PLUS            reduce using rule 125 (numNegative -> .)
    DIVIDE          reduce using rule 125 (numNegative -> .)
    TIMES           reduce using rule 125 (numNegative -> .)
    RPAREN          reduce using rule 125 (numNegative -> .)
    COLON           reduce using rule 125 (numNegative -> .)

  ! MINUS           [ reduce using rule 125 (numNegative -> .) ]

    javaScript_param               shift and go to state 190
    return_ops                     shift and go to state 191
    boolean                        shift and go to state 50
    enteros                        shift and go to state 75
    decimales                      shift and go to state 76
    numNegative                    shift and go to state 32

state 155

    (96) operadores_mat -> PLUS .

    STRING          reduce using rule 96 (operadores_mat -> PLUS .)
    NUM             reduce using rule 96 (operadores_mat -> PLUS .)
    ID              reduce using rule 96 (operadores_mat -> PLUS .)
    TRUE            reduce using rule 96 (operadores_mat -> PLUS .)
    FALSE           reduce using rule 96 (operadores_mat -> PLUS .)
    MINUS           reduce using rule 96 (operadores_mat -> PLUS .)
    PLUS            reduce using rule 96 (operadores_mat -> PLUS .)
    DIVIDE          reduce using rule 96 (operadores_mat -> PLUS .)
    TIMES           reduce using rule 96 (operadores_mat -> PLUS .)
    PERIOD          reduce using rule 96 (operadores_mat -> PLUS .)
    RPAREN          reduce using rule 96 (operadores_mat -> PLUS .)
    COLON           reduce using rule 96 (operadores_mat -> PLUS .)


state 156

    (97) operadores_mat -> MINUS .

    STRING          reduce using rule 97 (operadores_mat -> MINUS .)
    NUM             reduce using rule 97 (operadores_mat -> MINUS .)
    ID              reduce using rule 97 (operadores_mat -> MINUS .)
    TRUE            reduce using rule 97 (operadores_mat -> MINUS .)
    FALSE           reduce using rule 97 (operadores_mat -> MINUS .)
    MINUS           reduce using rule 97 (operadores_mat -> MINUS .)
    PLUS            reduce using rule 97 (operadores_mat -> MINUS .)
    DIVIDE          reduce using rule 97 (operadores_mat -> MINUS .)
    TIMES           reduce using rule 97 (operadores_mat -> MINUS .)
    PERIOD          reduce using rule 97 (operadores_mat -> MINUS .)
    RPAREN          reduce using rule 97 (operadores_mat -> MINUS .)
    COLON           reduce using rule 97 (operadores_mat -> MINUS .)


state 157

    (98) operadores_mat -> DIVIDE .

    STRING          reduce using rule 98 (operadores_mat -> DIVIDE .)
    NUM             reduce using rule 98 (operadores_mat -> DIVIDE .)
    ID              reduce using rule 98 (operadores_mat -> DIVIDE .)
    TRUE            reduce using rule 98 (operadores_mat -> DIVIDE .)
    FALSE           reduce using rule 98 (operadores_mat -> DIVIDE .)
    MINUS           reduce using rule 98 (operadores_mat -> DIVIDE .)
    PLUS            reduce using rule 98 (operadores_mat -> DIVIDE .)
    DIVIDE          reduce using rule 98 (operadores_mat -> DIVIDE .)
    TIMES           reduce using rule 98 (operadores_mat -> DIVIDE .)
    PERIOD          reduce using rule 98 (operadores_mat -> DIVIDE .)
    RPAREN          reduce using rule 98 (operadores_mat -> DIVIDE .)
    COLON           reduce using rule 98 (operadores_mat -> DIVIDE .)


state 158

    (99) operadores_mat -> TIMES .

    STRING          reduce using rule 99 (operadores_mat -> TIMES .)
    NUM             reduce using rule 99 (operadores_mat -> TIMES .)
    ID              reduce using rule 99 (operadores_mat -> TIMES .)
    TRUE            reduce using rule 99 (operadores_mat -> TIMES .)
    FALSE           reduce using rule 99 (operadores_mat -> TIMES .)
    MINUS           reduce using rule 99 (operadores_mat -> TIMES .)
    PLUS            reduce using rule 99 (operadores_mat -> TIMES .)
    DIVIDE          reduce using rule 99 (operadores_mat -> TIMES .)
    TIMES           reduce using rule 99 (operadores_mat -> TIMES .)
    PERIOD          reduce using rule 99 (operadores_mat -> TIMES .)
    RPAREN          reduce using rule 99 (operadores_mat -> TIMES .)
    COLON           reduce using rule 99 (operadores_mat -> TIMES .)


state 159

    (113) suma -> numOperadores PLUS LPAREN numOperadores . RPAREN
    (115) suma -> numOperadores PLUS LPAREN numOperadores . RPAREN suma

    RPAREN          shift and go to state 192


state 160

    (117) resta -> numOperadores MINUS LPAREN numOperadores . RPAREN
    (119) resta -> numOperadores MINUS LPAREN numOperadores . RPAREN resta

    RPAREN          shift and go to state 193


state 161

    (104) paramList -> javaScript_param COMMA paramList .

    RPAREN          reduce using rule 104 (paramList -> javaScript_param COMMA paramList .)


state 162

    (72) methodArray -> PERIOD PUSH LPAREN javaScript_param . RPAREN

    RPAREN          shift and go to state 194


state 163

    (73) methodArray -> PERIOD UNSHIFT LPAREN arrayValues . RPAREN

    RPAREN          shift and go to state 195


state 164

    (74) methodArray -> PERIOD POP LPAREN RPAREN .

    COLON           reduce using rule 74 (methodArray -> PERIOD POP LPAREN RPAREN .)


state 165

    (107) methodSet -> PERIOD ADD LPAREN javaScript_param . RPAREN

    RPAREN          shift and go to state 196


state 166

    (108) methodSet -> PERIOD DELETE LPAREN javaScript_param . RPAREN

    RPAREN          shift and go to state 197


state 167

    (109) methodSet -> PERIOD CLEAR LPAREN RPAREN .
    (86) methodMap -> PERIOD CLEAR LPAREN RPAREN .

  ! reduce/reduce conflict for COLON resolved using rule 86 (methodMap -> PERIOD CLEAR LPAREN RPAREN .)
    COLON           reduce using rule 86 (methodMap -> PERIOD CLEAR LPAREN RPAREN .)

  ! COLON           [ reduce using rule 109 (methodSet -> PERIOD CLEAR LPAREN RPAREN .) ]


state 168

    (87) methodMap -> PERIOD LENGTH LPAREN RPAREN .

    COLON           reduce using rule 87 (methodMap -> PERIOD LENGTH LPAREN RPAREN .)


state 169

    (71) arrayValues -> javaScript_param COMMA arrayValues .

    RBRACKET        reduce using rule 71 (arrayValues -> javaScript_param COMMA arrayValues .)
    RPAREN          reduce using rule 71 (arrayValues -> javaScript_param COMMA arrayValues .)


state 170

    (68) arrayDeclare -> NEW ARRAY LPAREN arrayValues . RPAREN

    RPAREN          shift and go to state 198


state 171

    (69) arrayDeclare -> NEW ARRAY LPAREN RPAREN .

    COLON           reduce using rule 69 (arrayDeclare -> NEW ARRAY LPAREN RPAREN .)
    RPAREN          reduce using rule 69 (arrayDeclare -> NEW ARRAY LPAREN RPAREN .)
    COMMA           reduce using rule 69 (arrayDeclare -> NEW ARRAY LPAREN RPAREN .)
    RBRACKET        reduce using rule 69 (arrayDeclare -> NEW ARRAY LPAREN RPAREN .)


state 172

    (105) declararSet -> NEW SET LPAREN RPAREN .

    COLON           reduce using rule 105 (declararSet -> NEW SET LPAREN RPAREN .)
    RPAREN          reduce using rule 105 (declararSet -> NEW SET LPAREN RPAREN .)
    COMMA           reduce using rule 105 (declararSet -> NEW SET LPAREN RPAREN .)
    RBRACKET        reduce using rule 105 (declararSet -> NEW SET LPAREN RPAREN .)


state 173

    (106) declararSet -> NEW SET LPAREN LBRACKET . iterableSet RBRACKET RPAREN
    (83) iterableSet -> . keyValue
    (84) iterableSet -> . keyValue COMMA iterableSet
    (85) iterableSet -> .
    (79) keyValue -> . javaScript_param
    (80) keyValue -> . declararSet
    (81) keyValue -> . declareMap
    (82) keyValue -> . arrayDeclare
    (45) javaScript_param -> . STRING
    (46) javaScript_param -> . NUM
    (47) javaScript_param -> . boolean
    (48) javaScript_param -> . ID
    (49) javaScript_param -> . enteros
    (50) javaScript_param -> . decimales
    (105) declararSet -> . NEW SET LPAREN RPAREN
    (106) declararSet -> . NEW SET LPAREN LBRACKET iterableSet RBRACKET RPAREN
    (75) declareMap -> . NEW MAP LPAREN LBRACKET iterableMap RBRACKET RPAREN
    (76) declareMap -> . NEW MAP LPAREN RPAREN
    (66) arrayDeclare -> . LBRACKET RBRACKET
    (67) arrayDeclare -> . LBRACKET arrayValues RBRACKET
    (68) arrayDeclare -> . NEW ARRAY LPAREN arrayValues RPAREN
    (69) arrayDeclare -> . NEW ARRAY LPAREN RPAREN
    (51) boolean -> . TRUE
    (52) boolean -> . FALSE
    (122) enteros -> . NUM
    (123) enteros -> . numNegative
    (126) decimales -> . enteros PERIOD NUM
    (124) numNegative -> . MINUS NUM
    (125) numNegative -> .

  ! reduce/reduce conflict for RBRACKET resolved using rule 85 (iterableSet -> .)
    RBRACKET        reduce using rule 85 (iterableSet -> .)
    STRING          shift and go to state 48
    NUM             shift and go to state 49
    ID              shift and go to state 51
    NEW             shift and go to state 199
    LBRACKET        shift and go to state 54
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    MINUS           shift and go to state 27
    PERIOD          reduce using rule 125 (numNegative -> .)
    COMMA           reduce using rule 125 (numNegative -> .)

  ! RBRACKET        [ reduce using rule 125 (numNegative -> .) ]

    iterableSet                    shift and go to state 200
    keyValue                       shift and go to state 201
    javaScript_param               shift and go to state 202
    declararSet                    shift and go to state 203
    declareMap                     shift and go to state 204
    arrayDeclare                   shift and go to state 205
    boolean                        shift and go to state 50
    enteros                        shift and go to state 75
    decimales                      shift and go to state 76
    numNegative                    shift and go to state 32

state 174

    (75) declareMap -> NEW MAP LPAREN LBRACKET . iterableMap RBRACKET RPAREN
    (77) iterableMap -> . LBRACKET keyValue COMMA keyValue RBRACKET
    (78) iterableMap -> . LBRACKET keyValue COMMA keyValue RBRACKET COMMA iterableMap

    LBRACKET        shift and go to state 206

    iterableMap                    shift and go to state 207

state 175

    (76) declareMap -> NEW MAP LPAREN RPAREN .

    COLON           reduce using rule 76 (declareMap -> NEW MAP LPAREN RPAREN .)
    RPAREN          reduce using rule 76 (declareMap -> NEW MAP LPAREN RPAREN .)
    COMMA           reduce using rule 76 (declareMap -> NEW MAP LPAREN RPAREN .)
    RBRACKET        reduce using rule 76 (declareMap -> NEW MAP LPAREN RPAREN .)


state 176

    (88) declareteFunction -> FUNCTION ID LPAREN params RPAREN . sentencesCmpt
    (90) sentencesCmpt -> . LBLOCK sentencia RBLOCK
    (91) sentencesCmpt -> . LBLOCK RBLOCK
    (92) sentencesCmpt -> . LBLOCK RETURN valores_de_impresion COLON RBLOCK
    (93) sentencesCmpt -> . LBLOCK sentencia RETURN valores_de_impresion COLON RBLOCK

    LBLOCK          shift and go to state 178

    sentencesCmpt                  shift and go to state 208

state 177

    (89) declareteFunction -> FUNCTION ID LPAREN RPAREN sentencesCmpt .

    $end            reduce using rule 89 (declareteFunction -> FUNCTION ID LPAREN RPAREN sentencesCmpt .)
    RBLOCK          reduce using rule 89 (declareteFunction -> FUNCTION ID LPAREN RPAREN sentencesCmpt .)
    RETURN          reduce using rule 89 (declareteFunction -> FUNCTION ID LPAREN RPAREN sentencesCmpt .)


state 178

    (90) sentencesCmpt -> LBLOCK . sentencia RBLOCK
    (91) sentencesCmpt -> LBLOCK . RBLOCK
    (92) sentencesCmpt -> LBLOCK . RETURN valores_de_impresion COLON RBLOCK
    (93) sentencesCmpt -> LBLOCK . sentencia RETURN valores_de_impresion COLON RBLOCK
    (1) sentencia -> . callMethods
    (2) sentencia -> . callFunction COLON
    (3) sentencia -> . varDeclaration
    (4) sentencia -> . controlExpression
    (5) sentencia -> . declareteFunction
    (6) sentencia -> . assingOperadores COLON
    (7) sentencia -> . inicializarOp
    (63) callMethods -> . ID methodArray COLON
    (64) callMethods -> . ID methodSet COLON
    (65) callMethods -> . ID methodMap COLON
    (100) callFunction -> . ID LPAREN params RPAREN
    (101) callFunction -> . ID LPAREN RPAREN
    (56) varDeclaration -> . asignarID assign
    (57) varDeclaration -> . varType_let ID COLON
    (14) controlExpression -> . sentencias_if
    (15) controlExpression -> . sentencias_if_else
    (16) controlExpression -> . sentencias_while
    (17) controlExpression -> . impresion
    (18) controlExpression -> . impresion_vacio
    (88) declareteFunction -> . FUNCTION ID LPAREN params RPAREN sentencesCmpt
    (89) declareteFunction -> . FUNCTION ID LPAREN RPAREN sentencesCmpt
    (13) assingOperadores -> . asignarID inicializarOp
    (110) inicializarOp -> . suma
    (111) inicializarOp -> . resta
    (10) asignarID -> . ID EQUAL
    (11) asignarID -> . varType_const ID EQUAL
    (12) asignarID -> . varType_let ID EQUAL
    (54) varType_let -> . LET
    (55) varType_let -> . VAR
    (30) sentencias_if -> . IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias
    (31) sentencias_if -> . IF LPAREN expression RPAREN cuerpo_de_sentencias
    (32) sentencias_if_else -> . IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias
    (33) sentencias_if_else -> . IF LPAREN expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias
    (36) sentencias_while -> . WHILE LPAREN expression RPAREN cuerpo_de_sentencias
    (37) sentencias_while -> . WHILE LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias
    (38) impresion -> . ALERT LPAREN valores_de_impresion RPAREN COLON
    (44) impresion_vacio -> . ALERT LPAREN RPAREN COLON
    (112) suma -> . numOperadores PLUS numOperadores
    (113) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (114) suma -> . numOperadores PLUS suma
    (115) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN suma
    (116) resta -> . numOperadores MINUS numOperadores
    (117) resta -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (118) resta -> . numOperadores MINUS resta
    (119) resta -> . numOperadores MINUS LPAREN numOperadores RPAREN resta
    (53) varType_const -> . CONST
    (120) numOperadores -> . enteros
    (121) numOperadores -> . decimales
    (122) enteros -> . NUM
    (123) enteros -> . numNegative
    (126) decimales -> . enteros PERIOD NUM
    (124) numNegative -> . MINUS NUM
    (125) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
    RBLOCK          shift and go to state 210
    RETURN          shift and go to state 211
    ID              shift and go to state 9
    FUNCTION        shift and go to state 17
    LET             shift and go to state 21
    VAR             shift and go to state 22
    IF              shift and go to state 23
    WHILE           shift and go to state 24
    ALERT           shift and go to state 25
    CONST           shift and go to state 28
    NUM             shift and go to state 31
    MINUS           shift and go to state 27
    PERIOD          reduce using rule 125 (numNegative -> .)
    PLUS            reduce using rule 125 (numNegative -> .)

  ! MINUS           [ reduce using rule 125 (numNegative -> .) ]

    sentencia                      shift and go to state 209
    callMethods                    shift and go to state 2
    callFunction                   shift and go to state 3
    varDeclaration                 shift and go to state 4
    controlExpression              shift and go to state 5
    declareteFunction              shift and go to state 6
    assingOperadores               shift and go to state 7
    inicializarOp                  shift and go to state 8
    asignarID                      shift and go to state 10
    varType_let                    shift and go to state 11
    sentencias_if                  shift and go to state 12
    sentencias_if_else             shift and go to state 13
    sentencias_while               shift and go to state 14
    impresion                      shift and go to state 15
    impresion_vacio                shift and go to state 16
    suma                           shift and go to state 18
    resta                          shift and go to state 19
    varType_const                  shift and go to state 20
    numOperadores                  shift and go to state 26
    enteros                        shift and go to state 29
    decimales                      shift and go to state 30
    numNegative                    shift and go to state 32

state 179

    (30) sentencias_if -> IF LPAREN expression operadorLogical expression . RPAREN cuerpo_de_sentencias
    (32) sentencias_if_else -> IF LPAREN expression operadorLogical expression . RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias

    RPAREN          shift and go to state 212


state 180

    (31) sentencias_if -> IF LPAREN expression RPAREN cuerpo_de_sentencias .
    (33) sentencias_if_else -> IF LPAREN expression RPAREN cuerpo_de_sentencias . ELSE cuerpo_de_sentencias

    $end            reduce using rule 31 (sentencias_if -> IF LPAREN expression RPAREN cuerpo_de_sentencias .)
    RBLOCK          reduce using rule 31 (sentencias_if -> IF LPAREN expression RPAREN cuerpo_de_sentencias .)
    RETURN          reduce using rule 31 (sentencias_if -> IF LPAREN expression RPAREN cuerpo_de_sentencias .)
    ELSE            shift and go to state 213


state 181

    (34) cuerpo_de_sentencias -> LBLOCK . sentencia RBLOCK
    (35) cuerpo_de_sentencias -> LBLOCK . RBLOCK
    (1) sentencia -> . callMethods
    (2) sentencia -> . callFunction COLON
    (3) sentencia -> . varDeclaration
    (4) sentencia -> . controlExpression
    (5) sentencia -> . declareteFunction
    (6) sentencia -> . assingOperadores COLON
    (7) sentencia -> . inicializarOp
    (63) callMethods -> . ID methodArray COLON
    (64) callMethods -> . ID methodSet COLON
    (65) callMethods -> . ID methodMap COLON
    (100) callFunction -> . ID LPAREN params RPAREN
    (101) callFunction -> . ID LPAREN RPAREN
    (56) varDeclaration -> . asignarID assign
    (57) varDeclaration -> . varType_let ID COLON
    (14) controlExpression -> . sentencias_if
    (15) controlExpression -> . sentencias_if_else
    (16) controlExpression -> . sentencias_while
    (17) controlExpression -> . impresion
    (18) controlExpression -> . impresion_vacio
    (88) declareteFunction -> . FUNCTION ID LPAREN params RPAREN sentencesCmpt
    (89) declareteFunction -> . FUNCTION ID LPAREN RPAREN sentencesCmpt
    (13) assingOperadores -> . asignarID inicializarOp
    (110) inicializarOp -> . suma
    (111) inicializarOp -> . resta
    (10) asignarID -> . ID EQUAL
    (11) asignarID -> . varType_const ID EQUAL
    (12) asignarID -> . varType_let ID EQUAL
    (54) varType_let -> . LET
    (55) varType_let -> . VAR
    (30) sentencias_if -> . IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias
    (31) sentencias_if -> . IF LPAREN expression RPAREN cuerpo_de_sentencias
    (32) sentencias_if_else -> . IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias
    (33) sentencias_if_else -> . IF LPAREN expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias
    (36) sentencias_while -> . WHILE LPAREN expression RPAREN cuerpo_de_sentencias
    (37) sentencias_while -> . WHILE LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias
    (38) impresion -> . ALERT LPAREN valores_de_impresion RPAREN COLON
    (44) impresion_vacio -> . ALERT LPAREN RPAREN COLON
    (112) suma -> . numOperadores PLUS numOperadores
    (113) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (114) suma -> . numOperadores PLUS suma
    (115) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN suma
    (116) resta -> . numOperadores MINUS numOperadores
    (117) resta -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (118) resta -> . numOperadores MINUS resta
    (119) resta -> . numOperadores MINUS LPAREN numOperadores RPAREN resta
    (53) varType_const -> . CONST
    (120) numOperadores -> . enteros
    (121) numOperadores -> . decimales
    (122) enteros -> . NUM
    (123) enteros -> . numNegative
    (126) decimales -> . enteros PERIOD NUM
    (124) numNegative -> . MINUS NUM
    (125) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
    RBLOCK          shift and go to state 215
    ID              shift and go to state 9
    FUNCTION        shift and go to state 17
    LET             shift and go to state 21
    VAR             shift and go to state 22
    IF              shift and go to state 23
    WHILE           shift and go to state 24
    ALERT           shift and go to state 25
    CONST           shift and go to state 28
    NUM             shift and go to state 31
    MINUS           shift and go to state 27
    PERIOD          reduce using rule 125 (numNegative -> .)
    PLUS            reduce using rule 125 (numNegative -> .)

  ! MINUS           [ reduce using rule 125 (numNegative -> .) ]

    sentencia                      shift and go to state 214
    callMethods                    shift and go to state 2
    callFunction                   shift and go to state 3
    varDeclaration                 shift and go to state 4
    controlExpression              shift and go to state 5
    declareteFunction              shift and go to state 6
    assingOperadores               shift and go to state 7
    inicializarOp                  shift and go to state 8
    asignarID                      shift and go to state 10
    varType_let                    shift and go to state 11
    sentencias_if                  shift and go to state 12
    sentencias_if_else             shift and go to state 13
    sentencias_while               shift and go to state 14
    impresion                      shift and go to state 15
    impresion_vacio                shift and go to state 16
    suma                           shift and go to state 18
    resta                          shift and go to state 19
    varType_const                  shift and go to state 20
    numOperadores                  shift and go to state 26
    enteros                        shift and go to state 29
    decimales                      shift and go to state 30
    numNegative                    shift and go to state 32

state 182

    (127) conditionalEspecifico -> ID opConditional dataCondi .

    RPAREN          reduce using rule 127 (conditionalEspecifico -> ID opConditional dataCondi .)
    AND             reduce using rule 127 (conditionalEspecifico -> ID opConditional dataCondi .)
    OR              reduce using rule 127 (conditionalEspecifico -> ID opConditional dataCondi .)
    NOT             reduce using rule 127 (conditionalEspecifico -> ID opConditional dataCondi .)


state 183

    (130) dataCondi -> STRING .

    RPAREN          reduce using rule 130 (dataCondi -> STRING .)
    AND             reduce using rule 130 (dataCondi -> STRING .)
    OR              reduce using rule 130 (dataCondi -> STRING .)
    NOT             reduce using rule 130 (dataCondi -> STRING .)


state 184

    (131) dataCondi -> NUM .

    RPAREN          reduce using rule 131 (dataCondi -> NUM .)
    AND             reduce using rule 131 (dataCondi -> NUM .)
    OR              reduce using rule 131 (dataCondi -> NUM .)
    NOT             reduce using rule 131 (dataCondi -> NUM .)


state 185

    (128) conditionalEspecifico -> NUM opConditional NUM .

    RPAREN          reduce using rule 128 (conditionalEspecifico -> NUM opConditional NUM .)
    AND             reduce using rule 128 (conditionalEspecifico -> NUM opConditional NUM .)
    OR              reduce using rule 128 (conditionalEspecifico -> NUM opConditional NUM .)
    NOT             reduce using rule 128 (conditionalEspecifico -> NUM opConditional NUM .)


state 186

    (129) conditionalEspecifico -> STRING opConditional STRING .

    RPAREN          reduce using rule 129 (conditionalEspecifico -> STRING opConditional STRING .)
    AND             reduce using rule 129 (conditionalEspecifico -> STRING opConditional STRING .)
    OR              reduce using rule 129 (conditionalEspecifico -> STRING opConditional STRING .)
    NOT             reduce using rule 129 (conditionalEspecifico -> STRING opConditional STRING .)


state 187

    (36) sentencias_while -> WHILE LPAREN expression RPAREN cuerpo_de_sentencias .

    $end            reduce using rule 36 (sentencias_while -> WHILE LPAREN expression RPAREN cuerpo_de_sentencias .)
    RBLOCK          reduce using rule 36 (sentencias_while -> WHILE LPAREN expression RPAREN cuerpo_de_sentencias .)
    RETURN          reduce using rule 36 (sentencias_while -> WHILE LPAREN expression RPAREN cuerpo_de_sentencias .)


state 188

    (37) sentencias_while -> WHILE LPAREN expression operadorLogical expression . RPAREN cuerpo_de_sentencias

    RPAREN          shift and go to state 216


state 189

    (38) impresion -> ALERT LPAREN valores_de_impresion RPAREN COLON .

    $end            reduce using rule 38 (impresion -> ALERT LPAREN valores_de_impresion RPAREN COLON .)
    RBLOCK          reduce using rule 38 (impresion -> ALERT LPAREN valores_de_impresion RPAREN COLON .)
    RETURN          reduce using rule 38 (impresion -> ALERT LPAREN valores_de_impresion RPAREN COLON .)


state 190

    (94) return_ops -> javaScript_param .
    (95) return_ops -> javaScript_param . operadores_mat return_ops
    (96) operadores_mat -> . PLUS
    (97) operadores_mat -> . MINUS
    (98) operadores_mat -> . DIVIDE
    (99) operadores_mat -> . TIMES

    RPAREN          reduce using rule 94 (return_ops -> javaScript_param .)
    COLON           reduce using rule 94 (return_ops -> javaScript_param .)
    PLUS            shift and go to state 155
    MINUS           shift and go to state 156
    DIVIDE          shift and go to state 157
    TIMES           shift and go to state 158

    operadores_mat                 shift and go to state 154

state 191

    (95) return_ops -> javaScript_param operadores_mat return_ops .

    RPAREN          reduce using rule 95 (return_ops -> javaScript_param operadores_mat return_ops .)
    COLON           reduce using rule 95 (return_ops -> javaScript_param operadores_mat return_ops .)


state 192

    (113) suma -> numOperadores PLUS LPAREN numOperadores RPAREN .
    (115) suma -> numOperadores PLUS LPAREN numOperadores RPAREN . suma
    (112) suma -> . numOperadores PLUS numOperadores
    (113) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (114) suma -> . numOperadores PLUS suma
    (115) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN suma
    (120) numOperadores -> . enteros
    (121) numOperadores -> . decimales
    (122) enteros -> . NUM
    (123) enteros -> . numNegative
    (126) decimales -> . enteros PERIOD NUM
    (124) numNegative -> . MINUS NUM
    (125) numNegative -> .

    $end            reduce using rule 113 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    COLON           reduce using rule 113 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    RPAREN          reduce using rule 113 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    AND             reduce using rule 113 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    OR              reduce using rule 113 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    NOT             reduce using rule 113 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    RBLOCK          reduce using rule 113 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    RETURN          reduce using rule 113 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    NUM             shift and go to state 31
    MINUS           shift and go to state 27
    PERIOD          reduce using rule 125 (numNegative -> .)
    PLUS            reduce using rule 125 (numNegative -> .)

    numOperadores                  shift and go to state 217
    suma                           shift and go to state 218
    enteros                        shift and go to state 29
    decimales                      shift and go to state 30
    numNegative                    shift and go to state 32

state 193

    (117) resta -> numOperadores MINUS LPAREN numOperadores RPAREN .
    (119) resta -> numOperadores MINUS LPAREN numOperadores RPAREN . resta
    (116) resta -> . numOperadores MINUS numOperadores
    (117) resta -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (118) resta -> . numOperadores MINUS resta
    (119) resta -> . numOperadores MINUS LPAREN numOperadores RPAREN resta
    (120) numOperadores -> . enteros
    (121) numOperadores -> . decimales
    (122) enteros -> . NUM
    (123) enteros -> . numNegative
    (126) decimales -> . enteros PERIOD NUM
    (124) numNegative -> . MINUS NUM
    (125) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 117 (resta -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    COLON           reduce using rule 117 (resta -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    RPAREN          reduce using rule 117 (resta -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    AND             reduce using rule 117 (resta -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    OR              reduce using rule 117 (resta -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    NOT             reduce using rule 117 (resta -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    RBLOCK          reduce using rule 117 (resta -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    RETURN          reduce using rule 117 (resta -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    NUM             shift and go to state 31
    MINUS           shift and go to state 27
    PERIOD          reduce using rule 125 (numNegative -> .)

  ! MINUS           [ reduce using rule 125 (numNegative -> .) ]

    numOperadores                  shift and go to state 219
    resta                          shift and go to state 220
    enteros                        shift and go to state 29
    decimales                      shift and go to state 30
    numNegative                    shift and go to state 32

state 194

    (72) methodArray -> PERIOD PUSH LPAREN javaScript_param RPAREN .

    COLON           reduce using rule 72 (methodArray -> PERIOD PUSH LPAREN javaScript_param RPAREN .)


state 195

    (73) methodArray -> PERIOD UNSHIFT LPAREN arrayValues RPAREN .

    COLON           reduce using rule 73 (methodArray -> PERIOD UNSHIFT LPAREN arrayValues RPAREN .)


state 196

    (107) methodSet -> PERIOD ADD LPAREN javaScript_param RPAREN .

    COLON           reduce using rule 107 (methodSet -> PERIOD ADD LPAREN javaScript_param RPAREN .)


state 197

    (108) methodSet -> PERIOD DELETE LPAREN javaScript_param RPAREN .

    COLON           reduce using rule 108 (methodSet -> PERIOD DELETE LPAREN javaScript_param RPAREN .)


state 198

    (68) arrayDeclare -> NEW ARRAY LPAREN arrayValues RPAREN .

    COLON           reduce using rule 68 (arrayDeclare -> NEW ARRAY LPAREN arrayValues RPAREN .)
    RPAREN          reduce using rule 68 (arrayDeclare -> NEW ARRAY LPAREN arrayValues RPAREN .)
    COMMA           reduce using rule 68 (arrayDeclare -> NEW ARRAY LPAREN arrayValues RPAREN .)
    RBRACKET        reduce using rule 68 (arrayDeclare -> NEW ARRAY LPAREN arrayValues RPAREN .)


state 199

    (105) declararSet -> NEW . SET LPAREN RPAREN
    (106) declararSet -> NEW . SET LPAREN LBRACKET iterableSet RBRACKET RPAREN
    (75) declareMap -> NEW . MAP LPAREN LBRACKET iterableMap RBRACKET RPAREN
    (76) declareMap -> NEW . MAP LPAREN RPAREN
    (68) arrayDeclare -> NEW . ARRAY LPAREN arrayValues RPAREN
    (69) arrayDeclare -> NEW . ARRAY LPAREN RPAREN

    SET             shift and go to state 90
    MAP             shift and go to state 91
    ARRAY           shift and go to state 89


state 200

    (106) declararSet -> NEW SET LPAREN LBRACKET iterableSet . RBRACKET RPAREN

    RBRACKET        shift and go to state 221


state 201

    (83) iterableSet -> keyValue .
    (84) iterableSet -> keyValue . COMMA iterableSet

    RBRACKET        reduce using rule 83 (iterableSet -> keyValue .)
    COMMA           shift and go to state 222


state 202

    (79) keyValue -> javaScript_param .

    COMMA           reduce using rule 79 (keyValue -> javaScript_param .)
    RBRACKET        reduce using rule 79 (keyValue -> javaScript_param .)


state 203

    (80) keyValue -> declararSet .

    COMMA           reduce using rule 80 (keyValue -> declararSet .)
    RBRACKET        reduce using rule 80 (keyValue -> declararSet .)


state 204

    (81) keyValue -> declareMap .

    COMMA           reduce using rule 81 (keyValue -> declareMap .)
    RBRACKET        reduce using rule 81 (keyValue -> declareMap .)


state 205

    (82) keyValue -> arrayDeclare .

    COMMA           reduce using rule 82 (keyValue -> arrayDeclare .)
    RBRACKET        reduce using rule 82 (keyValue -> arrayDeclare .)


state 206

    (77) iterableMap -> LBRACKET . keyValue COMMA keyValue RBRACKET
    (78) iterableMap -> LBRACKET . keyValue COMMA keyValue RBRACKET COMMA iterableMap
    (79) keyValue -> . javaScript_param
    (80) keyValue -> . declararSet
    (81) keyValue -> . declareMap
    (82) keyValue -> . arrayDeclare
    (45) javaScript_param -> . STRING
    (46) javaScript_param -> . NUM
    (47) javaScript_param -> . boolean
    (48) javaScript_param -> . ID
    (49) javaScript_param -> . enteros
    (50) javaScript_param -> . decimales
    (105) declararSet -> . NEW SET LPAREN RPAREN
    (106) declararSet -> . NEW SET LPAREN LBRACKET iterableSet RBRACKET RPAREN
    (75) declareMap -> . NEW MAP LPAREN LBRACKET iterableMap RBRACKET RPAREN
    (76) declareMap -> . NEW MAP LPAREN RPAREN
    (66) arrayDeclare -> . LBRACKET RBRACKET
    (67) arrayDeclare -> . LBRACKET arrayValues RBRACKET
    (68) arrayDeclare -> . NEW ARRAY LPAREN arrayValues RPAREN
    (69) arrayDeclare -> . NEW ARRAY LPAREN RPAREN
    (51) boolean -> . TRUE
    (52) boolean -> . FALSE
    (122) enteros -> . NUM
    (123) enteros -> . numNegative
    (126) decimales -> . enteros PERIOD NUM
    (124) numNegative -> . MINUS NUM
    (125) numNegative -> .

    STRING          shift and go to state 48
    NUM             shift and go to state 49
    ID              shift and go to state 51
    NEW             shift and go to state 199
    LBRACKET        shift and go to state 54
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    MINUS           shift and go to state 27
    PERIOD          reduce using rule 125 (numNegative -> .)
    COMMA           reduce using rule 125 (numNegative -> .)

    keyValue                       shift and go to state 223
    javaScript_param               shift and go to state 202
    declararSet                    shift and go to state 203
    declareMap                     shift and go to state 204
    arrayDeclare                   shift and go to state 205
    boolean                        shift and go to state 50
    enteros                        shift and go to state 75
    decimales                      shift and go to state 76
    numNegative                    shift and go to state 32

state 207

    (75) declareMap -> NEW MAP LPAREN LBRACKET iterableMap . RBRACKET RPAREN

    RBRACKET        shift and go to state 224


state 208

    (88) declareteFunction -> FUNCTION ID LPAREN params RPAREN sentencesCmpt .

    $end            reduce using rule 88 (declareteFunction -> FUNCTION ID LPAREN params RPAREN sentencesCmpt .)
    RBLOCK          reduce using rule 88 (declareteFunction -> FUNCTION ID LPAREN params RPAREN sentencesCmpt .)
    RETURN          reduce using rule 88 (declareteFunction -> FUNCTION ID LPAREN params RPAREN sentencesCmpt .)


state 209

    (90) sentencesCmpt -> LBLOCK sentencia . RBLOCK
    (93) sentencesCmpt -> LBLOCK sentencia . RETURN valores_de_impresion COLON RBLOCK

    RBLOCK          shift and go to state 225
    RETURN          shift and go to state 226


state 210

    (91) sentencesCmpt -> LBLOCK RBLOCK .

    $end            reduce using rule 91 (sentencesCmpt -> LBLOCK RBLOCK .)
    RBLOCK          reduce using rule 91 (sentencesCmpt -> LBLOCK RBLOCK .)
    RETURN          reduce using rule 91 (sentencesCmpt -> LBLOCK RBLOCK .)


state 211

    (92) sentencesCmpt -> LBLOCK RETURN . valores_de_impresion COLON RBLOCK
    (39) valores_de_impresion -> . inicializarOp
    (40) valores_de_impresion -> . javaScript_param
    (41) valores_de_impresion -> . callFunction
    (42) valores_de_impresion -> . estructuras_datos
    (43) valores_de_impresion -> . return_ops
    (110) inicializarOp -> . suma
    (111) inicializarOp -> . resta
    (45) javaScript_param -> . STRING
    (46) javaScript_param -> . NUM
    (47) javaScript_param -> . boolean
    (48) javaScript_param -> . ID
    (49) javaScript_param -> . enteros
    (50) javaScript_param -> . decimales
    (100) callFunction -> . ID LPAREN params RPAREN
    (101) callFunction -> . ID LPAREN RPAREN
    (60) estructuras_datos -> . arrayDeclare
    (61) estructuras_datos -> . declararSet
    (62) estructuras_datos -> . declareMap
    (94) return_ops -> . javaScript_param
    (95) return_ops -> . javaScript_param operadores_mat return_ops
    (112) suma -> . numOperadores PLUS numOperadores
    (113) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (114) suma -> . numOperadores PLUS suma
    (115) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN suma
    (116) resta -> . numOperadores MINUS numOperadores
    (117) resta -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (118) resta -> . numOperadores MINUS resta
    (119) resta -> . numOperadores MINUS LPAREN numOperadores RPAREN resta
    (51) boolean -> . TRUE
    (52) boolean -> . FALSE
    (122) enteros -> . NUM
    (123) enteros -> . numNegative
    (126) decimales -> . enteros PERIOD NUM
    (66) arrayDeclare -> . LBRACKET RBRACKET
    (67) arrayDeclare -> . LBRACKET arrayValues RBRACKET
    (68) arrayDeclare -> . NEW ARRAY LPAREN arrayValues RPAREN
    (69) arrayDeclare -> . NEW ARRAY LPAREN RPAREN
    (105) declararSet -> . NEW SET LPAREN RPAREN
    (106) declararSet -> . NEW SET LPAREN LBRACKET iterableSet RBRACKET RPAREN
    (75) declareMap -> . NEW MAP LPAREN LBRACKET iterableMap RBRACKET RPAREN
    (76) declareMap -> . NEW MAP LPAREN RPAREN
    (120) numOperadores -> . enteros
    (121) numOperadores -> . decimales
    (124) numNegative -> . MINUS NUM
    (125) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
    STRING          shift and go to state 48
    NUM             shift and go to state 49
    ID              shift and go to state 110
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    LBRACKET        shift and go to state 54
    NEW             shift and go to state 55
    MINUS           shift and go to state 27
    PERIOD          reduce using rule 125 (numNegative -> .)
    PLUS            reduce using rule 125 (numNegative -> .)
    DIVIDE          reduce using rule 125 (numNegative -> .)
    TIMES           reduce using rule 125 (numNegative -> .)
    COLON           reduce using rule 125 (numNegative -> .)

  ! MINUS           [ reduce using rule 125 (numNegative -> .) ]

    valores_de_impresion           shift and go to state 227
    inicializarOp                  shift and go to state 105
    javaScript_param               shift and go to state 106
    callFunction                   shift and go to state 107
    estructuras_datos              shift and go to state 108
    return_ops                     shift and go to state 109
    suma                           shift and go to state 18
    resta                          shift and go to state 19
    boolean                        shift and go to state 50
    enteros                        shift and go to state 52
    decimales                      shift and go to state 53
    arrayDeclare                   shift and go to state 45
    declararSet                    shift and go to state 46
    declareMap                     shift and go to state 47
    numOperadores                  shift and go to state 26
    numNegative                    shift and go to state 32

state 212

    (30) sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN . cuerpo_de_sentencias
    (32) sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN . cuerpo_de_sentencias ELSE cuerpo_de_sentencias
    (34) cuerpo_de_sentencias -> . LBLOCK sentencia RBLOCK
    (35) cuerpo_de_sentencias -> . LBLOCK RBLOCK

    LBLOCK          shift and go to state 181

    cuerpo_de_sentencias           shift and go to state 228

state 213

    (33) sentencias_if_else -> IF LPAREN expression RPAREN cuerpo_de_sentencias ELSE . cuerpo_de_sentencias
    (34) cuerpo_de_sentencias -> . LBLOCK sentencia RBLOCK
    (35) cuerpo_de_sentencias -> . LBLOCK RBLOCK

    LBLOCK          shift and go to state 181

    cuerpo_de_sentencias           shift and go to state 229

state 214

    (34) cuerpo_de_sentencias -> LBLOCK sentencia . RBLOCK

    RBLOCK          shift and go to state 230


state 215

    (35) cuerpo_de_sentencias -> LBLOCK RBLOCK .

    ELSE            reduce using rule 35 (cuerpo_de_sentencias -> LBLOCK RBLOCK .)
    $end            reduce using rule 35 (cuerpo_de_sentencias -> LBLOCK RBLOCK .)
    RBLOCK          reduce using rule 35 (cuerpo_de_sentencias -> LBLOCK RBLOCK .)
    RETURN          reduce using rule 35 (cuerpo_de_sentencias -> LBLOCK RBLOCK .)


state 216

    (37) sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN . cuerpo_de_sentencias
    (34) cuerpo_de_sentencias -> . LBLOCK sentencia RBLOCK
    (35) cuerpo_de_sentencias -> . LBLOCK RBLOCK

    LBLOCK          shift and go to state 181

    cuerpo_de_sentencias           shift and go to state 231

state 217

    (112) suma -> numOperadores . PLUS numOperadores
    (113) suma -> numOperadores . PLUS LPAREN numOperadores RPAREN
    (114) suma -> numOperadores . PLUS suma
    (115) suma -> numOperadores . PLUS LPAREN numOperadores RPAREN suma

    PLUS            shift and go to state 64


state 218

    (115) suma -> numOperadores PLUS LPAREN numOperadores RPAREN suma .

    $end            reduce using rule 115 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN suma .)
    COLON           reduce using rule 115 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN suma .)
    RPAREN          reduce using rule 115 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN suma .)
    AND             reduce using rule 115 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN suma .)
    OR              reduce using rule 115 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN suma .)
    NOT             reduce using rule 115 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN suma .)
    RBLOCK          reduce using rule 115 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN suma .)
    RETURN          reduce using rule 115 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN suma .)


state 219

    (116) resta -> numOperadores . MINUS numOperadores
    (117) resta -> numOperadores . MINUS LPAREN numOperadores RPAREN
    (118) resta -> numOperadores . MINUS resta
    (119) resta -> numOperadores . MINUS LPAREN numOperadores RPAREN resta

    MINUS           shift and go to state 65


state 220

    (119) resta -> numOperadores MINUS LPAREN numOperadores RPAREN resta .

    $end            reduce using rule 119 (resta -> numOperadores MINUS LPAREN numOperadores RPAREN resta .)
    COLON           reduce using rule 119 (resta -> numOperadores MINUS LPAREN numOperadores RPAREN resta .)
    RPAREN          reduce using rule 119 (resta -> numOperadores MINUS LPAREN numOperadores RPAREN resta .)
    AND             reduce using rule 119 (resta -> numOperadores MINUS LPAREN numOperadores RPAREN resta .)
    OR              reduce using rule 119 (resta -> numOperadores MINUS LPAREN numOperadores RPAREN resta .)
    NOT             reduce using rule 119 (resta -> numOperadores MINUS LPAREN numOperadores RPAREN resta .)
    RBLOCK          reduce using rule 119 (resta -> numOperadores MINUS LPAREN numOperadores RPAREN resta .)
    RETURN          reduce using rule 119 (resta -> numOperadores MINUS LPAREN numOperadores RPAREN resta .)


state 221

    (106) declararSet -> NEW SET LPAREN LBRACKET iterableSet RBRACKET . RPAREN

    RPAREN          shift and go to state 232


state 222

    (84) iterableSet -> keyValue COMMA . iterableSet
    (83) iterableSet -> . keyValue
    (84) iterableSet -> . keyValue COMMA iterableSet
    (85) iterableSet -> .
    (79) keyValue -> . javaScript_param
    (80) keyValue -> . declararSet
    (81) keyValue -> . declareMap
    (82) keyValue -> . arrayDeclare
    (45) javaScript_param -> . STRING
    (46) javaScript_param -> . NUM
    (47) javaScript_param -> . boolean
    (48) javaScript_param -> . ID
    (49) javaScript_param -> . enteros
    (50) javaScript_param -> . decimales
    (105) declararSet -> . NEW SET LPAREN RPAREN
    (106) declararSet -> . NEW SET LPAREN LBRACKET iterableSet RBRACKET RPAREN
    (75) declareMap -> . NEW MAP LPAREN LBRACKET iterableMap RBRACKET RPAREN
    (76) declareMap -> . NEW MAP LPAREN RPAREN
    (66) arrayDeclare -> . LBRACKET RBRACKET
    (67) arrayDeclare -> . LBRACKET arrayValues RBRACKET
    (68) arrayDeclare -> . NEW ARRAY LPAREN arrayValues RPAREN
    (69) arrayDeclare -> . NEW ARRAY LPAREN RPAREN
    (51) boolean -> . TRUE
    (52) boolean -> . FALSE
    (122) enteros -> . NUM
    (123) enteros -> . numNegative
    (126) decimales -> . enteros PERIOD NUM
    (124) numNegative -> . MINUS NUM
    (125) numNegative -> .

  ! reduce/reduce conflict for RBRACKET resolved using rule 85 (iterableSet -> .)
    RBRACKET        reduce using rule 85 (iterableSet -> .)
    STRING          shift and go to state 48
    NUM             shift and go to state 49
    ID              shift and go to state 51
    NEW             shift and go to state 199
    LBRACKET        shift and go to state 54
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    MINUS           shift and go to state 27
    PERIOD          reduce using rule 125 (numNegative -> .)
    COMMA           reduce using rule 125 (numNegative -> .)

  ! RBRACKET        [ reduce using rule 125 (numNegative -> .) ]

    keyValue                       shift and go to state 201
    iterableSet                    shift and go to state 233
    javaScript_param               shift and go to state 202
    declararSet                    shift and go to state 203
    declareMap                     shift and go to state 204
    arrayDeclare                   shift and go to state 205
    boolean                        shift and go to state 50
    enteros                        shift and go to state 75
    decimales                      shift and go to state 76
    numNegative                    shift and go to state 32

state 223

    (77) iterableMap -> LBRACKET keyValue . COMMA keyValue RBRACKET
    (78) iterableMap -> LBRACKET keyValue . COMMA keyValue RBRACKET COMMA iterableMap

    COMMA           shift and go to state 234


state 224

    (75) declareMap -> NEW MAP LPAREN LBRACKET iterableMap RBRACKET . RPAREN

    RPAREN          shift and go to state 235


state 225

    (90) sentencesCmpt -> LBLOCK sentencia RBLOCK .

    $end            reduce using rule 90 (sentencesCmpt -> LBLOCK sentencia RBLOCK .)
    RBLOCK          reduce using rule 90 (sentencesCmpt -> LBLOCK sentencia RBLOCK .)
    RETURN          reduce using rule 90 (sentencesCmpt -> LBLOCK sentencia RBLOCK .)


state 226

    (93) sentencesCmpt -> LBLOCK sentencia RETURN . valores_de_impresion COLON RBLOCK
    (39) valores_de_impresion -> . inicializarOp
    (40) valores_de_impresion -> . javaScript_param
    (41) valores_de_impresion -> . callFunction
    (42) valores_de_impresion -> . estructuras_datos
    (43) valores_de_impresion -> . return_ops
    (110) inicializarOp -> . suma
    (111) inicializarOp -> . resta
    (45) javaScript_param -> . STRING
    (46) javaScript_param -> . NUM
    (47) javaScript_param -> . boolean
    (48) javaScript_param -> . ID
    (49) javaScript_param -> . enteros
    (50) javaScript_param -> . decimales
    (100) callFunction -> . ID LPAREN params RPAREN
    (101) callFunction -> . ID LPAREN RPAREN
    (60) estructuras_datos -> . arrayDeclare
    (61) estructuras_datos -> . declararSet
    (62) estructuras_datos -> . declareMap
    (94) return_ops -> . javaScript_param
    (95) return_ops -> . javaScript_param operadores_mat return_ops
    (112) suma -> . numOperadores PLUS numOperadores
    (113) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (114) suma -> . numOperadores PLUS suma
    (115) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN suma
    (116) resta -> . numOperadores MINUS numOperadores
    (117) resta -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (118) resta -> . numOperadores MINUS resta
    (119) resta -> . numOperadores MINUS LPAREN numOperadores RPAREN resta
    (51) boolean -> . TRUE
    (52) boolean -> . FALSE
    (122) enteros -> . NUM
    (123) enteros -> . numNegative
    (126) decimales -> . enteros PERIOD NUM
    (66) arrayDeclare -> . LBRACKET RBRACKET
    (67) arrayDeclare -> . LBRACKET arrayValues RBRACKET
    (68) arrayDeclare -> . NEW ARRAY LPAREN arrayValues RPAREN
    (69) arrayDeclare -> . NEW ARRAY LPAREN RPAREN
    (105) declararSet -> . NEW SET LPAREN RPAREN
    (106) declararSet -> . NEW SET LPAREN LBRACKET iterableSet RBRACKET RPAREN
    (75) declareMap -> . NEW MAP LPAREN LBRACKET iterableMap RBRACKET RPAREN
    (76) declareMap -> . NEW MAP LPAREN RPAREN
    (120) numOperadores -> . enteros
    (121) numOperadores -> . decimales
    (124) numNegative -> . MINUS NUM
    (125) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
    STRING          shift and go to state 48
    NUM             shift and go to state 49
    ID              shift and go to state 110
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    LBRACKET        shift and go to state 54
    NEW             shift and go to state 55
    MINUS           shift and go to state 27
    PERIOD          reduce using rule 125 (numNegative -> .)
    PLUS            reduce using rule 125 (numNegative -> .)
    DIVIDE          reduce using rule 125 (numNegative -> .)
    TIMES           reduce using rule 125 (numNegative -> .)
    COLON           reduce using rule 125 (numNegative -> .)

  ! MINUS           [ reduce using rule 125 (numNegative -> .) ]

    valores_de_impresion           shift and go to state 236
    inicializarOp                  shift and go to state 105
    javaScript_param               shift and go to state 106
    callFunction                   shift and go to state 107
    estructuras_datos              shift and go to state 108
    return_ops                     shift and go to state 109
    suma                           shift and go to state 18
    resta                          shift and go to state 19
    boolean                        shift and go to state 50
    enteros                        shift and go to state 52
    decimales                      shift and go to state 53
    arrayDeclare                   shift and go to state 45
    declararSet                    shift and go to state 46
    declareMap                     shift and go to state 47
    numOperadores                  shift and go to state 26
    numNegative                    shift and go to state 32

state 227

    (92) sentencesCmpt -> LBLOCK RETURN valores_de_impresion . COLON RBLOCK

    COLON           shift and go to state 237


state 228

    (30) sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias .
    (32) sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias . ELSE cuerpo_de_sentencias

    $end            reduce using rule 30 (sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias .)
    RBLOCK          reduce using rule 30 (sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias .)
    RETURN          reduce using rule 30 (sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias .)
    ELSE            shift and go to state 238


state 229

    (33) sentencias_if_else -> IF LPAREN expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias .

    $end            reduce using rule 33 (sentencias_if_else -> IF LPAREN expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias .)
    RBLOCK          reduce using rule 33 (sentencias_if_else -> IF LPAREN expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias .)
    RETURN          reduce using rule 33 (sentencias_if_else -> IF LPAREN expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias .)


state 230

    (34) cuerpo_de_sentencias -> LBLOCK sentencia RBLOCK .

    ELSE            reduce using rule 34 (cuerpo_de_sentencias -> LBLOCK sentencia RBLOCK .)
    $end            reduce using rule 34 (cuerpo_de_sentencias -> LBLOCK sentencia RBLOCK .)
    RBLOCK          reduce using rule 34 (cuerpo_de_sentencias -> LBLOCK sentencia RBLOCK .)
    RETURN          reduce using rule 34 (cuerpo_de_sentencias -> LBLOCK sentencia RBLOCK .)


state 231

    (37) sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias .

    $end            reduce using rule 37 (sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias .)
    RBLOCK          reduce using rule 37 (sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias .)
    RETURN          reduce using rule 37 (sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias .)


state 232

    (106) declararSet -> NEW SET LPAREN LBRACKET iterableSet RBRACKET RPAREN .

    COLON           reduce using rule 106 (declararSet -> NEW SET LPAREN LBRACKET iterableSet RBRACKET RPAREN .)
    RPAREN          reduce using rule 106 (declararSet -> NEW SET LPAREN LBRACKET iterableSet RBRACKET RPAREN .)
    COMMA           reduce using rule 106 (declararSet -> NEW SET LPAREN LBRACKET iterableSet RBRACKET RPAREN .)
    RBRACKET        reduce using rule 106 (declararSet -> NEW SET LPAREN LBRACKET iterableSet RBRACKET RPAREN .)


state 233

    (84) iterableSet -> keyValue COMMA iterableSet .

    RBRACKET        reduce using rule 84 (iterableSet -> keyValue COMMA iterableSet .)


state 234

    (77) iterableMap -> LBRACKET keyValue COMMA . keyValue RBRACKET
    (78) iterableMap -> LBRACKET keyValue COMMA . keyValue RBRACKET COMMA iterableMap
    (79) keyValue -> . javaScript_param
    (80) keyValue -> . declararSet
    (81) keyValue -> . declareMap
    (82) keyValue -> . arrayDeclare
    (45) javaScript_param -> . STRING
    (46) javaScript_param -> . NUM
    (47) javaScript_param -> . boolean
    (48) javaScript_param -> . ID
    (49) javaScript_param -> . enteros
    (50) javaScript_param -> . decimales
    (105) declararSet -> . NEW SET LPAREN RPAREN
    (106) declararSet -> . NEW SET LPAREN LBRACKET iterableSet RBRACKET RPAREN
    (75) declareMap -> . NEW MAP LPAREN LBRACKET iterableMap RBRACKET RPAREN
    (76) declareMap -> . NEW MAP LPAREN RPAREN
    (66) arrayDeclare -> . LBRACKET RBRACKET
    (67) arrayDeclare -> . LBRACKET arrayValues RBRACKET
    (68) arrayDeclare -> . NEW ARRAY LPAREN arrayValues RPAREN
    (69) arrayDeclare -> . NEW ARRAY LPAREN RPAREN
    (51) boolean -> . TRUE
    (52) boolean -> . FALSE
    (122) enteros -> . NUM
    (123) enteros -> . numNegative
    (126) decimales -> . enteros PERIOD NUM
    (124) numNegative -> . MINUS NUM
    (125) numNegative -> .

    STRING          shift and go to state 48
    NUM             shift and go to state 49
    ID              shift and go to state 51
    NEW             shift and go to state 199
    LBRACKET        shift and go to state 54
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    MINUS           shift and go to state 27
    PERIOD          reduce using rule 125 (numNegative -> .)
    RBRACKET        reduce using rule 125 (numNegative -> .)

    keyValue                       shift and go to state 239
    javaScript_param               shift and go to state 202
    declararSet                    shift and go to state 203
    declareMap                     shift and go to state 204
    arrayDeclare                   shift and go to state 205
    boolean                        shift and go to state 50
    enteros                        shift and go to state 75
    decimales                      shift and go to state 76
    numNegative                    shift and go to state 32

state 235

    (75) declareMap -> NEW MAP LPAREN LBRACKET iterableMap RBRACKET RPAREN .

    COLON           reduce using rule 75 (declareMap -> NEW MAP LPAREN LBRACKET iterableMap RBRACKET RPAREN .)
    RPAREN          reduce using rule 75 (declareMap -> NEW MAP LPAREN LBRACKET iterableMap RBRACKET RPAREN .)
    COMMA           reduce using rule 75 (declareMap -> NEW MAP LPAREN LBRACKET iterableMap RBRACKET RPAREN .)
    RBRACKET        reduce using rule 75 (declareMap -> NEW MAP LPAREN LBRACKET iterableMap RBRACKET RPAREN .)


state 236

    (93) sentencesCmpt -> LBLOCK sentencia RETURN valores_de_impresion . COLON RBLOCK

    COLON           shift and go to state 240


state 237

    (92) sentencesCmpt -> LBLOCK RETURN valores_de_impresion COLON . RBLOCK

    RBLOCK          shift and go to state 241


state 238

    (32) sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias ELSE . cuerpo_de_sentencias
    (34) cuerpo_de_sentencias -> . LBLOCK sentencia RBLOCK
    (35) cuerpo_de_sentencias -> . LBLOCK RBLOCK

    LBLOCK          shift and go to state 181

    cuerpo_de_sentencias           shift and go to state 242

state 239

    (77) iterableMap -> LBRACKET keyValue COMMA keyValue . RBRACKET
    (78) iterableMap -> LBRACKET keyValue COMMA keyValue . RBRACKET COMMA iterableMap

    RBRACKET        shift and go to state 243


state 240

    (93) sentencesCmpt -> LBLOCK sentencia RETURN valores_de_impresion COLON . RBLOCK

    RBLOCK          shift and go to state 244


state 241

    (92) sentencesCmpt -> LBLOCK RETURN valores_de_impresion COLON RBLOCK .

    $end            reduce using rule 92 (sentencesCmpt -> LBLOCK RETURN valores_de_impresion COLON RBLOCK .)
    RBLOCK          reduce using rule 92 (sentencesCmpt -> LBLOCK RETURN valores_de_impresion COLON RBLOCK .)
    RETURN          reduce using rule 92 (sentencesCmpt -> LBLOCK RETURN valores_de_impresion COLON RBLOCK .)


state 242

    (32) sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias .

    $end            reduce using rule 32 (sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias .)
    RBLOCK          reduce using rule 32 (sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias .)
    RETURN          reduce using rule 32 (sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias .)


state 243

    (77) iterableMap -> LBRACKET keyValue COMMA keyValue RBRACKET .
    (78) iterableMap -> LBRACKET keyValue COMMA keyValue RBRACKET . COMMA iterableMap

    RBRACKET        reduce using rule 77 (iterableMap -> LBRACKET keyValue COMMA keyValue RBRACKET .)
    COMMA           shift and go to state 245


state 244

    (93) sentencesCmpt -> LBLOCK sentencia RETURN valores_de_impresion COLON RBLOCK .

    $end            reduce using rule 93 (sentencesCmpt -> LBLOCK sentencia RETURN valores_de_impresion COLON RBLOCK .)
    RBLOCK          reduce using rule 93 (sentencesCmpt -> LBLOCK sentencia RETURN valores_de_impresion COLON RBLOCK .)
    RETURN          reduce using rule 93 (sentencesCmpt -> LBLOCK sentencia RETURN valores_de_impresion COLON RBLOCK .)


state 245

    (78) iterableMap -> LBRACKET keyValue COMMA keyValue RBRACKET COMMA . iterableMap
    (77) iterableMap -> . LBRACKET keyValue COMMA keyValue RBRACKET
    (78) iterableMap -> . LBRACKET keyValue COMMA keyValue RBRACKET COMMA iterableMap

    LBRACKET        shift and go to state 206

    iterableMap                    shift and go to state 246

state 246

    (78) iterableMap -> LBRACKET keyValue COMMA keyValue RBRACKET COMMA iterableMap .

    RBRACKET        reduce using rule 78 (iterableMap -> LBRACKET keyValue COMMA keyValue RBRACKET COMMA iterableMap .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MINUS in state 0 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 10 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 38 resolved as shift
WARNING: shift/reduce conflict for RBRACKET in state 54 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 61 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 62 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 63 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 63 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 65 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 94 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 129 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 134 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 151 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 154 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 178 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 181 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 193 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 211 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 226 resolved as shift
WARNING: reduce/reduce conflict in state 49 resolved using rule (javaScript_param -> NUM)
WARNING: rejected rule (enteros -> NUM) in state 49
WARNING: reduce/reduce conflict in state 52 resolved using rule (javaScript_param -> enteros)
WARNING: rejected rule (numOperadores -> enteros) in state 52
WARNING: reduce/reduce conflict in state 53 resolved using rule (javaScript_param -> decimales)
WARNING: rejected rule (numOperadores -> decimales) in state 53
WARNING: reduce/reduce conflict in state 106 resolved using rule (valores_de_impresion -> javaScript_param)
WARNING: rejected rule (return_ops -> javaScript_param) in state 106
WARNING: reduce/reduce conflict in state 167 resolved using rule (methodMap -> PERIOD CLEAR LPAREN RPAREN)
WARNING: rejected rule (methodSet -> PERIOD CLEAR LPAREN RPAREN) in state 167
WARNING: reduce/reduce conflict in state 173 resolved using rule (iterableSet -> <empty>)
WARNING: rejected rule (numNegative -> <empty>) in state 173
WARNING: reduce/reduce conflict in state 222 resolved using rule (iterableSet -> <empty>)
WARNING: rejected rule (numNegative -> <empty>) in state 222
WARNING: Rule (methodSet -> PERIOD CLEAR LPAREN RPAREN) is never reduced
