Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DIV_EQUAL
    GET
    HAS
    MINUS_EQUAL
    MOD
    MOD_EQUAL
    MUL_EQUAL
    PLUS_EQUAL
    TWOPOINTS
    WITH
    YIELD

Grammar

Rule 0     S' -> sentencia
Rule 1     sentencia -> callMethods
Rule 2     sentencia -> callFunction COLON
Rule 3     sentencia -> varDeclaration
Rule 4     sentencia -> controlExpression
Rule 5     sentencia -> impresion
Rule 6     sentencia -> declareteFunction
Rule 7     sentencia -> assingOperadores
Rule 8     expression -> conditionalEspecifico
Rule 9     expression -> inicializarOp
Rule 10    assingOperadores -> varType ID EQUAL inicializarOp
Rule 11    controlExpression -> sentencias_if
Rule 12    controlExpression -> sentencias_if_else
Rule 13    controlExpression -> sentencias_while
Rule 14    controlExpression -> impresion
Rule 15    controlExpression -> impresion_vacio
Rule 16    opConditional -> ISEQUAL
Rule 17    opConditional -> IS_NOT_IDENTICAL
Rule 18    opConditional -> IS_IDENTICAL
Rule 19    opConditional -> GREATER
Rule 20    opConditional -> GREATEREQUAL
Rule 21    opConditional -> LESS
Rule 22    opConditional -> LESSEQUAL
Rule 23    opConditional -> boolean
Rule 24    operadorLogical -> AND
Rule 25    operadorLogical -> OR
Rule 26    operadorLogical -> NOT
Rule 27    sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
Rule 28    sentencias_if -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK
Rule 29    sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
Rule 30    sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
Rule 31    sentencias_while -> WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK
Rule 32    sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
Rule 33    impresion -> ALERT LPAREN expression RPAREN
Rule 34    impresion_vacio -> ALERT LPAREN RPAREN
Rule 35    javaScript_param -> STRING
Rule 36    javaScript_param -> NUM
Rule 37    javaScript_param -> boolean
Rule 38    javaScript_param -> ID
Rule 39    boolean -> TRUE
Rule 40    boolean -> FALSE
Rule 41    varType -> LET
Rule 42    varType -> CONST
Rule 43    varType -> VAR
Rule 44    varDeclaration -> varType assign
Rule 45    varDeclaration -> assign
Rule 46    varDeclaration -> LET ID COLON
Rule 47    varDeclaration -> VAR ID COLON
Rule 48    assign -> ID EQUAL arrayDeclare COLON
Rule 49    assign -> ID EQUAL declareMap COLON
Rule 50    assign -> ID EQUAL declararSet COLON
Rule 51    assign -> ID EQUAL javaScript_param COLON
Rule 52    callMethods -> ID methodArray COLON
Rule 53    callMethods -> ID methodSet COLON
Rule 54    callMethods -> ID methodMap COLON
Rule 55    arrayDeclare -> LBRACKET RBRACKET
Rule 56    arrayDeclare -> LBRACKET arrayValues RBRACKET
Rule 57    arrayDeclare -> NEW ARRAY LPAREN arrayValues RPAREN
Rule 58    arrayDeclare -> NEW ARRAY LPAREN RPAREN
Rule 59    arrayValues -> javaScript_param
Rule 60    arrayValues -> javaScript_param COMMA arrayValues
Rule 61    methodArray -> PERIOD PUSH LPAREN javaScript_param RPAREN
Rule 62    methodArray -> PERIOD UNSHIFT LPAREN javaScript_param RPAREN
Rule 63    methodArray -> PERIOD POP LPAREN RPAREN
Rule 64    declareMap -> NEW MAP LPAREN LBRACKET iterable RBRACKET RPAREN
Rule 65    declareMap -> NEW MAP LPAREN RPAREN
Rule 66    iterableMap -> LBRACKET keyValue COMMA keyValue RBRACKET
Rule 67    iterableMap -> LBRACKET keyValue COMMA keyValue RBRACKET COMMA iterableMap
Rule 68    iterable -> iterableMap
Rule 69    iterable -> iterableArray
Rule 70    iterable -> iterableSet
Rule 71    keyValue -> javaScript_param
Rule 72    keyValue -> iterableMap
Rule 73    keyValue -> iterableArray
Rule 74    keyValue -> iterableSet
Rule 75    keyValue -> declareMap
Rule 76    keyValue -> arrayDeclare
Rule 77    iterableArray -> arrayDeclare
Rule 78    iterableArray -> arrayDeclare COMMA arrayDeclare
Rule 79    iterableSet -> declararSet
Rule 80    iterableSet -> declararSet COMMA declararSet
Rule 81    iterableSet -> <empty>
Rule 82    methodMap -> PERIOD CLEAR LPAREN RPAREN
Rule 83    methodMap -> PERIOD LENGTH LPAREN RPAREN
Rule 84    declareteFunction -> FUNCTION ID LPAREN params RPAREN
Rule 85    declareteFunction -> FUNCTION ID LPAREN params RPAREN sentencesCmpt
Rule 86    declareteFunction -> varType ID EQUAL FUNCTION LPAREN params RPAREN
Rule 87    sentencesCmpt -> LBLOCK sentencia RBLOCK
Rule 88    sentencesCmpt -> LBLOCK sentencia RETURN RBLOCK
Rule 89    callFunction -> ID LPAREN params RPAREN
Rule 90    params -> paramList
Rule 91    paramList -> javaScript_param
Rule 92    paramList -> javaScript_param COMMA paramList
Rule 93    args -> argslist
Rule 94    args -> javaScript_param
Rule 95    argslist -> args
Rule 96    argslist -> args COMMA argslist
Rule 97    declararSet -> NEW SET LPAREN LBRACKET iterable RBRACKET RPAREN
Rule 98    methodSet -> PERIOD ADD LPAREN javaScript_param RPAREN
Rule 99    methodSet -> PERIOD DELETE LPAREN javaScript_param RPAREN
Rule 100   methodSet -> PERIOD CLEAR LPAREN RPAREN
Rule 101   inicializarOp -> PLUS operacionesMath
Rule 102   inicializarOp -> MINUS operacionesMath
Rule 103   inicializarOp -> operacionesMath
Rule 104   operacionesMath -> numOperadores PLUS suma
Rule 105   operacionesMath -> suma
Rule 106   operacionesMath -> suma operacionesMath
Rule 107   operacionesMath -> restas
Rule 108   operacionesMath -> numOperadores MINUS restas
Rule 109   operacionesMath -> restas operacionesMath
Rule 110   operacionesMath -> multiplicacion
Rule 111   operacionesMath -> numOperadores TIMES multiplicacion
Rule 112   operacionesMath -> multiplicacion operacionesMath
Rule 113   operacionesMath -> divicion
Rule 114   operacionesMath -> numOperadores DIVIDE divicion
Rule 115   operacionesMath -> divicion operacionesMath
Rule 116   suma -> numOperadores PLUS LPAREN numOperadores RPAREN
Rule 117   suma -> numOperadores PLUS NUM
Rule 118   suma -> numOperadores
Rule 119   restas -> numOperadores MINUS LPAREN numOperadores RPAREN
Rule 120   restas -> numOperadores MINUS NUM
Rule 121   restas -> numOperadores
Rule 122   multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN
Rule 123   multiplicacion -> numOperadores TIMES NUM
Rule 124   multiplicacion -> numOperadores
Rule 125   divicion -> numOperadores DIVIDE LPAREN numOperadores RPAREN
Rule 126   divicion -> numOperadores DIVIDE NUM
Rule 127   divicion -> numOperadores
Rule 128   numOperadores -> enteros
Rule 129   numOperadores -> decimales
Rule 130   enteros -> NUM
Rule 131   enteros -> numNegative
Rule 132   numNegative -> MINUS NUM
Rule 133   numNegative -> <empty>
Rule 134   decimales -> enteros PERIOD NUM
Rule 135   conditionalEspecifico -> ID opConditional dataCondi
Rule 136   conditionalEspecifico -> NUM opConditional NUM
Rule 137   conditionalEspecifico -> STRING opConditional STRING
Rule 138   dataCondi -> STRING
Rule 139   dataCondi -> NUM

Terminals, with rules where they appear

ADD                  : 98
ALERT                : 33 34
AND                  : 24
ARRAY                : 57 58
CLEAR                : 82 100
COLON                : 2 46 47 48 49 50 51 52 53 54
COMMA                : 60 66 67 67 78 80 92 96
CONST                : 42
DELETE               : 99
DIVIDE               : 114 125 126
DIV_EQUAL            : 
ELSE                 : 29 30
EQUAL                : 10 48 49 50 51 86
FALSE                : 40
FUNCTION             : 84 85 86
GET                  : 
GREATER              : 19
GREATEREQUAL         : 20
HAS                  : 
ID                   : 10 38 46 47 48 49 50 51 52 53 54 84 85 86 89 135
IF                   : 27 28 29 30
ISEQUAL              : 16
IS_IDENTICAL         : 18
IS_NOT_IDENTICAL     : 17
LBLOCK               : 27 28 29 29 30 30 31 32 87 88
LBRACKET             : 55 56 64 66 67 97
LENGTH               : 83
LESS                 : 21
LESSEQUAL            : 22
LET                  : 41 46
LPAREN               : 27 28 29 30 31 32 33 34 57 58 61 62 63 64 65 82 83 84 85 86 89 97 98 99 100 116 119 122 125
MAP                  : 64 65
MINUS                : 102 108 119 120 132
MINUS_EQUAL          : 
MOD                  : 
MOD_EQUAL            : 
MUL_EQUAL            : 
NEW                  : 57 58 64 65 97
NOT                  : 26
NUM                  : 36 117 120 123 126 130 132 134 136 136 139
OR                   : 25
PERIOD               : 61 62 63 82 83 98 99 100 134
PLUS                 : 101 104 116 117
PLUS_EQUAL           : 
POP                  : 63
PUSH                 : 61
RBLOCK               : 27 28 29 29 30 30 31 32 87 88
RBRACKET             : 55 56 64 66 67 97
RETURN               : 88
RPAREN               : 27 28 29 30 31 32 33 34 57 58 61 62 63 64 65 82 83 84 85 86 89 97 98 99 100 116 119 122 125
SET                  : 97
STRING               : 35 137 137 138
TIMES                : 111 122 123
TRUE                 : 39
TWOPOINTS            : 
UNSHIFT              : 62
VAR                  : 43 47
WHILE                : 31 32
WITH                 : 
YIELD                : 
error                : 

Nonterminals, with rules where they appear

args                 : 95 96
argslist             : 93 96
arrayDeclare         : 48 76 77 78 78
arrayValues          : 56 57 60
assign               : 44 45
assingOperadores     : 7
boolean              : 23 37
callFunction         : 2
callMethods          : 1
conditionalEspecifico : 8
controlExpression    : 4
dataCondi            : 135
decimales            : 129
declararSet          : 50 79 80 80
declareMap           : 49 75
declareteFunction    : 6
divicion             : 113 114 115
enteros              : 128 134
expression           : 27 27 28 29 29 30 31 32 32 33
impresion            : 5 14
impresion_vacio      : 15
inicializarOp        : 9 10
iterable             : 64 97
iterableArray        : 69 73
iterableMap          : 67 68 72
iterableSet          : 70 74
javaScript_param     : 51 59 60 61 62 71 91 92 94 98 99
keyValue             : 66 66 67 67
methodArray          : 52
methodMap            : 54
methodSet            : 53
multiplicacion       : 110 111 112
numNegative          : 131
numOperadores        : 104 108 111 114 116 116 117 118 119 119 120 121 122 122 123 124 125 125 126 127
opConditional        : 135 136 137
operacionesMath      : 101 102 103 106 109 112 115
operadorLogical      : 27 29 32
paramList            : 90 92
params               : 84 85 86 89
restas               : 107 108 109
sentencesCmpt        : 85
sentencia            : 27 28 29 29 30 30 31 32 87 88 0
sentencias_if        : 11
sentencias_if_else   : 12
sentencias_while     : 13
suma                 : 104 105 106
varDeclaration       : 3
varType              : 10 44 86

Parsing method: LALR

state 0

    (0) S' -> . sentencia
    (1) sentencia -> . callMethods
    (2) sentencia -> . callFunction COLON
    (3) sentencia -> . varDeclaration
    (4) sentencia -> . controlExpression
    (5) sentencia -> . impresion
    (6) sentencia -> . declareteFunction
    (7) sentencia -> . assingOperadores
    (52) callMethods -> . ID methodArray COLON
    (53) callMethods -> . ID methodSet COLON
    (54) callMethods -> . ID methodMap COLON
    (89) callFunction -> . ID LPAREN params RPAREN
    (44) varDeclaration -> . varType assign
    (45) varDeclaration -> . assign
    (46) varDeclaration -> . LET ID COLON
    (47) varDeclaration -> . VAR ID COLON
    (11) controlExpression -> . sentencias_if
    (12) controlExpression -> . sentencias_if_else
    (13) controlExpression -> . sentencias_while
    (14) controlExpression -> . impresion
    (15) controlExpression -> . impresion_vacio
    (33) impresion -> . ALERT LPAREN expression RPAREN
    (84) declareteFunction -> . FUNCTION ID LPAREN params RPAREN
    (85) declareteFunction -> . FUNCTION ID LPAREN params RPAREN sentencesCmpt
    (86) declareteFunction -> . varType ID EQUAL FUNCTION LPAREN params RPAREN
    (10) assingOperadores -> . varType ID EQUAL inicializarOp
    (41) varType -> . LET
    (42) varType -> . CONST
    (43) varType -> . VAR
    (48) assign -> . ID EQUAL arrayDeclare COLON
    (49) assign -> . ID EQUAL declareMap COLON
    (50) assign -> . ID EQUAL declararSet COLON
    (51) assign -> . ID EQUAL javaScript_param COLON
    (27) sentencias_if -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (28) sentencias_if -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (29) sentencias_if_else -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (30) sentencias_if_else -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (31) sentencias_while -> . WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (32) sentencias_while -> . WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (34) impresion_vacio -> . ALERT LPAREN RPAREN

    ID              shift and go to state 9
    LET             shift and go to state 12
    VAR             shift and go to state 13
    ALERT           shift and go to state 18
    FUNCTION        shift and go to state 19
    CONST           shift and go to state 20
    IF              shift and go to state 21
    WHILE           shift and go to state 22

    sentencia                      shift and go to state 1
    callMethods                    shift and go to state 2
    callFunction                   shift and go to state 3
    varDeclaration                 shift and go to state 4
    controlExpression              shift and go to state 5
    impresion                      shift and go to state 6
    declareteFunction              shift and go to state 7
    assingOperadores               shift and go to state 8
    varType                        shift and go to state 10
    assign                         shift and go to state 11
    sentencias_if                  shift and go to state 14
    sentencias_if_else             shift and go to state 15
    sentencias_while               shift and go to state 16
    impresion_vacio                shift and go to state 17

state 1

    (0) S' -> sentencia .



state 2

    (1) sentencia -> callMethods .

    $end            reduce using rule 1 (sentencia -> callMethods .)
    RBLOCK          reduce using rule 1 (sentencia -> callMethods .)
    RETURN          reduce using rule 1 (sentencia -> callMethods .)


state 3

    (2) sentencia -> callFunction . COLON

    COLON           shift and go to state 23


state 4

    (3) sentencia -> varDeclaration .

    $end            reduce using rule 3 (sentencia -> varDeclaration .)
    RBLOCK          reduce using rule 3 (sentencia -> varDeclaration .)
    RETURN          reduce using rule 3 (sentencia -> varDeclaration .)


state 5

    (4) sentencia -> controlExpression .

    $end            reduce using rule 4 (sentencia -> controlExpression .)
    RBLOCK          reduce using rule 4 (sentencia -> controlExpression .)
    RETURN          reduce using rule 4 (sentencia -> controlExpression .)


state 6

    (5) sentencia -> impresion .
    (14) controlExpression -> impresion .

  ! reduce/reduce conflict for $end resolved using rule 5 (sentencia -> impresion .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 5 (sentencia -> impresion .)
  ! reduce/reduce conflict for RETURN resolved using rule 5 (sentencia -> impresion .)
    $end            reduce using rule 5 (sentencia -> impresion .)
    RBLOCK          reduce using rule 5 (sentencia -> impresion .)
    RETURN          reduce using rule 5 (sentencia -> impresion .)

  ! $end            [ reduce using rule 14 (controlExpression -> impresion .) ]
  ! RBLOCK          [ reduce using rule 14 (controlExpression -> impresion .) ]
  ! RETURN          [ reduce using rule 14 (controlExpression -> impresion .) ]


state 7

    (6) sentencia -> declareteFunction .

    $end            reduce using rule 6 (sentencia -> declareteFunction .)
    RBLOCK          reduce using rule 6 (sentencia -> declareteFunction .)
    RETURN          reduce using rule 6 (sentencia -> declareteFunction .)


state 8

    (7) sentencia -> assingOperadores .

    $end            reduce using rule 7 (sentencia -> assingOperadores .)
    RBLOCK          reduce using rule 7 (sentencia -> assingOperadores .)
    RETURN          reduce using rule 7 (sentencia -> assingOperadores .)


state 9

    (52) callMethods -> ID . methodArray COLON
    (53) callMethods -> ID . methodSet COLON
    (54) callMethods -> ID . methodMap COLON
    (89) callFunction -> ID . LPAREN params RPAREN
    (48) assign -> ID . EQUAL arrayDeclare COLON
    (49) assign -> ID . EQUAL declareMap COLON
    (50) assign -> ID . EQUAL declararSet COLON
    (51) assign -> ID . EQUAL javaScript_param COLON
    (61) methodArray -> . PERIOD PUSH LPAREN javaScript_param RPAREN
    (62) methodArray -> . PERIOD UNSHIFT LPAREN javaScript_param RPAREN
    (63) methodArray -> . PERIOD POP LPAREN RPAREN
    (98) methodSet -> . PERIOD ADD LPAREN javaScript_param RPAREN
    (99) methodSet -> . PERIOD DELETE LPAREN javaScript_param RPAREN
    (100) methodSet -> . PERIOD CLEAR LPAREN RPAREN
    (82) methodMap -> . PERIOD CLEAR LPAREN RPAREN
    (83) methodMap -> . PERIOD LENGTH LPAREN RPAREN

    LPAREN          shift and go to state 27
    EQUAL           shift and go to state 28
    PERIOD          shift and go to state 29

    methodArray                    shift and go to state 24
    methodSet                      shift and go to state 25
    methodMap                      shift and go to state 26

state 10

    (44) varDeclaration -> varType . assign
    (86) declareteFunction -> varType . ID EQUAL FUNCTION LPAREN params RPAREN
    (10) assingOperadores -> varType . ID EQUAL inicializarOp
    (48) assign -> . ID EQUAL arrayDeclare COLON
    (49) assign -> . ID EQUAL declareMap COLON
    (50) assign -> . ID EQUAL declararSet COLON
    (51) assign -> . ID EQUAL javaScript_param COLON

    ID              shift and go to state 31

    assign                         shift and go to state 30

state 11

    (45) varDeclaration -> assign .

    $end            reduce using rule 45 (varDeclaration -> assign .)
    RBLOCK          reduce using rule 45 (varDeclaration -> assign .)
    RETURN          reduce using rule 45 (varDeclaration -> assign .)


state 12

    (46) varDeclaration -> LET . ID COLON
    (41) varType -> LET .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 32

  ! ID              [ reduce using rule 41 (varType -> LET .) ]


state 13

    (47) varDeclaration -> VAR . ID COLON
    (43) varType -> VAR .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 33

  ! ID              [ reduce using rule 43 (varType -> VAR .) ]


state 14

    (11) controlExpression -> sentencias_if .

    $end            reduce using rule 11 (controlExpression -> sentencias_if .)
    RBLOCK          reduce using rule 11 (controlExpression -> sentencias_if .)
    RETURN          reduce using rule 11 (controlExpression -> sentencias_if .)


state 15

    (12) controlExpression -> sentencias_if_else .

    $end            reduce using rule 12 (controlExpression -> sentencias_if_else .)
    RBLOCK          reduce using rule 12 (controlExpression -> sentencias_if_else .)
    RETURN          reduce using rule 12 (controlExpression -> sentencias_if_else .)


state 16

    (13) controlExpression -> sentencias_while .

    $end            reduce using rule 13 (controlExpression -> sentencias_while .)
    RBLOCK          reduce using rule 13 (controlExpression -> sentencias_while .)
    RETURN          reduce using rule 13 (controlExpression -> sentencias_while .)


state 17

    (15) controlExpression -> impresion_vacio .

    $end            reduce using rule 15 (controlExpression -> impresion_vacio .)
    RBLOCK          reduce using rule 15 (controlExpression -> impresion_vacio .)
    RETURN          reduce using rule 15 (controlExpression -> impresion_vacio .)


state 18

    (33) impresion -> ALERT . LPAREN expression RPAREN
    (34) impresion_vacio -> ALERT . LPAREN RPAREN

    LPAREN          shift and go to state 34


state 19

    (84) declareteFunction -> FUNCTION . ID LPAREN params RPAREN
    (85) declareteFunction -> FUNCTION . ID LPAREN params RPAREN sentencesCmpt

    ID              shift and go to state 35


state 20

    (42) varType -> CONST .

    ID              reduce using rule 42 (varType -> CONST .)


state 21

    (27) sentencias_if -> IF . LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (28) sentencias_if -> IF . LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (29) sentencias_if_else -> IF . LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (30) sentencias_if_else -> IF . LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK

    LPAREN          shift and go to state 36


state 22

    (31) sentencias_while -> WHILE . LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (32) sentencias_while -> WHILE . LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK

    LPAREN          shift and go to state 37


state 23

    (2) sentencia -> callFunction COLON .

    $end            reduce using rule 2 (sentencia -> callFunction COLON .)
    RBLOCK          reduce using rule 2 (sentencia -> callFunction COLON .)
    RETURN          reduce using rule 2 (sentencia -> callFunction COLON .)


state 24

    (52) callMethods -> ID methodArray . COLON

    COLON           shift and go to state 38


state 25

    (53) callMethods -> ID methodSet . COLON

    COLON           shift and go to state 39


state 26

    (54) callMethods -> ID methodMap . COLON

    COLON           shift and go to state 40


state 27

    (89) callFunction -> ID LPAREN . params RPAREN
    (90) params -> . paramList
    (91) paramList -> . javaScript_param
    (92) paramList -> . javaScript_param COMMA paramList
    (35) javaScript_param -> . STRING
    (36) javaScript_param -> . NUM
    (37) javaScript_param -> . boolean
    (38) javaScript_param -> . ID
    (39) boolean -> . TRUE
    (40) boolean -> . FALSE

    STRING          shift and go to state 45
    NUM             shift and go to state 46
    ID              shift and go to state 41
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    params                         shift and go to state 42
    paramList                      shift and go to state 43
    javaScript_param               shift and go to state 44
    boolean                        shift and go to state 47

state 28

    (48) assign -> ID EQUAL . arrayDeclare COLON
    (49) assign -> ID EQUAL . declareMap COLON
    (50) assign -> ID EQUAL . declararSet COLON
    (51) assign -> ID EQUAL . javaScript_param COLON
    (55) arrayDeclare -> . LBRACKET RBRACKET
    (56) arrayDeclare -> . LBRACKET arrayValues RBRACKET
    (57) arrayDeclare -> . NEW ARRAY LPAREN arrayValues RPAREN
    (58) arrayDeclare -> . NEW ARRAY LPAREN RPAREN
    (64) declareMap -> . NEW MAP LPAREN LBRACKET iterable RBRACKET RPAREN
    (65) declareMap -> . NEW MAP LPAREN RPAREN
    (97) declararSet -> . NEW SET LPAREN LBRACKET iterable RBRACKET RPAREN
    (35) javaScript_param -> . STRING
    (36) javaScript_param -> . NUM
    (37) javaScript_param -> . boolean
    (38) javaScript_param -> . ID
    (39) boolean -> . TRUE
    (40) boolean -> . FALSE

    LBRACKET        shift and go to state 54
    NEW             shift and go to state 55
    STRING          shift and go to state 45
    NUM             shift and go to state 46
    ID              shift and go to state 41
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    arrayDeclare                   shift and go to state 50
    declareMap                     shift and go to state 51
    declararSet                    shift and go to state 52
    javaScript_param               shift and go to state 53
    boolean                        shift and go to state 47

state 29

    (61) methodArray -> PERIOD . PUSH LPAREN javaScript_param RPAREN
    (62) methodArray -> PERIOD . UNSHIFT LPAREN javaScript_param RPAREN
    (63) methodArray -> PERIOD . POP LPAREN RPAREN
    (98) methodSet -> PERIOD . ADD LPAREN javaScript_param RPAREN
    (99) methodSet -> PERIOD . DELETE LPAREN javaScript_param RPAREN
    (100) methodSet -> PERIOD . CLEAR LPAREN RPAREN
    (82) methodMap -> PERIOD . CLEAR LPAREN RPAREN
    (83) methodMap -> PERIOD . LENGTH LPAREN RPAREN

    PUSH            shift and go to state 56
    UNSHIFT         shift and go to state 57
    POP             shift and go to state 58
    ADD             shift and go to state 59
    DELETE          shift and go to state 60
    CLEAR           shift and go to state 61
    LENGTH          shift and go to state 62


state 30

    (44) varDeclaration -> varType assign .

    $end            reduce using rule 44 (varDeclaration -> varType assign .)
    RBLOCK          reduce using rule 44 (varDeclaration -> varType assign .)
    RETURN          reduce using rule 44 (varDeclaration -> varType assign .)


state 31

    (86) declareteFunction -> varType ID . EQUAL FUNCTION LPAREN params RPAREN
    (10) assingOperadores -> varType ID . EQUAL inicializarOp
    (48) assign -> ID . EQUAL arrayDeclare COLON
    (49) assign -> ID . EQUAL declareMap COLON
    (50) assign -> ID . EQUAL declararSet COLON
    (51) assign -> ID . EQUAL javaScript_param COLON

    EQUAL           shift and go to state 63


state 32

    (46) varDeclaration -> LET ID . COLON

    COLON           shift and go to state 64


state 33

    (47) varDeclaration -> VAR ID . COLON

    COLON           shift and go to state 65


state 34

    (33) impresion -> ALERT LPAREN . expression RPAREN
    (34) impresion_vacio -> ALERT LPAREN . RPAREN
    (8) expression -> . conditionalEspecifico
    (9) expression -> . inicializarOp
    (135) conditionalEspecifico -> . ID opConditional dataCondi
    (136) conditionalEspecifico -> . NUM opConditional NUM
    (137) conditionalEspecifico -> . STRING opConditional STRING
    (101) inicializarOp -> . PLUS operacionesMath
    (102) inicializarOp -> . MINUS operacionesMath
    (103) inicializarOp -> . operacionesMath
    (104) operacionesMath -> . numOperadores PLUS suma
    (105) operacionesMath -> . suma
    (106) operacionesMath -> . suma operacionesMath
    (107) operacionesMath -> . restas
    (108) operacionesMath -> . numOperadores MINUS restas
    (109) operacionesMath -> . restas operacionesMath
    (110) operacionesMath -> . multiplicacion
    (111) operacionesMath -> . numOperadores TIMES multiplicacion
    (112) operacionesMath -> . multiplicacion operacionesMath
    (113) operacionesMath -> . divicion
    (114) operacionesMath -> . numOperadores DIVIDE divicion
    (115) operacionesMath -> . divicion operacionesMath
    (128) numOperadores -> . enteros
    (129) numOperadores -> . decimales
    (116) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (117) suma -> . numOperadores PLUS NUM
    (118) suma -> . numOperadores
    (119) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (120) restas -> . numOperadores MINUS NUM
    (121) restas -> . numOperadores
    (122) multiplicacion -> . numOperadores TIMES LPAREN numOperadores RPAREN
    (123) multiplicacion -> . numOperadores TIMES NUM
    (124) multiplicacion -> . numOperadores
    (125) divicion -> . numOperadores DIVIDE LPAREN numOperadores RPAREN
    (126) divicion -> . numOperadores DIVIDE NUM
    (127) divicion -> . numOperadores
    (130) enteros -> . NUM
    (131) enteros -> . numNegative
    (134) decimales -> . enteros PERIOD NUM
    (132) numNegative -> . MINUS NUM
    (133) numNegative -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 67
    ID              shift and go to state 70
    NUM             shift and go to state 71
    STRING          shift and go to state 72
    PLUS            shift and go to state 73
    MINUS           shift and go to state 75
    PERIOD          reduce using rule 133 (numNegative -> .)
    TIMES           reduce using rule 133 (numNegative -> .)
    DIVIDE          reduce using rule 133 (numNegative -> .)

  ! PLUS            [ reduce using rule 133 (numNegative -> .) ]
  ! MINUS           [ reduce using rule 133 (numNegative -> .) ]
  ! NUM             [ reduce using rule 133 (numNegative -> .) ]
  ! RPAREN          [ reduce using rule 133 (numNegative -> .) ]

    expression                     shift and go to state 66
    conditionalEspecifico          shift and go to state 68
    inicializarOp                  shift and go to state 69
    operacionesMath                shift and go to state 74
    numOperadores                  shift and go to state 76
    suma                           shift and go to state 77
    restas                         shift and go to state 78
    multiplicacion                 shift and go to state 79
    divicion                       shift and go to state 80
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 35

    (84) declareteFunction -> FUNCTION ID . LPAREN params RPAREN
    (85) declareteFunction -> FUNCTION ID . LPAREN params RPAREN sentencesCmpt

    LPAREN          shift and go to state 84


state 36

    (27) sentencias_if -> IF LPAREN . expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (28) sentencias_if -> IF LPAREN . expression RPAREN LBLOCK sentencia RBLOCK
    (29) sentencias_if_else -> IF LPAREN . expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (30) sentencias_if_else -> IF LPAREN . expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (8) expression -> . conditionalEspecifico
    (9) expression -> . inicializarOp
    (135) conditionalEspecifico -> . ID opConditional dataCondi
    (136) conditionalEspecifico -> . NUM opConditional NUM
    (137) conditionalEspecifico -> . STRING opConditional STRING
    (101) inicializarOp -> . PLUS operacionesMath
    (102) inicializarOp -> . MINUS operacionesMath
    (103) inicializarOp -> . operacionesMath
    (104) operacionesMath -> . numOperadores PLUS suma
    (105) operacionesMath -> . suma
    (106) operacionesMath -> . suma operacionesMath
    (107) operacionesMath -> . restas
    (108) operacionesMath -> . numOperadores MINUS restas
    (109) operacionesMath -> . restas operacionesMath
    (110) operacionesMath -> . multiplicacion
    (111) operacionesMath -> . numOperadores TIMES multiplicacion
    (112) operacionesMath -> . multiplicacion operacionesMath
    (113) operacionesMath -> . divicion
    (114) operacionesMath -> . numOperadores DIVIDE divicion
    (115) operacionesMath -> . divicion operacionesMath
    (128) numOperadores -> . enteros
    (129) numOperadores -> . decimales
    (116) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (117) suma -> . numOperadores PLUS NUM
    (118) suma -> . numOperadores
    (119) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (120) restas -> . numOperadores MINUS NUM
    (121) restas -> . numOperadores
    (122) multiplicacion -> . numOperadores TIMES LPAREN numOperadores RPAREN
    (123) multiplicacion -> . numOperadores TIMES NUM
    (124) multiplicacion -> . numOperadores
    (125) divicion -> . numOperadores DIVIDE LPAREN numOperadores RPAREN
    (126) divicion -> . numOperadores DIVIDE NUM
    (127) divicion -> . numOperadores
    (130) enteros -> . NUM
    (131) enteros -> . numNegative
    (134) decimales -> . enteros PERIOD NUM
    (132) numNegative -> . MINUS NUM
    (133) numNegative -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
    ID              shift and go to state 70
    NUM             shift and go to state 71
    STRING          shift and go to state 72
    PLUS            shift and go to state 73
    MINUS           shift and go to state 75
    PERIOD          reduce using rule 133 (numNegative -> .)
    TIMES           reduce using rule 133 (numNegative -> .)
    DIVIDE          reduce using rule 133 (numNegative -> .)
    RPAREN          reduce using rule 133 (numNegative -> .)
    AND             reduce using rule 133 (numNegative -> .)
    OR              reduce using rule 133 (numNegative -> .)
    NOT             reduce using rule 133 (numNegative -> .)

  ! PLUS            [ reduce using rule 133 (numNegative -> .) ]
  ! MINUS           [ reduce using rule 133 (numNegative -> .) ]
  ! NUM             [ reduce using rule 133 (numNegative -> .) ]

    expression                     shift and go to state 85
    conditionalEspecifico          shift and go to state 68
    inicializarOp                  shift and go to state 69
    operacionesMath                shift and go to state 74
    numOperadores                  shift and go to state 76
    suma                           shift and go to state 77
    restas                         shift and go to state 78
    multiplicacion                 shift and go to state 79
    divicion                       shift and go to state 80
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 37

    (31) sentencias_while -> WHILE LPAREN . expression RPAREN LBLOCK sentencia RBLOCK
    (32) sentencias_while -> WHILE LPAREN . expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (8) expression -> . conditionalEspecifico
    (9) expression -> . inicializarOp
    (135) conditionalEspecifico -> . ID opConditional dataCondi
    (136) conditionalEspecifico -> . NUM opConditional NUM
    (137) conditionalEspecifico -> . STRING opConditional STRING
    (101) inicializarOp -> . PLUS operacionesMath
    (102) inicializarOp -> . MINUS operacionesMath
    (103) inicializarOp -> . operacionesMath
    (104) operacionesMath -> . numOperadores PLUS suma
    (105) operacionesMath -> . suma
    (106) operacionesMath -> . suma operacionesMath
    (107) operacionesMath -> . restas
    (108) operacionesMath -> . numOperadores MINUS restas
    (109) operacionesMath -> . restas operacionesMath
    (110) operacionesMath -> . multiplicacion
    (111) operacionesMath -> . numOperadores TIMES multiplicacion
    (112) operacionesMath -> . multiplicacion operacionesMath
    (113) operacionesMath -> . divicion
    (114) operacionesMath -> . numOperadores DIVIDE divicion
    (115) operacionesMath -> . divicion operacionesMath
    (128) numOperadores -> . enteros
    (129) numOperadores -> . decimales
    (116) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (117) suma -> . numOperadores PLUS NUM
    (118) suma -> . numOperadores
    (119) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (120) restas -> . numOperadores MINUS NUM
    (121) restas -> . numOperadores
    (122) multiplicacion -> . numOperadores TIMES LPAREN numOperadores RPAREN
    (123) multiplicacion -> . numOperadores TIMES NUM
    (124) multiplicacion -> . numOperadores
    (125) divicion -> . numOperadores DIVIDE LPAREN numOperadores RPAREN
    (126) divicion -> . numOperadores DIVIDE NUM
    (127) divicion -> . numOperadores
    (130) enteros -> . NUM
    (131) enteros -> . numNegative
    (134) decimales -> . enteros PERIOD NUM
    (132) numNegative -> . MINUS NUM
    (133) numNegative -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
    ID              shift and go to state 70
    NUM             shift and go to state 71
    STRING          shift and go to state 72
    PLUS            shift and go to state 73
    MINUS           shift and go to state 75
    PERIOD          reduce using rule 133 (numNegative -> .)
    TIMES           reduce using rule 133 (numNegative -> .)
    DIVIDE          reduce using rule 133 (numNegative -> .)
    RPAREN          reduce using rule 133 (numNegative -> .)
    AND             reduce using rule 133 (numNegative -> .)
    OR              reduce using rule 133 (numNegative -> .)
    NOT             reduce using rule 133 (numNegative -> .)

  ! PLUS            [ reduce using rule 133 (numNegative -> .) ]
  ! MINUS           [ reduce using rule 133 (numNegative -> .) ]
  ! NUM             [ reduce using rule 133 (numNegative -> .) ]

    expression                     shift and go to state 86
    conditionalEspecifico          shift and go to state 68
    inicializarOp                  shift and go to state 69
    operacionesMath                shift and go to state 74
    numOperadores                  shift and go to state 76
    suma                           shift and go to state 77
    restas                         shift and go to state 78
    multiplicacion                 shift and go to state 79
    divicion                       shift and go to state 80
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 38

    (52) callMethods -> ID methodArray COLON .

    $end            reduce using rule 52 (callMethods -> ID methodArray COLON .)
    RBLOCK          reduce using rule 52 (callMethods -> ID methodArray COLON .)
    RETURN          reduce using rule 52 (callMethods -> ID methodArray COLON .)


state 39

    (53) callMethods -> ID methodSet COLON .

    $end            reduce using rule 53 (callMethods -> ID methodSet COLON .)
    RBLOCK          reduce using rule 53 (callMethods -> ID methodSet COLON .)
    RETURN          reduce using rule 53 (callMethods -> ID methodSet COLON .)


state 40

    (54) callMethods -> ID methodMap COLON .

    $end            reduce using rule 54 (callMethods -> ID methodMap COLON .)
    RBLOCK          reduce using rule 54 (callMethods -> ID methodMap COLON .)
    RETURN          reduce using rule 54 (callMethods -> ID methodMap COLON .)


state 41

    (38) javaScript_param -> ID .

    COMMA           reduce using rule 38 (javaScript_param -> ID .)
    RPAREN          reduce using rule 38 (javaScript_param -> ID .)
    COLON           reduce using rule 38 (javaScript_param -> ID .)
    RBRACKET        reduce using rule 38 (javaScript_param -> ID .)


state 42

    (89) callFunction -> ID LPAREN params . RPAREN

    RPAREN          shift and go to state 87


state 43

    (90) params -> paramList .

    RPAREN          reduce using rule 90 (params -> paramList .)


state 44

    (91) paramList -> javaScript_param .
    (92) paramList -> javaScript_param . COMMA paramList

    RPAREN          reduce using rule 91 (paramList -> javaScript_param .)
    COMMA           shift and go to state 88


state 45

    (35) javaScript_param -> STRING .

    COMMA           reduce using rule 35 (javaScript_param -> STRING .)
    RPAREN          reduce using rule 35 (javaScript_param -> STRING .)
    COLON           reduce using rule 35 (javaScript_param -> STRING .)
    RBRACKET        reduce using rule 35 (javaScript_param -> STRING .)


state 46

    (36) javaScript_param -> NUM .

    COMMA           reduce using rule 36 (javaScript_param -> NUM .)
    RPAREN          reduce using rule 36 (javaScript_param -> NUM .)
    COLON           reduce using rule 36 (javaScript_param -> NUM .)
    RBRACKET        reduce using rule 36 (javaScript_param -> NUM .)


state 47

    (37) javaScript_param -> boolean .

    COMMA           reduce using rule 37 (javaScript_param -> boolean .)
    RPAREN          reduce using rule 37 (javaScript_param -> boolean .)
    COLON           reduce using rule 37 (javaScript_param -> boolean .)
    RBRACKET        reduce using rule 37 (javaScript_param -> boolean .)


state 48

    (39) boolean -> TRUE .

    COMMA           reduce using rule 39 (boolean -> TRUE .)
    RPAREN          reduce using rule 39 (boolean -> TRUE .)
    COLON           reduce using rule 39 (boolean -> TRUE .)
    RBRACKET        reduce using rule 39 (boolean -> TRUE .)
    STRING          reduce using rule 39 (boolean -> TRUE .)
    NUM             reduce using rule 39 (boolean -> TRUE .)


state 49

    (40) boolean -> FALSE .

    COMMA           reduce using rule 40 (boolean -> FALSE .)
    RPAREN          reduce using rule 40 (boolean -> FALSE .)
    COLON           reduce using rule 40 (boolean -> FALSE .)
    RBRACKET        reduce using rule 40 (boolean -> FALSE .)
    STRING          reduce using rule 40 (boolean -> FALSE .)
    NUM             reduce using rule 40 (boolean -> FALSE .)


state 50

    (48) assign -> ID EQUAL arrayDeclare . COLON

    COLON           shift and go to state 89


state 51

    (49) assign -> ID EQUAL declareMap . COLON

    COLON           shift and go to state 90


state 52

    (50) assign -> ID EQUAL declararSet . COLON

    COLON           shift and go to state 91


state 53

    (51) assign -> ID EQUAL javaScript_param . COLON

    COLON           shift and go to state 92


state 54

    (55) arrayDeclare -> LBRACKET . RBRACKET
    (56) arrayDeclare -> LBRACKET . arrayValues RBRACKET
    (59) arrayValues -> . javaScript_param
    (60) arrayValues -> . javaScript_param COMMA arrayValues
    (35) javaScript_param -> . STRING
    (36) javaScript_param -> . NUM
    (37) javaScript_param -> . boolean
    (38) javaScript_param -> . ID
    (39) boolean -> . TRUE
    (40) boolean -> . FALSE

    RBRACKET        shift and go to state 93
    STRING          shift and go to state 45
    NUM             shift and go to state 46
    ID              shift and go to state 41
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    arrayValues                    shift and go to state 94
    javaScript_param               shift and go to state 95
    boolean                        shift and go to state 47

state 55

    (57) arrayDeclare -> NEW . ARRAY LPAREN arrayValues RPAREN
    (58) arrayDeclare -> NEW . ARRAY LPAREN RPAREN
    (64) declareMap -> NEW . MAP LPAREN LBRACKET iterable RBRACKET RPAREN
    (65) declareMap -> NEW . MAP LPAREN RPAREN
    (97) declararSet -> NEW . SET LPAREN LBRACKET iterable RBRACKET RPAREN

    ARRAY           shift and go to state 96
    MAP             shift and go to state 97
    SET             shift and go to state 98


state 56

    (61) methodArray -> PERIOD PUSH . LPAREN javaScript_param RPAREN

    LPAREN          shift and go to state 99


state 57

    (62) methodArray -> PERIOD UNSHIFT . LPAREN javaScript_param RPAREN

    LPAREN          shift and go to state 100


state 58

    (63) methodArray -> PERIOD POP . LPAREN RPAREN

    LPAREN          shift and go to state 101


state 59

    (98) methodSet -> PERIOD ADD . LPAREN javaScript_param RPAREN

    LPAREN          shift and go to state 102


state 60

    (99) methodSet -> PERIOD DELETE . LPAREN javaScript_param RPAREN

    LPAREN          shift and go to state 103


state 61

    (100) methodSet -> PERIOD CLEAR . LPAREN RPAREN
    (82) methodMap -> PERIOD CLEAR . LPAREN RPAREN

    LPAREN          shift and go to state 104


state 62

    (83) methodMap -> PERIOD LENGTH . LPAREN RPAREN

    LPAREN          shift and go to state 105


state 63

    (86) declareteFunction -> varType ID EQUAL . FUNCTION LPAREN params RPAREN
    (10) assingOperadores -> varType ID EQUAL . inicializarOp
    (48) assign -> ID EQUAL . arrayDeclare COLON
    (49) assign -> ID EQUAL . declareMap COLON
    (50) assign -> ID EQUAL . declararSet COLON
    (51) assign -> ID EQUAL . javaScript_param COLON
    (101) inicializarOp -> . PLUS operacionesMath
    (102) inicializarOp -> . MINUS operacionesMath
    (103) inicializarOp -> . operacionesMath
    (55) arrayDeclare -> . LBRACKET RBRACKET
    (56) arrayDeclare -> . LBRACKET arrayValues RBRACKET
    (57) arrayDeclare -> . NEW ARRAY LPAREN arrayValues RPAREN
    (58) arrayDeclare -> . NEW ARRAY LPAREN RPAREN
    (64) declareMap -> . NEW MAP LPAREN LBRACKET iterable RBRACKET RPAREN
    (65) declareMap -> . NEW MAP LPAREN RPAREN
    (97) declararSet -> . NEW SET LPAREN LBRACKET iterable RBRACKET RPAREN
    (35) javaScript_param -> . STRING
    (36) javaScript_param -> . NUM
    (37) javaScript_param -> . boolean
    (38) javaScript_param -> . ID
    (104) operacionesMath -> . numOperadores PLUS suma
    (105) operacionesMath -> . suma
    (106) operacionesMath -> . suma operacionesMath
    (107) operacionesMath -> . restas
    (108) operacionesMath -> . numOperadores MINUS restas
    (109) operacionesMath -> . restas operacionesMath
    (110) operacionesMath -> . multiplicacion
    (111) operacionesMath -> . numOperadores TIMES multiplicacion
    (112) operacionesMath -> . multiplicacion operacionesMath
    (113) operacionesMath -> . divicion
    (114) operacionesMath -> . numOperadores DIVIDE divicion
    (115) operacionesMath -> . divicion operacionesMath
    (39) boolean -> . TRUE
    (40) boolean -> . FALSE
    (128) numOperadores -> . enteros
    (129) numOperadores -> . decimales
    (116) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (117) suma -> . numOperadores PLUS NUM
    (118) suma -> . numOperadores
    (119) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (120) restas -> . numOperadores MINUS NUM
    (121) restas -> . numOperadores
    (122) multiplicacion -> . numOperadores TIMES LPAREN numOperadores RPAREN
    (123) multiplicacion -> . numOperadores TIMES NUM
    (124) multiplicacion -> . numOperadores
    (125) divicion -> . numOperadores DIVIDE LPAREN numOperadores RPAREN
    (126) divicion -> . numOperadores DIVIDE NUM
    (127) divicion -> . numOperadores
    (130) enteros -> . NUM
    (131) enteros -> . numNegative
    (134) decimales -> . enteros PERIOD NUM
    (132) numNegative -> . MINUS NUM
    (133) numNegative -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
    FUNCTION        shift and go to state 106
    PLUS            shift and go to state 73
    MINUS           shift and go to state 75
    LBRACKET        shift and go to state 54
    NEW             shift and go to state 55
    STRING          shift and go to state 45
    NUM             shift and go to state 108
    ID              shift and go to state 41
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    PERIOD          reduce using rule 133 (numNegative -> .)
    TIMES           reduce using rule 133 (numNegative -> .)
    DIVIDE          reduce using rule 133 (numNegative -> .)
    $end            reduce using rule 133 (numNegative -> .)
    RBLOCK          reduce using rule 133 (numNegative -> .)
    RETURN          reduce using rule 133 (numNegative -> .)

  ! PLUS            [ reduce using rule 133 (numNegative -> .) ]
  ! MINUS           [ reduce using rule 133 (numNegative -> .) ]
  ! NUM             [ reduce using rule 133 (numNegative -> .) ]

    inicializarOp                  shift and go to state 107
    arrayDeclare                   shift and go to state 50
    declareMap                     shift and go to state 51
    declararSet                    shift and go to state 52
    javaScript_param               shift and go to state 53
    operacionesMath                shift and go to state 74
    boolean                        shift and go to state 47
    numOperadores                  shift and go to state 76
    suma                           shift and go to state 77
    restas                         shift and go to state 78
    multiplicacion                 shift and go to state 79
    divicion                       shift and go to state 80
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 64

    (46) varDeclaration -> LET ID COLON .

    $end            reduce using rule 46 (varDeclaration -> LET ID COLON .)
    RBLOCK          reduce using rule 46 (varDeclaration -> LET ID COLON .)
    RETURN          reduce using rule 46 (varDeclaration -> LET ID COLON .)


state 65

    (47) varDeclaration -> VAR ID COLON .

    $end            reduce using rule 47 (varDeclaration -> VAR ID COLON .)
    RBLOCK          reduce using rule 47 (varDeclaration -> VAR ID COLON .)
    RETURN          reduce using rule 47 (varDeclaration -> VAR ID COLON .)


state 66

    (33) impresion -> ALERT LPAREN expression . RPAREN

    RPAREN          shift and go to state 109


state 67

    (34) impresion_vacio -> ALERT LPAREN RPAREN .

    $end            reduce using rule 34 (impresion_vacio -> ALERT LPAREN RPAREN .)
    RBLOCK          reduce using rule 34 (impresion_vacio -> ALERT LPAREN RPAREN .)
    RETURN          reduce using rule 34 (impresion_vacio -> ALERT LPAREN RPAREN .)


state 68

    (8) expression -> conditionalEspecifico .

    RPAREN          reduce using rule 8 (expression -> conditionalEspecifico .)
    AND             reduce using rule 8 (expression -> conditionalEspecifico .)
    OR              reduce using rule 8 (expression -> conditionalEspecifico .)
    NOT             reduce using rule 8 (expression -> conditionalEspecifico .)


state 69

    (9) expression -> inicializarOp .

    RPAREN          reduce using rule 9 (expression -> inicializarOp .)
    AND             reduce using rule 9 (expression -> inicializarOp .)
    OR              reduce using rule 9 (expression -> inicializarOp .)
    NOT             reduce using rule 9 (expression -> inicializarOp .)


state 70

    (135) conditionalEspecifico -> ID . opConditional dataCondi
    (16) opConditional -> . ISEQUAL
    (17) opConditional -> . IS_NOT_IDENTICAL
    (18) opConditional -> . IS_IDENTICAL
    (19) opConditional -> . GREATER
    (20) opConditional -> . GREATEREQUAL
    (21) opConditional -> . LESS
    (22) opConditional -> . LESSEQUAL
    (23) opConditional -> . boolean
    (39) boolean -> . TRUE
    (40) boolean -> . FALSE

    ISEQUAL         shift and go to state 111
    IS_NOT_IDENTICAL shift and go to state 112
    IS_IDENTICAL    shift and go to state 113
    GREATER         shift and go to state 114
    GREATEREQUAL    shift and go to state 115
    LESS            shift and go to state 116
    LESSEQUAL       shift and go to state 117
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    opConditional                  shift and go to state 110
    boolean                        shift and go to state 118

state 71

    (136) conditionalEspecifico -> NUM . opConditional NUM
    (130) enteros -> NUM .
    (16) opConditional -> . ISEQUAL
    (17) opConditional -> . IS_NOT_IDENTICAL
    (18) opConditional -> . IS_IDENTICAL
    (19) opConditional -> . GREATER
    (20) opConditional -> . GREATEREQUAL
    (21) opConditional -> . LESS
    (22) opConditional -> . LESSEQUAL
    (23) opConditional -> . boolean
    (39) boolean -> . TRUE
    (40) boolean -> . FALSE

    PERIOD          reduce using rule 130 (enteros -> NUM .)
    PLUS            reduce using rule 130 (enteros -> NUM .)
    MINUS           reduce using rule 130 (enteros -> NUM .)
    TIMES           reduce using rule 130 (enteros -> NUM .)
    DIVIDE          reduce using rule 130 (enteros -> NUM .)
    NUM             reduce using rule 130 (enteros -> NUM .)
    RPAREN          reduce using rule 130 (enteros -> NUM .)
    AND             reduce using rule 130 (enteros -> NUM .)
    OR              reduce using rule 130 (enteros -> NUM .)
    NOT             reduce using rule 130 (enteros -> NUM .)
    ISEQUAL         shift and go to state 111
    IS_NOT_IDENTICAL shift and go to state 112
    IS_IDENTICAL    shift and go to state 113
    GREATER         shift and go to state 114
    GREATEREQUAL    shift and go to state 115
    LESS            shift and go to state 116
    LESSEQUAL       shift and go to state 117
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    opConditional                  shift and go to state 119
    boolean                        shift and go to state 118

state 72

    (137) conditionalEspecifico -> STRING . opConditional STRING
    (16) opConditional -> . ISEQUAL
    (17) opConditional -> . IS_NOT_IDENTICAL
    (18) opConditional -> . IS_IDENTICAL
    (19) opConditional -> . GREATER
    (20) opConditional -> . GREATEREQUAL
    (21) opConditional -> . LESS
    (22) opConditional -> . LESSEQUAL
    (23) opConditional -> . boolean
    (39) boolean -> . TRUE
    (40) boolean -> . FALSE

    ISEQUAL         shift and go to state 111
    IS_NOT_IDENTICAL shift and go to state 112
    IS_IDENTICAL    shift and go to state 113
    GREATER         shift and go to state 114
    GREATEREQUAL    shift and go to state 115
    LESS            shift and go to state 116
    LESSEQUAL       shift and go to state 117
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    opConditional                  shift and go to state 120
    boolean                        shift and go to state 118

state 73

    (101) inicializarOp -> PLUS . operacionesMath
    (104) operacionesMath -> . numOperadores PLUS suma
    (105) operacionesMath -> . suma
    (106) operacionesMath -> . suma operacionesMath
    (107) operacionesMath -> . restas
    (108) operacionesMath -> . numOperadores MINUS restas
    (109) operacionesMath -> . restas operacionesMath
    (110) operacionesMath -> . multiplicacion
    (111) operacionesMath -> . numOperadores TIMES multiplicacion
    (112) operacionesMath -> . multiplicacion operacionesMath
    (113) operacionesMath -> . divicion
    (114) operacionesMath -> . numOperadores DIVIDE divicion
    (115) operacionesMath -> . divicion operacionesMath
    (128) numOperadores -> . enteros
    (129) numOperadores -> . decimales
    (116) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (117) suma -> . numOperadores PLUS NUM
    (118) suma -> . numOperadores
    (119) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (120) restas -> . numOperadores MINUS NUM
    (121) restas -> . numOperadores
    (122) multiplicacion -> . numOperadores TIMES LPAREN numOperadores RPAREN
    (123) multiplicacion -> . numOperadores TIMES NUM
    (124) multiplicacion -> . numOperadores
    (125) divicion -> . numOperadores DIVIDE LPAREN numOperadores RPAREN
    (126) divicion -> . numOperadores DIVIDE NUM
    (127) divicion -> . numOperadores
    (130) enteros -> . NUM
    (131) enteros -> . numNegative
    (134) decimales -> . enteros PERIOD NUM
    (132) numNegative -> . MINUS NUM
    (133) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
    NUM             shift and go to state 123
    MINUS           shift and go to state 122
    PERIOD          reduce using rule 133 (numNegative -> .)
    PLUS            reduce using rule 133 (numNegative -> .)
    TIMES           reduce using rule 133 (numNegative -> .)
    DIVIDE          reduce using rule 133 (numNegative -> .)
    RPAREN          reduce using rule 133 (numNegative -> .)
    AND             reduce using rule 133 (numNegative -> .)
    OR              reduce using rule 133 (numNegative -> .)
    NOT             reduce using rule 133 (numNegative -> .)
    $end            reduce using rule 133 (numNegative -> .)
    RBLOCK          reduce using rule 133 (numNegative -> .)
    RETURN          reduce using rule 133 (numNegative -> .)

  ! MINUS           [ reduce using rule 133 (numNegative -> .) ]
  ! NUM             [ reduce using rule 133 (numNegative -> .) ]

    operacionesMath                shift and go to state 121
    numOperadores                  shift and go to state 76
    suma                           shift and go to state 77
    restas                         shift and go to state 78
    multiplicacion                 shift and go to state 79
    divicion                       shift and go to state 80
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 74

    (103) inicializarOp -> operacionesMath .

    RPAREN          reduce using rule 103 (inicializarOp -> operacionesMath .)
    AND             reduce using rule 103 (inicializarOp -> operacionesMath .)
    OR              reduce using rule 103 (inicializarOp -> operacionesMath .)
    NOT             reduce using rule 103 (inicializarOp -> operacionesMath .)
    $end            reduce using rule 103 (inicializarOp -> operacionesMath .)
    RBLOCK          reduce using rule 103 (inicializarOp -> operacionesMath .)
    RETURN          reduce using rule 103 (inicializarOp -> operacionesMath .)


state 75

    (102) inicializarOp -> MINUS . operacionesMath
    (132) numNegative -> MINUS . NUM
    (104) operacionesMath -> . numOperadores PLUS suma
    (105) operacionesMath -> . suma
    (106) operacionesMath -> . suma operacionesMath
    (107) operacionesMath -> . restas
    (108) operacionesMath -> . numOperadores MINUS restas
    (109) operacionesMath -> . restas operacionesMath
    (110) operacionesMath -> . multiplicacion
    (111) operacionesMath -> . numOperadores TIMES multiplicacion
    (112) operacionesMath -> . multiplicacion operacionesMath
    (113) operacionesMath -> . divicion
    (114) operacionesMath -> . numOperadores DIVIDE divicion
    (115) operacionesMath -> . divicion operacionesMath
    (128) numOperadores -> . enteros
    (129) numOperadores -> . decimales
    (116) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (117) suma -> . numOperadores PLUS NUM
    (118) suma -> . numOperadores
    (119) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (120) restas -> . numOperadores MINUS NUM
    (121) restas -> . numOperadores
    (122) multiplicacion -> . numOperadores TIMES LPAREN numOperadores RPAREN
    (123) multiplicacion -> . numOperadores TIMES NUM
    (124) multiplicacion -> . numOperadores
    (125) divicion -> . numOperadores DIVIDE LPAREN numOperadores RPAREN
    (126) divicion -> . numOperadores DIVIDE NUM
    (127) divicion -> . numOperadores
    (130) enteros -> . NUM
    (131) enteros -> . numNegative
    (134) decimales -> . enteros PERIOD NUM
    (132) numNegative -> . MINUS NUM
    (133) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
    NUM             shift and go to state 125
    MINUS           shift and go to state 122
    PERIOD          reduce using rule 133 (numNegative -> .)
    PLUS            reduce using rule 133 (numNegative -> .)
    TIMES           reduce using rule 133 (numNegative -> .)
    DIVIDE          reduce using rule 133 (numNegative -> .)
    RPAREN          reduce using rule 133 (numNegative -> .)
    AND             reduce using rule 133 (numNegative -> .)
    OR              reduce using rule 133 (numNegative -> .)
    NOT             reduce using rule 133 (numNegative -> .)
    $end            reduce using rule 133 (numNegative -> .)
    RBLOCK          reduce using rule 133 (numNegative -> .)
    RETURN          reduce using rule 133 (numNegative -> .)

  ! MINUS           [ reduce using rule 133 (numNegative -> .) ]
  ! NUM             [ reduce using rule 133 (numNegative -> .) ]

    operacionesMath                shift and go to state 124
    numOperadores                  shift and go to state 76
    suma                           shift and go to state 77
    restas                         shift and go to state 78
    multiplicacion                 shift and go to state 79
    divicion                       shift and go to state 80
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 76

    (104) operacionesMath -> numOperadores . PLUS suma
    (108) operacionesMath -> numOperadores . MINUS restas
    (111) operacionesMath -> numOperadores . TIMES multiplicacion
    (114) operacionesMath -> numOperadores . DIVIDE divicion
    (116) suma -> numOperadores . PLUS LPAREN numOperadores RPAREN
    (117) suma -> numOperadores . PLUS NUM
    (118) suma -> numOperadores .
    (119) restas -> numOperadores . MINUS LPAREN numOperadores RPAREN
    (120) restas -> numOperadores . MINUS NUM
    (121) restas -> numOperadores .
    (122) multiplicacion -> numOperadores . TIMES LPAREN numOperadores RPAREN
    (123) multiplicacion -> numOperadores . TIMES NUM
    (124) multiplicacion -> numOperadores .
    (125) divicion -> numOperadores . DIVIDE LPAREN numOperadores RPAREN
    (126) divicion -> numOperadores . DIVIDE NUM
    (127) divicion -> numOperadores .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! reduce/reduce conflict for NUM resolved using rule 118 (suma -> numOperadores .)
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! reduce/reduce conflict for PERIOD resolved using rule 118 (suma -> numOperadores .)
  ! reduce/reduce conflict for RPAREN resolved using rule 118 (suma -> numOperadores .)
  ! reduce/reduce conflict for AND resolved using rule 118 (suma -> numOperadores .)
  ! reduce/reduce conflict for OR resolved using rule 118 (suma -> numOperadores .)
  ! reduce/reduce conflict for NOT resolved using rule 118 (suma -> numOperadores .)
  ! reduce/reduce conflict for $end resolved using rule 118 (suma -> numOperadores .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 118 (suma -> numOperadores .)
  ! reduce/reduce conflict for RETURN resolved using rule 118 (suma -> numOperadores .)
  ! reduce/reduce conflict for NUM resolved using rule 118 (suma -> numOperadores .)
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! reduce/reduce conflict for PERIOD resolved using rule 118 (suma -> numOperadores .)
  ! reduce/reduce conflict for RPAREN resolved using rule 118 (suma -> numOperadores .)
  ! reduce/reduce conflict for AND resolved using rule 118 (suma -> numOperadores .)
  ! reduce/reduce conflict for OR resolved using rule 118 (suma -> numOperadores .)
  ! reduce/reduce conflict for NOT resolved using rule 118 (suma -> numOperadores .)
  ! reduce/reduce conflict for $end resolved using rule 118 (suma -> numOperadores .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 118 (suma -> numOperadores .)
  ! reduce/reduce conflict for RETURN resolved using rule 118 (suma -> numOperadores .)
  ! reduce/reduce conflict for NUM resolved using rule 118 (suma -> numOperadores .)
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! reduce/reduce conflict for PERIOD resolved using rule 118 (suma -> numOperadores .)
  ! reduce/reduce conflict for RPAREN resolved using rule 118 (suma -> numOperadores .)
  ! reduce/reduce conflict for AND resolved using rule 118 (suma -> numOperadores .)
  ! reduce/reduce conflict for OR resolved using rule 118 (suma -> numOperadores .)
  ! reduce/reduce conflict for NOT resolved using rule 118 (suma -> numOperadores .)
  ! reduce/reduce conflict for $end resolved using rule 118 (suma -> numOperadores .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 118 (suma -> numOperadores .)
  ! reduce/reduce conflict for RETURN resolved using rule 118 (suma -> numOperadores .)
    PLUS            shift and go to state 126
    MINUS           shift and go to state 127
    TIMES           shift and go to state 128
    DIVIDE          shift and go to state 129
    NUM             reduce using rule 118 (suma -> numOperadores .)
    PERIOD          reduce using rule 118 (suma -> numOperadores .)
    RPAREN          reduce using rule 118 (suma -> numOperadores .)
    AND             reduce using rule 118 (suma -> numOperadores .)
    OR              reduce using rule 118 (suma -> numOperadores .)
    NOT             reduce using rule 118 (suma -> numOperadores .)
    $end            reduce using rule 118 (suma -> numOperadores .)
    RBLOCK          reduce using rule 118 (suma -> numOperadores .)
    RETURN          reduce using rule 118 (suma -> numOperadores .)

  ! MINUS           [ reduce using rule 118 (suma -> numOperadores .) ]
  ! PLUS            [ reduce using rule 118 (suma -> numOperadores .) ]
  ! TIMES           [ reduce using rule 118 (suma -> numOperadores .) ]
  ! DIVIDE          [ reduce using rule 118 (suma -> numOperadores .) ]
  ! NUM             [ reduce using rule 121 (restas -> numOperadores .) ]
  ! MINUS           [ reduce using rule 121 (restas -> numOperadores .) ]
  ! PLUS            [ reduce using rule 121 (restas -> numOperadores .) ]
  ! TIMES           [ reduce using rule 121 (restas -> numOperadores .) ]
  ! DIVIDE          [ reduce using rule 121 (restas -> numOperadores .) ]
  ! PERIOD          [ reduce using rule 121 (restas -> numOperadores .) ]
  ! RPAREN          [ reduce using rule 121 (restas -> numOperadores .) ]
  ! AND             [ reduce using rule 121 (restas -> numOperadores .) ]
  ! OR              [ reduce using rule 121 (restas -> numOperadores .) ]
  ! NOT             [ reduce using rule 121 (restas -> numOperadores .) ]
  ! $end            [ reduce using rule 121 (restas -> numOperadores .) ]
  ! RBLOCK          [ reduce using rule 121 (restas -> numOperadores .) ]
  ! RETURN          [ reduce using rule 121 (restas -> numOperadores .) ]
  ! NUM             [ reduce using rule 124 (multiplicacion -> numOperadores .) ]
  ! MINUS           [ reduce using rule 124 (multiplicacion -> numOperadores .) ]
  ! PLUS            [ reduce using rule 124 (multiplicacion -> numOperadores .) ]
  ! TIMES           [ reduce using rule 124 (multiplicacion -> numOperadores .) ]
  ! DIVIDE          [ reduce using rule 124 (multiplicacion -> numOperadores .) ]
  ! PERIOD          [ reduce using rule 124 (multiplicacion -> numOperadores .) ]
  ! RPAREN          [ reduce using rule 124 (multiplicacion -> numOperadores .) ]
  ! AND             [ reduce using rule 124 (multiplicacion -> numOperadores .) ]
  ! OR              [ reduce using rule 124 (multiplicacion -> numOperadores .) ]
  ! NOT             [ reduce using rule 124 (multiplicacion -> numOperadores .) ]
  ! $end            [ reduce using rule 124 (multiplicacion -> numOperadores .) ]
  ! RBLOCK          [ reduce using rule 124 (multiplicacion -> numOperadores .) ]
  ! RETURN          [ reduce using rule 124 (multiplicacion -> numOperadores .) ]
  ! NUM             [ reduce using rule 127 (divicion -> numOperadores .) ]
  ! MINUS           [ reduce using rule 127 (divicion -> numOperadores .) ]
  ! PLUS            [ reduce using rule 127 (divicion -> numOperadores .) ]
  ! TIMES           [ reduce using rule 127 (divicion -> numOperadores .) ]
  ! DIVIDE          [ reduce using rule 127 (divicion -> numOperadores .) ]
  ! PERIOD          [ reduce using rule 127 (divicion -> numOperadores .) ]
  ! RPAREN          [ reduce using rule 127 (divicion -> numOperadores .) ]
  ! AND             [ reduce using rule 127 (divicion -> numOperadores .) ]
  ! OR              [ reduce using rule 127 (divicion -> numOperadores .) ]
  ! NOT             [ reduce using rule 127 (divicion -> numOperadores .) ]
  ! $end            [ reduce using rule 127 (divicion -> numOperadores .) ]
  ! RBLOCK          [ reduce using rule 127 (divicion -> numOperadores .) ]
  ! RETURN          [ reduce using rule 127 (divicion -> numOperadores .) ]


state 77

    (105) operacionesMath -> suma .
    (106) operacionesMath -> suma . operacionesMath
    (104) operacionesMath -> . numOperadores PLUS suma
    (105) operacionesMath -> . suma
    (106) operacionesMath -> . suma operacionesMath
    (107) operacionesMath -> . restas
    (108) operacionesMath -> . numOperadores MINUS restas
    (109) operacionesMath -> . restas operacionesMath
    (110) operacionesMath -> . multiplicacion
    (111) operacionesMath -> . numOperadores TIMES multiplicacion
    (112) operacionesMath -> . multiplicacion operacionesMath
    (113) operacionesMath -> . divicion
    (114) operacionesMath -> . numOperadores DIVIDE divicion
    (115) operacionesMath -> . divicion operacionesMath
    (128) numOperadores -> . enteros
    (129) numOperadores -> . decimales
    (116) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (117) suma -> . numOperadores PLUS NUM
    (118) suma -> . numOperadores
    (119) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (120) restas -> . numOperadores MINUS NUM
    (121) restas -> . numOperadores
    (122) multiplicacion -> . numOperadores TIMES LPAREN numOperadores RPAREN
    (123) multiplicacion -> . numOperadores TIMES NUM
    (124) multiplicacion -> . numOperadores
    (125) divicion -> . numOperadores DIVIDE LPAREN numOperadores RPAREN
    (126) divicion -> . numOperadores DIVIDE NUM
    (127) divicion -> . numOperadores
    (130) enteros -> . NUM
    (131) enteros -> . numNegative
    (134) decimales -> . enteros PERIOD NUM
    (132) numNegative -> . MINUS NUM
    (133) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! reduce/reduce conflict for RPAREN resolved using rule 105 (operacionesMath -> suma .)
  ! reduce/reduce conflict for AND resolved using rule 105 (operacionesMath -> suma .)
  ! reduce/reduce conflict for OR resolved using rule 105 (operacionesMath -> suma .)
  ! reduce/reduce conflict for NOT resolved using rule 105 (operacionesMath -> suma .)
  ! reduce/reduce conflict for $end resolved using rule 105 (operacionesMath -> suma .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 105 (operacionesMath -> suma .)
  ! reduce/reduce conflict for RETURN resolved using rule 105 (operacionesMath -> suma .)
    RPAREN          reduce using rule 105 (operacionesMath -> suma .)
    AND             reduce using rule 105 (operacionesMath -> suma .)
    OR              reduce using rule 105 (operacionesMath -> suma .)
    NOT             reduce using rule 105 (operacionesMath -> suma .)
    $end            reduce using rule 105 (operacionesMath -> suma .)
    RBLOCK          reduce using rule 105 (operacionesMath -> suma .)
    RETURN          reduce using rule 105 (operacionesMath -> suma .)
    NUM             shift and go to state 123
    MINUS           shift and go to state 122
    PERIOD          reduce using rule 133 (numNegative -> .)
    PLUS            reduce using rule 133 (numNegative -> .)
    TIMES           reduce using rule 133 (numNegative -> .)
    DIVIDE          reduce using rule 133 (numNegative -> .)

  ! MINUS           [ reduce using rule 133 (numNegative -> .) ]
  ! NUM             [ reduce using rule 133 (numNegative -> .) ]
  ! RPAREN          [ reduce using rule 133 (numNegative -> .) ]
  ! AND             [ reduce using rule 133 (numNegative -> .) ]
  ! OR              [ reduce using rule 133 (numNegative -> .) ]
  ! NOT             [ reduce using rule 133 (numNegative -> .) ]
  ! $end            [ reduce using rule 133 (numNegative -> .) ]
  ! RBLOCK          [ reduce using rule 133 (numNegative -> .) ]
  ! RETURN          [ reduce using rule 133 (numNegative -> .) ]

    suma                           shift and go to state 77
    operacionesMath                shift and go to state 130
    numOperadores                  shift and go to state 76
    restas                         shift and go to state 78
    multiplicacion                 shift and go to state 79
    divicion                       shift and go to state 80
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 78

    (107) operacionesMath -> restas .
    (109) operacionesMath -> restas . operacionesMath
    (104) operacionesMath -> . numOperadores PLUS suma
    (105) operacionesMath -> . suma
    (106) operacionesMath -> . suma operacionesMath
    (107) operacionesMath -> . restas
    (108) operacionesMath -> . numOperadores MINUS restas
    (109) operacionesMath -> . restas operacionesMath
    (110) operacionesMath -> . multiplicacion
    (111) operacionesMath -> . numOperadores TIMES multiplicacion
    (112) operacionesMath -> . multiplicacion operacionesMath
    (113) operacionesMath -> . divicion
    (114) operacionesMath -> . numOperadores DIVIDE divicion
    (115) operacionesMath -> . divicion operacionesMath
    (128) numOperadores -> . enteros
    (129) numOperadores -> . decimales
    (116) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (117) suma -> . numOperadores PLUS NUM
    (118) suma -> . numOperadores
    (119) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (120) restas -> . numOperadores MINUS NUM
    (121) restas -> . numOperadores
    (122) multiplicacion -> . numOperadores TIMES LPAREN numOperadores RPAREN
    (123) multiplicacion -> . numOperadores TIMES NUM
    (124) multiplicacion -> . numOperadores
    (125) divicion -> . numOperadores DIVIDE LPAREN numOperadores RPAREN
    (126) divicion -> . numOperadores DIVIDE NUM
    (127) divicion -> . numOperadores
    (130) enteros -> . NUM
    (131) enteros -> . numNegative
    (134) decimales -> . enteros PERIOD NUM
    (132) numNegative -> . MINUS NUM
    (133) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! reduce/reduce conflict for RPAREN resolved using rule 107 (operacionesMath -> restas .)
  ! reduce/reduce conflict for AND resolved using rule 107 (operacionesMath -> restas .)
  ! reduce/reduce conflict for OR resolved using rule 107 (operacionesMath -> restas .)
  ! reduce/reduce conflict for NOT resolved using rule 107 (operacionesMath -> restas .)
  ! reduce/reduce conflict for $end resolved using rule 107 (operacionesMath -> restas .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 107 (operacionesMath -> restas .)
  ! reduce/reduce conflict for RETURN resolved using rule 107 (operacionesMath -> restas .)
    RPAREN          reduce using rule 107 (operacionesMath -> restas .)
    AND             reduce using rule 107 (operacionesMath -> restas .)
    OR              reduce using rule 107 (operacionesMath -> restas .)
    NOT             reduce using rule 107 (operacionesMath -> restas .)
    $end            reduce using rule 107 (operacionesMath -> restas .)
    RBLOCK          reduce using rule 107 (operacionesMath -> restas .)
    RETURN          reduce using rule 107 (operacionesMath -> restas .)
    NUM             shift and go to state 123
    MINUS           shift and go to state 122
    PERIOD          reduce using rule 133 (numNegative -> .)
    PLUS            reduce using rule 133 (numNegative -> .)
    TIMES           reduce using rule 133 (numNegative -> .)
    DIVIDE          reduce using rule 133 (numNegative -> .)

  ! MINUS           [ reduce using rule 133 (numNegative -> .) ]
  ! NUM             [ reduce using rule 133 (numNegative -> .) ]
  ! RPAREN          [ reduce using rule 133 (numNegative -> .) ]
  ! AND             [ reduce using rule 133 (numNegative -> .) ]
  ! OR              [ reduce using rule 133 (numNegative -> .) ]
  ! NOT             [ reduce using rule 133 (numNegative -> .) ]
  ! $end            [ reduce using rule 133 (numNegative -> .) ]
  ! RBLOCK          [ reduce using rule 133 (numNegative -> .) ]
  ! RETURN          [ reduce using rule 133 (numNegative -> .) ]

    restas                         shift and go to state 78
    operacionesMath                shift and go to state 131
    numOperadores                  shift and go to state 76
    suma                           shift and go to state 77
    multiplicacion                 shift and go to state 79
    divicion                       shift and go to state 80
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 79

    (110) operacionesMath -> multiplicacion .
    (112) operacionesMath -> multiplicacion . operacionesMath
    (104) operacionesMath -> . numOperadores PLUS suma
    (105) operacionesMath -> . suma
    (106) operacionesMath -> . suma operacionesMath
    (107) operacionesMath -> . restas
    (108) operacionesMath -> . numOperadores MINUS restas
    (109) operacionesMath -> . restas operacionesMath
    (110) operacionesMath -> . multiplicacion
    (111) operacionesMath -> . numOperadores TIMES multiplicacion
    (112) operacionesMath -> . multiplicacion operacionesMath
    (113) operacionesMath -> . divicion
    (114) operacionesMath -> . numOperadores DIVIDE divicion
    (115) operacionesMath -> . divicion operacionesMath
    (128) numOperadores -> . enteros
    (129) numOperadores -> . decimales
    (116) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (117) suma -> . numOperadores PLUS NUM
    (118) suma -> . numOperadores
    (119) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (120) restas -> . numOperadores MINUS NUM
    (121) restas -> . numOperadores
    (122) multiplicacion -> . numOperadores TIMES LPAREN numOperadores RPAREN
    (123) multiplicacion -> . numOperadores TIMES NUM
    (124) multiplicacion -> . numOperadores
    (125) divicion -> . numOperadores DIVIDE LPAREN numOperadores RPAREN
    (126) divicion -> . numOperadores DIVIDE NUM
    (127) divicion -> . numOperadores
    (130) enteros -> . NUM
    (131) enteros -> . numNegative
    (134) decimales -> . enteros PERIOD NUM
    (132) numNegative -> . MINUS NUM
    (133) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! reduce/reduce conflict for RPAREN resolved using rule 110 (operacionesMath -> multiplicacion .)
  ! reduce/reduce conflict for AND resolved using rule 110 (operacionesMath -> multiplicacion .)
  ! reduce/reduce conflict for OR resolved using rule 110 (operacionesMath -> multiplicacion .)
  ! reduce/reduce conflict for NOT resolved using rule 110 (operacionesMath -> multiplicacion .)
  ! reduce/reduce conflict for $end resolved using rule 110 (operacionesMath -> multiplicacion .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 110 (operacionesMath -> multiplicacion .)
  ! reduce/reduce conflict for RETURN resolved using rule 110 (operacionesMath -> multiplicacion .)
    RPAREN          reduce using rule 110 (operacionesMath -> multiplicacion .)
    AND             reduce using rule 110 (operacionesMath -> multiplicacion .)
    OR              reduce using rule 110 (operacionesMath -> multiplicacion .)
    NOT             reduce using rule 110 (operacionesMath -> multiplicacion .)
    $end            reduce using rule 110 (operacionesMath -> multiplicacion .)
    RBLOCK          reduce using rule 110 (operacionesMath -> multiplicacion .)
    RETURN          reduce using rule 110 (operacionesMath -> multiplicacion .)
    NUM             shift and go to state 123
    MINUS           shift and go to state 122
    PERIOD          reduce using rule 133 (numNegative -> .)
    PLUS            reduce using rule 133 (numNegative -> .)
    TIMES           reduce using rule 133 (numNegative -> .)
    DIVIDE          reduce using rule 133 (numNegative -> .)

  ! MINUS           [ reduce using rule 133 (numNegative -> .) ]
  ! NUM             [ reduce using rule 133 (numNegative -> .) ]
  ! RPAREN          [ reduce using rule 133 (numNegative -> .) ]
  ! AND             [ reduce using rule 133 (numNegative -> .) ]
  ! OR              [ reduce using rule 133 (numNegative -> .) ]
  ! NOT             [ reduce using rule 133 (numNegative -> .) ]
  ! $end            [ reduce using rule 133 (numNegative -> .) ]
  ! RBLOCK          [ reduce using rule 133 (numNegative -> .) ]
  ! RETURN          [ reduce using rule 133 (numNegative -> .) ]

    multiplicacion                 shift and go to state 79
    operacionesMath                shift and go to state 132
    numOperadores                  shift and go to state 76
    suma                           shift and go to state 77
    restas                         shift and go to state 78
    divicion                       shift and go to state 80
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 80

    (113) operacionesMath -> divicion .
    (115) operacionesMath -> divicion . operacionesMath
    (104) operacionesMath -> . numOperadores PLUS suma
    (105) operacionesMath -> . suma
    (106) operacionesMath -> . suma operacionesMath
    (107) operacionesMath -> . restas
    (108) operacionesMath -> . numOperadores MINUS restas
    (109) operacionesMath -> . restas operacionesMath
    (110) operacionesMath -> . multiplicacion
    (111) operacionesMath -> . numOperadores TIMES multiplicacion
    (112) operacionesMath -> . multiplicacion operacionesMath
    (113) operacionesMath -> . divicion
    (114) operacionesMath -> . numOperadores DIVIDE divicion
    (115) operacionesMath -> . divicion operacionesMath
    (128) numOperadores -> . enteros
    (129) numOperadores -> . decimales
    (116) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (117) suma -> . numOperadores PLUS NUM
    (118) suma -> . numOperadores
    (119) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (120) restas -> . numOperadores MINUS NUM
    (121) restas -> . numOperadores
    (122) multiplicacion -> . numOperadores TIMES LPAREN numOperadores RPAREN
    (123) multiplicacion -> . numOperadores TIMES NUM
    (124) multiplicacion -> . numOperadores
    (125) divicion -> . numOperadores DIVIDE LPAREN numOperadores RPAREN
    (126) divicion -> . numOperadores DIVIDE NUM
    (127) divicion -> . numOperadores
    (130) enteros -> . NUM
    (131) enteros -> . numNegative
    (134) decimales -> . enteros PERIOD NUM
    (132) numNegative -> . MINUS NUM
    (133) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! reduce/reduce conflict for RPAREN resolved using rule 113 (operacionesMath -> divicion .)
  ! reduce/reduce conflict for AND resolved using rule 113 (operacionesMath -> divicion .)
  ! reduce/reduce conflict for OR resolved using rule 113 (operacionesMath -> divicion .)
  ! reduce/reduce conflict for NOT resolved using rule 113 (operacionesMath -> divicion .)
  ! reduce/reduce conflict for $end resolved using rule 113 (operacionesMath -> divicion .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 113 (operacionesMath -> divicion .)
  ! reduce/reduce conflict for RETURN resolved using rule 113 (operacionesMath -> divicion .)
    RPAREN          reduce using rule 113 (operacionesMath -> divicion .)
    AND             reduce using rule 113 (operacionesMath -> divicion .)
    OR              reduce using rule 113 (operacionesMath -> divicion .)
    NOT             reduce using rule 113 (operacionesMath -> divicion .)
    $end            reduce using rule 113 (operacionesMath -> divicion .)
    RBLOCK          reduce using rule 113 (operacionesMath -> divicion .)
    RETURN          reduce using rule 113 (operacionesMath -> divicion .)
    NUM             shift and go to state 123
    MINUS           shift and go to state 122
    PERIOD          reduce using rule 133 (numNegative -> .)
    PLUS            reduce using rule 133 (numNegative -> .)
    TIMES           reduce using rule 133 (numNegative -> .)
    DIVIDE          reduce using rule 133 (numNegative -> .)

  ! MINUS           [ reduce using rule 133 (numNegative -> .) ]
  ! NUM             [ reduce using rule 133 (numNegative -> .) ]
  ! RPAREN          [ reduce using rule 133 (numNegative -> .) ]
  ! AND             [ reduce using rule 133 (numNegative -> .) ]
  ! OR              [ reduce using rule 133 (numNegative -> .) ]
  ! NOT             [ reduce using rule 133 (numNegative -> .) ]
  ! $end            [ reduce using rule 133 (numNegative -> .) ]
  ! RBLOCK          [ reduce using rule 133 (numNegative -> .) ]
  ! RETURN          [ reduce using rule 133 (numNegative -> .) ]

    divicion                       shift and go to state 80
    operacionesMath                shift and go to state 133
    numOperadores                  shift and go to state 76
    suma                           shift and go to state 77
    restas                         shift and go to state 78
    multiplicacion                 shift and go to state 79
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 81

    (128) numOperadores -> enteros .
    (134) decimales -> enteros . PERIOD NUM

  ! shift/reduce conflict for PERIOD resolved as shift
    PLUS            reduce using rule 128 (numOperadores -> enteros .)
    MINUS           reduce using rule 128 (numOperadores -> enteros .)
    TIMES           reduce using rule 128 (numOperadores -> enteros .)
    DIVIDE          reduce using rule 128 (numOperadores -> enteros .)
    NUM             reduce using rule 128 (numOperadores -> enteros .)
    RPAREN          reduce using rule 128 (numOperadores -> enteros .)
    AND             reduce using rule 128 (numOperadores -> enteros .)
    OR              reduce using rule 128 (numOperadores -> enteros .)
    NOT             reduce using rule 128 (numOperadores -> enteros .)
    $end            reduce using rule 128 (numOperadores -> enteros .)
    RBLOCK          reduce using rule 128 (numOperadores -> enteros .)
    RETURN          reduce using rule 128 (numOperadores -> enteros .)
    PERIOD          shift and go to state 134

  ! PERIOD          [ reduce using rule 128 (numOperadores -> enteros .) ]


state 82

    (129) numOperadores -> decimales .

    PLUS            reduce using rule 129 (numOperadores -> decimales .)
    MINUS           reduce using rule 129 (numOperadores -> decimales .)
    TIMES           reduce using rule 129 (numOperadores -> decimales .)
    DIVIDE          reduce using rule 129 (numOperadores -> decimales .)
    NUM             reduce using rule 129 (numOperadores -> decimales .)
    PERIOD          reduce using rule 129 (numOperadores -> decimales .)
    RPAREN          reduce using rule 129 (numOperadores -> decimales .)
    AND             reduce using rule 129 (numOperadores -> decimales .)
    OR              reduce using rule 129 (numOperadores -> decimales .)
    NOT             reduce using rule 129 (numOperadores -> decimales .)
    $end            reduce using rule 129 (numOperadores -> decimales .)
    RBLOCK          reduce using rule 129 (numOperadores -> decimales .)
    RETURN          reduce using rule 129 (numOperadores -> decimales .)


state 83

    (131) enteros -> numNegative .

    PERIOD          reduce using rule 131 (enteros -> numNegative .)
    PLUS            reduce using rule 131 (enteros -> numNegative .)
    MINUS           reduce using rule 131 (enteros -> numNegative .)
    TIMES           reduce using rule 131 (enteros -> numNegative .)
    DIVIDE          reduce using rule 131 (enteros -> numNegative .)
    NUM             reduce using rule 131 (enteros -> numNegative .)
    RPAREN          reduce using rule 131 (enteros -> numNegative .)
    AND             reduce using rule 131 (enteros -> numNegative .)
    OR              reduce using rule 131 (enteros -> numNegative .)
    NOT             reduce using rule 131 (enteros -> numNegative .)
    $end            reduce using rule 131 (enteros -> numNegative .)
    RBLOCK          reduce using rule 131 (enteros -> numNegative .)
    RETURN          reduce using rule 131 (enteros -> numNegative .)


state 84

    (84) declareteFunction -> FUNCTION ID LPAREN . params RPAREN
    (85) declareteFunction -> FUNCTION ID LPAREN . params RPAREN sentencesCmpt
    (90) params -> . paramList
    (91) paramList -> . javaScript_param
    (92) paramList -> . javaScript_param COMMA paramList
    (35) javaScript_param -> . STRING
    (36) javaScript_param -> . NUM
    (37) javaScript_param -> . boolean
    (38) javaScript_param -> . ID
    (39) boolean -> . TRUE
    (40) boolean -> . FALSE

    STRING          shift and go to state 45
    NUM             shift and go to state 46
    ID              shift and go to state 41
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    params                         shift and go to state 135
    paramList                      shift and go to state 43
    javaScript_param               shift and go to state 44
    boolean                        shift and go to state 47

state 85

    (27) sentencias_if -> IF LPAREN expression . operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (28) sentencias_if -> IF LPAREN expression . RPAREN LBLOCK sentencia RBLOCK
    (29) sentencias_if_else -> IF LPAREN expression . operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (30) sentencias_if_else -> IF LPAREN expression . RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (24) operadorLogical -> . AND
    (25) operadorLogical -> . OR
    (26) operadorLogical -> . NOT

    RPAREN          shift and go to state 137
    AND             shift and go to state 138
    OR              shift and go to state 139
    NOT             shift and go to state 140

    operadorLogical                shift and go to state 136

state 86

    (31) sentencias_while -> WHILE LPAREN expression . RPAREN LBLOCK sentencia RBLOCK
    (32) sentencias_while -> WHILE LPAREN expression . operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (24) operadorLogical -> . AND
    (25) operadorLogical -> . OR
    (26) operadorLogical -> . NOT

    RPAREN          shift and go to state 141
    AND             shift and go to state 138
    OR              shift and go to state 139
    NOT             shift and go to state 140

    operadorLogical                shift and go to state 142

state 87

    (89) callFunction -> ID LPAREN params RPAREN .

    COLON           reduce using rule 89 (callFunction -> ID LPAREN params RPAREN .)


state 88

    (92) paramList -> javaScript_param COMMA . paramList
    (91) paramList -> . javaScript_param
    (92) paramList -> . javaScript_param COMMA paramList
    (35) javaScript_param -> . STRING
    (36) javaScript_param -> . NUM
    (37) javaScript_param -> . boolean
    (38) javaScript_param -> . ID
    (39) boolean -> . TRUE
    (40) boolean -> . FALSE

    STRING          shift and go to state 45
    NUM             shift and go to state 46
    ID              shift and go to state 41
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    javaScript_param               shift and go to state 44
    paramList                      shift and go to state 143
    boolean                        shift and go to state 47

state 89

    (48) assign -> ID EQUAL arrayDeclare COLON .

    $end            reduce using rule 48 (assign -> ID EQUAL arrayDeclare COLON .)
    RBLOCK          reduce using rule 48 (assign -> ID EQUAL arrayDeclare COLON .)
    RETURN          reduce using rule 48 (assign -> ID EQUAL arrayDeclare COLON .)


state 90

    (49) assign -> ID EQUAL declareMap COLON .

    $end            reduce using rule 49 (assign -> ID EQUAL declareMap COLON .)
    RBLOCK          reduce using rule 49 (assign -> ID EQUAL declareMap COLON .)
    RETURN          reduce using rule 49 (assign -> ID EQUAL declareMap COLON .)


state 91

    (50) assign -> ID EQUAL declararSet COLON .

    $end            reduce using rule 50 (assign -> ID EQUAL declararSet COLON .)
    RBLOCK          reduce using rule 50 (assign -> ID EQUAL declararSet COLON .)
    RETURN          reduce using rule 50 (assign -> ID EQUAL declararSet COLON .)


state 92

    (51) assign -> ID EQUAL javaScript_param COLON .

    $end            reduce using rule 51 (assign -> ID EQUAL javaScript_param COLON .)
    RBLOCK          reduce using rule 51 (assign -> ID EQUAL javaScript_param COLON .)
    RETURN          reduce using rule 51 (assign -> ID EQUAL javaScript_param COLON .)


state 93

    (55) arrayDeclare -> LBRACKET RBRACKET .

    COLON           reduce using rule 55 (arrayDeclare -> LBRACKET RBRACKET .)
    COMMA           reduce using rule 55 (arrayDeclare -> LBRACKET RBRACKET .)
    RBRACKET        reduce using rule 55 (arrayDeclare -> LBRACKET RBRACKET .)


state 94

    (56) arrayDeclare -> LBRACKET arrayValues . RBRACKET

    RBRACKET        shift and go to state 144


state 95

    (59) arrayValues -> javaScript_param .
    (60) arrayValues -> javaScript_param . COMMA arrayValues

    RBRACKET        reduce using rule 59 (arrayValues -> javaScript_param .)
    RPAREN          reduce using rule 59 (arrayValues -> javaScript_param .)
    COMMA           shift and go to state 145


state 96

    (57) arrayDeclare -> NEW ARRAY . LPAREN arrayValues RPAREN
    (58) arrayDeclare -> NEW ARRAY . LPAREN RPAREN

    LPAREN          shift and go to state 146


state 97

    (64) declareMap -> NEW MAP . LPAREN LBRACKET iterable RBRACKET RPAREN
    (65) declareMap -> NEW MAP . LPAREN RPAREN

    LPAREN          shift and go to state 147


state 98

    (97) declararSet -> NEW SET . LPAREN LBRACKET iterable RBRACKET RPAREN

    LPAREN          shift and go to state 148


state 99

    (61) methodArray -> PERIOD PUSH LPAREN . javaScript_param RPAREN
    (35) javaScript_param -> . STRING
    (36) javaScript_param -> . NUM
    (37) javaScript_param -> . boolean
    (38) javaScript_param -> . ID
    (39) boolean -> . TRUE
    (40) boolean -> . FALSE

    STRING          shift and go to state 45
    NUM             shift and go to state 46
    ID              shift and go to state 41
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    javaScript_param               shift and go to state 149
    boolean                        shift and go to state 47

state 100

    (62) methodArray -> PERIOD UNSHIFT LPAREN . javaScript_param RPAREN
    (35) javaScript_param -> . STRING
    (36) javaScript_param -> . NUM
    (37) javaScript_param -> . boolean
    (38) javaScript_param -> . ID
    (39) boolean -> . TRUE
    (40) boolean -> . FALSE

    STRING          shift and go to state 45
    NUM             shift and go to state 46
    ID              shift and go to state 41
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    javaScript_param               shift and go to state 150
    boolean                        shift and go to state 47

state 101

    (63) methodArray -> PERIOD POP LPAREN . RPAREN

    RPAREN          shift and go to state 151


state 102

    (98) methodSet -> PERIOD ADD LPAREN . javaScript_param RPAREN
    (35) javaScript_param -> . STRING
    (36) javaScript_param -> . NUM
    (37) javaScript_param -> . boolean
    (38) javaScript_param -> . ID
    (39) boolean -> . TRUE
    (40) boolean -> . FALSE

    STRING          shift and go to state 45
    NUM             shift and go to state 46
    ID              shift and go to state 41
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    javaScript_param               shift and go to state 152
    boolean                        shift and go to state 47

state 103

    (99) methodSet -> PERIOD DELETE LPAREN . javaScript_param RPAREN
    (35) javaScript_param -> . STRING
    (36) javaScript_param -> . NUM
    (37) javaScript_param -> . boolean
    (38) javaScript_param -> . ID
    (39) boolean -> . TRUE
    (40) boolean -> . FALSE

    STRING          shift and go to state 45
    NUM             shift and go to state 46
    ID              shift and go to state 41
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    javaScript_param               shift and go to state 153
    boolean                        shift and go to state 47

state 104

    (100) methodSet -> PERIOD CLEAR LPAREN . RPAREN
    (82) methodMap -> PERIOD CLEAR LPAREN . RPAREN

    RPAREN          shift and go to state 154


state 105

    (83) methodMap -> PERIOD LENGTH LPAREN . RPAREN

    RPAREN          shift and go to state 155


state 106

    (86) declareteFunction -> varType ID EQUAL FUNCTION . LPAREN params RPAREN

    LPAREN          shift and go to state 156


state 107

    (10) assingOperadores -> varType ID EQUAL inicializarOp .

    $end            reduce using rule 10 (assingOperadores -> varType ID EQUAL inicializarOp .)
    RBLOCK          reduce using rule 10 (assingOperadores -> varType ID EQUAL inicializarOp .)
    RETURN          reduce using rule 10 (assingOperadores -> varType ID EQUAL inicializarOp .)


state 108

    (36) javaScript_param -> NUM .
    (130) enteros -> NUM .

    COLON           reduce using rule 36 (javaScript_param -> NUM .)
    PERIOD          reduce using rule 130 (enteros -> NUM .)
    PLUS            reduce using rule 130 (enteros -> NUM .)
    MINUS           reduce using rule 130 (enteros -> NUM .)
    TIMES           reduce using rule 130 (enteros -> NUM .)
    DIVIDE          reduce using rule 130 (enteros -> NUM .)
    NUM             reduce using rule 130 (enteros -> NUM .)
    $end            reduce using rule 130 (enteros -> NUM .)
    RBLOCK          reduce using rule 130 (enteros -> NUM .)
    RETURN          reduce using rule 130 (enteros -> NUM .)


state 109

    (33) impresion -> ALERT LPAREN expression RPAREN .

    $end            reduce using rule 33 (impresion -> ALERT LPAREN expression RPAREN .)
    RBLOCK          reduce using rule 33 (impresion -> ALERT LPAREN expression RPAREN .)
    RETURN          reduce using rule 33 (impresion -> ALERT LPAREN expression RPAREN .)


state 110

    (135) conditionalEspecifico -> ID opConditional . dataCondi
    (138) dataCondi -> . STRING
    (139) dataCondi -> . NUM

    STRING          shift and go to state 158
    NUM             shift and go to state 159

    dataCondi                      shift and go to state 157

state 111

    (16) opConditional -> ISEQUAL .

    STRING          reduce using rule 16 (opConditional -> ISEQUAL .)
    NUM             reduce using rule 16 (opConditional -> ISEQUAL .)


state 112

    (17) opConditional -> IS_NOT_IDENTICAL .

    STRING          reduce using rule 17 (opConditional -> IS_NOT_IDENTICAL .)
    NUM             reduce using rule 17 (opConditional -> IS_NOT_IDENTICAL .)


state 113

    (18) opConditional -> IS_IDENTICAL .

    STRING          reduce using rule 18 (opConditional -> IS_IDENTICAL .)
    NUM             reduce using rule 18 (opConditional -> IS_IDENTICAL .)


state 114

    (19) opConditional -> GREATER .

    STRING          reduce using rule 19 (opConditional -> GREATER .)
    NUM             reduce using rule 19 (opConditional -> GREATER .)


state 115

    (20) opConditional -> GREATEREQUAL .

    STRING          reduce using rule 20 (opConditional -> GREATEREQUAL .)
    NUM             reduce using rule 20 (opConditional -> GREATEREQUAL .)


state 116

    (21) opConditional -> LESS .

    STRING          reduce using rule 21 (opConditional -> LESS .)
    NUM             reduce using rule 21 (opConditional -> LESS .)


state 117

    (22) opConditional -> LESSEQUAL .

    STRING          reduce using rule 22 (opConditional -> LESSEQUAL .)
    NUM             reduce using rule 22 (opConditional -> LESSEQUAL .)


state 118

    (23) opConditional -> boolean .

    STRING          reduce using rule 23 (opConditional -> boolean .)
    NUM             reduce using rule 23 (opConditional -> boolean .)


state 119

    (136) conditionalEspecifico -> NUM opConditional . NUM

    NUM             shift and go to state 160


state 120

    (137) conditionalEspecifico -> STRING opConditional . STRING

    STRING          shift and go to state 161


state 121

    (101) inicializarOp -> PLUS operacionesMath .

    RPAREN          reduce using rule 101 (inicializarOp -> PLUS operacionesMath .)
    AND             reduce using rule 101 (inicializarOp -> PLUS operacionesMath .)
    OR              reduce using rule 101 (inicializarOp -> PLUS operacionesMath .)
    NOT             reduce using rule 101 (inicializarOp -> PLUS operacionesMath .)
    $end            reduce using rule 101 (inicializarOp -> PLUS operacionesMath .)
    RBLOCK          reduce using rule 101 (inicializarOp -> PLUS operacionesMath .)
    RETURN          reduce using rule 101 (inicializarOp -> PLUS operacionesMath .)


state 122

    (132) numNegative -> MINUS . NUM

    NUM             shift and go to state 162


state 123

    (130) enteros -> NUM .

    PERIOD          reduce using rule 130 (enteros -> NUM .)
    PLUS            reduce using rule 130 (enteros -> NUM .)
    MINUS           reduce using rule 130 (enteros -> NUM .)
    TIMES           reduce using rule 130 (enteros -> NUM .)
    DIVIDE          reduce using rule 130 (enteros -> NUM .)
    NUM             reduce using rule 130 (enteros -> NUM .)
    RPAREN          reduce using rule 130 (enteros -> NUM .)
    AND             reduce using rule 130 (enteros -> NUM .)
    OR              reduce using rule 130 (enteros -> NUM .)
    NOT             reduce using rule 130 (enteros -> NUM .)
    $end            reduce using rule 130 (enteros -> NUM .)
    RBLOCK          reduce using rule 130 (enteros -> NUM .)
    RETURN          reduce using rule 130 (enteros -> NUM .)


state 124

    (102) inicializarOp -> MINUS operacionesMath .

    RPAREN          reduce using rule 102 (inicializarOp -> MINUS operacionesMath .)
    AND             reduce using rule 102 (inicializarOp -> MINUS operacionesMath .)
    OR              reduce using rule 102 (inicializarOp -> MINUS operacionesMath .)
    NOT             reduce using rule 102 (inicializarOp -> MINUS operacionesMath .)
    $end            reduce using rule 102 (inicializarOp -> MINUS operacionesMath .)
    RBLOCK          reduce using rule 102 (inicializarOp -> MINUS operacionesMath .)
    RETURN          reduce using rule 102 (inicializarOp -> MINUS operacionesMath .)


state 125

    (132) numNegative -> MINUS NUM .
    (130) enteros -> NUM .

  ! reduce/reduce conflict for PERIOD resolved using rule 130 (enteros -> NUM .)
  ! reduce/reduce conflict for PLUS resolved using rule 130 (enteros -> NUM .)
  ! reduce/reduce conflict for MINUS resolved using rule 130 (enteros -> NUM .)
  ! reduce/reduce conflict for TIMES resolved using rule 130 (enteros -> NUM .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 130 (enteros -> NUM .)
  ! reduce/reduce conflict for NUM resolved using rule 130 (enteros -> NUM .)
  ! reduce/reduce conflict for RPAREN resolved using rule 130 (enteros -> NUM .)
  ! reduce/reduce conflict for AND resolved using rule 130 (enteros -> NUM .)
  ! reduce/reduce conflict for OR resolved using rule 130 (enteros -> NUM .)
  ! reduce/reduce conflict for NOT resolved using rule 130 (enteros -> NUM .)
  ! reduce/reduce conflict for $end resolved using rule 130 (enteros -> NUM .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 130 (enteros -> NUM .)
  ! reduce/reduce conflict for RETURN resolved using rule 130 (enteros -> NUM .)
    PERIOD          reduce using rule 130 (enteros -> NUM .)
    PLUS            reduce using rule 130 (enteros -> NUM .)
    MINUS           reduce using rule 130 (enteros -> NUM .)
    TIMES           reduce using rule 130 (enteros -> NUM .)
    DIVIDE          reduce using rule 130 (enteros -> NUM .)
    NUM             reduce using rule 130 (enteros -> NUM .)
    RPAREN          reduce using rule 130 (enteros -> NUM .)
    AND             reduce using rule 130 (enteros -> NUM .)
    OR              reduce using rule 130 (enteros -> NUM .)
    NOT             reduce using rule 130 (enteros -> NUM .)
    $end            reduce using rule 130 (enteros -> NUM .)
    RBLOCK          reduce using rule 130 (enteros -> NUM .)
    RETURN          reduce using rule 130 (enteros -> NUM .)

  ! PERIOD          [ reduce using rule 132 (numNegative -> MINUS NUM .) ]
  ! PLUS            [ reduce using rule 132 (numNegative -> MINUS NUM .) ]
  ! MINUS           [ reduce using rule 132 (numNegative -> MINUS NUM .) ]
  ! TIMES           [ reduce using rule 132 (numNegative -> MINUS NUM .) ]
  ! DIVIDE          [ reduce using rule 132 (numNegative -> MINUS NUM .) ]
  ! NUM             [ reduce using rule 132 (numNegative -> MINUS NUM .) ]
  ! RPAREN          [ reduce using rule 132 (numNegative -> MINUS NUM .) ]
  ! AND             [ reduce using rule 132 (numNegative -> MINUS NUM .) ]
  ! OR              [ reduce using rule 132 (numNegative -> MINUS NUM .) ]
  ! NOT             [ reduce using rule 132 (numNegative -> MINUS NUM .) ]
  ! $end            [ reduce using rule 132 (numNegative -> MINUS NUM .) ]
  ! RBLOCK          [ reduce using rule 132 (numNegative -> MINUS NUM .) ]
  ! RETURN          [ reduce using rule 132 (numNegative -> MINUS NUM .) ]


state 126

    (104) operacionesMath -> numOperadores PLUS . suma
    (116) suma -> numOperadores PLUS . LPAREN numOperadores RPAREN
    (117) suma -> numOperadores PLUS . NUM
    (116) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (117) suma -> . numOperadores PLUS NUM
    (118) suma -> . numOperadores
    (128) numOperadores -> . enteros
    (129) numOperadores -> . decimales
    (130) enteros -> . NUM
    (131) enteros -> . numNegative
    (134) decimales -> . enteros PERIOD NUM
    (132) numNegative -> . MINUS NUM
    (133) numNegative -> .

    LPAREN          shift and go to state 165
    NUM             shift and go to state 166
    MINUS           shift and go to state 122
    PERIOD          reduce using rule 133 (numNegative -> .)
    PLUS            reduce using rule 133 (numNegative -> .)
    RPAREN          reduce using rule 133 (numNegative -> .)
    AND             reduce using rule 133 (numNegative -> .)
    OR              reduce using rule 133 (numNegative -> .)
    NOT             reduce using rule 133 (numNegative -> .)
    $end            reduce using rule 133 (numNegative -> .)
    RBLOCK          reduce using rule 133 (numNegative -> .)
    RETURN          reduce using rule 133 (numNegative -> .)

    numOperadores                  shift and go to state 163
    suma                           shift and go to state 164
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 127

    (108) operacionesMath -> numOperadores MINUS . restas
    (119) restas -> numOperadores MINUS . LPAREN numOperadores RPAREN
    (120) restas -> numOperadores MINUS . NUM
    (119) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (120) restas -> . numOperadores MINUS NUM
    (121) restas -> . numOperadores
    (128) numOperadores -> . enteros
    (129) numOperadores -> . decimales
    (130) enteros -> . NUM
    (131) enteros -> . numNegative
    (134) decimales -> . enteros PERIOD NUM
    (132) numNegative -> . MINUS NUM
    (133) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
    LPAREN          shift and go to state 169
    NUM             shift and go to state 170
    MINUS           shift and go to state 122
    PERIOD          reduce using rule 133 (numNegative -> .)
    RPAREN          reduce using rule 133 (numNegative -> .)
    AND             reduce using rule 133 (numNegative -> .)
    OR              reduce using rule 133 (numNegative -> .)
    NOT             reduce using rule 133 (numNegative -> .)
    $end            reduce using rule 133 (numNegative -> .)
    RBLOCK          reduce using rule 133 (numNegative -> .)
    RETURN          reduce using rule 133 (numNegative -> .)

  ! MINUS           [ reduce using rule 133 (numNegative -> .) ]

    numOperadores                  shift and go to state 167
    restas                         shift and go to state 168
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 128

    (111) operacionesMath -> numOperadores TIMES . multiplicacion
    (122) multiplicacion -> numOperadores TIMES . LPAREN numOperadores RPAREN
    (123) multiplicacion -> numOperadores TIMES . NUM
    (122) multiplicacion -> . numOperadores TIMES LPAREN numOperadores RPAREN
    (123) multiplicacion -> . numOperadores TIMES NUM
    (124) multiplicacion -> . numOperadores
    (128) numOperadores -> . enteros
    (129) numOperadores -> . decimales
    (130) enteros -> . NUM
    (131) enteros -> . numNegative
    (134) decimales -> . enteros PERIOD NUM
    (132) numNegative -> . MINUS NUM
    (133) numNegative -> .

    LPAREN          shift and go to state 173
    NUM             shift and go to state 174
    MINUS           shift and go to state 122
    PERIOD          reduce using rule 133 (numNegative -> .)
    TIMES           reduce using rule 133 (numNegative -> .)
    RPAREN          reduce using rule 133 (numNegative -> .)
    AND             reduce using rule 133 (numNegative -> .)
    OR              reduce using rule 133 (numNegative -> .)
    NOT             reduce using rule 133 (numNegative -> .)
    $end            reduce using rule 133 (numNegative -> .)
    RBLOCK          reduce using rule 133 (numNegative -> .)
    RETURN          reduce using rule 133 (numNegative -> .)

    numOperadores                  shift and go to state 171
    multiplicacion                 shift and go to state 172
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 129

    (114) operacionesMath -> numOperadores DIVIDE . divicion
    (125) divicion -> numOperadores DIVIDE . LPAREN numOperadores RPAREN
    (126) divicion -> numOperadores DIVIDE . NUM
    (125) divicion -> . numOperadores DIVIDE LPAREN numOperadores RPAREN
    (126) divicion -> . numOperadores DIVIDE NUM
    (127) divicion -> . numOperadores
    (128) numOperadores -> . enteros
    (129) numOperadores -> . decimales
    (130) enteros -> . NUM
    (131) enteros -> . numNegative
    (134) decimales -> . enteros PERIOD NUM
    (132) numNegative -> . MINUS NUM
    (133) numNegative -> .

    LPAREN          shift and go to state 177
    NUM             shift and go to state 178
    MINUS           shift and go to state 122
    PERIOD          reduce using rule 133 (numNegative -> .)
    DIVIDE          reduce using rule 133 (numNegative -> .)
    RPAREN          reduce using rule 133 (numNegative -> .)
    AND             reduce using rule 133 (numNegative -> .)
    OR              reduce using rule 133 (numNegative -> .)
    NOT             reduce using rule 133 (numNegative -> .)
    $end            reduce using rule 133 (numNegative -> .)
    RBLOCK          reduce using rule 133 (numNegative -> .)
    RETURN          reduce using rule 133 (numNegative -> .)

    numOperadores                  shift and go to state 175
    divicion                       shift and go to state 176
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 130

    (106) operacionesMath -> suma operacionesMath .

    RPAREN          reduce using rule 106 (operacionesMath -> suma operacionesMath .)
    AND             reduce using rule 106 (operacionesMath -> suma operacionesMath .)
    OR              reduce using rule 106 (operacionesMath -> suma operacionesMath .)
    NOT             reduce using rule 106 (operacionesMath -> suma operacionesMath .)
    $end            reduce using rule 106 (operacionesMath -> suma operacionesMath .)
    RBLOCK          reduce using rule 106 (operacionesMath -> suma operacionesMath .)
    RETURN          reduce using rule 106 (operacionesMath -> suma operacionesMath .)


state 131

    (109) operacionesMath -> restas operacionesMath .

    RPAREN          reduce using rule 109 (operacionesMath -> restas operacionesMath .)
    AND             reduce using rule 109 (operacionesMath -> restas operacionesMath .)
    OR              reduce using rule 109 (operacionesMath -> restas operacionesMath .)
    NOT             reduce using rule 109 (operacionesMath -> restas operacionesMath .)
    $end            reduce using rule 109 (operacionesMath -> restas operacionesMath .)
    RBLOCK          reduce using rule 109 (operacionesMath -> restas operacionesMath .)
    RETURN          reduce using rule 109 (operacionesMath -> restas operacionesMath .)


state 132

    (112) operacionesMath -> multiplicacion operacionesMath .

    RPAREN          reduce using rule 112 (operacionesMath -> multiplicacion operacionesMath .)
    AND             reduce using rule 112 (operacionesMath -> multiplicacion operacionesMath .)
    OR              reduce using rule 112 (operacionesMath -> multiplicacion operacionesMath .)
    NOT             reduce using rule 112 (operacionesMath -> multiplicacion operacionesMath .)
    $end            reduce using rule 112 (operacionesMath -> multiplicacion operacionesMath .)
    RBLOCK          reduce using rule 112 (operacionesMath -> multiplicacion operacionesMath .)
    RETURN          reduce using rule 112 (operacionesMath -> multiplicacion operacionesMath .)


state 133

    (115) operacionesMath -> divicion operacionesMath .

    RPAREN          reduce using rule 115 (operacionesMath -> divicion operacionesMath .)
    AND             reduce using rule 115 (operacionesMath -> divicion operacionesMath .)
    OR              reduce using rule 115 (operacionesMath -> divicion operacionesMath .)
    NOT             reduce using rule 115 (operacionesMath -> divicion operacionesMath .)
    $end            reduce using rule 115 (operacionesMath -> divicion operacionesMath .)
    RBLOCK          reduce using rule 115 (operacionesMath -> divicion operacionesMath .)
    RETURN          reduce using rule 115 (operacionesMath -> divicion operacionesMath .)


state 134

    (134) decimales -> enteros PERIOD . NUM

    NUM             shift and go to state 179


state 135

    (84) declareteFunction -> FUNCTION ID LPAREN params . RPAREN
    (85) declareteFunction -> FUNCTION ID LPAREN params . RPAREN sentencesCmpt

    RPAREN          shift and go to state 180


state 136

    (27) sentencias_if -> IF LPAREN expression operadorLogical . expression RPAREN LBLOCK sentencia RBLOCK
    (29) sentencias_if_else -> IF LPAREN expression operadorLogical . expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (8) expression -> . conditionalEspecifico
    (9) expression -> . inicializarOp
    (135) conditionalEspecifico -> . ID opConditional dataCondi
    (136) conditionalEspecifico -> . NUM opConditional NUM
    (137) conditionalEspecifico -> . STRING opConditional STRING
    (101) inicializarOp -> . PLUS operacionesMath
    (102) inicializarOp -> . MINUS operacionesMath
    (103) inicializarOp -> . operacionesMath
    (104) operacionesMath -> . numOperadores PLUS suma
    (105) operacionesMath -> . suma
    (106) operacionesMath -> . suma operacionesMath
    (107) operacionesMath -> . restas
    (108) operacionesMath -> . numOperadores MINUS restas
    (109) operacionesMath -> . restas operacionesMath
    (110) operacionesMath -> . multiplicacion
    (111) operacionesMath -> . numOperadores TIMES multiplicacion
    (112) operacionesMath -> . multiplicacion operacionesMath
    (113) operacionesMath -> . divicion
    (114) operacionesMath -> . numOperadores DIVIDE divicion
    (115) operacionesMath -> . divicion operacionesMath
    (128) numOperadores -> . enteros
    (129) numOperadores -> . decimales
    (116) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (117) suma -> . numOperadores PLUS NUM
    (118) suma -> . numOperadores
    (119) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (120) restas -> . numOperadores MINUS NUM
    (121) restas -> . numOperadores
    (122) multiplicacion -> . numOperadores TIMES LPAREN numOperadores RPAREN
    (123) multiplicacion -> . numOperadores TIMES NUM
    (124) multiplicacion -> . numOperadores
    (125) divicion -> . numOperadores DIVIDE LPAREN numOperadores RPAREN
    (126) divicion -> . numOperadores DIVIDE NUM
    (127) divicion -> . numOperadores
    (130) enteros -> . NUM
    (131) enteros -> . numNegative
    (134) decimales -> . enteros PERIOD NUM
    (132) numNegative -> . MINUS NUM
    (133) numNegative -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
    ID              shift and go to state 70
    NUM             shift and go to state 71
    STRING          shift and go to state 72
    PLUS            shift and go to state 73
    MINUS           shift and go to state 75
    PERIOD          reduce using rule 133 (numNegative -> .)
    TIMES           reduce using rule 133 (numNegative -> .)
    DIVIDE          reduce using rule 133 (numNegative -> .)
    RPAREN          reduce using rule 133 (numNegative -> .)

  ! PLUS            [ reduce using rule 133 (numNegative -> .) ]
  ! MINUS           [ reduce using rule 133 (numNegative -> .) ]
  ! NUM             [ reduce using rule 133 (numNegative -> .) ]

    expression                     shift and go to state 181
    conditionalEspecifico          shift and go to state 68
    inicializarOp                  shift and go to state 69
    operacionesMath                shift and go to state 74
    numOperadores                  shift and go to state 76
    suma                           shift and go to state 77
    restas                         shift and go to state 78
    multiplicacion                 shift and go to state 79
    divicion                       shift and go to state 80
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 137

    (28) sentencias_if -> IF LPAREN expression RPAREN . LBLOCK sentencia RBLOCK
    (30) sentencias_if_else -> IF LPAREN expression RPAREN . LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK

    LBLOCK          shift and go to state 182


state 138

    (24) operadorLogical -> AND .

    ID              reduce using rule 24 (operadorLogical -> AND .)
    NUM             reduce using rule 24 (operadorLogical -> AND .)
    STRING          reduce using rule 24 (operadorLogical -> AND .)
    PLUS            reduce using rule 24 (operadorLogical -> AND .)
    MINUS           reduce using rule 24 (operadorLogical -> AND .)
    RPAREN          reduce using rule 24 (operadorLogical -> AND .)
    TIMES           reduce using rule 24 (operadorLogical -> AND .)
    DIVIDE          reduce using rule 24 (operadorLogical -> AND .)
    PERIOD          reduce using rule 24 (operadorLogical -> AND .)


state 139

    (25) operadorLogical -> OR .

    ID              reduce using rule 25 (operadorLogical -> OR .)
    NUM             reduce using rule 25 (operadorLogical -> OR .)
    STRING          reduce using rule 25 (operadorLogical -> OR .)
    PLUS            reduce using rule 25 (operadorLogical -> OR .)
    MINUS           reduce using rule 25 (operadorLogical -> OR .)
    RPAREN          reduce using rule 25 (operadorLogical -> OR .)
    TIMES           reduce using rule 25 (operadorLogical -> OR .)
    DIVIDE          reduce using rule 25 (operadorLogical -> OR .)
    PERIOD          reduce using rule 25 (operadorLogical -> OR .)


state 140

    (26) operadorLogical -> NOT .

    ID              reduce using rule 26 (operadorLogical -> NOT .)
    NUM             reduce using rule 26 (operadorLogical -> NOT .)
    STRING          reduce using rule 26 (operadorLogical -> NOT .)
    PLUS            reduce using rule 26 (operadorLogical -> NOT .)
    MINUS           reduce using rule 26 (operadorLogical -> NOT .)
    RPAREN          reduce using rule 26 (operadorLogical -> NOT .)
    TIMES           reduce using rule 26 (operadorLogical -> NOT .)
    DIVIDE          reduce using rule 26 (operadorLogical -> NOT .)
    PERIOD          reduce using rule 26 (operadorLogical -> NOT .)


state 141

    (31) sentencias_while -> WHILE LPAREN expression RPAREN . LBLOCK sentencia RBLOCK

    LBLOCK          shift and go to state 183


state 142

    (32) sentencias_while -> WHILE LPAREN expression operadorLogical . expression RPAREN LBLOCK sentencia RBLOCK
    (8) expression -> . conditionalEspecifico
    (9) expression -> . inicializarOp
    (135) conditionalEspecifico -> . ID opConditional dataCondi
    (136) conditionalEspecifico -> . NUM opConditional NUM
    (137) conditionalEspecifico -> . STRING opConditional STRING
    (101) inicializarOp -> . PLUS operacionesMath
    (102) inicializarOp -> . MINUS operacionesMath
    (103) inicializarOp -> . operacionesMath
    (104) operacionesMath -> . numOperadores PLUS suma
    (105) operacionesMath -> . suma
    (106) operacionesMath -> . suma operacionesMath
    (107) operacionesMath -> . restas
    (108) operacionesMath -> . numOperadores MINUS restas
    (109) operacionesMath -> . restas operacionesMath
    (110) operacionesMath -> . multiplicacion
    (111) operacionesMath -> . numOperadores TIMES multiplicacion
    (112) operacionesMath -> . multiplicacion operacionesMath
    (113) operacionesMath -> . divicion
    (114) operacionesMath -> . numOperadores DIVIDE divicion
    (115) operacionesMath -> . divicion operacionesMath
    (128) numOperadores -> . enteros
    (129) numOperadores -> . decimales
    (116) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (117) suma -> . numOperadores PLUS NUM
    (118) suma -> . numOperadores
    (119) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (120) restas -> . numOperadores MINUS NUM
    (121) restas -> . numOperadores
    (122) multiplicacion -> . numOperadores TIMES LPAREN numOperadores RPAREN
    (123) multiplicacion -> . numOperadores TIMES NUM
    (124) multiplicacion -> . numOperadores
    (125) divicion -> . numOperadores DIVIDE LPAREN numOperadores RPAREN
    (126) divicion -> . numOperadores DIVIDE NUM
    (127) divicion -> . numOperadores
    (130) enteros -> . NUM
    (131) enteros -> . numNegative
    (134) decimales -> . enteros PERIOD NUM
    (132) numNegative -> . MINUS NUM
    (133) numNegative -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
    ID              shift and go to state 70
    NUM             shift and go to state 71
    STRING          shift and go to state 72
    PLUS            shift and go to state 73
    MINUS           shift and go to state 75
    PERIOD          reduce using rule 133 (numNegative -> .)
    TIMES           reduce using rule 133 (numNegative -> .)
    DIVIDE          reduce using rule 133 (numNegative -> .)
    RPAREN          reduce using rule 133 (numNegative -> .)

  ! PLUS            [ reduce using rule 133 (numNegative -> .) ]
  ! MINUS           [ reduce using rule 133 (numNegative -> .) ]
  ! NUM             [ reduce using rule 133 (numNegative -> .) ]

    expression                     shift and go to state 184
    conditionalEspecifico          shift and go to state 68
    inicializarOp                  shift and go to state 69
    operacionesMath                shift and go to state 74
    numOperadores                  shift and go to state 76
    suma                           shift and go to state 77
    restas                         shift and go to state 78
    multiplicacion                 shift and go to state 79
    divicion                       shift and go to state 80
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 143

    (92) paramList -> javaScript_param COMMA paramList .

    RPAREN          reduce using rule 92 (paramList -> javaScript_param COMMA paramList .)


state 144

    (56) arrayDeclare -> LBRACKET arrayValues RBRACKET .

    COLON           reduce using rule 56 (arrayDeclare -> LBRACKET arrayValues RBRACKET .)
    COMMA           reduce using rule 56 (arrayDeclare -> LBRACKET arrayValues RBRACKET .)
    RBRACKET        reduce using rule 56 (arrayDeclare -> LBRACKET arrayValues RBRACKET .)


state 145

    (60) arrayValues -> javaScript_param COMMA . arrayValues
    (59) arrayValues -> . javaScript_param
    (60) arrayValues -> . javaScript_param COMMA arrayValues
    (35) javaScript_param -> . STRING
    (36) javaScript_param -> . NUM
    (37) javaScript_param -> . boolean
    (38) javaScript_param -> . ID
    (39) boolean -> . TRUE
    (40) boolean -> . FALSE

    STRING          shift and go to state 45
    NUM             shift and go to state 46
    ID              shift and go to state 41
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    javaScript_param               shift and go to state 95
    arrayValues                    shift and go to state 185
    boolean                        shift and go to state 47

state 146

    (57) arrayDeclare -> NEW ARRAY LPAREN . arrayValues RPAREN
    (58) arrayDeclare -> NEW ARRAY LPAREN . RPAREN
    (59) arrayValues -> . javaScript_param
    (60) arrayValues -> . javaScript_param COMMA arrayValues
    (35) javaScript_param -> . STRING
    (36) javaScript_param -> . NUM
    (37) javaScript_param -> . boolean
    (38) javaScript_param -> . ID
    (39) boolean -> . TRUE
    (40) boolean -> . FALSE

    RPAREN          shift and go to state 187
    STRING          shift and go to state 45
    NUM             shift and go to state 46
    ID              shift and go to state 41
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    arrayValues                    shift and go to state 186
    javaScript_param               shift and go to state 95
    boolean                        shift and go to state 47

state 147

    (64) declareMap -> NEW MAP LPAREN . LBRACKET iterable RBRACKET RPAREN
    (65) declareMap -> NEW MAP LPAREN . RPAREN

    LBRACKET        shift and go to state 188
    RPAREN          shift and go to state 189


state 148

    (97) declararSet -> NEW SET LPAREN . LBRACKET iterable RBRACKET RPAREN

    LBRACKET        shift and go to state 190


state 149

    (61) methodArray -> PERIOD PUSH LPAREN javaScript_param . RPAREN

    RPAREN          shift and go to state 191


state 150

    (62) methodArray -> PERIOD UNSHIFT LPAREN javaScript_param . RPAREN

    RPAREN          shift and go to state 192


state 151

    (63) methodArray -> PERIOD POP LPAREN RPAREN .

    COLON           reduce using rule 63 (methodArray -> PERIOD POP LPAREN RPAREN .)


state 152

    (98) methodSet -> PERIOD ADD LPAREN javaScript_param . RPAREN

    RPAREN          shift and go to state 193


state 153

    (99) methodSet -> PERIOD DELETE LPAREN javaScript_param . RPAREN

    RPAREN          shift and go to state 194


state 154

    (100) methodSet -> PERIOD CLEAR LPAREN RPAREN .
    (82) methodMap -> PERIOD CLEAR LPAREN RPAREN .

  ! reduce/reduce conflict for COLON resolved using rule 82 (methodMap -> PERIOD CLEAR LPAREN RPAREN .)
    COLON           reduce using rule 82 (methodMap -> PERIOD CLEAR LPAREN RPAREN .)

  ! COLON           [ reduce using rule 100 (methodSet -> PERIOD CLEAR LPAREN RPAREN .) ]


state 155

    (83) methodMap -> PERIOD LENGTH LPAREN RPAREN .

    COLON           reduce using rule 83 (methodMap -> PERIOD LENGTH LPAREN RPAREN .)


state 156

    (86) declareteFunction -> varType ID EQUAL FUNCTION LPAREN . params RPAREN
    (90) params -> . paramList
    (91) paramList -> . javaScript_param
    (92) paramList -> . javaScript_param COMMA paramList
    (35) javaScript_param -> . STRING
    (36) javaScript_param -> . NUM
    (37) javaScript_param -> . boolean
    (38) javaScript_param -> . ID
    (39) boolean -> . TRUE
    (40) boolean -> . FALSE

    STRING          shift and go to state 45
    NUM             shift and go to state 46
    ID              shift and go to state 41
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    params                         shift and go to state 195
    paramList                      shift and go to state 43
    javaScript_param               shift and go to state 44
    boolean                        shift and go to state 47

state 157

    (135) conditionalEspecifico -> ID opConditional dataCondi .

    RPAREN          reduce using rule 135 (conditionalEspecifico -> ID opConditional dataCondi .)
    AND             reduce using rule 135 (conditionalEspecifico -> ID opConditional dataCondi .)
    OR              reduce using rule 135 (conditionalEspecifico -> ID opConditional dataCondi .)
    NOT             reduce using rule 135 (conditionalEspecifico -> ID opConditional dataCondi .)


state 158

    (138) dataCondi -> STRING .

    RPAREN          reduce using rule 138 (dataCondi -> STRING .)
    AND             reduce using rule 138 (dataCondi -> STRING .)
    OR              reduce using rule 138 (dataCondi -> STRING .)
    NOT             reduce using rule 138 (dataCondi -> STRING .)


state 159

    (139) dataCondi -> NUM .

    RPAREN          reduce using rule 139 (dataCondi -> NUM .)
    AND             reduce using rule 139 (dataCondi -> NUM .)
    OR              reduce using rule 139 (dataCondi -> NUM .)
    NOT             reduce using rule 139 (dataCondi -> NUM .)


state 160

    (136) conditionalEspecifico -> NUM opConditional NUM .

    RPAREN          reduce using rule 136 (conditionalEspecifico -> NUM opConditional NUM .)
    AND             reduce using rule 136 (conditionalEspecifico -> NUM opConditional NUM .)
    OR              reduce using rule 136 (conditionalEspecifico -> NUM opConditional NUM .)
    NOT             reduce using rule 136 (conditionalEspecifico -> NUM opConditional NUM .)


state 161

    (137) conditionalEspecifico -> STRING opConditional STRING .

    RPAREN          reduce using rule 137 (conditionalEspecifico -> STRING opConditional STRING .)
    AND             reduce using rule 137 (conditionalEspecifico -> STRING opConditional STRING .)
    OR              reduce using rule 137 (conditionalEspecifico -> STRING opConditional STRING .)
    NOT             reduce using rule 137 (conditionalEspecifico -> STRING opConditional STRING .)


state 162

    (132) numNegative -> MINUS NUM .

    PERIOD          reduce using rule 132 (numNegative -> MINUS NUM .)
    PLUS            reduce using rule 132 (numNegative -> MINUS NUM .)
    MINUS           reduce using rule 132 (numNegative -> MINUS NUM .)
    TIMES           reduce using rule 132 (numNegative -> MINUS NUM .)
    DIVIDE          reduce using rule 132 (numNegative -> MINUS NUM .)
    NUM             reduce using rule 132 (numNegative -> MINUS NUM .)
    RPAREN          reduce using rule 132 (numNegative -> MINUS NUM .)
    AND             reduce using rule 132 (numNegative -> MINUS NUM .)
    OR              reduce using rule 132 (numNegative -> MINUS NUM .)
    NOT             reduce using rule 132 (numNegative -> MINUS NUM .)
    $end            reduce using rule 132 (numNegative -> MINUS NUM .)
    RBLOCK          reduce using rule 132 (numNegative -> MINUS NUM .)
    RETURN          reduce using rule 132 (numNegative -> MINUS NUM .)


state 163

    (116) suma -> numOperadores . PLUS LPAREN numOperadores RPAREN
    (117) suma -> numOperadores . PLUS NUM
    (118) suma -> numOperadores .

    PLUS            shift and go to state 196
    RPAREN          reduce using rule 118 (suma -> numOperadores .)
    AND             reduce using rule 118 (suma -> numOperadores .)
    OR              reduce using rule 118 (suma -> numOperadores .)
    NOT             reduce using rule 118 (suma -> numOperadores .)
    $end            reduce using rule 118 (suma -> numOperadores .)
    RBLOCK          reduce using rule 118 (suma -> numOperadores .)
    RETURN          reduce using rule 118 (suma -> numOperadores .)


state 164

    (104) operacionesMath -> numOperadores PLUS suma .

    RPAREN          reduce using rule 104 (operacionesMath -> numOperadores PLUS suma .)
    AND             reduce using rule 104 (operacionesMath -> numOperadores PLUS suma .)
    OR              reduce using rule 104 (operacionesMath -> numOperadores PLUS suma .)
    NOT             reduce using rule 104 (operacionesMath -> numOperadores PLUS suma .)
    $end            reduce using rule 104 (operacionesMath -> numOperadores PLUS suma .)
    RBLOCK          reduce using rule 104 (operacionesMath -> numOperadores PLUS suma .)
    RETURN          reduce using rule 104 (operacionesMath -> numOperadores PLUS suma .)


state 165

    (116) suma -> numOperadores PLUS LPAREN . numOperadores RPAREN
    (128) numOperadores -> . enteros
    (129) numOperadores -> . decimales
    (130) enteros -> . NUM
    (131) enteros -> . numNegative
    (134) decimales -> . enteros PERIOD NUM
    (132) numNegative -> . MINUS NUM
    (133) numNegative -> .

    NUM             shift and go to state 123
    MINUS           shift and go to state 122
    PERIOD          reduce using rule 133 (numNegative -> .)
    RPAREN          reduce using rule 133 (numNegative -> .)

    numOperadores                  shift and go to state 197
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 166

    (117) suma -> numOperadores PLUS NUM .
    (130) enteros -> NUM .

  ! reduce/reduce conflict for PERIOD resolved using rule 117 (suma -> numOperadores PLUS NUM .)
  ! reduce/reduce conflict for PLUS resolved using rule 117 (suma -> numOperadores PLUS NUM .)
  ! reduce/reduce conflict for RPAREN resolved using rule 117 (suma -> numOperadores PLUS NUM .)
  ! reduce/reduce conflict for AND resolved using rule 117 (suma -> numOperadores PLUS NUM .)
  ! reduce/reduce conflict for OR resolved using rule 117 (suma -> numOperadores PLUS NUM .)
  ! reduce/reduce conflict for NOT resolved using rule 117 (suma -> numOperadores PLUS NUM .)
  ! reduce/reduce conflict for $end resolved using rule 117 (suma -> numOperadores PLUS NUM .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 117 (suma -> numOperadores PLUS NUM .)
  ! reduce/reduce conflict for RETURN resolved using rule 117 (suma -> numOperadores PLUS NUM .)
    NUM             reduce using rule 117 (suma -> numOperadores PLUS NUM .)
    MINUS           reduce using rule 117 (suma -> numOperadores PLUS NUM .)
    PLUS            reduce using rule 117 (suma -> numOperadores PLUS NUM .)
    TIMES           reduce using rule 117 (suma -> numOperadores PLUS NUM .)
    DIVIDE          reduce using rule 117 (suma -> numOperadores PLUS NUM .)
    PERIOD          reduce using rule 117 (suma -> numOperadores PLUS NUM .)
    RPAREN          reduce using rule 117 (suma -> numOperadores PLUS NUM .)
    AND             reduce using rule 117 (suma -> numOperadores PLUS NUM .)
    OR              reduce using rule 117 (suma -> numOperadores PLUS NUM .)
    NOT             reduce using rule 117 (suma -> numOperadores PLUS NUM .)
    $end            reduce using rule 117 (suma -> numOperadores PLUS NUM .)
    RBLOCK          reduce using rule 117 (suma -> numOperadores PLUS NUM .)
    RETURN          reduce using rule 117 (suma -> numOperadores PLUS NUM .)

  ! PERIOD          [ reduce using rule 130 (enteros -> NUM .) ]
  ! PLUS            [ reduce using rule 130 (enteros -> NUM .) ]
  ! RPAREN          [ reduce using rule 130 (enteros -> NUM .) ]
  ! AND             [ reduce using rule 130 (enteros -> NUM .) ]
  ! OR              [ reduce using rule 130 (enteros -> NUM .) ]
  ! NOT             [ reduce using rule 130 (enteros -> NUM .) ]
  ! $end            [ reduce using rule 130 (enteros -> NUM .) ]
  ! RBLOCK          [ reduce using rule 130 (enteros -> NUM .) ]
  ! RETURN          [ reduce using rule 130 (enteros -> NUM .) ]


state 167

    (119) restas -> numOperadores . MINUS LPAREN numOperadores RPAREN
    (120) restas -> numOperadores . MINUS NUM
    (121) restas -> numOperadores .

    MINUS           shift and go to state 198
    RPAREN          reduce using rule 121 (restas -> numOperadores .)
    AND             reduce using rule 121 (restas -> numOperadores .)
    OR              reduce using rule 121 (restas -> numOperadores .)
    NOT             reduce using rule 121 (restas -> numOperadores .)
    $end            reduce using rule 121 (restas -> numOperadores .)
    RBLOCK          reduce using rule 121 (restas -> numOperadores .)
    RETURN          reduce using rule 121 (restas -> numOperadores .)


state 168

    (108) operacionesMath -> numOperadores MINUS restas .

    RPAREN          reduce using rule 108 (operacionesMath -> numOperadores MINUS restas .)
    AND             reduce using rule 108 (operacionesMath -> numOperadores MINUS restas .)
    OR              reduce using rule 108 (operacionesMath -> numOperadores MINUS restas .)
    NOT             reduce using rule 108 (operacionesMath -> numOperadores MINUS restas .)
    $end            reduce using rule 108 (operacionesMath -> numOperadores MINUS restas .)
    RBLOCK          reduce using rule 108 (operacionesMath -> numOperadores MINUS restas .)
    RETURN          reduce using rule 108 (operacionesMath -> numOperadores MINUS restas .)


state 169

    (119) restas -> numOperadores MINUS LPAREN . numOperadores RPAREN
    (128) numOperadores -> . enteros
    (129) numOperadores -> . decimales
    (130) enteros -> . NUM
    (131) enteros -> . numNegative
    (134) decimales -> . enteros PERIOD NUM
    (132) numNegative -> . MINUS NUM
    (133) numNegative -> .

    NUM             shift and go to state 123
    MINUS           shift and go to state 122
    PERIOD          reduce using rule 133 (numNegative -> .)
    RPAREN          reduce using rule 133 (numNegative -> .)

    numOperadores                  shift and go to state 199
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 170

    (120) restas -> numOperadores MINUS NUM .
    (130) enteros -> NUM .

  ! reduce/reduce conflict for PERIOD resolved using rule 120 (restas -> numOperadores MINUS NUM .)
  ! reduce/reduce conflict for MINUS resolved using rule 120 (restas -> numOperadores MINUS NUM .)
  ! reduce/reduce conflict for RPAREN resolved using rule 120 (restas -> numOperadores MINUS NUM .)
  ! reduce/reduce conflict for AND resolved using rule 120 (restas -> numOperadores MINUS NUM .)
  ! reduce/reduce conflict for OR resolved using rule 120 (restas -> numOperadores MINUS NUM .)
  ! reduce/reduce conflict for NOT resolved using rule 120 (restas -> numOperadores MINUS NUM .)
  ! reduce/reduce conflict for $end resolved using rule 120 (restas -> numOperadores MINUS NUM .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 120 (restas -> numOperadores MINUS NUM .)
  ! reduce/reduce conflict for RETURN resolved using rule 120 (restas -> numOperadores MINUS NUM .)
    NUM             reduce using rule 120 (restas -> numOperadores MINUS NUM .)
    MINUS           reduce using rule 120 (restas -> numOperadores MINUS NUM .)
    PLUS            reduce using rule 120 (restas -> numOperadores MINUS NUM .)
    TIMES           reduce using rule 120 (restas -> numOperadores MINUS NUM .)
    DIVIDE          reduce using rule 120 (restas -> numOperadores MINUS NUM .)
    PERIOD          reduce using rule 120 (restas -> numOperadores MINUS NUM .)
    RPAREN          reduce using rule 120 (restas -> numOperadores MINUS NUM .)
    AND             reduce using rule 120 (restas -> numOperadores MINUS NUM .)
    OR              reduce using rule 120 (restas -> numOperadores MINUS NUM .)
    NOT             reduce using rule 120 (restas -> numOperadores MINUS NUM .)
    $end            reduce using rule 120 (restas -> numOperadores MINUS NUM .)
    RBLOCK          reduce using rule 120 (restas -> numOperadores MINUS NUM .)
    RETURN          reduce using rule 120 (restas -> numOperadores MINUS NUM .)

  ! PERIOD          [ reduce using rule 130 (enteros -> NUM .) ]
  ! MINUS           [ reduce using rule 130 (enteros -> NUM .) ]
  ! RPAREN          [ reduce using rule 130 (enteros -> NUM .) ]
  ! AND             [ reduce using rule 130 (enteros -> NUM .) ]
  ! OR              [ reduce using rule 130 (enteros -> NUM .) ]
  ! NOT             [ reduce using rule 130 (enteros -> NUM .) ]
  ! $end            [ reduce using rule 130 (enteros -> NUM .) ]
  ! RBLOCK          [ reduce using rule 130 (enteros -> NUM .) ]
  ! RETURN          [ reduce using rule 130 (enteros -> NUM .) ]


state 171

    (122) multiplicacion -> numOperadores . TIMES LPAREN numOperadores RPAREN
    (123) multiplicacion -> numOperadores . TIMES NUM
    (124) multiplicacion -> numOperadores .

    TIMES           shift and go to state 200
    RPAREN          reduce using rule 124 (multiplicacion -> numOperadores .)
    AND             reduce using rule 124 (multiplicacion -> numOperadores .)
    OR              reduce using rule 124 (multiplicacion -> numOperadores .)
    NOT             reduce using rule 124 (multiplicacion -> numOperadores .)
    $end            reduce using rule 124 (multiplicacion -> numOperadores .)
    RBLOCK          reduce using rule 124 (multiplicacion -> numOperadores .)
    RETURN          reduce using rule 124 (multiplicacion -> numOperadores .)


state 172

    (111) operacionesMath -> numOperadores TIMES multiplicacion .

    RPAREN          reduce using rule 111 (operacionesMath -> numOperadores TIMES multiplicacion .)
    AND             reduce using rule 111 (operacionesMath -> numOperadores TIMES multiplicacion .)
    OR              reduce using rule 111 (operacionesMath -> numOperadores TIMES multiplicacion .)
    NOT             reduce using rule 111 (operacionesMath -> numOperadores TIMES multiplicacion .)
    $end            reduce using rule 111 (operacionesMath -> numOperadores TIMES multiplicacion .)
    RBLOCK          reduce using rule 111 (operacionesMath -> numOperadores TIMES multiplicacion .)
    RETURN          reduce using rule 111 (operacionesMath -> numOperadores TIMES multiplicacion .)


state 173

    (122) multiplicacion -> numOperadores TIMES LPAREN . numOperadores RPAREN
    (128) numOperadores -> . enteros
    (129) numOperadores -> . decimales
    (130) enteros -> . NUM
    (131) enteros -> . numNegative
    (134) decimales -> . enteros PERIOD NUM
    (132) numNegative -> . MINUS NUM
    (133) numNegative -> .

    NUM             shift and go to state 123
    MINUS           shift and go to state 122
    PERIOD          reduce using rule 133 (numNegative -> .)
    RPAREN          reduce using rule 133 (numNegative -> .)

    numOperadores                  shift and go to state 201
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 174

    (123) multiplicacion -> numOperadores TIMES NUM .
    (130) enteros -> NUM .

  ! reduce/reduce conflict for PERIOD resolved using rule 123 (multiplicacion -> numOperadores TIMES NUM .)
  ! reduce/reduce conflict for TIMES resolved using rule 123 (multiplicacion -> numOperadores TIMES NUM .)
  ! reduce/reduce conflict for RPAREN resolved using rule 123 (multiplicacion -> numOperadores TIMES NUM .)
  ! reduce/reduce conflict for AND resolved using rule 123 (multiplicacion -> numOperadores TIMES NUM .)
  ! reduce/reduce conflict for OR resolved using rule 123 (multiplicacion -> numOperadores TIMES NUM .)
  ! reduce/reduce conflict for NOT resolved using rule 123 (multiplicacion -> numOperadores TIMES NUM .)
  ! reduce/reduce conflict for $end resolved using rule 123 (multiplicacion -> numOperadores TIMES NUM .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 123 (multiplicacion -> numOperadores TIMES NUM .)
  ! reduce/reduce conflict for RETURN resolved using rule 123 (multiplicacion -> numOperadores TIMES NUM .)
    NUM             reduce using rule 123 (multiplicacion -> numOperadores TIMES NUM .)
    MINUS           reduce using rule 123 (multiplicacion -> numOperadores TIMES NUM .)
    PLUS            reduce using rule 123 (multiplicacion -> numOperadores TIMES NUM .)
    TIMES           reduce using rule 123 (multiplicacion -> numOperadores TIMES NUM .)
    DIVIDE          reduce using rule 123 (multiplicacion -> numOperadores TIMES NUM .)
    PERIOD          reduce using rule 123 (multiplicacion -> numOperadores TIMES NUM .)
    RPAREN          reduce using rule 123 (multiplicacion -> numOperadores TIMES NUM .)
    AND             reduce using rule 123 (multiplicacion -> numOperadores TIMES NUM .)
    OR              reduce using rule 123 (multiplicacion -> numOperadores TIMES NUM .)
    NOT             reduce using rule 123 (multiplicacion -> numOperadores TIMES NUM .)
    $end            reduce using rule 123 (multiplicacion -> numOperadores TIMES NUM .)
    RBLOCK          reduce using rule 123 (multiplicacion -> numOperadores TIMES NUM .)
    RETURN          reduce using rule 123 (multiplicacion -> numOperadores TIMES NUM .)

  ! PERIOD          [ reduce using rule 130 (enteros -> NUM .) ]
  ! TIMES           [ reduce using rule 130 (enteros -> NUM .) ]
  ! RPAREN          [ reduce using rule 130 (enteros -> NUM .) ]
  ! AND             [ reduce using rule 130 (enteros -> NUM .) ]
  ! OR              [ reduce using rule 130 (enteros -> NUM .) ]
  ! NOT             [ reduce using rule 130 (enteros -> NUM .) ]
  ! $end            [ reduce using rule 130 (enteros -> NUM .) ]
  ! RBLOCK          [ reduce using rule 130 (enteros -> NUM .) ]
  ! RETURN          [ reduce using rule 130 (enteros -> NUM .) ]


state 175

    (125) divicion -> numOperadores . DIVIDE LPAREN numOperadores RPAREN
    (126) divicion -> numOperadores . DIVIDE NUM
    (127) divicion -> numOperadores .

    DIVIDE          shift and go to state 202
    RPAREN          reduce using rule 127 (divicion -> numOperadores .)
    AND             reduce using rule 127 (divicion -> numOperadores .)
    OR              reduce using rule 127 (divicion -> numOperadores .)
    NOT             reduce using rule 127 (divicion -> numOperadores .)
    $end            reduce using rule 127 (divicion -> numOperadores .)
    RBLOCK          reduce using rule 127 (divicion -> numOperadores .)
    RETURN          reduce using rule 127 (divicion -> numOperadores .)


state 176

    (114) operacionesMath -> numOperadores DIVIDE divicion .

    RPAREN          reduce using rule 114 (operacionesMath -> numOperadores DIVIDE divicion .)
    AND             reduce using rule 114 (operacionesMath -> numOperadores DIVIDE divicion .)
    OR              reduce using rule 114 (operacionesMath -> numOperadores DIVIDE divicion .)
    NOT             reduce using rule 114 (operacionesMath -> numOperadores DIVIDE divicion .)
    $end            reduce using rule 114 (operacionesMath -> numOperadores DIVIDE divicion .)
    RBLOCK          reduce using rule 114 (operacionesMath -> numOperadores DIVIDE divicion .)
    RETURN          reduce using rule 114 (operacionesMath -> numOperadores DIVIDE divicion .)


state 177

    (125) divicion -> numOperadores DIVIDE LPAREN . numOperadores RPAREN
    (128) numOperadores -> . enteros
    (129) numOperadores -> . decimales
    (130) enteros -> . NUM
    (131) enteros -> . numNegative
    (134) decimales -> . enteros PERIOD NUM
    (132) numNegative -> . MINUS NUM
    (133) numNegative -> .

    NUM             shift and go to state 123
    MINUS           shift and go to state 122
    PERIOD          reduce using rule 133 (numNegative -> .)
    RPAREN          reduce using rule 133 (numNegative -> .)

    numOperadores                  shift and go to state 203
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 178

    (126) divicion -> numOperadores DIVIDE NUM .
    (130) enteros -> NUM .

  ! reduce/reduce conflict for PERIOD resolved using rule 126 (divicion -> numOperadores DIVIDE NUM .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 126 (divicion -> numOperadores DIVIDE NUM .)
  ! reduce/reduce conflict for RPAREN resolved using rule 126 (divicion -> numOperadores DIVIDE NUM .)
  ! reduce/reduce conflict for AND resolved using rule 126 (divicion -> numOperadores DIVIDE NUM .)
  ! reduce/reduce conflict for OR resolved using rule 126 (divicion -> numOperadores DIVIDE NUM .)
  ! reduce/reduce conflict for NOT resolved using rule 126 (divicion -> numOperadores DIVIDE NUM .)
  ! reduce/reduce conflict for $end resolved using rule 126 (divicion -> numOperadores DIVIDE NUM .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 126 (divicion -> numOperadores DIVIDE NUM .)
  ! reduce/reduce conflict for RETURN resolved using rule 126 (divicion -> numOperadores DIVIDE NUM .)
    NUM             reduce using rule 126 (divicion -> numOperadores DIVIDE NUM .)
    MINUS           reduce using rule 126 (divicion -> numOperadores DIVIDE NUM .)
    PLUS            reduce using rule 126 (divicion -> numOperadores DIVIDE NUM .)
    TIMES           reduce using rule 126 (divicion -> numOperadores DIVIDE NUM .)
    DIVIDE          reduce using rule 126 (divicion -> numOperadores DIVIDE NUM .)
    PERIOD          reduce using rule 126 (divicion -> numOperadores DIVIDE NUM .)
    RPAREN          reduce using rule 126 (divicion -> numOperadores DIVIDE NUM .)
    AND             reduce using rule 126 (divicion -> numOperadores DIVIDE NUM .)
    OR              reduce using rule 126 (divicion -> numOperadores DIVIDE NUM .)
    NOT             reduce using rule 126 (divicion -> numOperadores DIVIDE NUM .)
    $end            reduce using rule 126 (divicion -> numOperadores DIVIDE NUM .)
    RBLOCK          reduce using rule 126 (divicion -> numOperadores DIVIDE NUM .)
    RETURN          reduce using rule 126 (divicion -> numOperadores DIVIDE NUM .)

  ! PERIOD          [ reduce using rule 130 (enteros -> NUM .) ]
  ! DIVIDE          [ reduce using rule 130 (enteros -> NUM .) ]
  ! RPAREN          [ reduce using rule 130 (enteros -> NUM .) ]
  ! AND             [ reduce using rule 130 (enteros -> NUM .) ]
  ! OR              [ reduce using rule 130 (enteros -> NUM .) ]
  ! NOT             [ reduce using rule 130 (enteros -> NUM .) ]
  ! $end            [ reduce using rule 130 (enteros -> NUM .) ]
  ! RBLOCK          [ reduce using rule 130 (enteros -> NUM .) ]
  ! RETURN          [ reduce using rule 130 (enteros -> NUM .) ]


state 179

    (134) decimales -> enteros PERIOD NUM .

    PLUS            reduce using rule 134 (decimales -> enteros PERIOD NUM .)
    MINUS           reduce using rule 134 (decimales -> enteros PERIOD NUM .)
    TIMES           reduce using rule 134 (decimales -> enteros PERIOD NUM .)
    DIVIDE          reduce using rule 134 (decimales -> enteros PERIOD NUM .)
    NUM             reduce using rule 134 (decimales -> enteros PERIOD NUM .)
    PERIOD          reduce using rule 134 (decimales -> enteros PERIOD NUM .)
    RPAREN          reduce using rule 134 (decimales -> enteros PERIOD NUM .)
    AND             reduce using rule 134 (decimales -> enteros PERIOD NUM .)
    OR              reduce using rule 134 (decimales -> enteros PERIOD NUM .)
    NOT             reduce using rule 134 (decimales -> enteros PERIOD NUM .)
    $end            reduce using rule 134 (decimales -> enteros PERIOD NUM .)
    RBLOCK          reduce using rule 134 (decimales -> enteros PERIOD NUM .)
    RETURN          reduce using rule 134 (decimales -> enteros PERIOD NUM .)


state 180

    (84) declareteFunction -> FUNCTION ID LPAREN params RPAREN .
    (85) declareteFunction -> FUNCTION ID LPAREN params RPAREN . sentencesCmpt
    (87) sentencesCmpt -> . LBLOCK sentencia RBLOCK
    (88) sentencesCmpt -> . LBLOCK sentencia RETURN RBLOCK

    $end            reduce using rule 84 (declareteFunction -> FUNCTION ID LPAREN params RPAREN .)
    RBLOCK          reduce using rule 84 (declareteFunction -> FUNCTION ID LPAREN params RPAREN .)
    RETURN          reduce using rule 84 (declareteFunction -> FUNCTION ID LPAREN params RPAREN .)
    LBLOCK          shift and go to state 205

    sentencesCmpt                  shift and go to state 204

state 181

    (27) sentencias_if -> IF LPAREN expression operadorLogical expression . RPAREN LBLOCK sentencia RBLOCK
    (29) sentencias_if_else -> IF LPAREN expression operadorLogical expression . RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK

    RPAREN          shift and go to state 206


state 182

    (28) sentencias_if -> IF LPAREN expression RPAREN LBLOCK . sentencia RBLOCK
    (30) sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK . sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (1) sentencia -> . callMethods
    (2) sentencia -> . callFunction COLON
    (3) sentencia -> . varDeclaration
    (4) sentencia -> . controlExpression
    (5) sentencia -> . impresion
    (6) sentencia -> . declareteFunction
    (7) sentencia -> . assingOperadores
    (52) callMethods -> . ID methodArray COLON
    (53) callMethods -> . ID methodSet COLON
    (54) callMethods -> . ID methodMap COLON
    (89) callFunction -> . ID LPAREN params RPAREN
    (44) varDeclaration -> . varType assign
    (45) varDeclaration -> . assign
    (46) varDeclaration -> . LET ID COLON
    (47) varDeclaration -> . VAR ID COLON
    (11) controlExpression -> . sentencias_if
    (12) controlExpression -> . sentencias_if_else
    (13) controlExpression -> . sentencias_while
    (14) controlExpression -> . impresion
    (15) controlExpression -> . impresion_vacio
    (33) impresion -> . ALERT LPAREN expression RPAREN
    (84) declareteFunction -> . FUNCTION ID LPAREN params RPAREN
    (85) declareteFunction -> . FUNCTION ID LPAREN params RPAREN sentencesCmpt
    (86) declareteFunction -> . varType ID EQUAL FUNCTION LPAREN params RPAREN
    (10) assingOperadores -> . varType ID EQUAL inicializarOp
    (41) varType -> . LET
    (42) varType -> . CONST
    (43) varType -> . VAR
    (48) assign -> . ID EQUAL arrayDeclare COLON
    (49) assign -> . ID EQUAL declareMap COLON
    (50) assign -> . ID EQUAL declararSet COLON
    (51) assign -> . ID EQUAL javaScript_param COLON
    (27) sentencias_if -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (28) sentencias_if -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (29) sentencias_if_else -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (30) sentencias_if_else -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (31) sentencias_while -> . WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (32) sentencias_while -> . WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (34) impresion_vacio -> . ALERT LPAREN RPAREN

    ID              shift and go to state 9
    LET             shift and go to state 12
    VAR             shift and go to state 13
    ALERT           shift and go to state 18
    FUNCTION        shift and go to state 19
    CONST           shift and go to state 20
    IF              shift and go to state 21
    WHILE           shift and go to state 22

    sentencia                      shift and go to state 207
    callMethods                    shift and go to state 2
    callFunction                   shift and go to state 3
    varDeclaration                 shift and go to state 4
    controlExpression              shift and go to state 5
    impresion                      shift and go to state 6
    declareteFunction              shift and go to state 7
    assingOperadores               shift and go to state 8
    varType                        shift and go to state 10
    assign                         shift and go to state 11
    sentencias_if                  shift and go to state 14
    sentencias_if_else             shift and go to state 15
    sentencias_while               shift and go to state 16
    impresion_vacio                shift and go to state 17

state 183

    (31) sentencias_while -> WHILE LPAREN expression RPAREN LBLOCK . sentencia RBLOCK
    (1) sentencia -> . callMethods
    (2) sentencia -> . callFunction COLON
    (3) sentencia -> . varDeclaration
    (4) sentencia -> . controlExpression
    (5) sentencia -> . impresion
    (6) sentencia -> . declareteFunction
    (7) sentencia -> . assingOperadores
    (52) callMethods -> . ID methodArray COLON
    (53) callMethods -> . ID methodSet COLON
    (54) callMethods -> . ID methodMap COLON
    (89) callFunction -> . ID LPAREN params RPAREN
    (44) varDeclaration -> . varType assign
    (45) varDeclaration -> . assign
    (46) varDeclaration -> . LET ID COLON
    (47) varDeclaration -> . VAR ID COLON
    (11) controlExpression -> . sentencias_if
    (12) controlExpression -> . sentencias_if_else
    (13) controlExpression -> . sentencias_while
    (14) controlExpression -> . impresion
    (15) controlExpression -> . impresion_vacio
    (33) impresion -> . ALERT LPAREN expression RPAREN
    (84) declareteFunction -> . FUNCTION ID LPAREN params RPAREN
    (85) declareteFunction -> . FUNCTION ID LPAREN params RPAREN sentencesCmpt
    (86) declareteFunction -> . varType ID EQUAL FUNCTION LPAREN params RPAREN
    (10) assingOperadores -> . varType ID EQUAL inicializarOp
    (41) varType -> . LET
    (42) varType -> . CONST
    (43) varType -> . VAR
    (48) assign -> . ID EQUAL arrayDeclare COLON
    (49) assign -> . ID EQUAL declareMap COLON
    (50) assign -> . ID EQUAL declararSet COLON
    (51) assign -> . ID EQUAL javaScript_param COLON
    (27) sentencias_if -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (28) sentencias_if -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (29) sentencias_if_else -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (30) sentencias_if_else -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (31) sentencias_while -> . WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (32) sentencias_while -> . WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (34) impresion_vacio -> . ALERT LPAREN RPAREN

    ID              shift and go to state 9
    LET             shift and go to state 12
    VAR             shift and go to state 13
    ALERT           shift and go to state 18
    FUNCTION        shift and go to state 19
    CONST           shift and go to state 20
    IF              shift and go to state 21
    WHILE           shift and go to state 22

    sentencia                      shift and go to state 208
    callMethods                    shift and go to state 2
    callFunction                   shift and go to state 3
    varDeclaration                 shift and go to state 4
    controlExpression              shift and go to state 5
    impresion                      shift and go to state 6
    declareteFunction              shift and go to state 7
    assingOperadores               shift and go to state 8
    varType                        shift and go to state 10
    assign                         shift and go to state 11
    sentencias_if                  shift and go to state 14
    sentencias_if_else             shift and go to state 15
    sentencias_while               shift and go to state 16
    impresion_vacio                shift and go to state 17

state 184

    (32) sentencias_while -> WHILE LPAREN expression operadorLogical expression . RPAREN LBLOCK sentencia RBLOCK

    RPAREN          shift and go to state 209


state 185

    (60) arrayValues -> javaScript_param COMMA arrayValues .

    RBRACKET        reduce using rule 60 (arrayValues -> javaScript_param COMMA arrayValues .)
    RPAREN          reduce using rule 60 (arrayValues -> javaScript_param COMMA arrayValues .)


state 186

    (57) arrayDeclare -> NEW ARRAY LPAREN arrayValues . RPAREN

    RPAREN          shift and go to state 210


state 187

    (58) arrayDeclare -> NEW ARRAY LPAREN RPAREN .

    COLON           reduce using rule 58 (arrayDeclare -> NEW ARRAY LPAREN RPAREN .)
    COMMA           reduce using rule 58 (arrayDeclare -> NEW ARRAY LPAREN RPAREN .)
    RBRACKET        reduce using rule 58 (arrayDeclare -> NEW ARRAY LPAREN RPAREN .)


state 188

    (64) declareMap -> NEW MAP LPAREN LBRACKET . iterable RBRACKET RPAREN
    (68) iterable -> . iterableMap
    (69) iterable -> . iterableArray
    (70) iterable -> . iterableSet
    (66) iterableMap -> . LBRACKET keyValue COMMA keyValue RBRACKET
    (67) iterableMap -> . LBRACKET keyValue COMMA keyValue RBRACKET COMMA iterableMap
    (77) iterableArray -> . arrayDeclare
    (78) iterableArray -> . arrayDeclare COMMA arrayDeclare
    (79) iterableSet -> . declararSet
    (80) iterableSet -> . declararSet COMMA declararSet
    (81) iterableSet -> .
    (55) arrayDeclare -> . LBRACKET RBRACKET
    (56) arrayDeclare -> . LBRACKET arrayValues RBRACKET
    (57) arrayDeclare -> . NEW ARRAY LPAREN arrayValues RPAREN
    (58) arrayDeclare -> . NEW ARRAY LPAREN RPAREN
    (97) declararSet -> . NEW SET LPAREN LBRACKET iterable RBRACKET RPAREN

    LBRACKET        shift and go to state 212
    RBRACKET        reduce using rule 81 (iterableSet -> .)
    NEW             shift and go to state 211

    iterable                       shift and go to state 213
    iterableMap                    shift and go to state 214
    iterableArray                  shift and go to state 215
    iterableSet                    shift and go to state 216
    arrayDeclare                   shift and go to state 217
    declararSet                    shift and go to state 218

state 189

    (65) declareMap -> NEW MAP LPAREN RPAREN .

    COLON           reduce using rule 65 (declareMap -> NEW MAP LPAREN RPAREN .)
    COMMA           reduce using rule 65 (declareMap -> NEW MAP LPAREN RPAREN .)
    RBRACKET        reduce using rule 65 (declareMap -> NEW MAP LPAREN RPAREN .)


state 190

    (97) declararSet -> NEW SET LPAREN LBRACKET . iterable RBRACKET RPAREN
    (68) iterable -> . iterableMap
    (69) iterable -> . iterableArray
    (70) iterable -> . iterableSet
    (66) iterableMap -> . LBRACKET keyValue COMMA keyValue RBRACKET
    (67) iterableMap -> . LBRACKET keyValue COMMA keyValue RBRACKET COMMA iterableMap
    (77) iterableArray -> . arrayDeclare
    (78) iterableArray -> . arrayDeclare COMMA arrayDeclare
    (79) iterableSet -> . declararSet
    (80) iterableSet -> . declararSet COMMA declararSet
    (81) iterableSet -> .
    (55) arrayDeclare -> . LBRACKET RBRACKET
    (56) arrayDeclare -> . LBRACKET arrayValues RBRACKET
    (57) arrayDeclare -> . NEW ARRAY LPAREN arrayValues RPAREN
    (58) arrayDeclare -> . NEW ARRAY LPAREN RPAREN
    (97) declararSet -> . NEW SET LPAREN LBRACKET iterable RBRACKET RPAREN

    LBRACKET        shift and go to state 212
    RBRACKET        reduce using rule 81 (iterableSet -> .)
    NEW             shift and go to state 211

    iterable                       shift and go to state 219
    iterableMap                    shift and go to state 214
    iterableArray                  shift and go to state 215
    iterableSet                    shift and go to state 216
    arrayDeclare                   shift and go to state 217
    declararSet                    shift and go to state 218

state 191

    (61) methodArray -> PERIOD PUSH LPAREN javaScript_param RPAREN .

    COLON           reduce using rule 61 (methodArray -> PERIOD PUSH LPAREN javaScript_param RPAREN .)


state 192

    (62) methodArray -> PERIOD UNSHIFT LPAREN javaScript_param RPAREN .

    COLON           reduce using rule 62 (methodArray -> PERIOD UNSHIFT LPAREN javaScript_param RPAREN .)


state 193

    (98) methodSet -> PERIOD ADD LPAREN javaScript_param RPAREN .

    COLON           reduce using rule 98 (methodSet -> PERIOD ADD LPAREN javaScript_param RPAREN .)


state 194

    (99) methodSet -> PERIOD DELETE LPAREN javaScript_param RPAREN .

    COLON           reduce using rule 99 (methodSet -> PERIOD DELETE LPAREN javaScript_param RPAREN .)


state 195

    (86) declareteFunction -> varType ID EQUAL FUNCTION LPAREN params . RPAREN

    RPAREN          shift and go to state 220


state 196

    (116) suma -> numOperadores PLUS . LPAREN numOperadores RPAREN
    (117) suma -> numOperadores PLUS . NUM

    LPAREN          shift and go to state 165
    NUM             shift and go to state 221


state 197

    (116) suma -> numOperadores PLUS LPAREN numOperadores . RPAREN

    RPAREN          shift and go to state 222


state 198

    (119) restas -> numOperadores MINUS . LPAREN numOperadores RPAREN
    (120) restas -> numOperadores MINUS . NUM

    LPAREN          shift and go to state 169
    NUM             shift and go to state 223


state 199

    (119) restas -> numOperadores MINUS LPAREN numOperadores . RPAREN

    RPAREN          shift and go to state 224


state 200

    (122) multiplicacion -> numOperadores TIMES . LPAREN numOperadores RPAREN
    (123) multiplicacion -> numOperadores TIMES . NUM

    LPAREN          shift and go to state 173
    NUM             shift and go to state 225


state 201

    (122) multiplicacion -> numOperadores TIMES LPAREN numOperadores . RPAREN

    RPAREN          shift and go to state 226


state 202

    (125) divicion -> numOperadores DIVIDE . LPAREN numOperadores RPAREN
    (126) divicion -> numOperadores DIVIDE . NUM

    LPAREN          shift and go to state 177
    NUM             shift and go to state 227


state 203

    (125) divicion -> numOperadores DIVIDE LPAREN numOperadores . RPAREN

    RPAREN          shift and go to state 228


state 204

    (85) declareteFunction -> FUNCTION ID LPAREN params RPAREN sentencesCmpt .

    $end            reduce using rule 85 (declareteFunction -> FUNCTION ID LPAREN params RPAREN sentencesCmpt .)
    RBLOCK          reduce using rule 85 (declareteFunction -> FUNCTION ID LPAREN params RPAREN sentencesCmpt .)
    RETURN          reduce using rule 85 (declareteFunction -> FUNCTION ID LPAREN params RPAREN sentencesCmpt .)


state 205

    (87) sentencesCmpt -> LBLOCK . sentencia RBLOCK
    (88) sentencesCmpt -> LBLOCK . sentencia RETURN RBLOCK
    (1) sentencia -> . callMethods
    (2) sentencia -> . callFunction COLON
    (3) sentencia -> . varDeclaration
    (4) sentencia -> . controlExpression
    (5) sentencia -> . impresion
    (6) sentencia -> . declareteFunction
    (7) sentencia -> . assingOperadores
    (52) callMethods -> . ID methodArray COLON
    (53) callMethods -> . ID methodSet COLON
    (54) callMethods -> . ID methodMap COLON
    (89) callFunction -> . ID LPAREN params RPAREN
    (44) varDeclaration -> . varType assign
    (45) varDeclaration -> . assign
    (46) varDeclaration -> . LET ID COLON
    (47) varDeclaration -> . VAR ID COLON
    (11) controlExpression -> . sentencias_if
    (12) controlExpression -> . sentencias_if_else
    (13) controlExpression -> . sentencias_while
    (14) controlExpression -> . impresion
    (15) controlExpression -> . impresion_vacio
    (33) impresion -> . ALERT LPAREN expression RPAREN
    (84) declareteFunction -> . FUNCTION ID LPAREN params RPAREN
    (85) declareteFunction -> . FUNCTION ID LPAREN params RPAREN sentencesCmpt
    (86) declareteFunction -> . varType ID EQUAL FUNCTION LPAREN params RPAREN
    (10) assingOperadores -> . varType ID EQUAL inicializarOp
    (41) varType -> . LET
    (42) varType -> . CONST
    (43) varType -> . VAR
    (48) assign -> . ID EQUAL arrayDeclare COLON
    (49) assign -> . ID EQUAL declareMap COLON
    (50) assign -> . ID EQUAL declararSet COLON
    (51) assign -> . ID EQUAL javaScript_param COLON
    (27) sentencias_if -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (28) sentencias_if -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (29) sentencias_if_else -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (30) sentencias_if_else -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (31) sentencias_while -> . WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (32) sentencias_while -> . WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (34) impresion_vacio -> . ALERT LPAREN RPAREN

    ID              shift and go to state 9
    LET             shift and go to state 12
    VAR             shift and go to state 13
    ALERT           shift and go to state 18
    FUNCTION        shift and go to state 19
    CONST           shift and go to state 20
    IF              shift and go to state 21
    WHILE           shift and go to state 22

    sentencia                      shift and go to state 229
    callMethods                    shift and go to state 2
    callFunction                   shift and go to state 3
    varDeclaration                 shift and go to state 4
    controlExpression              shift and go to state 5
    impresion                      shift and go to state 6
    declareteFunction              shift and go to state 7
    assingOperadores               shift and go to state 8
    varType                        shift and go to state 10
    assign                         shift and go to state 11
    sentencias_if                  shift and go to state 14
    sentencias_if_else             shift and go to state 15
    sentencias_while               shift and go to state 16
    impresion_vacio                shift and go to state 17

state 206

    (27) sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN . LBLOCK sentencia RBLOCK
    (29) sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN . LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK

    LBLOCK          shift and go to state 230


state 207

    (28) sentencias_if -> IF LPAREN expression RPAREN LBLOCK sentencia . RBLOCK
    (30) sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia . RBLOCK ELSE LBLOCK sentencia RBLOCK

    RBLOCK          shift and go to state 231


state 208

    (31) sentencias_while -> WHILE LPAREN expression RPAREN LBLOCK sentencia . RBLOCK

    RBLOCK          shift and go to state 232


state 209

    (32) sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN . LBLOCK sentencia RBLOCK

    LBLOCK          shift and go to state 233


state 210

    (57) arrayDeclare -> NEW ARRAY LPAREN arrayValues RPAREN .

    COLON           reduce using rule 57 (arrayDeclare -> NEW ARRAY LPAREN arrayValues RPAREN .)
    COMMA           reduce using rule 57 (arrayDeclare -> NEW ARRAY LPAREN arrayValues RPAREN .)
    RBRACKET        reduce using rule 57 (arrayDeclare -> NEW ARRAY LPAREN arrayValues RPAREN .)


state 211

    (57) arrayDeclare -> NEW . ARRAY LPAREN arrayValues RPAREN
    (58) arrayDeclare -> NEW . ARRAY LPAREN RPAREN
    (97) declararSet -> NEW . SET LPAREN LBRACKET iterable RBRACKET RPAREN

    ARRAY           shift and go to state 96
    SET             shift and go to state 98


state 212

    (66) iterableMap -> LBRACKET . keyValue COMMA keyValue RBRACKET
    (67) iterableMap -> LBRACKET . keyValue COMMA keyValue RBRACKET COMMA iterableMap
    (55) arrayDeclare -> LBRACKET . RBRACKET
    (56) arrayDeclare -> LBRACKET . arrayValues RBRACKET
    (71) keyValue -> . javaScript_param
    (72) keyValue -> . iterableMap
    (73) keyValue -> . iterableArray
    (74) keyValue -> . iterableSet
    (75) keyValue -> . declareMap
    (76) keyValue -> . arrayDeclare
    (59) arrayValues -> . javaScript_param
    (60) arrayValues -> . javaScript_param COMMA arrayValues
    (35) javaScript_param -> . STRING
    (36) javaScript_param -> . NUM
    (37) javaScript_param -> . boolean
    (38) javaScript_param -> . ID
    (66) iterableMap -> . LBRACKET keyValue COMMA keyValue RBRACKET
    (67) iterableMap -> . LBRACKET keyValue COMMA keyValue RBRACKET COMMA iterableMap
    (77) iterableArray -> . arrayDeclare
    (78) iterableArray -> . arrayDeclare COMMA arrayDeclare
    (79) iterableSet -> . declararSet
    (80) iterableSet -> . declararSet COMMA declararSet
    (81) iterableSet -> .
    (64) declareMap -> . NEW MAP LPAREN LBRACKET iterable RBRACKET RPAREN
    (65) declareMap -> . NEW MAP LPAREN RPAREN
    (55) arrayDeclare -> . LBRACKET RBRACKET
    (56) arrayDeclare -> . LBRACKET arrayValues RBRACKET
    (57) arrayDeclare -> . NEW ARRAY LPAREN arrayValues RPAREN
    (58) arrayDeclare -> . NEW ARRAY LPAREN RPAREN
    (39) boolean -> . TRUE
    (40) boolean -> . FALSE
    (97) declararSet -> . NEW SET LPAREN LBRACKET iterable RBRACKET RPAREN

    RBRACKET        shift and go to state 93
    STRING          shift and go to state 45
    NUM             shift and go to state 46
    ID              shift and go to state 41
    LBRACKET        shift and go to state 212
    COMMA           reduce using rule 81 (iterableSet -> .)
    NEW             shift and go to state 241
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    keyValue                       shift and go to state 234
    iterableMap                    shift and go to state 235
    arrayValues                    shift and go to state 94
    javaScript_param               shift and go to state 236
    iterableArray                  shift and go to state 237
    iterableSet                    shift and go to state 238
    declareMap                     shift and go to state 239
    arrayDeclare                   shift and go to state 240
    boolean                        shift and go to state 47
    declararSet                    shift and go to state 218

state 213

    (64) declareMap -> NEW MAP LPAREN LBRACKET iterable . RBRACKET RPAREN

    RBRACKET        shift and go to state 242


state 214

    (68) iterable -> iterableMap .

    RBRACKET        reduce using rule 68 (iterable -> iterableMap .)


state 215

    (69) iterable -> iterableArray .

    RBRACKET        reduce using rule 69 (iterable -> iterableArray .)


state 216

    (70) iterable -> iterableSet .

    RBRACKET        reduce using rule 70 (iterable -> iterableSet .)


state 217

    (77) iterableArray -> arrayDeclare .
    (78) iterableArray -> arrayDeclare . COMMA arrayDeclare

    RBRACKET        reduce using rule 77 (iterableArray -> arrayDeclare .)
    COMMA           shift and go to state 243


state 218

    (79) iterableSet -> declararSet .
    (80) iterableSet -> declararSet . COMMA declararSet

  ! shift/reduce conflict for COMMA resolved as shift
    RBRACKET        reduce using rule 79 (iterableSet -> declararSet .)
    COMMA           shift and go to state 244

  ! COMMA           [ reduce using rule 79 (iterableSet -> declararSet .) ]


state 219

    (97) declararSet -> NEW SET LPAREN LBRACKET iterable . RBRACKET RPAREN

    RBRACKET        shift and go to state 245


state 220

    (86) declareteFunction -> varType ID EQUAL FUNCTION LPAREN params RPAREN .

    $end            reduce using rule 86 (declareteFunction -> varType ID EQUAL FUNCTION LPAREN params RPAREN .)
    RBLOCK          reduce using rule 86 (declareteFunction -> varType ID EQUAL FUNCTION LPAREN params RPAREN .)
    RETURN          reduce using rule 86 (declareteFunction -> varType ID EQUAL FUNCTION LPAREN params RPAREN .)


state 221

    (117) suma -> numOperadores PLUS NUM .

    RPAREN          reduce using rule 117 (suma -> numOperadores PLUS NUM .)
    AND             reduce using rule 117 (suma -> numOperadores PLUS NUM .)
    OR              reduce using rule 117 (suma -> numOperadores PLUS NUM .)
    NOT             reduce using rule 117 (suma -> numOperadores PLUS NUM .)
    $end            reduce using rule 117 (suma -> numOperadores PLUS NUM .)
    RBLOCK          reduce using rule 117 (suma -> numOperadores PLUS NUM .)
    RETURN          reduce using rule 117 (suma -> numOperadores PLUS NUM .)


state 222

    (116) suma -> numOperadores PLUS LPAREN numOperadores RPAREN .

    NUM             reduce using rule 116 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    MINUS           reduce using rule 116 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    PLUS            reduce using rule 116 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    TIMES           reduce using rule 116 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    DIVIDE          reduce using rule 116 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    PERIOD          reduce using rule 116 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    RPAREN          reduce using rule 116 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    AND             reduce using rule 116 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    OR              reduce using rule 116 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    NOT             reduce using rule 116 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    $end            reduce using rule 116 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    RBLOCK          reduce using rule 116 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    RETURN          reduce using rule 116 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)


state 223

    (120) restas -> numOperadores MINUS NUM .

    RPAREN          reduce using rule 120 (restas -> numOperadores MINUS NUM .)
    AND             reduce using rule 120 (restas -> numOperadores MINUS NUM .)
    OR              reduce using rule 120 (restas -> numOperadores MINUS NUM .)
    NOT             reduce using rule 120 (restas -> numOperadores MINUS NUM .)
    $end            reduce using rule 120 (restas -> numOperadores MINUS NUM .)
    RBLOCK          reduce using rule 120 (restas -> numOperadores MINUS NUM .)
    RETURN          reduce using rule 120 (restas -> numOperadores MINUS NUM .)


state 224

    (119) restas -> numOperadores MINUS LPAREN numOperadores RPAREN .

    NUM             reduce using rule 119 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    MINUS           reduce using rule 119 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    PLUS            reduce using rule 119 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    TIMES           reduce using rule 119 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    DIVIDE          reduce using rule 119 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    PERIOD          reduce using rule 119 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    RPAREN          reduce using rule 119 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    AND             reduce using rule 119 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    OR              reduce using rule 119 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    NOT             reduce using rule 119 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    $end            reduce using rule 119 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    RBLOCK          reduce using rule 119 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    RETURN          reduce using rule 119 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)


state 225

    (123) multiplicacion -> numOperadores TIMES NUM .

    RPAREN          reduce using rule 123 (multiplicacion -> numOperadores TIMES NUM .)
    AND             reduce using rule 123 (multiplicacion -> numOperadores TIMES NUM .)
    OR              reduce using rule 123 (multiplicacion -> numOperadores TIMES NUM .)
    NOT             reduce using rule 123 (multiplicacion -> numOperadores TIMES NUM .)
    $end            reduce using rule 123 (multiplicacion -> numOperadores TIMES NUM .)
    RBLOCK          reduce using rule 123 (multiplicacion -> numOperadores TIMES NUM .)
    RETURN          reduce using rule 123 (multiplicacion -> numOperadores TIMES NUM .)


state 226

    (122) multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .

    NUM             reduce using rule 122 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    MINUS           reduce using rule 122 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    PLUS            reduce using rule 122 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    TIMES           reduce using rule 122 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    DIVIDE          reduce using rule 122 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    PERIOD          reduce using rule 122 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    RPAREN          reduce using rule 122 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    AND             reduce using rule 122 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    OR              reduce using rule 122 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    NOT             reduce using rule 122 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    $end            reduce using rule 122 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    RBLOCK          reduce using rule 122 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    RETURN          reduce using rule 122 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)


state 227

    (126) divicion -> numOperadores DIVIDE NUM .

    RPAREN          reduce using rule 126 (divicion -> numOperadores DIVIDE NUM .)
    AND             reduce using rule 126 (divicion -> numOperadores DIVIDE NUM .)
    OR              reduce using rule 126 (divicion -> numOperadores DIVIDE NUM .)
    NOT             reduce using rule 126 (divicion -> numOperadores DIVIDE NUM .)
    $end            reduce using rule 126 (divicion -> numOperadores DIVIDE NUM .)
    RBLOCK          reduce using rule 126 (divicion -> numOperadores DIVIDE NUM .)
    RETURN          reduce using rule 126 (divicion -> numOperadores DIVIDE NUM .)


state 228

    (125) divicion -> numOperadores DIVIDE LPAREN numOperadores RPAREN .

    NUM             reduce using rule 125 (divicion -> numOperadores DIVIDE LPAREN numOperadores RPAREN .)
    MINUS           reduce using rule 125 (divicion -> numOperadores DIVIDE LPAREN numOperadores RPAREN .)
    PLUS            reduce using rule 125 (divicion -> numOperadores DIVIDE LPAREN numOperadores RPAREN .)
    TIMES           reduce using rule 125 (divicion -> numOperadores DIVIDE LPAREN numOperadores RPAREN .)
    DIVIDE          reduce using rule 125 (divicion -> numOperadores DIVIDE LPAREN numOperadores RPAREN .)
    PERIOD          reduce using rule 125 (divicion -> numOperadores DIVIDE LPAREN numOperadores RPAREN .)
    RPAREN          reduce using rule 125 (divicion -> numOperadores DIVIDE LPAREN numOperadores RPAREN .)
    AND             reduce using rule 125 (divicion -> numOperadores DIVIDE LPAREN numOperadores RPAREN .)
    OR              reduce using rule 125 (divicion -> numOperadores DIVIDE LPAREN numOperadores RPAREN .)
    NOT             reduce using rule 125 (divicion -> numOperadores DIVIDE LPAREN numOperadores RPAREN .)
    $end            reduce using rule 125 (divicion -> numOperadores DIVIDE LPAREN numOperadores RPAREN .)
    RBLOCK          reduce using rule 125 (divicion -> numOperadores DIVIDE LPAREN numOperadores RPAREN .)
    RETURN          reduce using rule 125 (divicion -> numOperadores DIVIDE LPAREN numOperadores RPAREN .)


state 229

    (87) sentencesCmpt -> LBLOCK sentencia . RBLOCK
    (88) sentencesCmpt -> LBLOCK sentencia . RETURN RBLOCK

    RBLOCK          shift and go to state 246
    RETURN          shift and go to state 247


state 230

    (27) sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK . sentencia RBLOCK
    (29) sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK . sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (1) sentencia -> . callMethods
    (2) sentencia -> . callFunction COLON
    (3) sentencia -> . varDeclaration
    (4) sentencia -> . controlExpression
    (5) sentencia -> . impresion
    (6) sentencia -> . declareteFunction
    (7) sentencia -> . assingOperadores
    (52) callMethods -> . ID methodArray COLON
    (53) callMethods -> . ID methodSet COLON
    (54) callMethods -> . ID methodMap COLON
    (89) callFunction -> . ID LPAREN params RPAREN
    (44) varDeclaration -> . varType assign
    (45) varDeclaration -> . assign
    (46) varDeclaration -> . LET ID COLON
    (47) varDeclaration -> . VAR ID COLON
    (11) controlExpression -> . sentencias_if
    (12) controlExpression -> . sentencias_if_else
    (13) controlExpression -> . sentencias_while
    (14) controlExpression -> . impresion
    (15) controlExpression -> . impresion_vacio
    (33) impresion -> . ALERT LPAREN expression RPAREN
    (84) declareteFunction -> . FUNCTION ID LPAREN params RPAREN
    (85) declareteFunction -> . FUNCTION ID LPAREN params RPAREN sentencesCmpt
    (86) declareteFunction -> . varType ID EQUAL FUNCTION LPAREN params RPAREN
    (10) assingOperadores -> . varType ID EQUAL inicializarOp
    (41) varType -> . LET
    (42) varType -> . CONST
    (43) varType -> . VAR
    (48) assign -> . ID EQUAL arrayDeclare COLON
    (49) assign -> . ID EQUAL declareMap COLON
    (50) assign -> . ID EQUAL declararSet COLON
    (51) assign -> . ID EQUAL javaScript_param COLON
    (27) sentencias_if -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (28) sentencias_if -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (29) sentencias_if_else -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (30) sentencias_if_else -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (31) sentencias_while -> . WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (32) sentencias_while -> . WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (34) impresion_vacio -> . ALERT LPAREN RPAREN

    ID              shift and go to state 9
    LET             shift and go to state 12
    VAR             shift and go to state 13
    ALERT           shift and go to state 18
    FUNCTION        shift and go to state 19
    CONST           shift and go to state 20
    IF              shift and go to state 21
    WHILE           shift and go to state 22

    sentencia                      shift and go to state 248
    callMethods                    shift and go to state 2
    callFunction                   shift and go to state 3
    varDeclaration                 shift and go to state 4
    controlExpression              shift and go to state 5
    impresion                      shift and go to state 6
    declareteFunction              shift and go to state 7
    assingOperadores               shift and go to state 8
    varType                        shift and go to state 10
    assign                         shift and go to state 11
    sentencias_if                  shift and go to state 14
    sentencias_if_else             shift and go to state 15
    sentencias_while               shift and go to state 16
    impresion_vacio                shift and go to state 17

state 231

    (28) sentencias_if -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK .
    (30) sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK . ELSE LBLOCK sentencia RBLOCK

    $end            reduce using rule 28 (sentencias_if -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK .)
    RBLOCK          reduce using rule 28 (sentencias_if -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK .)
    RETURN          reduce using rule 28 (sentencias_if -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK .)
    ELSE            shift and go to state 249


state 232

    (31) sentencias_while -> WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK .

    $end            reduce using rule 31 (sentencias_while -> WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK .)
    RBLOCK          reduce using rule 31 (sentencias_while -> WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK .)
    RETURN          reduce using rule 31 (sentencias_while -> WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK .)


state 233

    (32) sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK . sentencia RBLOCK
    (1) sentencia -> . callMethods
    (2) sentencia -> . callFunction COLON
    (3) sentencia -> . varDeclaration
    (4) sentencia -> . controlExpression
    (5) sentencia -> . impresion
    (6) sentencia -> . declareteFunction
    (7) sentencia -> . assingOperadores
    (52) callMethods -> . ID methodArray COLON
    (53) callMethods -> . ID methodSet COLON
    (54) callMethods -> . ID methodMap COLON
    (89) callFunction -> . ID LPAREN params RPAREN
    (44) varDeclaration -> . varType assign
    (45) varDeclaration -> . assign
    (46) varDeclaration -> . LET ID COLON
    (47) varDeclaration -> . VAR ID COLON
    (11) controlExpression -> . sentencias_if
    (12) controlExpression -> . sentencias_if_else
    (13) controlExpression -> . sentencias_while
    (14) controlExpression -> . impresion
    (15) controlExpression -> . impresion_vacio
    (33) impresion -> . ALERT LPAREN expression RPAREN
    (84) declareteFunction -> . FUNCTION ID LPAREN params RPAREN
    (85) declareteFunction -> . FUNCTION ID LPAREN params RPAREN sentencesCmpt
    (86) declareteFunction -> . varType ID EQUAL FUNCTION LPAREN params RPAREN
    (10) assingOperadores -> . varType ID EQUAL inicializarOp
    (41) varType -> . LET
    (42) varType -> . CONST
    (43) varType -> . VAR
    (48) assign -> . ID EQUAL arrayDeclare COLON
    (49) assign -> . ID EQUAL declareMap COLON
    (50) assign -> . ID EQUAL declararSet COLON
    (51) assign -> . ID EQUAL javaScript_param COLON
    (27) sentencias_if -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (28) sentencias_if -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (29) sentencias_if_else -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (30) sentencias_if_else -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (31) sentencias_while -> . WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (32) sentencias_while -> . WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (34) impresion_vacio -> . ALERT LPAREN RPAREN

    ID              shift and go to state 9
    LET             shift and go to state 12
    VAR             shift and go to state 13
    ALERT           shift and go to state 18
    FUNCTION        shift and go to state 19
    CONST           shift and go to state 20
    IF              shift and go to state 21
    WHILE           shift and go to state 22

    sentencia                      shift and go to state 250
    callMethods                    shift and go to state 2
    callFunction                   shift and go to state 3
    varDeclaration                 shift and go to state 4
    controlExpression              shift and go to state 5
    impresion                      shift and go to state 6
    declareteFunction              shift and go to state 7
    assingOperadores               shift and go to state 8
    varType                        shift and go to state 10
    assign                         shift and go to state 11
    sentencias_if                  shift and go to state 14
    sentencias_if_else             shift and go to state 15
    sentencias_while               shift and go to state 16
    impresion_vacio                shift and go to state 17

state 234

    (66) iterableMap -> LBRACKET keyValue . COMMA keyValue RBRACKET
    (67) iterableMap -> LBRACKET keyValue . COMMA keyValue RBRACKET COMMA iterableMap

    COMMA           shift and go to state 251


state 235

    (72) keyValue -> iterableMap .

    COMMA           reduce using rule 72 (keyValue -> iterableMap .)
    RBRACKET        reduce using rule 72 (keyValue -> iterableMap .)


state 236

    (71) keyValue -> javaScript_param .
    (59) arrayValues -> javaScript_param .
    (60) arrayValues -> javaScript_param . COMMA arrayValues

  ! shift/reduce conflict for COMMA resolved as shift
    RBRACKET        reduce using rule 59 (arrayValues -> javaScript_param .)
    COMMA           shift and go to state 145

  ! COMMA           [ reduce using rule 71 (keyValue -> javaScript_param .) ]


state 237

    (73) keyValue -> iterableArray .

    COMMA           reduce using rule 73 (keyValue -> iterableArray .)
    RBRACKET        reduce using rule 73 (keyValue -> iterableArray .)


state 238

    (74) keyValue -> iterableSet .

    COMMA           reduce using rule 74 (keyValue -> iterableSet .)
    RBRACKET        reduce using rule 74 (keyValue -> iterableSet .)


state 239

    (75) keyValue -> declareMap .

    COMMA           reduce using rule 75 (keyValue -> declareMap .)
    RBRACKET        reduce using rule 75 (keyValue -> declareMap .)


state 240

    (76) keyValue -> arrayDeclare .
    (77) iterableArray -> arrayDeclare .
    (78) iterableArray -> arrayDeclare . COMMA arrayDeclare

  ! reduce/reduce conflict for COMMA resolved using rule 76 (keyValue -> arrayDeclare .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 76 (keyValue -> arrayDeclare .)
  ! shift/reduce conflict for COMMA resolved as shift
    RBRACKET        reduce using rule 76 (keyValue -> arrayDeclare .)
    COMMA           shift and go to state 243

  ! COMMA           [ reduce using rule 76 (keyValue -> arrayDeclare .) ]
  ! COMMA           [ reduce using rule 77 (iterableArray -> arrayDeclare .) ]
  ! RBRACKET        [ reduce using rule 77 (iterableArray -> arrayDeclare .) ]


state 241

    (64) declareMap -> NEW . MAP LPAREN LBRACKET iterable RBRACKET RPAREN
    (65) declareMap -> NEW . MAP LPAREN RPAREN
    (57) arrayDeclare -> NEW . ARRAY LPAREN arrayValues RPAREN
    (58) arrayDeclare -> NEW . ARRAY LPAREN RPAREN
    (97) declararSet -> NEW . SET LPAREN LBRACKET iterable RBRACKET RPAREN

    MAP             shift and go to state 97
    ARRAY           shift and go to state 96
    SET             shift and go to state 98


state 242

    (64) declareMap -> NEW MAP LPAREN LBRACKET iterable RBRACKET . RPAREN

    RPAREN          shift and go to state 252


state 243

    (78) iterableArray -> arrayDeclare COMMA . arrayDeclare
    (55) arrayDeclare -> . LBRACKET RBRACKET
    (56) arrayDeclare -> . LBRACKET arrayValues RBRACKET
    (57) arrayDeclare -> . NEW ARRAY LPAREN arrayValues RPAREN
    (58) arrayDeclare -> . NEW ARRAY LPAREN RPAREN

    LBRACKET        shift and go to state 54
    NEW             shift and go to state 254

    arrayDeclare                   shift and go to state 253

state 244

    (80) iterableSet -> declararSet COMMA . declararSet
    (97) declararSet -> . NEW SET LPAREN LBRACKET iterable RBRACKET RPAREN

    NEW             shift and go to state 256

    declararSet                    shift and go to state 255

state 245

    (97) declararSet -> NEW SET LPAREN LBRACKET iterable RBRACKET . RPAREN

    RPAREN          shift and go to state 257


state 246

    (87) sentencesCmpt -> LBLOCK sentencia RBLOCK .

    $end            reduce using rule 87 (sentencesCmpt -> LBLOCK sentencia RBLOCK .)
    RBLOCK          reduce using rule 87 (sentencesCmpt -> LBLOCK sentencia RBLOCK .)
    RETURN          reduce using rule 87 (sentencesCmpt -> LBLOCK sentencia RBLOCK .)


state 247

    (88) sentencesCmpt -> LBLOCK sentencia RETURN . RBLOCK

    RBLOCK          shift and go to state 258


state 248

    (27) sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia . RBLOCK
    (29) sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia . RBLOCK ELSE LBLOCK sentencia RBLOCK

    RBLOCK          shift and go to state 259


state 249

    (30) sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE . LBLOCK sentencia RBLOCK

    LBLOCK          shift and go to state 260


state 250

    (32) sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia . RBLOCK

    RBLOCK          shift and go to state 261


state 251

    (66) iterableMap -> LBRACKET keyValue COMMA . keyValue RBRACKET
    (67) iterableMap -> LBRACKET keyValue COMMA . keyValue RBRACKET COMMA iterableMap
    (71) keyValue -> . javaScript_param
    (72) keyValue -> . iterableMap
    (73) keyValue -> . iterableArray
    (74) keyValue -> . iterableSet
    (75) keyValue -> . declareMap
    (76) keyValue -> . arrayDeclare
    (35) javaScript_param -> . STRING
    (36) javaScript_param -> . NUM
    (37) javaScript_param -> . boolean
    (38) javaScript_param -> . ID
    (66) iterableMap -> . LBRACKET keyValue COMMA keyValue RBRACKET
    (67) iterableMap -> . LBRACKET keyValue COMMA keyValue RBRACKET COMMA iterableMap
    (77) iterableArray -> . arrayDeclare
    (78) iterableArray -> . arrayDeclare COMMA arrayDeclare
    (79) iterableSet -> . declararSet
    (80) iterableSet -> . declararSet COMMA declararSet
    (81) iterableSet -> .
    (64) declareMap -> . NEW MAP LPAREN LBRACKET iterable RBRACKET RPAREN
    (65) declareMap -> . NEW MAP LPAREN RPAREN
    (55) arrayDeclare -> . LBRACKET RBRACKET
    (56) arrayDeclare -> . LBRACKET arrayValues RBRACKET
    (57) arrayDeclare -> . NEW ARRAY LPAREN arrayValues RPAREN
    (58) arrayDeclare -> . NEW ARRAY LPAREN RPAREN
    (39) boolean -> . TRUE
    (40) boolean -> . FALSE
    (97) declararSet -> . NEW SET LPAREN LBRACKET iterable RBRACKET RPAREN

    STRING          shift and go to state 45
    NUM             shift and go to state 46
    ID              shift and go to state 41
    LBRACKET        shift and go to state 212
    RBRACKET        reduce using rule 81 (iterableSet -> .)
    NEW             shift and go to state 241
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    keyValue                       shift and go to state 262
    iterableMap                    shift and go to state 235
    javaScript_param               shift and go to state 263
    iterableArray                  shift and go to state 237
    iterableSet                    shift and go to state 238
    declareMap                     shift and go to state 239
    arrayDeclare                   shift and go to state 240
    boolean                        shift and go to state 47
    declararSet                    shift and go to state 218

state 252

    (64) declareMap -> NEW MAP LPAREN LBRACKET iterable RBRACKET RPAREN .

    COLON           reduce using rule 64 (declareMap -> NEW MAP LPAREN LBRACKET iterable RBRACKET RPAREN .)
    COMMA           reduce using rule 64 (declareMap -> NEW MAP LPAREN LBRACKET iterable RBRACKET RPAREN .)
    RBRACKET        reduce using rule 64 (declareMap -> NEW MAP LPAREN LBRACKET iterable RBRACKET RPAREN .)


state 253

    (78) iterableArray -> arrayDeclare COMMA arrayDeclare .

    RBRACKET        reduce using rule 78 (iterableArray -> arrayDeclare COMMA arrayDeclare .)
    COMMA           reduce using rule 78 (iterableArray -> arrayDeclare COMMA arrayDeclare .)


state 254

    (57) arrayDeclare -> NEW . ARRAY LPAREN arrayValues RPAREN
    (58) arrayDeclare -> NEW . ARRAY LPAREN RPAREN

    ARRAY           shift and go to state 96


state 255

    (80) iterableSet -> declararSet COMMA declararSet .

    RBRACKET        reduce using rule 80 (iterableSet -> declararSet COMMA declararSet .)
    COMMA           reduce using rule 80 (iterableSet -> declararSet COMMA declararSet .)


state 256

    (97) declararSet -> NEW . SET LPAREN LBRACKET iterable RBRACKET RPAREN

    SET             shift and go to state 98


state 257

    (97) declararSet -> NEW SET LPAREN LBRACKET iterable RBRACKET RPAREN .

    COLON           reduce using rule 97 (declararSet -> NEW SET LPAREN LBRACKET iterable RBRACKET RPAREN .)
    COMMA           reduce using rule 97 (declararSet -> NEW SET LPAREN LBRACKET iterable RBRACKET RPAREN .)
    RBRACKET        reduce using rule 97 (declararSet -> NEW SET LPAREN LBRACKET iterable RBRACKET RPAREN .)


state 258

    (88) sentencesCmpt -> LBLOCK sentencia RETURN RBLOCK .

    $end            reduce using rule 88 (sentencesCmpt -> LBLOCK sentencia RETURN RBLOCK .)
    RBLOCK          reduce using rule 88 (sentencesCmpt -> LBLOCK sentencia RETURN RBLOCK .)
    RETURN          reduce using rule 88 (sentencesCmpt -> LBLOCK sentencia RETURN RBLOCK .)


state 259

    (27) sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK .
    (29) sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK . ELSE LBLOCK sentencia RBLOCK

    $end            reduce using rule 27 (sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK .)
    RBLOCK          reduce using rule 27 (sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK .)
    RETURN          reduce using rule 27 (sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK .)
    ELSE            shift and go to state 264


state 260

    (30) sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK . sentencia RBLOCK
    (1) sentencia -> . callMethods
    (2) sentencia -> . callFunction COLON
    (3) sentencia -> . varDeclaration
    (4) sentencia -> . controlExpression
    (5) sentencia -> . impresion
    (6) sentencia -> . declareteFunction
    (7) sentencia -> . assingOperadores
    (52) callMethods -> . ID methodArray COLON
    (53) callMethods -> . ID methodSet COLON
    (54) callMethods -> . ID methodMap COLON
    (89) callFunction -> . ID LPAREN params RPAREN
    (44) varDeclaration -> . varType assign
    (45) varDeclaration -> . assign
    (46) varDeclaration -> . LET ID COLON
    (47) varDeclaration -> . VAR ID COLON
    (11) controlExpression -> . sentencias_if
    (12) controlExpression -> . sentencias_if_else
    (13) controlExpression -> . sentencias_while
    (14) controlExpression -> . impresion
    (15) controlExpression -> . impresion_vacio
    (33) impresion -> . ALERT LPAREN expression RPAREN
    (84) declareteFunction -> . FUNCTION ID LPAREN params RPAREN
    (85) declareteFunction -> . FUNCTION ID LPAREN params RPAREN sentencesCmpt
    (86) declareteFunction -> . varType ID EQUAL FUNCTION LPAREN params RPAREN
    (10) assingOperadores -> . varType ID EQUAL inicializarOp
    (41) varType -> . LET
    (42) varType -> . CONST
    (43) varType -> . VAR
    (48) assign -> . ID EQUAL arrayDeclare COLON
    (49) assign -> . ID EQUAL declareMap COLON
    (50) assign -> . ID EQUAL declararSet COLON
    (51) assign -> . ID EQUAL javaScript_param COLON
    (27) sentencias_if -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (28) sentencias_if -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (29) sentencias_if_else -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (30) sentencias_if_else -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (31) sentencias_while -> . WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (32) sentencias_while -> . WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (34) impresion_vacio -> . ALERT LPAREN RPAREN

    ID              shift and go to state 9
    LET             shift and go to state 12
    VAR             shift and go to state 13
    ALERT           shift and go to state 18
    FUNCTION        shift and go to state 19
    CONST           shift and go to state 20
    IF              shift and go to state 21
    WHILE           shift and go to state 22

    sentencia                      shift and go to state 265
    callMethods                    shift and go to state 2
    callFunction                   shift and go to state 3
    varDeclaration                 shift and go to state 4
    controlExpression              shift and go to state 5
    impresion                      shift and go to state 6
    declareteFunction              shift and go to state 7
    assingOperadores               shift and go to state 8
    varType                        shift and go to state 10
    assign                         shift and go to state 11
    sentencias_if                  shift and go to state 14
    sentencias_if_else             shift and go to state 15
    sentencias_while               shift and go to state 16
    impresion_vacio                shift and go to state 17

state 261

    (32) sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK .

    $end            reduce using rule 32 (sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK .)
    RBLOCK          reduce using rule 32 (sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK .)
    RETURN          reduce using rule 32 (sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK .)


state 262

    (66) iterableMap -> LBRACKET keyValue COMMA keyValue . RBRACKET
    (67) iterableMap -> LBRACKET keyValue COMMA keyValue . RBRACKET COMMA iterableMap

    RBRACKET        shift and go to state 266


state 263

    (71) keyValue -> javaScript_param .

    RBRACKET        reduce using rule 71 (keyValue -> javaScript_param .)
    COMMA           reduce using rule 71 (keyValue -> javaScript_param .)


state 264

    (29) sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE . LBLOCK sentencia RBLOCK

    LBLOCK          shift and go to state 267


state 265

    (30) sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia . RBLOCK

    RBLOCK          shift and go to state 268


state 266

    (66) iterableMap -> LBRACKET keyValue COMMA keyValue RBRACKET .
    (67) iterableMap -> LBRACKET keyValue COMMA keyValue RBRACKET . COMMA iterableMap

  ! shift/reduce conflict for COMMA resolved as shift
    RBRACKET        reduce using rule 66 (iterableMap -> LBRACKET keyValue COMMA keyValue RBRACKET .)
    COMMA           shift and go to state 269

  ! COMMA           [ reduce using rule 66 (iterableMap -> LBRACKET keyValue COMMA keyValue RBRACKET .) ]


state 267

    (29) sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK . sentencia RBLOCK
    (1) sentencia -> . callMethods
    (2) sentencia -> . callFunction COLON
    (3) sentencia -> . varDeclaration
    (4) sentencia -> . controlExpression
    (5) sentencia -> . impresion
    (6) sentencia -> . declareteFunction
    (7) sentencia -> . assingOperadores
    (52) callMethods -> . ID methodArray COLON
    (53) callMethods -> . ID methodSet COLON
    (54) callMethods -> . ID methodMap COLON
    (89) callFunction -> . ID LPAREN params RPAREN
    (44) varDeclaration -> . varType assign
    (45) varDeclaration -> . assign
    (46) varDeclaration -> . LET ID COLON
    (47) varDeclaration -> . VAR ID COLON
    (11) controlExpression -> . sentencias_if
    (12) controlExpression -> . sentencias_if_else
    (13) controlExpression -> . sentencias_while
    (14) controlExpression -> . impresion
    (15) controlExpression -> . impresion_vacio
    (33) impresion -> . ALERT LPAREN expression RPAREN
    (84) declareteFunction -> . FUNCTION ID LPAREN params RPAREN
    (85) declareteFunction -> . FUNCTION ID LPAREN params RPAREN sentencesCmpt
    (86) declareteFunction -> . varType ID EQUAL FUNCTION LPAREN params RPAREN
    (10) assingOperadores -> . varType ID EQUAL inicializarOp
    (41) varType -> . LET
    (42) varType -> . CONST
    (43) varType -> . VAR
    (48) assign -> . ID EQUAL arrayDeclare COLON
    (49) assign -> . ID EQUAL declareMap COLON
    (50) assign -> . ID EQUAL declararSet COLON
    (51) assign -> . ID EQUAL javaScript_param COLON
    (27) sentencias_if -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (28) sentencias_if -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (29) sentencias_if_else -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (30) sentencias_if_else -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (31) sentencias_while -> . WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (32) sentencias_while -> . WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (34) impresion_vacio -> . ALERT LPAREN RPAREN

    ID              shift and go to state 9
    LET             shift and go to state 12
    VAR             shift and go to state 13
    ALERT           shift and go to state 18
    FUNCTION        shift and go to state 19
    CONST           shift and go to state 20
    IF              shift and go to state 21
    WHILE           shift and go to state 22

    sentencia                      shift and go to state 270
    callMethods                    shift and go to state 2
    callFunction                   shift and go to state 3
    varDeclaration                 shift and go to state 4
    controlExpression              shift and go to state 5
    impresion                      shift and go to state 6
    declareteFunction              shift and go to state 7
    assingOperadores               shift and go to state 8
    varType                        shift and go to state 10
    assign                         shift and go to state 11
    sentencias_if                  shift and go to state 14
    sentencias_if_else             shift and go to state 15
    sentencias_while               shift and go to state 16
    impresion_vacio                shift and go to state 17

state 268

    (30) sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK .

    $end            reduce using rule 30 (sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK .)
    RBLOCK          reduce using rule 30 (sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK .)
    RETURN          reduce using rule 30 (sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK .)


state 269

    (67) iterableMap -> LBRACKET keyValue COMMA keyValue RBRACKET COMMA . iterableMap
    (66) iterableMap -> . LBRACKET keyValue COMMA keyValue RBRACKET
    (67) iterableMap -> . LBRACKET keyValue COMMA keyValue RBRACKET COMMA iterableMap

    LBRACKET        shift and go to state 271

    iterableMap                    shift and go to state 272

state 270

    (29) sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia . RBLOCK

    RBLOCK          shift and go to state 273


state 271

    (66) iterableMap -> LBRACKET . keyValue COMMA keyValue RBRACKET
    (67) iterableMap -> LBRACKET . keyValue COMMA keyValue RBRACKET COMMA iterableMap
    (71) keyValue -> . javaScript_param
    (72) keyValue -> . iterableMap
    (73) keyValue -> . iterableArray
    (74) keyValue -> . iterableSet
    (75) keyValue -> . declareMap
    (76) keyValue -> . arrayDeclare
    (35) javaScript_param -> . STRING
    (36) javaScript_param -> . NUM
    (37) javaScript_param -> . boolean
    (38) javaScript_param -> . ID
    (66) iterableMap -> . LBRACKET keyValue COMMA keyValue RBRACKET
    (67) iterableMap -> . LBRACKET keyValue COMMA keyValue RBRACKET COMMA iterableMap
    (77) iterableArray -> . arrayDeclare
    (78) iterableArray -> . arrayDeclare COMMA arrayDeclare
    (79) iterableSet -> . declararSet
    (80) iterableSet -> . declararSet COMMA declararSet
    (81) iterableSet -> .
    (64) declareMap -> . NEW MAP LPAREN LBRACKET iterable RBRACKET RPAREN
    (65) declareMap -> . NEW MAP LPAREN RPAREN
    (55) arrayDeclare -> . LBRACKET RBRACKET
    (56) arrayDeclare -> . LBRACKET arrayValues RBRACKET
    (57) arrayDeclare -> . NEW ARRAY LPAREN arrayValues RPAREN
    (58) arrayDeclare -> . NEW ARRAY LPAREN RPAREN
    (39) boolean -> . TRUE
    (40) boolean -> . FALSE
    (97) declararSet -> . NEW SET LPAREN LBRACKET iterable RBRACKET RPAREN

    STRING          shift and go to state 45
    NUM             shift and go to state 46
    ID              shift and go to state 41
    LBRACKET        shift and go to state 212
    COMMA           reduce using rule 81 (iterableSet -> .)
    NEW             shift and go to state 241
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    keyValue                       shift and go to state 234
    iterableMap                    shift and go to state 235
    javaScript_param               shift and go to state 263
    iterableArray                  shift and go to state 237
    iterableSet                    shift and go to state 238
    declareMap                     shift and go to state 239
    arrayDeclare                   shift and go to state 240
    boolean                        shift and go to state 47
    declararSet                    shift and go to state 218

state 272

    (67) iterableMap -> LBRACKET keyValue COMMA keyValue RBRACKET COMMA iterableMap .

    RBRACKET        reduce using rule 67 (iterableMap -> LBRACKET keyValue COMMA keyValue RBRACKET COMMA iterableMap .)
    COMMA           reduce using rule 67 (iterableMap -> LBRACKET keyValue COMMA keyValue RBRACKET COMMA iterableMap .)


state 273

    (29) sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK .

    $end            reduce using rule 29 (sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK .)
    RBLOCK          reduce using rule 29 (sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK .)
    RETURN          reduce using rule 29 (sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 12 resolved as shift
WARNING: shift/reduce conflict for ID in state 13 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 34 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 34 resolved as shift
WARNING: shift/reduce conflict for NUM in state 34 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 34 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 36 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 36 resolved as shift
WARNING: shift/reduce conflict for NUM in state 36 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 37 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 37 resolved as shift
WARNING: shift/reduce conflict for NUM in state 37 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 63 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 63 resolved as shift
WARNING: shift/reduce conflict for NUM in state 63 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 73 resolved as shift
WARNING: shift/reduce conflict for NUM in state 73 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 75 resolved as shift
WARNING: shift/reduce conflict for NUM in state 75 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 76 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 76 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 76 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 76 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 76 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 76 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 76 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 76 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 76 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 76 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 76 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 76 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 76 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 76 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 76 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 76 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 77 resolved as shift
WARNING: shift/reduce conflict for NUM in state 77 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 78 resolved as shift
WARNING: shift/reduce conflict for NUM in state 78 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 79 resolved as shift
WARNING: shift/reduce conflict for NUM in state 79 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 80 resolved as shift
WARNING: shift/reduce conflict for NUM in state 80 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 81 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 127 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 136 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 136 resolved as shift
WARNING: shift/reduce conflict for NUM in state 136 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 142 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 142 resolved as shift
WARNING: shift/reduce conflict for NUM in state 142 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 218 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 236 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 240 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 266 resolved as shift
WARNING: reduce/reduce conflict in state 6 resolved using rule (sentencia -> impresion)
WARNING: rejected rule (controlExpression -> impresion) in state 6
WARNING: reduce/reduce conflict in state 76 resolved using rule (suma -> numOperadores)
WARNING: rejected rule (restas -> numOperadores) in state 76
WARNING: reduce/reduce conflict in state 76 resolved using rule (suma -> numOperadores)
WARNING: rejected rule (multiplicacion -> numOperadores) in state 76
WARNING: reduce/reduce conflict in state 76 resolved using rule (suma -> numOperadores)
WARNING: rejected rule (divicion -> numOperadores) in state 76
WARNING: reduce/reduce conflict in state 77 resolved using rule (operacionesMath -> suma)
WARNING: rejected rule (numNegative -> <empty>) in state 77
WARNING: reduce/reduce conflict in state 78 resolved using rule (operacionesMath -> restas)
WARNING: rejected rule (numNegative -> <empty>) in state 78
WARNING: reduce/reduce conflict in state 79 resolved using rule (operacionesMath -> multiplicacion)
WARNING: rejected rule (numNegative -> <empty>) in state 79
WARNING: reduce/reduce conflict in state 80 resolved using rule (operacionesMath -> divicion)
WARNING: rejected rule (numNegative -> <empty>) in state 80
WARNING: reduce/reduce conflict in state 125 resolved using rule (enteros -> NUM)
WARNING: rejected rule (numNegative -> MINUS NUM) in state 125
WARNING: reduce/reduce conflict in state 154 resolved using rule (methodMap -> PERIOD CLEAR LPAREN RPAREN)
WARNING: rejected rule (methodSet -> PERIOD CLEAR LPAREN RPAREN) in state 154
WARNING: reduce/reduce conflict in state 166 resolved using rule (suma -> numOperadores PLUS NUM)
WARNING: rejected rule (enteros -> NUM) in state 166
WARNING: reduce/reduce conflict in state 170 resolved using rule (restas -> numOperadores MINUS NUM)
WARNING: rejected rule (enteros -> NUM) in state 170
WARNING: reduce/reduce conflict in state 174 resolved using rule (multiplicacion -> numOperadores TIMES NUM)
WARNING: rejected rule (enteros -> NUM) in state 174
WARNING: reduce/reduce conflict in state 178 resolved using rule (divicion -> numOperadores DIVIDE NUM)
WARNING: rejected rule (enteros -> NUM) in state 178
WARNING: reduce/reduce conflict in state 240 resolved using rule (keyValue -> arrayDeclare)
WARNING: rejected rule (iterableArray -> arrayDeclare) in state 240
WARNING: Rule (controlExpression -> impresion) is never reduced
WARNING: Rule (methodSet -> PERIOD CLEAR LPAREN RPAREN) is never reduced
