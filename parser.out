Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> sentencia
Rule 1     sentencia -> callMethods
Rule 2     sentencia -> callFunction COLON
Rule 3     sentencia -> varDeclaration
Rule 4     sentencia -> controlExpression
Rule 5     sentencia -> declareteFunction
Rule 6     expression -> conditionalEspecifico
Rule 7     expression -> inicializarOp
Rule 8     controlExpression -> sentencias_if
Rule 9     controlExpression -> sentencias_if_else
Rule 10    controlExpression -> sentencias_while
Rule 11    controlExpression -> impresion
Rule 12    controlExpression -> impresion_vacio
Rule 13    opConditional -> ISEQUAL
Rule 14    opConditional -> IS_NOT_IDENTICAL
Rule 15    opConditional -> IS_IDENTICAL
Rule 16    opConditional -> GREATER
Rule 17    opConditional -> GREATEREQUAL
Rule 18    opConditional -> LESS
Rule 19    opConditional -> LESSEQUAL
Rule 20    opConditional -> boolean
Rule 21    operadorLogical -> AND
Rule 22    operadorLogical -> OR
Rule 23    operadorLogical -> NOT
Rule 24    sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias
Rule 25    sentencias_if -> IF LPAREN expression RPAREN cuerpo_de_sentencias
Rule 26    sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias
Rule 27    sentencias_if_else -> IF LPAREN expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias
Rule 28    cuerpo_de_sentencias -> LBLOCK sentencia RBLOCK
Rule 29    cuerpo_de_sentencias -> LBLOCK RBLOCK
Rule 30    sentencias_while -> WHILE LPAREN expression RPAREN cuerpo_de_sentencias
Rule 31    sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias
Rule 32    impresion -> ALERT LPAREN valores_de_impresion RPAREN COLON
Rule 33    valores_de_impresion -> inicializarOp
Rule 34    valores_de_impresion -> javaScript_param
Rule 35    valores_de_impresion -> callFunction
Rule 36    valores_de_impresion -> estructuras_datos
Rule 37    valores_de_impresion -> return_ops
Rule 38    impresion_vacio -> ALERT LPAREN RPAREN COLON
Rule 39    javaScript_param -> STRING
Rule 40    javaScript_param -> inicializarOp
Rule 41    javaScript_param -> boolean
Rule 42    javaScript_param -> ID
Rule 43    boolean -> TRUE
Rule 44    boolean -> FALSE
Rule 45    varType_let -> LET
Rule 46    varType_let -> VAR
Rule 47    varType -> varType_let
Rule 48    varType -> CONST
Rule 49    varDeclaration -> varType assign COLON
Rule 50    varDeclaration -> assign COLON
Rule 51    varDeclaration -> varType_let ID COLON
Rule 52    varDeclaration -> varType_let assign COLON
Rule 53    assign -> ID EQUAL estructuras_datos
Rule 54    assign -> ID EQUAL javaScript_param
Rule 55    assign -> ID EQUAL
Rule 56    estructuras_datos -> arrayDeclare
Rule 57    estructuras_datos -> declararSet
Rule 58    estructuras_datos -> declareMap
Rule 59    callMethods -> ID methodArray COLON
Rule 60    callMethods -> ID methodSet COLON
Rule 61    callMethods -> ID methodMap COLON
Rule 62    arrayDeclare -> LBRACKET RBRACKET
Rule 63    arrayDeclare -> LBRACKET arrayValues RBRACKET
Rule 64    arrayDeclare -> NEW ARRAY LPAREN arrayValues RPAREN
Rule 65    arrayDeclare -> NEW ARRAY LPAREN RPAREN
Rule 66    arrayValues -> javaScript_param
Rule 67    arrayValues -> javaScript_param COMMA arrayValues
Rule 68    methodArray -> PERIOD PUSH LPAREN javaScript_param RPAREN
Rule 69    methodArray -> PERIOD UNSHIFT LPAREN arrayValues RPAREN
Rule 70    methodArray -> PERIOD POP LPAREN RPAREN
Rule 71    declareMap -> NEW MAP LPAREN LBRACKET iterableMap RBRACKET RPAREN
Rule 72    declareMap -> NEW MAP LPAREN RPAREN
Rule 73    iterableMap -> LBRACKET keyValue COMMA keyValue RBRACKET
Rule 74    iterableMap -> LBRACKET keyValue COMMA keyValue RBRACKET COMMA iterableMap
Rule 75    keyValue -> javaScript_param
Rule 76    keyValue -> declararSet
Rule 77    keyValue -> declareMap
Rule 78    keyValue -> arrayDeclare
Rule 79    iterableSet -> keyValue
Rule 80    iterableSet -> keyValue COMMA iterableSet
Rule 81    iterableSet -> <empty>
Rule 82    methodMap -> PERIOD CLEAR LPAREN RPAREN
Rule 83    methodMap -> PERIOD SIZE
Rule 84    declareteFunction -> FUNCTION ID LPAREN params RPAREN sentencesCmpt
Rule 85    declareteFunction -> FUNCTION ID LPAREN RPAREN sentencesCmpt
Rule 86    sentencesCmpt -> LBLOCK sentencia RBLOCK
Rule 87    sentencesCmpt -> LBLOCK RBLOCK
Rule 88    sentencesCmpt -> LBLOCK RETURN valores_de_impresion COLON RBLOCK
Rule 89    sentencesCmpt -> LBLOCK sentencia RETURN valores_de_impresion COLON RBLOCK
Rule 90    return_ops -> javaScript_param
Rule 91    return_ops -> javaScript_param operadores_mat return_ops
Rule 92    operadores_mat -> PLUS
Rule 93    operadores_mat -> MINUS
Rule 94    operadores_mat -> DIVIDE
Rule 95    operadores_mat -> TIMES
Rule 96    callFunction -> ID LPAREN params RPAREN
Rule 97    callFunction -> ID LPAREN RPAREN
Rule 98    params -> javaScript_param
Rule 99    params -> javaScript_param COMMA params
Rule 100   args -> javaScript_param
Rule 101   args -> javaScript_param COMMA args
Rule 102   declararSet -> NEW SET LPAREN RPAREN
Rule 103   declararSet -> NEW SET LPAREN LBRACKET iterableSet RBRACKET RPAREN
Rule 104   methodSet -> PERIOD ADD LPAREN javaScript_param RPAREN
Rule 105   methodSet -> PERIOD DELETE LPAREN javaScript_param RPAREN
Rule 106   methodSet -> PERIOD CLEAR LPAREN RPAREN
Rule 107   inicializarOp -> MINUS operacionesMath
Rule 108   inicializarOp -> PLUS operacionesMath
Rule 109   inicializarOp -> operacionesMath
Rule 110   inicializarOp -> numOperadores
Rule 111   operacionesMath -> suma
Rule 112   operacionesMath -> resta
Rule 113   operacionesMath -> multiplicacion
Rule 114   operacionesMath -> divicion
Rule 115   suma -> numOperadores PLUS inicializarOp
Rule 116   suma -> numOperadores PLUS LPAREN inicializarOp RPAREN
Rule 117   suma -> numOperadores PLUS suma
Rule 118   suma -> numOperadores PLUS LPAREN inicializarOp RPAREN suma
Rule 119   resta -> numOperadores MINUS inicializarOp
Rule 120   resta -> numOperadores MINUS LPAREN inicializarOp RPAREN
Rule 121   resta -> numOperadores MINUS resta
Rule 122   resta -> numOperadores MINUS LPAREN inicializarOp RPAREN resta
Rule 123   multiplicacion -> numOperadores TIMES LPAREN inicializarOp RPAREN
Rule 124   multiplicacion -> numOperadores TIMES inicializarOp
Rule 125   multiplicacion -> numOperadores TIMES multiplicacion
Rule 126   divicion -> numOperadores DIVIDE LPAREN inicializarOp RPAREN
Rule 127   divicion -> numOperadores DIVIDE inicializarOp
Rule 128   divicion -> numOperadores DIVIDE divicion
Rule 129   numOperadores -> enteros
Rule 130   numOperadores -> decimales
Rule 131   enteros -> NUM
Rule 132   enteros -> numNegative
Rule 133   numNegative -> MINUS NUM
Rule 134   numNegative -> <empty>
Rule 135   decimales -> enteros PERIOD NUM
Rule 136   conditionalEspecifico -> ID opConditional dataCondi
Rule 137   conditionalEspecifico -> NUM opConditional NUM
Rule 138   conditionalEspecifico -> STRING opConditional STRING
Rule 139   dataCondi -> STRING
Rule 140   dataCondi -> NUM

Terminals, with rules where they appear

ADD                  : 104
ALERT                : 32 38
AND                  : 21
ARRAY                : 64 65
CLEAR                : 82 106
COLON                : 2 32 38 49 50 51 52 59 60 61 88 89
COMMA                : 67 73 74 74 80 99 101
CONST                : 48
DELETE               : 105
DIVIDE               : 94 126 127 128
ELSE                 : 26 27
EQUAL                : 53 54 55
FALSE                : 44
FUNCTION             : 84 85
GREATER              : 16
GREATEREQUAL         : 17
ID                   : 42 51 53 54 55 59 60 61 84 85 96 97 136
IF                   : 24 25 26 27
ISEQUAL              : 13
IS_IDENTICAL         : 15
IS_NOT_IDENTICAL     : 14
LBLOCK               : 28 29 86 87 88 89
LBRACKET             : 62 63 71 73 74 103
LESS                 : 18
LESSEQUAL            : 19
LET                  : 45
LPAREN               : 24 25 26 27 30 31 32 38 64 65 68 69 70 71 72 82 84 85 96 97 102 103 104 105 106 116 118 120 122 123 126
MAP                  : 71 72
MINUS                : 93 107 119 120 121 122 133
NEW                  : 64 65 71 72 102 103
NOT                  : 23
NUM                  : 131 133 135 137 137 140
OR                   : 22
PERIOD               : 68 69 70 82 83 104 105 106 135
PLUS                 : 92 108 115 116 117 118
POP                  : 70
PUSH                 : 68
RBLOCK               : 28 29 86 87 88 89
RBRACKET             : 62 63 71 73 74 103
RETURN               : 88 89
RPAREN               : 24 25 26 27 30 31 32 38 64 65 68 69 70 71 72 82 84 85 96 97 102 103 104 105 106 116 118 120 122 123 126
SET                  : 102 103
SIZE                 : 83
STRING               : 39 138 138 139
TIMES                : 95 123 124 125
TRUE                 : 43
UNSHIFT              : 69
VAR                  : 46
WHILE                : 30 31
error                : 

Nonterminals, with rules where they appear

args                 : 101
arrayDeclare         : 56 78
arrayValues          : 63 64 67 69
assign               : 49 50 52
boolean              : 20 41
callFunction         : 2 35
callMethods          : 1
conditionalEspecifico : 6
controlExpression    : 4
cuerpo_de_sentencias : 24 25 26 26 27 27 30 31
dataCondi            : 136
decimales            : 130
declararSet          : 57 76
declareMap           : 58 77
declareteFunction    : 5
divicion             : 114 128
enteros              : 129 135
estructuras_datos    : 36 53
expression           : 24 24 25 26 26 27 30 31 31
impresion            : 11
impresion_vacio      : 12
inicializarOp        : 7 33 40 115 116 118 119 120 122 123 124 126 127
iterableMap          : 71 74
iterableSet          : 80 103
javaScript_param     : 34 54 66 67 68 75 90 91 98 99 100 101 104 105
keyValue             : 73 73 74 74 79 80
methodArray          : 59
methodMap            : 61
methodSet            : 60
multiplicacion       : 113 125
numNegative          : 132
numOperadores        : 110 115 116 117 118 119 120 121 122 123 124 125 126 127 128
opConditional        : 136 137 138
operacionesMath      : 107 108 109
operadorLogical      : 24 26 31
operadores_mat       : 91
params               : 84 96 99
resta                : 112 121 122
return_ops           : 37 91
sentencesCmpt        : 84 85
sentencia            : 28 86 89 0
sentencias_if        : 8
sentencias_if_else   : 9
sentencias_while     : 10
suma                 : 111 117 118
valores_de_impresion : 32 88 89
varDeclaration       : 3
varType              : 49
varType_let          : 47 51 52

Parsing method: LALR

state 0

    (0) S' -> . sentencia
    (1) sentencia -> . callMethods
    (2) sentencia -> . callFunction COLON
    (3) sentencia -> . varDeclaration
    (4) sentencia -> . controlExpression
    (5) sentencia -> . declareteFunction
    (59) callMethods -> . ID methodArray COLON
    (60) callMethods -> . ID methodSet COLON
    (61) callMethods -> . ID methodMap COLON
    (96) callFunction -> . ID LPAREN params RPAREN
    (97) callFunction -> . ID LPAREN RPAREN
    (49) varDeclaration -> . varType assign COLON
    (50) varDeclaration -> . assign COLON
    (51) varDeclaration -> . varType_let ID COLON
    (52) varDeclaration -> . varType_let assign COLON
    (8) controlExpression -> . sentencias_if
    (9) controlExpression -> . sentencias_if_else
    (10) controlExpression -> . sentencias_while
    (11) controlExpression -> . impresion
    (12) controlExpression -> . impresion_vacio
    (84) declareteFunction -> . FUNCTION ID LPAREN params RPAREN sentencesCmpt
    (85) declareteFunction -> . FUNCTION ID LPAREN RPAREN sentencesCmpt
    (47) varType -> . varType_let
    (48) varType -> . CONST
    (53) assign -> . ID EQUAL estructuras_datos
    (54) assign -> . ID EQUAL javaScript_param
    (55) assign -> . ID EQUAL
    (45) varType_let -> . LET
    (46) varType_let -> . VAR
    (24) sentencias_if -> . IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias
    (25) sentencias_if -> . IF LPAREN expression RPAREN cuerpo_de_sentencias
    (26) sentencias_if_else -> . IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias
    (27) sentencias_if_else -> . IF LPAREN expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias
    (30) sentencias_while -> . WHILE LPAREN expression RPAREN cuerpo_de_sentencias
    (31) sentencias_while -> . WHILE LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias
    (32) impresion -> . ALERT LPAREN valores_de_impresion RPAREN COLON
    (38) impresion_vacio -> . ALERT LPAREN RPAREN COLON

    ID              shift and go to state 7
    FUNCTION        shift and go to state 16
    CONST           shift and go to state 17
    LET             shift and go to state 18
    VAR             shift and go to state 19
    IF              shift and go to state 20
    WHILE           shift and go to state 21
    ALERT           shift and go to state 22

    sentencia                      shift and go to state 1
    callMethods                    shift and go to state 2
    callFunction                   shift and go to state 3
    varDeclaration                 shift and go to state 4
    controlExpression              shift and go to state 5
    declareteFunction              shift and go to state 6
    varType                        shift and go to state 8
    assign                         shift and go to state 9
    varType_let                    shift and go to state 10
    sentencias_if                  shift and go to state 11
    sentencias_if_else             shift and go to state 12
    sentencias_while               shift and go to state 13
    impresion                      shift and go to state 14
    impresion_vacio                shift and go to state 15

state 1

    (0) S' -> sentencia .



state 2

    (1) sentencia -> callMethods .

    $end            reduce using rule 1 (sentencia -> callMethods .)
    RBLOCK          reduce using rule 1 (sentencia -> callMethods .)
    RETURN          reduce using rule 1 (sentencia -> callMethods .)


state 3

    (2) sentencia -> callFunction . COLON

    COLON           shift and go to state 23


state 4

    (3) sentencia -> varDeclaration .

    $end            reduce using rule 3 (sentencia -> varDeclaration .)
    RBLOCK          reduce using rule 3 (sentencia -> varDeclaration .)
    RETURN          reduce using rule 3 (sentencia -> varDeclaration .)


state 5

    (4) sentencia -> controlExpression .

    $end            reduce using rule 4 (sentencia -> controlExpression .)
    RBLOCK          reduce using rule 4 (sentencia -> controlExpression .)
    RETURN          reduce using rule 4 (sentencia -> controlExpression .)


state 6

    (5) sentencia -> declareteFunction .

    $end            reduce using rule 5 (sentencia -> declareteFunction .)
    RBLOCK          reduce using rule 5 (sentencia -> declareteFunction .)
    RETURN          reduce using rule 5 (sentencia -> declareteFunction .)


state 7

    (59) callMethods -> ID . methodArray COLON
    (60) callMethods -> ID . methodSet COLON
    (61) callMethods -> ID . methodMap COLON
    (96) callFunction -> ID . LPAREN params RPAREN
    (97) callFunction -> ID . LPAREN RPAREN
    (53) assign -> ID . EQUAL estructuras_datos
    (54) assign -> ID . EQUAL javaScript_param
    (55) assign -> ID . EQUAL
    (68) methodArray -> . PERIOD PUSH LPAREN javaScript_param RPAREN
    (69) methodArray -> . PERIOD UNSHIFT LPAREN arrayValues RPAREN
    (70) methodArray -> . PERIOD POP LPAREN RPAREN
    (104) methodSet -> . PERIOD ADD LPAREN javaScript_param RPAREN
    (105) methodSet -> . PERIOD DELETE LPAREN javaScript_param RPAREN
    (106) methodSet -> . PERIOD CLEAR LPAREN RPAREN
    (82) methodMap -> . PERIOD CLEAR LPAREN RPAREN
    (83) methodMap -> . PERIOD SIZE

    LPAREN          shift and go to state 27
    EQUAL           shift and go to state 28
    PERIOD          shift and go to state 29

    methodArray                    shift and go to state 24
    methodSet                      shift and go to state 25
    methodMap                      shift and go to state 26

state 8

    (49) varDeclaration -> varType . assign COLON
    (53) assign -> . ID EQUAL estructuras_datos
    (54) assign -> . ID EQUAL javaScript_param
    (55) assign -> . ID EQUAL

    ID              shift and go to state 31

    assign                         shift and go to state 30

state 9

    (50) varDeclaration -> assign . COLON

    COLON           shift and go to state 32


state 10

    (51) varDeclaration -> varType_let . ID COLON
    (52) varDeclaration -> varType_let . assign COLON
    (47) varType -> varType_let .
    (53) assign -> . ID EQUAL estructuras_datos
    (54) assign -> . ID EQUAL javaScript_param
    (55) assign -> . ID EQUAL

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 33

  ! ID              [ reduce using rule 47 (varType -> varType_let .) ]

    assign                         shift and go to state 34

state 11

    (8) controlExpression -> sentencias_if .

    $end            reduce using rule 8 (controlExpression -> sentencias_if .)
    RBLOCK          reduce using rule 8 (controlExpression -> sentencias_if .)
    RETURN          reduce using rule 8 (controlExpression -> sentencias_if .)


state 12

    (9) controlExpression -> sentencias_if_else .

    $end            reduce using rule 9 (controlExpression -> sentencias_if_else .)
    RBLOCK          reduce using rule 9 (controlExpression -> sentencias_if_else .)
    RETURN          reduce using rule 9 (controlExpression -> sentencias_if_else .)


state 13

    (10) controlExpression -> sentencias_while .

    $end            reduce using rule 10 (controlExpression -> sentencias_while .)
    RBLOCK          reduce using rule 10 (controlExpression -> sentencias_while .)
    RETURN          reduce using rule 10 (controlExpression -> sentencias_while .)


state 14

    (11) controlExpression -> impresion .

    $end            reduce using rule 11 (controlExpression -> impresion .)
    RBLOCK          reduce using rule 11 (controlExpression -> impresion .)
    RETURN          reduce using rule 11 (controlExpression -> impresion .)


state 15

    (12) controlExpression -> impresion_vacio .

    $end            reduce using rule 12 (controlExpression -> impresion_vacio .)
    RBLOCK          reduce using rule 12 (controlExpression -> impresion_vacio .)
    RETURN          reduce using rule 12 (controlExpression -> impresion_vacio .)


state 16

    (84) declareteFunction -> FUNCTION . ID LPAREN params RPAREN sentencesCmpt
    (85) declareteFunction -> FUNCTION . ID LPAREN RPAREN sentencesCmpt

    ID              shift and go to state 35


state 17

    (48) varType -> CONST .

    ID              reduce using rule 48 (varType -> CONST .)


state 18

    (45) varType_let -> LET .

    ID              reduce using rule 45 (varType_let -> LET .)


state 19

    (46) varType_let -> VAR .

    ID              reduce using rule 46 (varType_let -> VAR .)


state 20

    (24) sentencias_if -> IF . LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias
    (25) sentencias_if -> IF . LPAREN expression RPAREN cuerpo_de_sentencias
    (26) sentencias_if_else -> IF . LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias
    (27) sentencias_if_else -> IF . LPAREN expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias

    LPAREN          shift and go to state 36


state 21

    (30) sentencias_while -> WHILE . LPAREN expression RPAREN cuerpo_de_sentencias
    (31) sentencias_while -> WHILE . LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias

    LPAREN          shift and go to state 37


state 22

    (32) impresion -> ALERT . LPAREN valores_de_impresion RPAREN COLON
    (38) impresion_vacio -> ALERT . LPAREN RPAREN COLON

    LPAREN          shift and go to state 38


state 23

    (2) sentencia -> callFunction COLON .

    $end            reduce using rule 2 (sentencia -> callFunction COLON .)
    RBLOCK          reduce using rule 2 (sentencia -> callFunction COLON .)
    RETURN          reduce using rule 2 (sentencia -> callFunction COLON .)


state 24

    (59) callMethods -> ID methodArray . COLON

    COLON           shift and go to state 39


state 25

    (60) callMethods -> ID methodSet . COLON

    COLON           shift and go to state 40


state 26

    (61) callMethods -> ID methodMap . COLON

    COLON           shift and go to state 41


state 27

    (96) callFunction -> ID LPAREN . params RPAREN
    (97) callFunction -> ID LPAREN . RPAREN
    (98) params -> . javaScript_param
    (99) params -> . javaScript_param COMMA params
    (39) javaScript_param -> . STRING
    (40) javaScript_param -> . inicializarOp
    (41) javaScript_param -> . boolean
    (42) javaScript_param -> . ID
    (107) inicializarOp -> . MINUS operacionesMath
    (108) inicializarOp -> . PLUS operacionesMath
    (109) inicializarOp -> . operacionesMath
    (110) inicializarOp -> . numOperadores
    (43) boolean -> . TRUE
    (44) boolean -> . FALSE
    (111) operacionesMath -> . suma
    (112) operacionesMath -> . resta
    (113) operacionesMath -> . multiplicacion
    (114) operacionesMath -> . divicion
    (129) numOperadores -> . enteros
    (130) numOperadores -> . decimales
    (115) suma -> . numOperadores PLUS inicializarOp
    (116) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN
    (117) suma -> . numOperadores PLUS suma
    (118) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN suma
    (119) resta -> . numOperadores MINUS inicializarOp
    (120) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN
    (121) resta -> . numOperadores MINUS resta
    (122) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN resta
    (123) multiplicacion -> . numOperadores TIMES LPAREN inicializarOp RPAREN
    (124) multiplicacion -> . numOperadores TIMES inicializarOp
    (125) multiplicacion -> . numOperadores TIMES multiplicacion
    (126) divicion -> . numOperadores DIVIDE LPAREN inicializarOp RPAREN
    (127) divicion -> . numOperadores DIVIDE inicializarOp
    (128) divicion -> . numOperadores DIVIDE divicion
    (131) enteros -> . NUM
    (132) enteros -> . numNegative
    (135) decimales -> . enteros PERIOD NUM
    (133) numNegative -> . MINUS NUM
    (134) numNegative -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 44
    STRING          shift and go to state 46
    ID              shift and go to state 42
    MINUS           shift and go to state 49
    PLUS            shift and go to state 51
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUM             shift and go to state 61
    PERIOD          reduce using rule 134 (numNegative -> .)
    TIMES           reduce using rule 134 (numNegative -> .)
    DIVIDE          reduce using rule 134 (numNegative -> .)
    COMMA           reduce using rule 134 (numNegative -> .)

  ! PLUS            [ reduce using rule 134 (numNegative -> .) ]
  ! MINUS           [ reduce using rule 134 (numNegative -> .) ]
  ! RPAREN          [ reduce using rule 134 (numNegative -> .) ]

    params                         shift and go to state 43
    javaScript_param               shift and go to state 45
    inicializarOp                  shift and go to state 47
    boolean                        shift and go to state 48
    operacionesMath                shift and go to state 50
    numOperadores                  shift and go to state 52
    suma                           shift and go to state 55
    resta                          shift and go to state 56
    multiplicacion                 shift and go to state 57
    divicion                       shift and go to state 58
    enteros                        shift and go to state 59
    decimales                      shift and go to state 60
    numNegative                    shift and go to state 62

state 28

    (53) assign -> ID EQUAL . estructuras_datos
    (54) assign -> ID EQUAL . javaScript_param
    (55) assign -> ID EQUAL .
    (56) estructuras_datos -> . arrayDeclare
    (57) estructuras_datos -> . declararSet
    (58) estructuras_datos -> . declareMap
    (39) javaScript_param -> . STRING
    (40) javaScript_param -> . inicializarOp
    (41) javaScript_param -> . boolean
    (42) javaScript_param -> . ID
    (62) arrayDeclare -> . LBRACKET RBRACKET
    (63) arrayDeclare -> . LBRACKET arrayValues RBRACKET
    (64) arrayDeclare -> . NEW ARRAY LPAREN arrayValues RPAREN
    (65) arrayDeclare -> . NEW ARRAY LPAREN RPAREN
    (102) declararSet -> . NEW SET LPAREN RPAREN
    (103) declararSet -> . NEW SET LPAREN LBRACKET iterableSet RBRACKET RPAREN
    (71) declareMap -> . NEW MAP LPAREN LBRACKET iterableMap RBRACKET RPAREN
    (72) declareMap -> . NEW MAP LPAREN RPAREN
    (107) inicializarOp -> . MINUS operacionesMath
    (108) inicializarOp -> . PLUS operacionesMath
    (109) inicializarOp -> . operacionesMath
    (110) inicializarOp -> . numOperadores
    (43) boolean -> . TRUE
    (44) boolean -> . FALSE
    (111) operacionesMath -> . suma
    (112) operacionesMath -> . resta
    (113) operacionesMath -> . multiplicacion
    (114) operacionesMath -> . divicion
    (129) numOperadores -> . enteros
    (130) numOperadores -> . decimales
    (115) suma -> . numOperadores PLUS inicializarOp
    (116) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN
    (117) suma -> . numOperadores PLUS suma
    (118) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN suma
    (119) resta -> . numOperadores MINUS inicializarOp
    (120) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN
    (121) resta -> . numOperadores MINUS resta
    (122) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN resta
    (123) multiplicacion -> . numOperadores TIMES LPAREN inicializarOp RPAREN
    (124) multiplicacion -> . numOperadores TIMES inicializarOp
    (125) multiplicacion -> . numOperadores TIMES multiplicacion
    (126) divicion -> . numOperadores DIVIDE LPAREN inicializarOp RPAREN
    (127) divicion -> . numOperadores DIVIDE inicializarOp
    (128) divicion -> . numOperadores DIVIDE divicion
    (131) enteros -> . NUM
    (132) enteros -> . numNegative
    (135) decimales -> . enteros PERIOD NUM
    (133) numNegative -> . MINUS NUM
    (134) numNegative -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for COLON resolved using rule 55 (assign -> ID EQUAL .)
    COLON           reduce using rule 55 (assign -> ID EQUAL .)
    STRING          shift and go to state 46
    ID              shift and go to state 42
    LBRACKET        shift and go to state 68
    NEW             shift and go to state 69
    MINUS           shift and go to state 49
    PLUS            shift and go to state 51
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUM             shift and go to state 61
    PERIOD          reduce using rule 134 (numNegative -> .)
    TIMES           reduce using rule 134 (numNegative -> .)
    DIVIDE          reduce using rule 134 (numNegative -> .)

  ! PLUS            [ reduce using rule 134 (numNegative -> .) ]
  ! MINUS           [ reduce using rule 134 (numNegative -> .) ]
  ! COLON           [ reduce using rule 134 (numNegative -> .) ]

    estructuras_datos              shift and go to state 63
    javaScript_param               shift and go to state 64
    arrayDeclare                   shift and go to state 65
    declararSet                    shift and go to state 66
    declareMap                     shift and go to state 67
    inicializarOp                  shift and go to state 47
    boolean                        shift and go to state 48
    operacionesMath                shift and go to state 50
    numOperadores                  shift and go to state 52
    suma                           shift and go to state 55
    resta                          shift and go to state 56
    multiplicacion                 shift and go to state 57
    divicion                       shift and go to state 58
    enteros                        shift and go to state 59
    decimales                      shift and go to state 60
    numNegative                    shift and go to state 62

state 29

    (68) methodArray -> PERIOD . PUSH LPAREN javaScript_param RPAREN
    (69) methodArray -> PERIOD . UNSHIFT LPAREN arrayValues RPAREN
    (70) methodArray -> PERIOD . POP LPAREN RPAREN
    (104) methodSet -> PERIOD . ADD LPAREN javaScript_param RPAREN
    (105) methodSet -> PERIOD . DELETE LPAREN javaScript_param RPAREN
    (106) methodSet -> PERIOD . CLEAR LPAREN RPAREN
    (82) methodMap -> PERIOD . CLEAR LPAREN RPAREN
    (83) methodMap -> PERIOD . SIZE

    PUSH            shift and go to state 70
    UNSHIFT         shift and go to state 71
    POP             shift and go to state 72
    ADD             shift and go to state 73
    DELETE          shift and go to state 74
    CLEAR           shift and go to state 75
    SIZE            shift and go to state 76


state 30

    (49) varDeclaration -> varType assign . COLON

    COLON           shift and go to state 77


state 31

    (53) assign -> ID . EQUAL estructuras_datos
    (54) assign -> ID . EQUAL javaScript_param
    (55) assign -> ID . EQUAL

    EQUAL           shift and go to state 28


state 32

    (50) varDeclaration -> assign COLON .

    $end            reduce using rule 50 (varDeclaration -> assign COLON .)
    RBLOCK          reduce using rule 50 (varDeclaration -> assign COLON .)
    RETURN          reduce using rule 50 (varDeclaration -> assign COLON .)


state 33

    (51) varDeclaration -> varType_let ID . COLON
    (53) assign -> ID . EQUAL estructuras_datos
    (54) assign -> ID . EQUAL javaScript_param
    (55) assign -> ID . EQUAL

    COLON           shift and go to state 78
    EQUAL           shift and go to state 28


state 34

    (52) varDeclaration -> varType_let assign . COLON

    COLON           shift and go to state 79


state 35

    (84) declareteFunction -> FUNCTION ID . LPAREN params RPAREN sentencesCmpt
    (85) declareteFunction -> FUNCTION ID . LPAREN RPAREN sentencesCmpt

    LPAREN          shift and go to state 80


state 36

    (24) sentencias_if -> IF LPAREN . expression operadorLogical expression RPAREN cuerpo_de_sentencias
    (25) sentencias_if -> IF LPAREN . expression RPAREN cuerpo_de_sentencias
    (26) sentencias_if_else -> IF LPAREN . expression operadorLogical expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias
    (27) sentencias_if_else -> IF LPAREN . expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias
    (6) expression -> . conditionalEspecifico
    (7) expression -> . inicializarOp
    (136) conditionalEspecifico -> . ID opConditional dataCondi
    (137) conditionalEspecifico -> . NUM opConditional NUM
    (138) conditionalEspecifico -> . STRING opConditional STRING
    (107) inicializarOp -> . MINUS operacionesMath
    (108) inicializarOp -> . PLUS operacionesMath
    (109) inicializarOp -> . operacionesMath
    (110) inicializarOp -> . numOperadores
    (111) operacionesMath -> . suma
    (112) operacionesMath -> . resta
    (113) operacionesMath -> . multiplicacion
    (114) operacionesMath -> . divicion
    (129) numOperadores -> . enteros
    (130) numOperadores -> . decimales
    (115) suma -> . numOperadores PLUS inicializarOp
    (116) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN
    (117) suma -> . numOperadores PLUS suma
    (118) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN suma
    (119) resta -> . numOperadores MINUS inicializarOp
    (120) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN
    (121) resta -> . numOperadores MINUS resta
    (122) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN resta
    (123) multiplicacion -> . numOperadores TIMES LPAREN inicializarOp RPAREN
    (124) multiplicacion -> . numOperadores TIMES inicializarOp
    (125) multiplicacion -> . numOperadores TIMES multiplicacion
    (126) divicion -> . numOperadores DIVIDE LPAREN inicializarOp RPAREN
    (127) divicion -> . numOperadores DIVIDE inicializarOp
    (128) divicion -> . numOperadores DIVIDE divicion
    (131) enteros -> . NUM
    (132) enteros -> . numNegative
    (135) decimales -> . enteros PERIOD NUM
    (133) numNegative -> . MINUS NUM
    (134) numNegative -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    ID              shift and go to state 84
    NUM             shift and go to state 85
    STRING          shift and go to state 86
    MINUS           shift and go to state 49
    PLUS            shift and go to state 51
    PERIOD          reduce using rule 134 (numNegative -> .)
    TIMES           reduce using rule 134 (numNegative -> .)
    DIVIDE          reduce using rule 134 (numNegative -> .)
    RPAREN          reduce using rule 134 (numNegative -> .)
    AND             reduce using rule 134 (numNegative -> .)
    OR              reduce using rule 134 (numNegative -> .)
    NOT             reduce using rule 134 (numNegative -> .)

  ! PLUS            [ reduce using rule 134 (numNegative -> .) ]
  ! MINUS           [ reduce using rule 134 (numNegative -> .) ]

    expression                     shift and go to state 81
    conditionalEspecifico          shift and go to state 82
    inicializarOp                  shift and go to state 83
    operacionesMath                shift and go to state 50
    numOperadores                  shift and go to state 52
    suma                           shift and go to state 55
    resta                          shift and go to state 56
    multiplicacion                 shift and go to state 57
    divicion                       shift and go to state 58
    enteros                        shift and go to state 59
    decimales                      shift and go to state 60
    numNegative                    shift and go to state 62

state 37

    (30) sentencias_while -> WHILE LPAREN . expression RPAREN cuerpo_de_sentencias
    (31) sentencias_while -> WHILE LPAREN . expression operadorLogical expression RPAREN cuerpo_de_sentencias
    (6) expression -> . conditionalEspecifico
    (7) expression -> . inicializarOp
    (136) conditionalEspecifico -> . ID opConditional dataCondi
    (137) conditionalEspecifico -> . NUM opConditional NUM
    (138) conditionalEspecifico -> . STRING opConditional STRING
    (107) inicializarOp -> . MINUS operacionesMath
    (108) inicializarOp -> . PLUS operacionesMath
    (109) inicializarOp -> . operacionesMath
    (110) inicializarOp -> . numOperadores
    (111) operacionesMath -> . suma
    (112) operacionesMath -> . resta
    (113) operacionesMath -> . multiplicacion
    (114) operacionesMath -> . divicion
    (129) numOperadores -> . enteros
    (130) numOperadores -> . decimales
    (115) suma -> . numOperadores PLUS inicializarOp
    (116) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN
    (117) suma -> . numOperadores PLUS suma
    (118) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN suma
    (119) resta -> . numOperadores MINUS inicializarOp
    (120) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN
    (121) resta -> . numOperadores MINUS resta
    (122) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN resta
    (123) multiplicacion -> . numOperadores TIMES LPAREN inicializarOp RPAREN
    (124) multiplicacion -> . numOperadores TIMES inicializarOp
    (125) multiplicacion -> . numOperadores TIMES multiplicacion
    (126) divicion -> . numOperadores DIVIDE LPAREN inicializarOp RPAREN
    (127) divicion -> . numOperadores DIVIDE inicializarOp
    (128) divicion -> . numOperadores DIVIDE divicion
    (131) enteros -> . NUM
    (132) enteros -> . numNegative
    (135) decimales -> . enteros PERIOD NUM
    (133) numNegative -> . MINUS NUM
    (134) numNegative -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    ID              shift and go to state 84
    NUM             shift and go to state 85
    STRING          shift and go to state 86
    MINUS           shift and go to state 49
    PLUS            shift and go to state 51
    PERIOD          reduce using rule 134 (numNegative -> .)
    TIMES           reduce using rule 134 (numNegative -> .)
    DIVIDE          reduce using rule 134 (numNegative -> .)
    RPAREN          reduce using rule 134 (numNegative -> .)
    AND             reduce using rule 134 (numNegative -> .)
    OR              reduce using rule 134 (numNegative -> .)
    NOT             reduce using rule 134 (numNegative -> .)

  ! PLUS            [ reduce using rule 134 (numNegative -> .) ]
  ! MINUS           [ reduce using rule 134 (numNegative -> .) ]

    expression                     shift and go to state 87
    conditionalEspecifico          shift and go to state 82
    inicializarOp                  shift and go to state 83
    operacionesMath                shift and go to state 50
    numOperadores                  shift and go to state 52
    suma                           shift and go to state 55
    resta                          shift and go to state 56
    multiplicacion                 shift and go to state 57
    divicion                       shift and go to state 58
    enteros                        shift and go to state 59
    decimales                      shift and go to state 60
    numNegative                    shift and go to state 62

state 38

    (32) impresion -> ALERT LPAREN . valores_de_impresion RPAREN COLON
    (38) impresion_vacio -> ALERT LPAREN . RPAREN COLON
    (33) valores_de_impresion -> . inicializarOp
    (34) valores_de_impresion -> . javaScript_param
    (35) valores_de_impresion -> . callFunction
    (36) valores_de_impresion -> . estructuras_datos
    (37) valores_de_impresion -> . return_ops
    (107) inicializarOp -> . MINUS operacionesMath
    (108) inicializarOp -> . PLUS operacionesMath
    (109) inicializarOp -> . operacionesMath
    (110) inicializarOp -> . numOperadores
    (39) javaScript_param -> . STRING
    (40) javaScript_param -> . inicializarOp
    (41) javaScript_param -> . boolean
    (42) javaScript_param -> . ID
    (96) callFunction -> . ID LPAREN params RPAREN
    (97) callFunction -> . ID LPAREN RPAREN
    (56) estructuras_datos -> . arrayDeclare
    (57) estructuras_datos -> . declararSet
    (58) estructuras_datos -> . declareMap
    (90) return_ops -> . javaScript_param
    (91) return_ops -> . javaScript_param operadores_mat return_ops
    (111) operacionesMath -> . suma
    (112) operacionesMath -> . resta
    (113) operacionesMath -> . multiplicacion
    (114) operacionesMath -> . divicion
    (129) numOperadores -> . enteros
    (130) numOperadores -> . decimales
    (43) boolean -> . TRUE
    (44) boolean -> . FALSE
    (62) arrayDeclare -> . LBRACKET RBRACKET
    (63) arrayDeclare -> . LBRACKET arrayValues RBRACKET
    (64) arrayDeclare -> . NEW ARRAY LPAREN arrayValues RPAREN
    (65) arrayDeclare -> . NEW ARRAY LPAREN RPAREN
    (102) declararSet -> . NEW SET LPAREN RPAREN
    (103) declararSet -> . NEW SET LPAREN LBRACKET iterableSet RBRACKET RPAREN
    (71) declareMap -> . NEW MAP LPAREN LBRACKET iterableMap RBRACKET RPAREN
    (72) declareMap -> . NEW MAP LPAREN RPAREN
    (115) suma -> . numOperadores PLUS inicializarOp
    (116) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN
    (117) suma -> . numOperadores PLUS suma
    (118) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN suma
    (119) resta -> . numOperadores MINUS inicializarOp
    (120) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN
    (121) resta -> . numOperadores MINUS resta
    (122) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN resta
    (123) multiplicacion -> . numOperadores TIMES LPAREN inicializarOp RPAREN
    (124) multiplicacion -> . numOperadores TIMES inicializarOp
    (125) multiplicacion -> . numOperadores TIMES multiplicacion
    (126) divicion -> . numOperadores DIVIDE LPAREN inicializarOp RPAREN
    (127) divicion -> . numOperadores DIVIDE inicializarOp
    (128) divicion -> . numOperadores DIVIDE divicion
    (131) enteros -> . NUM
    (132) enteros -> . numNegative
    (135) decimales -> . enteros PERIOD NUM
    (133) numNegative -> . MINUS NUM
    (134) numNegative -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 89
    MINUS           shift and go to state 49
    PLUS            shift and go to state 51
    STRING          shift and go to state 46
    ID              shift and go to state 95
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    LBRACKET        shift and go to state 68
    NEW             shift and go to state 69
    NUM             shift and go to state 61
    PERIOD          reduce using rule 134 (numNegative -> .)
    TIMES           reduce using rule 134 (numNegative -> .)
    DIVIDE          reduce using rule 134 (numNegative -> .)

  ! PLUS            [ reduce using rule 134 (numNegative -> .) ]
  ! MINUS           [ reduce using rule 134 (numNegative -> .) ]
  ! RPAREN          [ reduce using rule 134 (numNegative -> .) ]

    valores_de_impresion           shift and go to state 88
    inicializarOp                  shift and go to state 90
    javaScript_param               shift and go to state 91
    callFunction                   shift and go to state 92
    estructuras_datos              shift and go to state 93
    return_ops                     shift and go to state 94
    operacionesMath                shift and go to state 50
    numOperadores                  shift and go to state 52
    boolean                        shift and go to state 48
    arrayDeclare                   shift and go to state 65
    declararSet                    shift and go to state 66
    declareMap                     shift and go to state 67
    suma                           shift and go to state 55
    resta                          shift and go to state 56
    multiplicacion                 shift and go to state 57
    divicion                       shift and go to state 58
    enteros                        shift and go to state 59
    decimales                      shift and go to state 60
    numNegative                    shift and go to state 62

state 39

    (59) callMethods -> ID methodArray COLON .

    $end            reduce using rule 59 (callMethods -> ID methodArray COLON .)
    RBLOCK          reduce using rule 59 (callMethods -> ID methodArray COLON .)
    RETURN          reduce using rule 59 (callMethods -> ID methodArray COLON .)


state 40

    (60) callMethods -> ID methodSet COLON .

    $end            reduce using rule 60 (callMethods -> ID methodSet COLON .)
    RBLOCK          reduce using rule 60 (callMethods -> ID methodSet COLON .)
    RETURN          reduce using rule 60 (callMethods -> ID methodSet COLON .)


state 41

    (61) callMethods -> ID methodMap COLON .

    $end            reduce using rule 61 (callMethods -> ID methodMap COLON .)
    RBLOCK          reduce using rule 61 (callMethods -> ID methodMap COLON .)
    RETURN          reduce using rule 61 (callMethods -> ID methodMap COLON .)


state 42

    (42) javaScript_param -> ID .

    COMMA           reduce using rule 42 (javaScript_param -> ID .)
    RPAREN          reduce using rule 42 (javaScript_param -> ID .)
    COLON           reduce using rule 42 (javaScript_param -> ID .)
    RBRACKET        reduce using rule 42 (javaScript_param -> ID .)
    PLUS            reduce using rule 42 (javaScript_param -> ID .)
    MINUS           reduce using rule 42 (javaScript_param -> ID .)
    DIVIDE          reduce using rule 42 (javaScript_param -> ID .)
    TIMES           reduce using rule 42 (javaScript_param -> ID .)


state 43

    (96) callFunction -> ID LPAREN params . RPAREN

    RPAREN          shift and go to state 96


state 44

    (97) callFunction -> ID LPAREN RPAREN .

    COLON           reduce using rule 97 (callFunction -> ID LPAREN RPAREN .)
    RPAREN          reduce using rule 97 (callFunction -> ID LPAREN RPAREN .)


state 45

    (98) params -> javaScript_param .
    (99) params -> javaScript_param . COMMA params

    RPAREN          reduce using rule 98 (params -> javaScript_param .)
    COMMA           shift and go to state 97


state 46

    (39) javaScript_param -> STRING .

    COMMA           reduce using rule 39 (javaScript_param -> STRING .)
    RPAREN          reduce using rule 39 (javaScript_param -> STRING .)
    COLON           reduce using rule 39 (javaScript_param -> STRING .)
    PLUS            reduce using rule 39 (javaScript_param -> STRING .)
    MINUS           reduce using rule 39 (javaScript_param -> STRING .)
    DIVIDE          reduce using rule 39 (javaScript_param -> STRING .)
    TIMES           reduce using rule 39 (javaScript_param -> STRING .)
    RBRACKET        reduce using rule 39 (javaScript_param -> STRING .)


state 47

    (40) javaScript_param -> inicializarOp .

    COMMA           reduce using rule 40 (javaScript_param -> inicializarOp .)
    RPAREN          reduce using rule 40 (javaScript_param -> inicializarOp .)
    COLON           reduce using rule 40 (javaScript_param -> inicializarOp .)
    RBRACKET        reduce using rule 40 (javaScript_param -> inicializarOp .)
    PLUS            reduce using rule 40 (javaScript_param -> inicializarOp .)
    MINUS           reduce using rule 40 (javaScript_param -> inicializarOp .)
    DIVIDE          reduce using rule 40 (javaScript_param -> inicializarOp .)
    TIMES           reduce using rule 40 (javaScript_param -> inicializarOp .)


state 48

    (41) javaScript_param -> boolean .

    COMMA           reduce using rule 41 (javaScript_param -> boolean .)
    RPAREN          reduce using rule 41 (javaScript_param -> boolean .)
    COLON           reduce using rule 41 (javaScript_param -> boolean .)
    PLUS            reduce using rule 41 (javaScript_param -> boolean .)
    MINUS           reduce using rule 41 (javaScript_param -> boolean .)
    DIVIDE          reduce using rule 41 (javaScript_param -> boolean .)
    TIMES           reduce using rule 41 (javaScript_param -> boolean .)
    RBRACKET        reduce using rule 41 (javaScript_param -> boolean .)


state 49

    (107) inicializarOp -> MINUS . operacionesMath
    (133) numNegative -> MINUS . NUM
    (111) operacionesMath -> . suma
    (112) operacionesMath -> . resta
    (113) operacionesMath -> . multiplicacion
    (114) operacionesMath -> . divicion
    (115) suma -> . numOperadores PLUS inicializarOp
    (116) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN
    (117) suma -> . numOperadores PLUS suma
    (118) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN suma
    (119) resta -> . numOperadores MINUS inicializarOp
    (120) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN
    (121) resta -> . numOperadores MINUS resta
    (122) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN resta
    (123) multiplicacion -> . numOperadores TIMES LPAREN inicializarOp RPAREN
    (124) multiplicacion -> . numOperadores TIMES inicializarOp
    (125) multiplicacion -> . numOperadores TIMES multiplicacion
    (126) divicion -> . numOperadores DIVIDE LPAREN inicializarOp RPAREN
    (127) divicion -> . numOperadores DIVIDE inicializarOp
    (128) divicion -> . numOperadores DIVIDE divicion
    (129) numOperadores -> . enteros
    (130) numOperadores -> . decimales
    (131) enteros -> . NUM
    (132) enteros -> . numNegative
    (135) decimales -> . enteros PERIOD NUM
    (133) numNegative -> . MINUS NUM
    (134) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
    NUM             shift and go to state 100
    MINUS           shift and go to state 98
    PERIOD          reduce using rule 134 (numNegative -> .)
    PLUS            reduce using rule 134 (numNegative -> .)
    TIMES           reduce using rule 134 (numNegative -> .)
    DIVIDE          reduce using rule 134 (numNegative -> .)

  ! MINUS           [ reduce using rule 134 (numNegative -> .) ]

    operacionesMath                shift and go to state 99
    suma                           shift and go to state 55
    resta                          shift and go to state 56
    multiplicacion                 shift and go to state 57
    divicion                       shift and go to state 58
    numOperadores                  shift and go to state 101
    enteros                        shift and go to state 59
    decimales                      shift and go to state 60
    numNegative                    shift and go to state 62

state 50

    (109) inicializarOp -> operacionesMath .

    COMMA           reduce using rule 109 (inicializarOp -> operacionesMath .)
    RPAREN          reduce using rule 109 (inicializarOp -> operacionesMath .)
    COLON           reduce using rule 109 (inicializarOp -> operacionesMath .)
    AND             reduce using rule 109 (inicializarOp -> operacionesMath .)
    OR              reduce using rule 109 (inicializarOp -> operacionesMath .)
    NOT             reduce using rule 109 (inicializarOp -> operacionesMath .)
    PLUS            reduce using rule 109 (inicializarOp -> operacionesMath .)
    MINUS           reduce using rule 109 (inicializarOp -> operacionesMath .)
    DIVIDE          reduce using rule 109 (inicializarOp -> operacionesMath .)
    TIMES           reduce using rule 109 (inicializarOp -> operacionesMath .)
    RBRACKET        reduce using rule 109 (inicializarOp -> operacionesMath .)


state 51

    (108) inicializarOp -> PLUS . operacionesMath
    (111) operacionesMath -> . suma
    (112) operacionesMath -> . resta
    (113) operacionesMath -> . multiplicacion
    (114) operacionesMath -> . divicion
    (115) suma -> . numOperadores PLUS inicializarOp
    (116) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN
    (117) suma -> . numOperadores PLUS suma
    (118) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN suma
    (119) resta -> . numOperadores MINUS inicializarOp
    (120) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN
    (121) resta -> . numOperadores MINUS resta
    (122) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN resta
    (123) multiplicacion -> . numOperadores TIMES LPAREN inicializarOp RPAREN
    (124) multiplicacion -> . numOperadores TIMES inicializarOp
    (125) multiplicacion -> . numOperadores TIMES multiplicacion
    (126) divicion -> . numOperadores DIVIDE LPAREN inicializarOp RPAREN
    (127) divicion -> . numOperadores DIVIDE inicializarOp
    (128) divicion -> . numOperadores DIVIDE divicion
    (129) numOperadores -> . enteros
    (130) numOperadores -> . decimales
    (131) enteros -> . NUM
    (132) enteros -> . numNegative
    (135) decimales -> . enteros PERIOD NUM
    (133) numNegative -> . MINUS NUM
    (134) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
    NUM             shift and go to state 61
    MINUS           shift and go to state 98
    PERIOD          reduce using rule 134 (numNegative -> .)
    PLUS            reduce using rule 134 (numNegative -> .)
    TIMES           reduce using rule 134 (numNegative -> .)
    DIVIDE          reduce using rule 134 (numNegative -> .)

  ! MINUS           [ reduce using rule 134 (numNegative -> .) ]

    operacionesMath                shift and go to state 102
    suma                           shift and go to state 55
    resta                          shift and go to state 56
    multiplicacion                 shift and go to state 57
    divicion                       shift and go to state 58
    numOperadores                  shift and go to state 101
    enteros                        shift and go to state 59
    decimales                      shift and go to state 60
    numNegative                    shift and go to state 62

state 52

    (110) inicializarOp -> numOperadores .
    (115) suma -> numOperadores . PLUS inicializarOp
    (116) suma -> numOperadores . PLUS LPAREN inicializarOp RPAREN
    (117) suma -> numOperadores . PLUS suma
    (118) suma -> numOperadores . PLUS LPAREN inicializarOp RPAREN suma
    (119) resta -> numOperadores . MINUS inicializarOp
    (120) resta -> numOperadores . MINUS LPAREN inicializarOp RPAREN
    (121) resta -> numOperadores . MINUS resta
    (122) resta -> numOperadores . MINUS LPAREN inicializarOp RPAREN resta
    (123) multiplicacion -> numOperadores . TIMES LPAREN inicializarOp RPAREN
    (124) multiplicacion -> numOperadores . TIMES inicializarOp
    (125) multiplicacion -> numOperadores . TIMES multiplicacion
    (126) divicion -> numOperadores . DIVIDE LPAREN inicializarOp RPAREN
    (127) divicion -> numOperadores . DIVIDE inicializarOp
    (128) divicion -> numOperadores . DIVIDE divicion

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COMMA           reduce using rule 110 (inicializarOp -> numOperadores .)
    RPAREN          reduce using rule 110 (inicializarOp -> numOperadores .)
    COLON           reduce using rule 110 (inicializarOp -> numOperadores .)
    AND             reduce using rule 110 (inicializarOp -> numOperadores .)
    OR              reduce using rule 110 (inicializarOp -> numOperadores .)
    NOT             reduce using rule 110 (inicializarOp -> numOperadores .)
    RBRACKET        reduce using rule 110 (inicializarOp -> numOperadores .)
    PLUS            shift and go to state 103
    MINUS           shift and go to state 104
    TIMES           shift and go to state 105
    DIVIDE          shift and go to state 106

  ! PLUS            [ reduce using rule 110 (inicializarOp -> numOperadores .) ]
  ! MINUS           [ reduce using rule 110 (inicializarOp -> numOperadores .) ]
  ! DIVIDE          [ reduce using rule 110 (inicializarOp -> numOperadores .) ]
  ! TIMES           [ reduce using rule 110 (inicializarOp -> numOperadores .) ]


state 53

    (43) boolean -> TRUE .

    COMMA           reduce using rule 43 (boolean -> TRUE .)
    RPAREN          reduce using rule 43 (boolean -> TRUE .)
    COLON           reduce using rule 43 (boolean -> TRUE .)
    PLUS            reduce using rule 43 (boolean -> TRUE .)
    MINUS           reduce using rule 43 (boolean -> TRUE .)
    DIVIDE          reduce using rule 43 (boolean -> TRUE .)
    TIMES           reduce using rule 43 (boolean -> TRUE .)
    RBRACKET        reduce using rule 43 (boolean -> TRUE .)
    STRING          reduce using rule 43 (boolean -> TRUE .)
    NUM             reduce using rule 43 (boolean -> TRUE .)


state 54

    (44) boolean -> FALSE .

    COMMA           reduce using rule 44 (boolean -> FALSE .)
    RPAREN          reduce using rule 44 (boolean -> FALSE .)
    COLON           reduce using rule 44 (boolean -> FALSE .)
    PLUS            reduce using rule 44 (boolean -> FALSE .)
    MINUS           reduce using rule 44 (boolean -> FALSE .)
    DIVIDE          reduce using rule 44 (boolean -> FALSE .)
    TIMES           reduce using rule 44 (boolean -> FALSE .)
    RBRACKET        reduce using rule 44 (boolean -> FALSE .)
    STRING          reduce using rule 44 (boolean -> FALSE .)
    NUM             reduce using rule 44 (boolean -> FALSE .)


state 55

    (111) operacionesMath -> suma .

    COMMA           reduce using rule 111 (operacionesMath -> suma .)
    RPAREN          reduce using rule 111 (operacionesMath -> suma .)
    COLON           reduce using rule 111 (operacionesMath -> suma .)
    AND             reduce using rule 111 (operacionesMath -> suma .)
    OR              reduce using rule 111 (operacionesMath -> suma .)
    NOT             reduce using rule 111 (operacionesMath -> suma .)
    PLUS            reduce using rule 111 (operacionesMath -> suma .)
    MINUS           reduce using rule 111 (operacionesMath -> suma .)
    DIVIDE          reduce using rule 111 (operacionesMath -> suma .)
    TIMES           reduce using rule 111 (operacionesMath -> suma .)
    RBRACKET        reduce using rule 111 (operacionesMath -> suma .)


state 56

    (112) operacionesMath -> resta .

    COMMA           reduce using rule 112 (operacionesMath -> resta .)
    RPAREN          reduce using rule 112 (operacionesMath -> resta .)
    COLON           reduce using rule 112 (operacionesMath -> resta .)
    AND             reduce using rule 112 (operacionesMath -> resta .)
    OR              reduce using rule 112 (operacionesMath -> resta .)
    NOT             reduce using rule 112 (operacionesMath -> resta .)
    PLUS            reduce using rule 112 (operacionesMath -> resta .)
    MINUS           reduce using rule 112 (operacionesMath -> resta .)
    DIVIDE          reduce using rule 112 (operacionesMath -> resta .)
    TIMES           reduce using rule 112 (operacionesMath -> resta .)
    RBRACKET        reduce using rule 112 (operacionesMath -> resta .)


state 57

    (113) operacionesMath -> multiplicacion .

    COMMA           reduce using rule 113 (operacionesMath -> multiplicacion .)
    RPAREN          reduce using rule 113 (operacionesMath -> multiplicacion .)
    COLON           reduce using rule 113 (operacionesMath -> multiplicacion .)
    AND             reduce using rule 113 (operacionesMath -> multiplicacion .)
    OR              reduce using rule 113 (operacionesMath -> multiplicacion .)
    NOT             reduce using rule 113 (operacionesMath -> multiplicacion .)
    PLUS            reduce using rule 113 (operacionesMath -> multiplicacion .)
    MINUS           reduce using rule 113 (operacionesMath -> multiplicacion .)
    DIVIDE          reduce using rule 113 (operacionesMath -> multiplicacion .)
    TIMES           reduce using rule 113 (operacionesMath -> multiplicacion .)
    RBRACKET        reduce using rule 113 (operacionesMath -> multiplicacion .)


state 58

    (114) operacionesMath -> divicion .

    COMMA           reduce using rule 114 (operacionesMath -> divicion .)
    RPAREN          reduce using rule 114 (operacionesMath -> divicion .)
    COLON           reduce using rule 114 (operacionesMath -> divicion .)
    AND             reduce using rule 114 (operacionesMath -> divicion .)
    OR              reduce using rule 114 (operacionesMath -> divicion .)
    NOT             reduce using rule 114 (operacionesMath -> divicion .)
    PLUS            reduce using rule 114 (operacionesMath -> divicion .)
    MINUS           reduce using rule 114 (operacionesMath -> divicion .)
    DIVIDE          reduce using rule 114 (operacionesMath -> divicion .)
    TIMES           reduce using rule 114 (operacionesMath -> divicion .)
    RBRACKET        reduce using rule 114 (operacionesMath -> divicion .)


state 59

    (129) numOperadores -> enteros .
    (135) decimales -> enteros . PERIOD NUM

    PLUS            reduce using rule 129 (numOperadores -> enteros .)
    MINUS           reduce using rule 129 (numOperadores -> enteros .)
    TIMES           reduce using rule 129 (numOperadores -> enteros .)
    DIVIDE          reduce using rule 129 (numOperadores -> enteros .)
    COMMA           reduce using rule 129 (numOperadores -> enteros .)
    RPAREN          reduce using rule 129 (numOperadores -> enteros .)
    COLON           reduce using rule 129 (numOperadores -> enteros .)
    AND             reduce using rule 129 (numOperadores -> enteros .)
    OR              reduce using rule 129 (numOperadores -> enteros .)
    NOT             reduce using rule 129 (numOperadores -> enteros .)
    RBRACKET        reduce using rule 129 (numOperadores -> enteros .)
    PERIOD          shift and go to state 107


state 60

    (130) numOperadores -> decimales .

    PLUS            reduce using rule 130 (numOperadores -> decimales .)
    MINUS           reduce using rule 130 (numOperadores -> decimales .)
    TIMES           reduce using rule 130 (numOperadores -> decimales .)
    DIVIDE          reduce using rule 130 (numOperadores -> decimales .)
    COMMA           reduce using rule 130 (numOperadores -> decimales .)
    RPAREN          reduce using rule 130 (numOperadores -> decimales .)
    COLON           reduce using rule 130 (numOperadores -> decimales .)
    AND             reduce using rule 130 (numOperadores -> decimales .)
    OR              reduce using rule 130 (numOperadores -> decimales .)
    NOT             reduce using rule 130 (numOperadores -> decimales .)
    RBRACKET        reduce using rule 130 (numOperadores -> decimales .)


state 61

    (131) enteros -> NUM .

    PERIOD          reduce using rule 131 (enteros -> NUM .)
    PLUS            reduce using rule 131 (enteros -> NUM .)
    MINUS           reduce using rule 131 (enteros -> NUM .)
    TIMES           reduce using rule 131 (enteros -> NUM .)
    DIVIDE          reduce using rule 131 (enteros -> NUM .)
    COMMA           reduce using rule 131 (enteros -> NUM .)
    RPAREN          reduce using rule 131 (enteros -> NUM .)
    COLON           reduce using rule 131 (enteros -> NUM .)
    RBRACKET        reduce using rule 131 (enteros -> NUM .)
    AND             reduce using rule 131 (enteros -> NUM .)
    OR              reduce using rule 131 (enteros -> NUM .)
    NOT             reduce using rule 131 (enteros -> NUM .)


state 62

    (132) enteros -> numNegative .

    PERIOD          reduce using rule 132 (enteros -> numNegative .)
    PLUS            reduce using rule 132 (enteros -> numNegative .)
    MINUS           reduce using rule 132 (enteros -> numNegative .)
    TIMES           reduce using rule 132 (enteros -> numNegative .)
    DIVIDE          reduce using rule 132 (enteros -> numNegative .)
    COMMA           reduce using rule 132 (enteros -> numNegative .)
    RPAREN          reduce using rule 132 (enteros -> numNegative .)
    COLON           reduce using rule 132 (enteros -> numNegative .)
    AND             reduce using rule 132 (enteros -> numNegative .)
    OR              reduce using rule 132 (enteros -> numNegative .)
    NOT             reduce using rule 132 (enteros -> numNegative .)
    RBRACKET        reduce using rule 132 (enteros -> numNegative .)


state 63

    (53) assign -> ID EQUAL estructuras_datos .

    COLON           reduce using rule 53 (assign -> ID EQUAL estructuras_datos .)


state 64

    (54) assign -> ID EQUAL javaScript_param .

    COLON           reduce using rule 54 (assign -> ID EQUAL javaScript_param .)


state 65

    (56) estructuras_datos -> arrayDeclare .

    COLON           reduce using rule 56 (estructuras_datos -> arrayDeclare .)
    RPAREN          reduce using rule 56 (estructuras_datos -> arrayDeclare .)


state 66

    (57) estructuras_datos -> declararSet .

    COLON           reduce using rule 57 (estructuras_datos -> declararSet .)
    RPAREN          reduce using rule 57 (estructuras_datos -> declararSet .)


state 67

    (58) estructuras_datos -> declareMap .

    COLON           reduce using rule 58 (estructuras_datos -> declareMap .)
    RPAREN          reduce using rule 58 (estructuras_datos -> declareMap .)


state 68

    (62) arrayDeclare -> LBRACKET . RBRACKET
    (63) arrayDeclare -> LBRACKET . arrayValues RBRACKET
    (66) arrayValues -> . javaScript_param
    (67) arrayValues -> . javaScript_param COMMA arrayValues
    (39) javaScript_param -> . STRING
    (40) javaScript_param -> . inicializarOp
    (41) javaScript_param -> . boolean
    (42) javaScript_param -> . ID
    (107) inicializarOp -> . MINUS operacionesMath
    (108) inicializarOp -> . PLUS operacionesMath
    (109) inicializarOp -> . operacionesMath
    (110) inicializarOp -> . numOperadores
    (43) boolean -> . TRUE
    (44) boolean -> . FALSE
    (111) operacionesMath -> . suma
    (112) operacionesMath -> . resta
    (113) operacionesMath -> . multiplicacion
    (114) operacionesMath -> . divicion
    (129) numOperadores -> . enteros
    (130) numOperadores -> . decimales
    (115) suma -> . numOperadores PLUS inicializarOp
    (116) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN
    (117) suma -> . numOperadores PLUS suma
    (118) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN suma
    (119) resta -> . numOperadores MINUS inicializarOp
    (120) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN
    (121) resta -> . numOperadores MINUS resta
    (122) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN resta
    (123) multiplicacion -> . numOperadores TIMES LPAREN inicializarOp RPAREN
    (124) multiplicacion -> . numOperadores TIMES inicializarOp
    (125) multiplicacion -> . numOperadores TIMES multiplicacion
    (126) divicion -> . numOperadores DIVIDE LPAREN inicializarOp RPAREN
    (127) divicion -> . numOperadores DIVIDE inicializarOp
    (128) divicion -> . numOperadores DIVIDE divicion
    (131) enteros -> . NUM
    (132) enteros -> . numNegative
    (135) decimales -> . enteros PERIOD NUM
    (133) numNegative -> . MINUS NUM
    (134) numNegative -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for RBRACKET resolved as shift
    RBRACKET        shift and go to state 108
    STRING          shift and go to state 46
    ID              shift and go to state 42
    MINUS           shift and go to state 49
    PLUS            shift and go to state 51
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUM             shift and go to state 61
    PERIOD          reduce using rule 134 (numNegative -> .)
    TIMES           reduce using rule 134 (numNegative -> .)
    DIVIDE          reduce using rule 134 (numNegative -> .)
    COMMA           reduce using rule 134 (numNegative -> .)

  ! PLUS            [ reduce using rule 134 (numNegative -> .) ]
  ! MINUS           [ reduce using rule 134 (numNegative -> .) ]
  ! RBRACKET        [ reduce using rule 134 (numNegative -> .) ]

    arrayValues                    shift and go to state 109
    javaScript_param               shift and go to state 110
    inicializarOp                  shift and go to state 47
    boolean                        shift and go to state 48
    operacionesMath                shift and go to state 50
    numOperadores                  shift and go to state 52
    suma                           shift and go to state 55
    resta                          shift and go to state 56
    multiplicacion                 shift and go to state 57
    divicion                       shift and go to state 58
    enteros                        shift and go to state 59
    decimales                      shift and go to state 60
    numNegative                    shift and go to state 62

state 69

    (64) arrayDeclare -> NEW . ARRAY LPAREN arrayValues RPAREN
    (65) arrayDeclare -> NEW . ARRAY LPAREN RPAREN
    (102) declararSet -> NEW . SET LPAREN RPAREN
    (103) declararSet -> NEW . SET LPAREN LBRACKET iterableSet RBRACKET RPAREN
    (71) declareMap -> NEW . MAP LPAREN LBRACKET iterableMap RBRACKET RPAREN
    (72) declareMap -> NEW . MAP LPAREN RPAREN

    ARRAY           shift and go to state 111
    SET             shift and go to state 112
    MAP             shift and go to state 113


state 70

    (68) methodArray -> PERIOD PUSH . LPAREN javaScript_param RPAREN

    LPAREN          shift and go to state 114


state 71

    (69) methodArray -> PERIOD UNSHIFT . LPAREN arrayValues RPAREN

    LPAREN          shift and go to state 115


state 72

    (70) methodArray -> PERIOD POP . LPAREN RPAREN

    LPAREN          shift and go to state 116


state 73

    (104) methodSet -> PERIOD ADD . LPAREN javaScript_param RPAREN

    LPAREN          shift and go to state 117


state 74

    (105) methodSet -> PERIOD DELETE . LPAREN javaScript_param RPAREN

    LPAREN          shift and go to state 118


state 75

    (106) methodSet -> PERIOD CLEAR . LPAREN RPAREN
    (82) methodMap -> PERIOD CLEAR . LPAREN RPAREN

    LPAREN          shift and go to state 119


state 76

    (83) methodMap -> PERIOD SIZE .

    COLON           reduce using rule 83 (methodMap -> PERIOD SIZE .)


state 77

    (49) varDeclaration -> varType assign COLON .

    $end            reduce using rule 49 (varDeclaration -> varType assign COLON .)
    RBLOCK          reduce using rule 49 (varDeclaration -> varType assign COLON .)
    RETURN          reduce using rule 49 (varDeclaration -> varType assign COLON .)


state 78

    (51) varDeclaration -> varType_let ID COLON .

    $end            reduce using rule 51 (varDeclaration -> varType_let ID COLON .)
    RBLOCK          reduce using rule 51 (varDeclaration -> varType_let ID COLON .)
    RETURN          reduce using rule 51 (varDeclaration -> varType_let ID COLON .)


state 79

    (52) varDeclaration -> varType_let assign COLON .

    $end            reduce using rule 52 (varDeclaration -> varType_let assign COLON .)
    RBLOCK          reduce using rule 52 (varDeclaration -> varType_let assign COLON .)
    RETURN          reduce using rule 52 (varDeclaration -> varType_let assign COLON .)


state 80

    (84) declareteFunction -> FUNCTION ID LPAREN . params RPAREN sentencesCmpt
    (85) declareteFunction -> FUNCTION ID LPAREN . RPAREN sentencesCmpt
    (98) params -> . javaScript_param
    (99) params -> . javaScript_param COMMA params
    (39) javaScript_param -> . STRING
    (40) javaScript_param -> . inicializarOp
    (41) javaScript_param -> . boolean
    (42) javaScript_param -> . ID
    (107) inicializarOp -> . MINUS operacionesMath
    (108) inicializarOp -> . PLUS operacionesMath
    (109) inicializarOp -> . operacionesMath
    (110) inicializarOp -> . numOperadores
    (43) boolean -> . TRUE
    (44) boolean -> . FALSE
    (111) operacionesMath -> . suma
    (112) operacionesMath -> . resta
    (113) operacionesMath -> . multiplicacion
    (114) operacionesMath -> . divicion
    (129) numOperadores -> . enteros
    (130) numOperadores -> . decimales
    (115) suma -> . numOperadores PLUS inicializarOp
    (116) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN
    (117) suma -> . numOperadores PLUS suma
    (118) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN suma
    (119) resta -> . numOperadores MINUS inicializarOp
    (120) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN
    (121) resta -> . numOperadores MINUS resta
    (122) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN resta
    (123) multiplicacion -> . numOperadores TIMES LPAREN inicializarOp RPAREN
    (124) multiplicacion -> . numOperadores TIMES inicializarOp
    (125) multiplicacion -> . numOperadores TIMES multiplicacion
    (126) divicion -> . numOperadores DIVIDE LPAREN inicializarOp RPAREN
    (127) divicion -> . numOperadores DIVIDE inicializarOp
    (128) divicion -> . numOperadores DIVIDE divicion
    (131) enteros -> . NUM
    (132) enteros -> . numNegative
    (135) decimales -> . enteros PERIOD NUM
    (133) numNegative -> . MINUS NUM
    (134) numNegative -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 121
    STRING          shift and go to state 46
    ID              shift and go to state 42
    MINUS           shift and go to state 49
    PLUS            shift and go to state 51
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUM             shift and go to state 61
    PERIOD          reduce using rule 134 (numNegative -> .)
    TIMES           reduce using rule 134 (numNegative -> .)
    DIVIDE          reduce using rule 134 (numNegative -> .)
    COMMA           reduce using rule 134 (numNegative -> .)

  ! PLUS            [ reduce using rule 134 (numNegative -> .) ]
  ! MINUS           [ reduce using rule 134 (numNegative -> .) ]
  ! RPAREN          [ reduce using rule 134 (numNegative -> .) ]

    params                         shift and go to state 120
    javaScript_param               shift and go to state 45
    inicializarOp                  shift and go to state 47
    boolean                        shift and go to state 48
    operacionesMath                shift and go to state 50
    numOperadores                  shift and go to state 52
    suma                           shift and go to state 55
    resta                          shift and go to state 56
    multiplicacion                 shift and go to state 57
    divicion                       shift and go to state 58
    enteros                        shift and go to state 59
    decimales                      shift and go to state 60
    numNegative                    shift and go to state 62

state 81

    (24) sentencias_if -> IF LPAREN expression . operadorLogical expression RPAREN cuerpo_de_sentencias
    (25) sentencias_if -> IF LPAREN expression . RPAREN cuerpo_de_sentencias
    (26) sentencias_if_else -> IF LPAREN expression . operadorLogical expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias
    (27) sentencias_if_else -> IF LPAREN expression . RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias
    (21) operadorLogical -> . AND
    (22) operadorLogical -> . OR
    (23) operadorLogical -> . NOT

    RPAREN          shift and go to state 123
    AND             shift and go to state 124
    OR              shift and go to state 125
    NOT             shift and go to state 126

    operadorLogical                shift and go to state 122

state 82

    (6) expression -> conditionalEspecifico .

    RPAREN          reduce using rule 6 (expression -> conditionalEspecifico .)
    AND             reduce using rule 6 (expression -> conditionalEspecifico .)
    OR              reduce using rule 6 (expression -> conditionalEspecifico .)
    NOT             reduce using rule 6 (expression -> conditionalEspecifico .)


state 83

    (7) expression -> inicializarOp .

    RPAREN          reduce using rule 7 (expression -> inicializarOp .)
    AND             reduce using rule 7 (expression -> inicializarOp .)
    OR              reduce using rule 7 (expression -> inicializarOp .)
    NOT             reduce using rule 7 (expression -> inicializarOp .)


state 84

    (136) conditionalEspecifico -> ID . opConditional dataCondi
    (13) opConditional -> . ISEQUAL
    (14) opConditional -> . IS_NOT_IDENTICAL
    (15) opConditional -> . IS_IDENTICAL
    (16) opConditional -> . GREATER
    (17) opConditional -> . GREATEREQUAL
    (18) opConditional -> . LESS
    (19) opConditional -> . LESSEQUAL
    (20) opConditional -> . boolean
    (43) boolean -> . TRUE
    (44) boolean -> . FALSE

    ISEQUAL         shift and go to state 128
    IS_NOT_IDENTICAL shift and go to state 129
    IS_IDENTICAL    shift and go to state 130
    GREATER         shift and go to state 131
    GREATEREQUAL    shift and go to state 132
    LESS            shift and go to state 133
    LESSEQUAL       shift and go to state 134
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54

    opConditional                  shift and go to state 127
    boolean                        shift and go to state 135

state 85

    (137) conditionalEspecifico -> NUM . opConditional NUM
    (131) enteros -> NUM .
    (13) opConditional -> . ISEQUAL
    (14) opConditional -> . IS_NOT_IDENTICAL
    (15) opConditional -> . IS_IDENTICAL
    (16) opConditional -> . GREATER
    (17) opConditional -> . GREATEREQUAL
    (18) opConditional -> . LESS
    (19) opConditional -> . LESSEQUAL
    (20) opConditional -> . boolean
    (43) boolean -> . TRUE
    (44) boolean -> . FALSE

    PERIOD          reduce using rule 131 (enteros -> NUM .)
    PLUS            reduce using rule 131 (enteros -> NUM .)
    MINUS           reduce using rule 131 (enteros -> NUM .)
    TIMES           reduce using rule 131 (enteros -> NUM .)
    DIVIDE          reduce using rule 131 (enteros -> NUM .)
    RPAREN          reduce using rule 131 (enteros -> NUM .)
    AND             reduce using rule 131 (enteros -> NUM .)
    OR              reduce using rule 131 (enteros -> NUM .)
    NOT             reduce using rule 131 (enteros -> NUM .)
    ISEQUAL         shift and go to state 128
    IS_NOT_IDENTICAL shift and go to state 129
    IS_IDENTICAL    shift and go to state 130
    GREATER         shift and go to state 131
    GREATEREQUAL    shift and go to state 132
    LESS            shift and go to state 133
    LESSEQUAL       shift and go to state 134
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54

    opConditional                  shift and go to state 136
    boolean                        shift and go to state 135

state 86

    (138) conditionalEspecifico -> STRING . opConditional STRING
    (13) opConditional -> . ISEQUAL
    (14) opConditional -> . IS_NOT_IDENTICAL
    (15) opConditional -> . IS_IDENTICAL
    (16) opConditional -> . GREATER
    (17) opConditional -> . GREATEREQUAL
    (18) opConditional -> . LESS
    (19) opConditional -> . LESSEQUAL
    (20) opConditional -> . boolean
    (43) boolean -> . TRUE
    (44) boolean -> . FALSE

    ISEQUAL         shift and go to state 128
    IS_NOT_IDENTICAL shift and go to state 129
    IS_IDENTICAL    shift and go to state 130
    GREATER         shift and go to state 131
    GREATEREQUAL    shift and go to state 132
    LESS            shift and go to state 133
    LESSEQUAL       shift and go to state 134
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54

    opConditional                  shift and go to state 137
    boolean                        shift and go to state 135

state 87

    (30) sentencias_while -> WHILE LPAREN expression . RPAREN cuerpo_de_sentencias
    (31) sentencias_while -> WHILE LPAREN expression . operadorLogical expression RPAREN cuerpo_de_sentencias
    (21) operadorLogical -> . AND
    (22) operadorLogical -> . OR
    (23) operadorLogical -> . NOT

    RPAREN          shift and go to state 138
    AND             shift and go to state 124
    OR              shift and go to state 125
    NOT             shift and go to state 126

    operadorLogical                shift and go to state 139

state 88

    (32) impresion -> ALERT LPAREN valores_de_impresion . RPAREN COLON

    RPAREN          shift and go to state 140


state 89

    (38) impresion_vacio -> ALERT LPAREN RPAREN . COLON

    COLON           shift and go to state 141


state 90

    (33) valores_de_impresion -> inicializarOp .
    (40) javaScript_param -> inicializarOp .

  ! reduce/reduce conflict for RPAREN resolved using rule 33 (valores_de_impresion -> inicializarOp .)
  ! reduce/reduce conflict for COLON resolved using rule 33 (valores_de_impresion -> inicializarOp .)
    RPAREN          reduce using rule 33 (valores_de_impresion -> inicializarOp .)
    COLON           reduce using rule 33 (valores_de_impresion -> inicializarOp .)
    PLUS            reduce using rule 40 (javaScript_param -> inicializarOp .)
    MINUS           reduce using rule 40 (javaScript_param -> inicializarOp .)
    DIVIDE          reduce using rule 40 (javaScript_param -> inicializarOp .)
    TIMES           reduce using rule 40 (javaScript_param -> inicializarOp .)

  ! RPAREN          [ reduce using rule 40 (javaScript_param -> inicializarOp .) ]
  ! COLON           [ reduce using rule 40 (javaScript_param -> inicializarOp .) ]


state 91

    (34) valores_de_impresion -> javaScript_param .
    (90) return_ops -> javaScript_param .
    (91) return_ops -> javaScript_param . operadores_mat return_ops
    (92) operadores_mat -> . PLUS
    (93) operadores_mat -> . MINUS
    (94) operadores_mat -> . DIVIDE
    (95) operadores_mat -> . TIMES

  ! reduce/reduce conflict for RPAREN resolved using rule 34 (valores_de_impresion -> javaScript_param .)
  ! reduce/reduce conflict for COLON resolved using rule 34 (valores_de_impresion -> javaScript_param .)
    RPAREN          reduce using rule 34 (valores_de_impresion -> javaScript_param .)
    COLON           reduce using rule 34 (valores_de_impresion -> javaScript_param .)
    PLUS            shift and go to state 143
    MINUS           shift and go to state 144
    DIVIDE          shift and go to state 145
    TIMES           shift and go to state 146

  ! RPAREN          [ reduce using rule 90 (return_ops -> javaScript_param .) ]
  ! COLON           [ reduce using rule 90 (return_ops -> javaScript_param .) ]

    operadores_mat                 shift and go to state 142

state 92

    (35) valores_de_impresion -> callFunction .

    RPAREN          reduce using rule 35 (valores_de_impresion -> callFunction .)
    COLON           reduce using rule 35 (valores_de_impresion -> callFunction .)


state 93

    (36) valores_de_impresion -> estructuras_datos .

    RPAREN          reduce using rule 36 (valores_de_impresion -> estructuras_datos .)
    COLON           reduce using rule 36 (valores_de_impresion -> estructuras_datos .)


state 94

    (37) valores_de_impresion -> return_ops .

    RPAREN          reduce using rule 37 (valores_de_impresion -> return_ops .)
    COLON           reduce using rule 37 (valores_de_impresion -> return_ops .)


state 95

    (42) javaScript_param -> ID .
    (96) callFunction -> ID . LPAREN params RPAREN
    (97) callFunction -> ID . LPAREN RPAREN

    PLUS            reduce using rule 42 (javaScript_param -> ID .)
    MINUS           reduce using rule 42 (javaScript_param -> ID .)
    DIVIDE          reduce using rule 42 (javaScript_param -> ID .)
    TIMES           reduce using rule 42 (javaScript_param -> ID .)
    RPAREN          reduce using rule 42 (javaScript_param -> ID .)
    COLON           reduce using rule 42 (javaScript_param -> ID .)
    LPAREN          shift and go to state 27


state 96

    (96) callFunction -> ID LPAREN params RPAREN .

    COLON           reduce using rule 96 (callFunction -> ID LPAREN params RPAREN .)
    RPAREN          reduce using rule 96 (callFunction -> ID LPAREN params RPAREN .)


state 97

    (99) params -> javaScript_param COMMA . params
    (98) params -> . javaScript_param
    (99) params -> . javaScript_param COMMA params
    (39) javaScript_param -> . STRING
    (40) javaScript_param -> . inicializarOp
    (41) javaScript_param -> . boolean
    (42) javaScript_param -> . ID
    (107) inicializarOp -> . MINUS operacionesMath
    (108) inicializarOp -> . PLUS operacionesMath
    (109) inicializarOp -> . operacionesMath
    (110) inicializarOp -> . numOperadores
    (43) boolean -> . TRUE
    (44) boolean -> . FALSE
    (111) operacionesMath -> . suma
    (112) operacionesMath -> . resta
    (113) operacionesMath -> . multiplicacion
    (114) operacionesMath -> . divicion
    (129) numOperadores -> . enteros
    (130) numOperadores -> . decimales
    (115) suma -> . numOperadores PLUS inicializarOp
    (116) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN
    (117) suma -> . numOperadores PLUS suma
    (118) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN suma
    (119) resta -> . numOperadores MINUS inicializarOp
    (120) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN
    (121) resta -> . numOperadores MINUS resta
    (122) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN resta
    (123) multiplicacion -> . numOperadores TIMES LPAREN inicializarOp RPAREN
    (124) multiplicacion -> . numOperadores TIMES inicializarOp
    (125) multiplicacion -> . numOperadores TIMES multiplicacion
    (126) divicion -> . numOperadores DIVIDE LPAREN inicializarOp RPAREN
    (127) divicion -> . numOperadores DIVIDE inicializarOp
    (128) divicion -> . numOperadores DIVIDE divicion
    (131) enteros -> . NUM
    (132) enteros -> . numNegative
    (135) decimales -> . enteros PERIOD NUM
    (133) numNegative -> . MINUS NUM
    (134) numNegative -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    STRING          shift and go to state 46
    ID              shift and go to state 42
    MINUS           shift and go to state 49
    PLUS            shift and go to state 51
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUM             shift and go to state 61
    PERIOD          reduce using rule 134 (numNegative -> .)
    TIMES           reduce using rule 134 (numNegative -> .)
    DIVIDE          reduce using rule 134 (numNegative -> .)
    COMMA           reduce using rule 134 (numNegative -> .)
    RPAREN          reduce using rule 134 (numNegative -> .)

  ! PLUS            [ reduce using rule 134 (numNegative -> .) ]
  ! MINUS           [ reduce using rule 134 (numNegative -> .) ]

    javaScript_param               shift and go to state 45
    params                         shift and go to state 147
    inicializarOp                  shift and go to state 47
    boolean                        shift and go to state 48
    operacionesMath                shift and go to state 50
    numOperadores                  shift and go to state 52
    suma                           shift and go to state 55
    resta                          shift and go to state 56
    multiplicacion                 shift and go to state 57
    divicion                       shift and go to state 58
    enteros                        shift and go to state 59
    decimales                      shift and go to state 60
    numNegative                    shift and go to state 62

state 98

    (133) numNegative -> MINUS . NUM

    NUM             shift and go to state 148


state 99

    (107) inicializarOp -> MINUS operacionesMath .

    COMMA           reduce using rule 107 (inicializarOp -> MINUS operacionesMath .)
    RPAREN          reduce using rule 107 (inicializarOp -> MINUS operacionesMath .)
    COLON           reduce using rule 107 (inicializarOp -> MINUS operacionesMath .)
    AND             reduce using rule 107 (inicializarOp -> MINUS operacionesMath .)
    OR              reduce using rule 107 (inicializarOp -> MINUS operacionesMath .)
    NOT             reduce using rule 107 (inicializarOp -> MINUS operacionesMath .)
    PLUS            reduce using rule 107 (inicializarOp -> MINUS operacionesMath .)
    MINUS           reduce using rule 107 (inicializarOp -> MINUS operacionesMath .)
    DIVIDE          reduce using rule 107 (inicializarOp -> MINUS operacionesMath .)
    TIMES           reduce using rule 107 (inicializarOp -> MINUS operacionesMath .)
    RBRACKET        reduce using rule 107 (inicializarOp -> MINUS operacionesMath .)


state 100

    (133) numNegative -> MINUS NUM .
    (131) enteros -> NUM .

  ! reduce/reduce conflict for PERIOD resolved using rule 131 (enteros -> NUM .)
  ! reduce/reduce conflict for PLUS resolved using rule 131 (enteros -> NUM .)
  ! reduce/reduce conflict for MINUS resolved using rule 131 (enteros -> NUM .)
  ! reduce/reduce conflict for TIMES resolved using rule 131 (enteros -> NUM .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 131 (enteros -> NUM .)
    COMMA           reduce using rule 133 (numNegative -> MINUS NUM .)
    RPAREN          reduce using rule 133 (numNegative -> MINUS NUM .)
    COLON           reduce using rule 133 (numNegative -> MINUS NUM .)
    AND             reduce using rule 133 (numNegative -> MINUS NUM .)
    OR              reduce using rule 133 (numNegative -> MINUS NUM .)
    NOT             reduce using rule 133 (numNegative -> MINUS NUM .)
    RBRACKET        reduce using rule 133 (numNegative -> MINUS NUM .)
    PERIOD          reduce using rule 131 (enteros -> NUM .)
    PLUS            reduce using rule 131 (enteros -> NUM .)
    MINUS           reduce using rule 131 (enteros -> NUM .)
    TIMES           reduce using rule 131 (enteros -> NUM .)
    DIVIDE          reduce using rule 131 (enteros -> NUM .)

  ! PERIOD          [ reduce using rule 133 (numNegative -> MINUS NUM .) ]
  ! PLUS            [ reduce using rule 133 (numNegative -> MINUS NUM .) ]
  ! MINUS           [ reduce using rule 133 (numNegative -> MINUS NUM .) ]
  ! TIMES           [ reduce using rule 133 (numNegative -> MINUS NUM .) ]
  ! DIVIDE          [ reduce using rule 133 (numNegative -> MINUS NUM .) ]


state 101

    (115) suma -> numOperadores . PLUS inicializarOp
    (116) suma -> numOperadores . PLUS LPAREN inicializarOp RPAREN
    (117) suma -> numOperadores . PLUS suma
    (118) suma -> numOperadores . PLUS LPAREN inicializarOp RPAREN suma
    (119) resta -> numOperadores . MINUS inicializarOp
    (120) resta -> numOperadores . MINUS LPAREN inicializarOp RPAREN
    (121) resta -> numOperadores . MINUS resta
    (122) resta -> numOperadores . MINUS LPAREN inicializarOp RPAREN resta
    (123) multiplicacion -> numOperadores . TIMES LPAREN inicializarOp RPAREN
    (124) multiplicacion -> numOperadores . TIMES inicializarOp
    (125) multiplicacion -> numOperadores . TIMES multiplicacion
    (126) divicion -> numOperadores . DIVIDE LPAREN inicializarOp RPAREN
    (127) divicion -> numOperadores . DIVIDE inicializarOp
    (128) divicion -> numOperadores . DIVIDE divicion

    PLUS            shift and go to state 103
    MINUS           shift and go to state 104
    TIMES           shift and go to state 105
    DIVIDE          shift and go to state 106


state 102

    (108) inicializarOp -> PLUS operacionesMath .

    COMMA           reduce using rule 108 (inicializarOp -> PLUS operacionesMath .)
    RPAREN          reduce using rule 108 (inicializarOp -> PLUS operacionesMath .)
    COLON           reduce using rule 108 (inicializarOp -> PLUS operacionesMath .)
    AND             reduce using rule 108 (inicializarOp -> PLUS operacionesMath .)
    OR              reduce using rule 108 (inicializarOp -> PLUS operacionesMath .)
    NOT             reduce using rule 108 (inicializarOp -> PLUS operacionesMath .)
    PLUS            reduce using rule 108 (inicializarOp -> PLUS operacionesMath .)
    MINUS           reduce using rule 108 (inicializarOp -> PLUS operacionesMath .)
    DIVIDE          reduce using rule 108 (inicializarOp -> PLUS operacionesMath .)
    TIMES           reduce using rule 108 (inicializarOp -> PLUS operacionesMath .)
    RBRACKET        reduce using rule 108 (inicializarOp -> PLUS operacionesMath .)


state 103

    (115) suma -> numOperadores PLUS . inicializarOp
    (116) suma -> numOperadores PLUS . LPAREN inicializarOp RPAREN
    (117) suma -> numOperadores PLUS . suma
    (118) suma -> numOperadores PLUS . LPAREN inicializarOp RPAREN suma
    (107) inicializarOp -> . MINUS operacionesMath
    (108) inicializarOp -> . PLUS operacionesMath
    (109) inicializarOp -> . operacionesMath
    (110) inicializarOp -> . numOperadores
    (115) suma -> . numOperadores PLUS inicializarOp
    (116) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN
    (117) suma -> . numOperadores PLUS suma
    (118) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN suma
    (111) operacionesMath -> . suma
    (112) operacionesMath -> . resta
    (113) operacionesMath -> . multiplicacion
    (114) operacionesMath -> . divicion
    (129) numOperadores -> . enteros
    (130) numOperadores -> . decimales
    (119) resta -> . numOperadores MINUS inicializarOp
    (120) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN
    (121) resta -> . numOperadores MINUS resta
    (122) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN resta
    (123) multiplicacion -> . numOperadores TIMES LPAREN inicializarOp RPAREN
    (124) multiplicacion -> . numOperadores TIMES inicializarOp
    (125) multiplicacion -> . numOperadores TIMES multiplicacion
    (126) divicion -> . numOperadores DIVIDE LPAREN inicializarOp RPAREN
    (127) divicion -> . numOperadores DIVIDE inicializarOp
    (128) divicion -> . numOperadores DIVIDE divicion
    (131) enteros -> . NUM
    (132) enteros -> . numNegative
    (135) decimales -> . enteros PERIOD NUM
    (133) numNegative -> . MINUS NUM
    (134) numNegative -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    LPAREN          shift and go to state 150
    MINUS           shift and go to state 49
    PLUS            shift and go to state 51
    NUM             shift and go to state 61
    PERIOD          reduce using rule 134 (numNegative -> .)
    TIMES           reduce using rule 134 (numNegative -> .)
    DIVIDE          reduce using rule 134 (numNegative -> .)
    COMMA           reduce using rule 134 (numNegative -> .)
    RPAREN          reduce using rule 134 (numNegative -> .)
    COLON           reduce using rule 134 (numNegative -> .)
    AND             reduce using rule 134 (numNegative -> .)
    OR              reduce using rule 134 (numNegative -> .)
    NOT             reduce using rule 134 (numNegative -> .)
    RBRACKET        reduce using rule 134 (numNegative -> .)

  ! PLUS            [ reduce using rule 134 (numNegative -> .) ]
  ! MINUS           [ reduce using rule 134 (numNegative -> .) ]

    numOperadores                  shift and go to state 52
    inicializarOp                  shift and go to state 149
    suma                           shift and go to state 151
    operacionesMath                shift and go to state 50
    resta                          shift and go to state 56
    multiplicacion                 shift and go to state 57
    divicion                       shift and go to state 58
    enteros                        shift and go to state 59
    decimales                      shift and go to state 60
    numNegative                    shift and go to state 62

state 104

    (119) resta -> numOperadores MINUS . inicializarOp
    (120) resta -> numOperadores MINUS . LPAREN inicializarOp RPAREN
    (121) resta -> numOperadores MINUS . resta
    (122) resta -> numOperadores MINUS . LPAREN inicializarOp RPAREN resta
    (107) inicializarOp -> . MINUS operacionesMath
    (108) inicializarOp -> . PLUS operacionesMath
    (109) inicializarOp -> . operacionesMath
    (110) inicializarOp -> . numOperadores
    (119) resta -> . numOperadores MINUS inicializarOp
    (120) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN
    (121) resta -> . numOperadores MINUS resta
    (122) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN resta
    (111) operacionesMath -> . suma
    (112) operacionesMath -> . resta
    (113) operacionesMath -> . multiplicacion
    (114) operacionesMath -> . divicion
    (129) numOperadores -> . enteros
    (130) numOperadores -> . decimales
    (115) suma -> . numOperadores PLUS inicializarOp
    (116) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN
    (117) suma -> . numOperadores PLUS suma
    (118) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN suma
    (123) multiplicacion -> . numOperadores TIMES LPAREN inicializarOp RPAREN
    (124) multiplicacion -> . numOperadores TIMES inicializarOp
    (125) multiplicacion -> . numOperadores TIMES multiplicacion
    (126) divicion -> . numOperadores DIVIDE LPAREN inicializarOp RPAREN
    (127) divicion -> . numOperadores DIVIDE inicializarOp
    (128) divicion -> . numOperadores DIVIDE divicion
    (131) enteros -> . NUM
    (132) enteros -> . numNegative
    (135) decimales -> . enteros PERIOD NUM
    (133) numNegative -> . MINUS NUM
    (134) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
    LPAREN          shift and go to state 154
    MINUS           shift and go to state 49
    PLUS            shift and go to state 51
    NUM             shift and go to state 61
    PERIOD          reduce using rule 134 (numNegative -> .)
    TIMES           reduce using rule 134 (numNegative -> .)
    DIVIDE          reduce using rule 134 (numNegative -> .)
    COMMA           reduce using rule 134 (numNegative -> .)
    RPAREN          reduce using rule 134 (numNegative -> .)
    COLON           reduce using rule 134 (numNegative -> .)
    AND             reduce using rule 134 (numNegative -> .)
    OR              reduce using rule 134 (numNegative -> .)
    NOT             reduce using rule 134 (numNegative -> .)
    RBRACKET        reduce using rule 134 (numNegative -> .)

  ! MINUS           [ reduce using rule 134 (numNegative -> .) ]
  ! PLUS            [ reduce using rule 134 (numNegative -> .) ]

    numOperadores                  shift and go to state 152
    inicializarOp                  shift and go to state 153
    resta                          shift and go to state 155
    operacionesMath                shift and go to state 50
    suma                           shift and go to state 55
    multiplicacion                 shift and go to state 57
    divicion                       shift and go to state 58
    enteros                        shift and go to state 59
    decimales                      shift and go to state 60
    numNegative                    shift and go to state 62

state 105

    (123) multiplicacion -> numOperadores TIMES . LPAREN inicializarOp RPAREN
    (124) multiplicacion -> numOperadores TIMES . inicializarOp
    (125) multiplicacion -> numOperadores TIMES . multiplicacion
    (107) inicializarOp -> . MINUS operacionesMath
    (108) inicializarOp -> . PLUS operacionesMath
    (109) inicializarOp -> . operacionesMath
    (110) inicializarOp -> . numOperadores
    (123) multiplicacion -> . numOperadores TIMES LPAREN inicializarOp RPAREN
    (124) multiplicacion -> . numOperadores TIMES inicializarOp
    (125) multiplicacion -> . numOperadores TIMES multiplicacion
    (111) operacionesMath -> . suma
    (112) operacionesMath -> . resta
    (113) operacionesMath -> . multiplicacion
    (114) operacionesMath -> . divicion
    (129) numOperadores -> . enteros
    (130) numOperadores -> . decimales
    (115) suma -> . numOperadores PLUS inicializarOp
    (116) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN
    (117) suma -> . numOperadores PLUS suma
    (118) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN suma
    (119) resta -> . numOperadores MINUS inicializarOp
    (120) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN
    (121) resta -> . numOperadores MINUS resta
    (122) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN resta
    (126) divicion -> . numOperadores DIVIDE LPAREN inicializarOp RPAREN
    (127) divicion -> . numOperadores DIVIDE inicializarOp
    (128) divicion -> . numOperadores DIVIDE divicion
    (131) enteros -> . NUM
    (132) enteros -> . numNegative
    (135) decimales -> . enteros PERIOD NUM
    (133) numNegative -> . MINUS NUM
    (134) numNegative -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    LPAREN          shift and go to state 157
    MINUS           shift and go to state 49
    PLUS            shift and go to state 51
    NUM             shift and go to state 61
    PERIOD          reduce using rule 134 (numNegative -> .)
    TIMES           reduce using rule 134 (numNegative -> .)
    DIVIDE          reduce using rule 134 (numNegative -> .)
    COMMA           reduce using rule 134 (numNegative -> .)
    RPAREN          reduce using rule 134 (numNegative -> .)
    COLON           reduce using rule 134 (numNegative -> .)
    AND             reduce using rule 134 (numNegative -> .)
    OR              reduce using rule 134 (numNegative -> .)
    NOT             reduce using rule 134 (numNegative -> .)
    RBRACKET        reduce using rule 134 (numNegative -> .)

  ! PLUS            [ reduce using rule 134 (numNegative -> .) ]
  ! MINUS           [ reduce using rule 134 (numNegative -> .) ]

    numOperadores                  shift and go to state 156
    inicializarOp                  shift and go to state 158
    multiplicacion                 shift and go to state 159
    operacionesMath                shift and go to state 50
    suma                           shift and go to state 55
    resta                          shift and go to state 56
    divicion                       shift and go to state 58
    enteros                        shift and go to state 59
    decimales                      shift and go to state 60
    numNegative                    shift and go to state 62

state 106

    (126) divicion -> numOperadores DIVIDE . LPAREN inicializarOp RPAREN
    (127) divicion -> numOperadores DIVIDE . inicializarOp
    (128) divicion -> numOperadores DIVIDE . divicion
    (107) inicializarOp -> . MINUS operacionesMath
    (108) inicializarOp -> . PLUS operacionesMath
    (109) inicializarOp -> . operacionesMath
    (110) inicializarOp -> . numOperadores
    (126) divicion -> . numOperadores DIVIDE LPAREN inicializarOp RPAREN
    (127) divicion -> . numOperadores DIVIDE inicializarOp
    (128) divicion -> . numOperadores DIVIDE divicion
    (111) operacionesMath -> . suma
    (112) operacionesMath -> . resta
    (113) operacionesMath -> . multiplicacion
    (114) operacionesMath -> . divicion
    (129) numOperadores -> . enteros
    (130) numOperadores -> . decimales
    (115) suma -> . numOperadores PLUS inicializarOp
    (116) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN
    (117) suma -> . numOperadores PLUS suma
    (118) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN suma
    (119) resta -> . numOperadores MINUS inicializarOp
    (120) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN
    (121) resta -> . numOperadores MINUS resta
    (122) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN resta
    (123) multiplicacion -> . numOperadores TIMES LPAREN inicializarOp RPAREN
    (124) multiplicacion -> . numOperadores TIMES inicializarOp
    (125) multiplicacion -> . numOperadores TIMES multiplicacion
    (131) enteros -> . NUM
    (132) enteros -> . numNegative
    (135) decimales -> . enteros PERIOD NUM
    (133) numNegative -> . MINUS NUM
    (134) numNegative -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    LPAREN          shift and go to state 161
    MINUS           shift and go to state 49
    PLUS            shift and go to state 51
    NUM             shift and go to state 61
    PERIOD          reduce using rule 134 (numNegative -> .)
    DIVIDE          reduce using rule 134 (numNegative -> .)
    TIMES           reduce using rule 134 (numNegative -> .)
    COMMA           reduce using rule 134 (numNegative -> .)
    RPAREN          reduce using rule 134 (numNegative -> .)
    COLON           reduce using rule 134 (numNegative -> .)
    AND             reduce using rule 134 (numNegative -> .)
    OR              reduce using rule 134 (numNegative -> .)
    NOT             reduce using rule 134 (numNegative -> .)
    RBRACKET        reduce using rule 134 (numNegative -> .)

  ! PLUS            [ reduce using rule 134 (numNegative -> .) ]
  ! MINUS           [ reduce using rule 134 (numNegative -> .) ]

    numOperadores                  shift and go to state 160
    inicializarOp                  shift and go to state 162
    divicion                       shift and go to state 163
    operacionesMath                shift and go to state 50
    suma                           shift and go to state 55
    resta                          shift and go to state 56
    multiplicacion                 shift and go to state 57
    enteros                        shift and go to state 59
    decimales                      shift and go to state 60
    numNegative                    shift and go to state 62

state 107

    (135) decimales -> enteros PERIOD . NUM

    NUM             shift and go to state 164


state 108

    (62) arrayDeclare -> LBRACKET RBRACKET .

    COLON           reduce using rule 62 (arrayDeclare -> LBRACKET RBRACKET .)
    RPAREN          reduce using rule 62 (arrayDeclare -> LBRACKET RBRACKET .)
    COMMA           reduce using rule 62 (arrayDeclare -> LBRACKET RBRACKET .)
    RBRACKET        reduce using rule 62 (arrayDeclare -> LBRACKET RBRACKET .)


state 109

    (63) arrayDeclare -> LBRACKET arrayValues . RBRACKET

    RBRACKET        shift and go to state 165


state 110

    (66) arrayValues -> javaScript_param .
    (67) arrayValues -> javaScript_param . COMMA arrayValues

    RBRACKET        reduce using rule 66 (arrayValues -> javaScript_param .)
    RPAREN          reduce using rule 66 (arrayValues -> javaScript_param .)
    COMMA           shift and go to state 166


state 111

    (64) arrayDeclare -> NEW ARRAY . LPAREN arrayValues RPAREN
    (65) arrayDeclare -> NEW ARRAY . LPAREN RPAREN

    LPAREN          shift and go to state 167


state 112

    (102) declararSet -> NEW SET . LPAREN RPAREN
    (103) declararSet -> NEW SET . LPAREN LBRACKET iterableSet RBRACKET RPAREN

    LPAREN          shift and go to state 168


state 113

    (71) declareMap -> NEW MAP . LPAREN LBRACKET iterableMap RBRACKET RPAREN
    (72) declareMap -> NEW MAP . LPAREN RPAREN

    LPAREN          shift and go to state 169


state 114

    (68) methodArray -> PERIOD PUSH LPAREN . javaScript_param RPAREN
    (39) javaScript_param -> . STRING
    (40) javaScript_param -> . inicializarOp
    (41) javaScript_param -> . boolean
    (42) javaScript_param -> . ID
    (107) inicializarOp -> . MINUS operacionesMath
    (108) inicializarOp -> . PLUS operacionesMath
    (109) inicializarOp -> . operacionesMath
    (110) inicializarOp -> . numOperadores
    (43) boolean -> . TRUE
    (44) boolean -> . FALSE
    (111) operacionesMath -> . suma
    (112) operacionesMath -> . resta
    (113) operacionesMath -> . multiplicacion
    (114) operacionesMath -> . divicion
    (129) numOperadores -> . enteros
    (130) numOperadores -> . decimales
    (115) suma -> . numOperadores PLUS inicializarOp
    (116) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN
    (117) suma -> . numOperadores PLUS suma
    (118) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN suma
    (119) resta -> . numOperadores MINUS inicializarOp
    (120) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN
    (121) resta -> . numOperadores MINUS resta
    (122) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN resta
    (123) multiplicacion -> . numOperadores TIMES LPAREN inicializarOp RPAREN
    (124) multiplicacion -> . numOperadores TIMES inicializarOp
    (125) multiplicacion -> . numOperadores TIMES multiplicacion
    (126) divicion -> . numOperadores DIVIDE LPAREN inicializarOp RPAREN
    (127) divicion -> . numOperadores DIVIDE inicializarOp
    (128) divicion -> . numOperadores DIVIDE divicion
    (131) enteros -> . NUM
    (132) enteros -> . numNegative
    (135) decimales -> . enteros PERIOD NUM
    (133) numNegative -> . MINUS NUM
    (134) numNegative -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    STRING          shift and go to state 46
    ID              shift and go to state 42
    MINUS           shift and go to state 49
    PLUS            shift and go to state 51
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUM             shift and go to state 61
    PERIOD          reduce using rule 134 (numNegative -> .)
    TIMES           reduce using rule 134 (numNegative -> .)
    DIVIDE          reduce using rule 134 (numNegative -> .)
    RPAREN          reduce using rule 134 (numNegative -> .)

  ! PLUS            [ reduce using rule 134 (numNegative -> .) ]
  ! MINUS           [ reduce using rule 134 (numNegative -> .) ]

    javaScript_param               shift and go to state 170
    inicializarOp                  shift and go to state 47
    boolean                        shift and go to state 48
    operacionesMath                shift and go to state 50
    numOperadores                  shift and go to state 52
    suma                           shift and go to state 55
    resta                          shift and go to state 56
    multiplicacion                 shift and go to state 57
    divicion                       shift and go to state 58
    enteros                        shift and go to state 59
    decimales                      shift and go to state 60
    numNegative                    shift and go to state 62

state 115

    (69) methodArray -> PERIOD UNSHIFT LPAREN . arrayValues RPAREN
    (66) arrayValues -> . javaScript_param
    (67) arrayValues -> . javaScript_param COMMA arrayValues
    (39) javaScript_param -> . STRING
    (40) javaScript_param -> . inicializarOp
    (41) javaScript_param -> . boolean
    (42) javaScript_param -> . ID
    (107) inicializarOp -> . MINUS operacionesMath
    (108) inicializarOp -> . PLUS operacionesMath
    (109) inicializarOp -> . operacionesMath
    (110) inicializarOp -> . numOperadores
    (43) boolean -> . TRUE
    (44) boolean -> . FALSE
    (111) operacionesMath -> . suma
    (112) operacionesMath -> . resta
    (113) operacionesMath -> . multiplicacion
    (114) operacionesMath -> . divicion
    (129) numOperadores -> . enteros
    (130) numOperadores -> . decimales
    (115) suma -> . numOperadores PLUS inicializarOp
    (116) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN
    (117) suma -> . numOperadores PLUS suma
    (118) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN suma
    (119) resta -> . numOperadores MINUS inicializarOp
    (120) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN
    (121) resta -> . numOperadores MINUS resta
    (122) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN resta
    (123) multiplicacion -> . numOperadores TIMES LPAREN inicializarOp RPAREN
    (124) multiplicacion -> . numOperadores TIMES inicializarOp
    (125) multiplicacion -> . numOperadores TIMES multiplicacion
    (126) divicion -> . numOperadores DIVIDE LPAREN inicializarOp RPAREN
    (127) divicion -> . numOperadores DIVIDE inicializarOp
    (128) divicion -> . numOperadores DIVIDE divicion
    (131) enteros -> . NUM
    (132) enteros -> . numNegative
    (135) decimales -> . enteros PERIOD NUM
    (133) numNegative -> . MINUS NUM
    (134) numNegative -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    STRING          shift and go to state 46
    ID              shift and go to state 42
    MINUS           shift and go to state 49
    PLUS            shift and go to state 51
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUM             shift and go to state 61
    PERIOD          reduce using rule 134 (numNegative -> .)
    TIMES           reduce using rule 134 (numNegative -> .)
    DIVIDE          reduce using rule 134 (numNegative -> .)
    COMMA           reduce using rule 134 (numNegative -> .)
    RPAREN          reduce using rule 134 (numNegative -> .)

  ! PLUS            [ reduce using rule 134 (numNegative -> .) ]
  ! MINUS           [ reduce using rule 134 (numNegative -> .) ]

    arrayValues                    shift and go to state 171
    javaScript_param               shift and go to state 110
    inicializarOp                  shift and go to state 47
    boolean                        shift and go to state 48
    operacionesMath                shift and go to state 50
    numOperadores                  shift and go to state 52
    suma                           shift and go to state 55
    resta                          shift and go to state 56
    multiplicacion                 shift and go to state 57
    divicion                       shift and go to state 58
    enteros                        shift and go to state 59
    decimales                      shift and go to state 60
    numNegative                    shift and go to state 62

state 116

    (70) methodArray -> PERIOD POP LPAREN . RPAREN

    RPAREN          shift and go to state 172


state 117

    (104) methodSet -> PERIOD ADD LPAREN . javaScript_param RPAREN
    (39) javaScript_param -> . STRING
    (40) javaScript_param -> . inicializarOp
    (41) javaScript_param -> . boolean
    (42) javaScript_param -> . ID
    (107) inicializarOp -> . MINUS operacionesMath
    (108) inicializarOp -> . PLUS operacionesMath
    (109) inicializarOp -> . operacionesMath
    (110) inicializarOp -> . numOperadores
    (43) boolean -> . TRUE
    (44) boolean -> . FALSE
    (111) operacionesMath -> . suma
    (112) operacionesMath -> . resta
    (113) operacionesMath -> . multiplicacion
    (114) operacionesMath -> . divicion
    (129) numOperadores -> . enteros
    (130) numOperadores -> . decimales
    (115) suma -> . numOperadores PLUS inicializarOp
    (116) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN
    (117) suma -> . numOperadores PLUS suma
    (118) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN suma
    (119) resta -> . numOperadores MINUS inicializarOp
    (120) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN
    (121) resta -> . numOperadores MINUS resta
    (122) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN resta
    (123) multiplicacion -> . numOperadores TIMES LPAREN inicializarOp RPAREN
    (124) multiplicacion -> . numOperadores TIMES inicializarOp
    (125) multiplicacion -> . numOperadores TIMES multiplicacion
    (126) divicion -> . numOperadores DIVIDE LPAREN inicializarOp RPAREN
    (127) divicion -> . numOperadores DIVIDE inicializarOp
    (128) divicion -> . numOperadores DIVIDE divicion
    (131) enteros -> . NUM
    (132) enteros -> . numNegative
    (135) decimales -> . enteros PERIOD NUM
    (133) numNegative -> . MINUS NUM
    (134) numNegative -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    STRING          shift and go to state 46
    ID              shift and go to state 42
    MINUS           shift and go to state 49
    PLUS            shift and go to state 51
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUM             shift and go to state 61
    PERIOD          reduce using rule 134 (numNegative -> .)
    TIMES           reduce using rule 134 (numNegative -> .)
    DIVIDE          reduce using rule 134 (numNegative -> .)
    RPAREN          reduce using rule 134 (numNegative -> .)

  ! PLUS            [ reduce using rule 134 (numNegative -> .) ]
  ! MINUS           [ reduce using rule 134 (numNegative -> .) ]

    javaScript_param               shift and go to state 173
    inicializarOp                  shift and go to state 47
    boolean                        shift and go to state 48
    operacionesMath                shift and go to state 50
    numOperadores                  shift and go to state 52
    suma                           shift and go to state 55
    resta                          shift and go to state 56
    multiplicacion                 shift and go to state 57
    divicion                       shift and go to state 58
    enteros                        shift and go to state 59
    decimales                      shift and go to state 60
    numNegative                    shift and go to state 62

state 118

    (105) methodSet -> PERIOD DELETE LPAREN . javaScript_param RPAREN
    (39) javaScript_param -> . STRING
    (40) javaScript_param -> . inicializarOp
    (41) javaScript_param -> . boolean
    (42) javaScript_param -> . ID
    (107) inicializarOp -> . MINUS operacionesMath
    (108) inicializarOp -> . PLUS operacionesMath
    (109) inicializarOp -> . operacionesMath
    (110) inicializarOp -> . numOperadores
    (43) boolean -> . TRUE
    (44) boolean -> . FALSE
    (111) operacionesMath -> . suma
    (112) operacionesMath -> . resta
    (113) operacionesMath -> . multiplicacion
    (114) operacionesMath -> . divicion
    (129) numOperadores -> . enteros
    (130) numOperadores -> . decimales
    (115) suma -> . numOperadores PLUS inicializarOp
    (116) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN
    (117) suma -> . numOperadores PLUS suma
    (118) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN suma
    (119) resta -> . numOperadores MINUS inicializarOp
    (120) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN
    (121) resta -> . numOperadores MINUS resta
    (122) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN resta
    (123) multiplicacion -> . numOperadores TIMES LPAREN inicializarOp RPAREN
    (124) multiplicacion -> . numOperadores TIMES inicializarOp
    (125) multiplicacion -> . numOperadores TIMES multiplicacion
    (126) divicion -> . numOperadores DIVIDE LPAREN inicializarOp RPAREN
    (127) divicion -> . numOperadores DIVIDE inicializarOp
    (128) divicion -> . numOperadores DIVIDE divicion
    (131) enteros -> . NUM
    (132) enteros -> . numNegative
    (135) decimales -> . enteros PERIOD NUM
    (133) numNegative -> . MINUS NUM
    (134) numNegative -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    STRING          shift and go to state 46
    ID              shift and go to state 42
    MINUS           shift and go to state 49
    PLUS            shift and go to state 51
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUM             shift and go to state 61
    PERIOD          reduce using rule 134 (numNegative -> .)
    TIMES           reduce using rule 134 (numNegative -> .)
    DIVIDE          reduce using rule 134 (numNegative -> .)
    RPAREN          reduce using rule 134 (numNegative -> .)

  ! PLUS            [ reduce using rule 134 (numNegative -> .) ]
  ! MINUS           [ reduce using rule 134 (numNegative -> .) ]

    javaScript_param               shift and go to state 174
    inicializarOp                  shift and go to state 47
    boolean                        shift and go to state 48
    operacionesMath                shift and go to state 50
    numOperadores                  shift and go to state 52
    suma                           shift and go to state 55
    resta                          shift and go to state 56
    multiplicacion                 shift and go to state 57
    divicion                       shift and go to state 58
    enteros                        shift and go to state 59
    decimales                      shift and go to state 60
    numNegative                    shift and go to state 62

state 119

    (106) methodSet -> PERIOD CLEAR LPAREN . RPAREN
    (82) methodMap -> PERIOD CLEAR LPAREN . RPAREN

    RPAREN          shift and go to state 175


state 120

    (84) declareteFunction -> FUNCTION ID LPAREN params . RPAREN sentencesCmpt

    RPAREN          shift and go to state 176


state 121

    (85) declareteFunction -> FUNCTION ID LPAREN RPAREN . sentencesCmpt
    (86) sentencesCmpt -> . LBLOCK sentencia RBLOCK
    (87) sentencesCmpt -> . LBLOCK RBLOCK
    (88) sentencesCmpt -> . LBLOCK RETURN valores_de_impresion COLON RBLOCK
    (89) sentencesCmpt -> . LBLOCK sentencia RETURN valores_de_impresion COLON RBLOCK

    LBLOCK          shift and go to state 178

    sentencesCmpt                  shift and go to state 177

state 122

    (24) sentencias_if -> IF LPAREN expression operadorLogical . expression RPAREN cuerpo_de_sentencias
    (26) sentencias_if_else -> IF LPAREN expression operadorLogical . expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias
    (6) expression -> . conditionalEspecifico
    (7) expression -> . inicializarOp
    (136) conditionalEspecifico -> . ID opConditional dataCondi
    (137) conditionalEspecifico -> . NUM opConditional NUM
    (138) conditionalEspecifico -> . STRING opConditional STRING
    (107) inicializarOp -> . MINUS operacionesMath
    (108) inicializarOp -> . PLUS operacionesMath
    (109) inicializarOp -> . operacionesMath
    (110) inicializarOp -> . numOperadores
    (111) operacionesMath -> . suma
    (112) operacionesMath -> . resta
    (113) operacionesMath -> . multiplicacion
    (114) operacionesMath -> . divicion
    (129) numOperadores -> . enteros
    (130) numOperadores -> . decimales
    (115) suma -> . numOperadores PLUS inicializarOp
    (116) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN
    (117) suma -> . numOperadores PLUS suma
    (118) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN suma
    (119) resta -> . numOperadores MINUS inicializarOp
    (120) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN
    (121) resta -> . numOperadores MINUS resta
    (122) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN resta
    (123) multiplicacion -> . numOperadores TIMES LPAREN inicializarOp RPAREN
    (124) multiplicacion -> . numOperadores TIMES inicializarOp
    (125) multiplicacion -> . numOperadores TIMES multiplicacion
    (126) divicion -> . numOperadores DIVIDE LPAREN inicializarOp RPAREN
    (127) divicion -> . numOperadores DIVIDE inicializarOp
    (128) divicion -> . numOperadores DIVIDE divicion
    (131) enteros -> . NUM
    (132) enteros -> . numNegative
    (135) decimales -> . enteros PERIOD NUM
    (133) numNegative -> . MINUS NUM
    (134) numNegative -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    ID              shift and go to state 84
    NUM             shift and go to state 85
    STRING          shift and go to state 86
    MINUS           shift and go to state 49
    PLUS            shift and go to state 51
    PERIOD          reduce using rule 134 (numNegative -> .)
    TIMES           reduce using rule 134 (numNegative -> .)
    DIVIDE          reduce using rule 134 (numNegative -> .)
    RPAREN          reduce using rule 134 (numNegative -> .)

  ! PLUS            [ reduce using rule 134 (numNegative -> .) ]
  ! MINUS           [ reduce using rule 134 (numNegative -> .) ]

    expression                     shift and go to state 179
    conditionalEspecifico          shift and go to state 82
    inicializarOp                  shift and go to state 83
    operacionesMath                shift and go to state 50
    numOperadores                  shift and go to state 52
    suma                           shift and go to state 55
    resta                          shift and go to state 56
    multiplicacion                 shift and go to state 57
    divicion                       shift and go to state 58
    enteros                        shift and go to state 59
    decimales                      shift and go to state 60
    numNegative                    shift and go to state 62

state 123

    (25) sentencias_if -> IF LPAREN expression RPAREN . cuerpo_de_sentencias
    (27) sentencias_if_else -> IF LPAREN expression RPAREN . cuerpo_de_sentencias ELSE cuerpo_de_sentencias
    (28) cuerpo_de_sentencias -> . LBLOCK sentencia RBLOCK
    (29) cuerpo_de_sentencias -> . LBLOCK RBLOCK

    LBLOCK          shift and go to state 181

    cuerpo_de_sentencias           shift and go to state 180

state 124

    (21) operadorLogical -> AND .

    ID              reduce using rule 21 (operadorLogical -> AND .)
    NUM             reduce using rule 21 (operadorLogical -> AND .)
    STRING          reduce using rule 21 (operadorLogical -> AND .)
    MINUS           reduce using rule 21 (operadorLogical -> AND .)
    PLUS            reduce using rule 21 (operadorLogical -> AND .)
    RPAREN          reduce using rule 21 (operadorLogical -> AND .)
    TIMES           reduce using rule 21 (operadorLogical -> AND .)
    DIVIDE          reduce using rule 21 (operadorLogical -> AND .)
    PERIOD          reduce using rule 21 (operadorLogical -> AND .)


state 125

    (22) operadorLogical -> OR .

    ID              reduce using rule 22 (operadorLogical -> OR .)
    NUM             reduce using rule 22 (operadorLogical -> OR .)
    STRING          reduce using rule 22 (operadorLogical -> OR .)
    MINUS           reduce using rule 22 (operadorLogical -> OR .)
    PLUS            reduce using rule 22 (operadorLogical -> OR .)
    RPAREN          reduce using rule 22 (operadorLogical -> OR .)
    TIMES           reduce using rule 22 (operadorLogical -> OR .)
    DIVIDE          reduce using rule 22 (operadorLogical -> OR .)
    PERIOD          reduce using rule 22 (operadorLogical -> OR .)


state 126

    (23) operadorLogical -> NOT .

    ID              reduce using rule 23 (operadorLogical -> NOT .)
    NUM             reduce using rule 23 (operadorLogical -> NOT .)
    STRING          reduce using rule 23 (operadorLogical -> NOT .)
    MINUS           reduce using rule 23 (operadorLogical -> NOT .)
    PLUS            reduce using rule 23 (operadorLogical -> NOT .)
    RPAREN          reduce using rule 23 (operadorLogical -> NOT .)
    TIMES           reduce using rule 23 (operadorLogical -> NOT .)
    DIVIDE          reduce using rule 23 (operadorLogical -> NOT .)
    PERIOD          reduce using rule 23 (operadorLogical -> NOT .)


state 127

    (136) conditionalEspecifico -> ID opConditional . dataCondi
    (139) dataCondi -> . STRING
    (140) dataCondi -> . NUM

    STRING          shift and go to state 183
    NUM             shift and go to state 184

    dataCondi                      shift and go to state 182

state 128

    (13) opConditional -> ISEQUAL .

    STRING          reduce using rule 13 (opConditional -> ISEQUAL .)
    NUM             reduce using rule 13 (opConditional -> ISEQUAL .)


state 129

    (14) opConditional -> IS_NOT_IDENTICAL .

    STRING          reduce using rule 14 (opConditional -> IS_NOT_IDENTICAL .)
    NUM             reduce using rule 14 (opConditional -> IS_NOT_IDENTICAL .)


state 130

    (15) opConditional -> IS_IDENTICAL .

    STRING          reduce using rule 15 (opConditional -> IS_IDENTICAL .)
    NUM             reduce using rule 15 (opConditional -> IS_IDENTICAL .)


state 131

    (16) opConditional -> GREATER .

    STRING          reduce using rule 16 (opConditional -> GREATER .)
    NUM             reduce using rule 16 (opConditional -> GREATER .)


state 132

    (17) opConditional -> GREATEREQUAL .

    STRING          reduce using rule 17 (opConditional -> GREATEREQUAL .)
    NUM             reduce using rule 17 (opConditional -> GREATEREQUAL .)


state 133

    (18) opConditional -> LESS .

    STRING          reduce using rule 18 (opConditional -> LESS .)
    NUM             reduce using rule 18 (opConditional -> LESS .)


state 134

    (19) opConditional -> LESSEQUAL .

    STRING          reduce using rule 19 (opConditional -> LESSEQUAL .)
    NUM             reduce using rule 19 (opConditional -> LESSEQUAL .)


state 135

    (20) opConditional -> boolean .

    STRING          reduce using rule 20 (opConditional -> boolean .)
    NUM             reduce using rule 20 (opConditional -> boolean .)


state 136

    (137) conditionalEspecifico -> NUM opConditional . NUM

    NUM             shift and go to state 185


state 137

    (138) conditionalEspecifico -> STRING opConditional . STRING

    STRING          shift and go to state 186


state 138

    (30) sentencias_while -> WHILE LPAREN expression RPAREN . cuerpo_de_sentencias
    (28) cuerpo_de_sentencias -> . LBLOCK sentencia RBLOCK
    (29) cuerpo_de_sentencias -> . LBLOCK RBLOCK

    LBLOCK          shift and go to state 181

    cuerpo_de_sentencias           shift and go to state 187

state 139

    (31) sentencias_while -> WHILE LPAREN expression operadorLogical . expression RPAREN cuerpo_de_sentencias
    (6) expression -> . conditionalEspecifico
    (7) expression -> . inicializarOp
    (136) conditionalEspecifico -> . ID opConditional dataCondi
    (137) conditionalEspecifico -> . NUM opConditional NUM
    (138) conditionalEspecifico -> . STRING opConditional STRING
    (107) inicializarOp -> . MINUS operacionesMath
    (108) inicializarOp -> . PLUS operacionesMath
    (109) inicializarOp -> . operacionesMath
    (110) inicializarOp -> . numOperadores
    (111) operacionesMath -> . suma
    (112) operacionesMath -> . resta
    (113) operacionesMath -> . multiplicacion
    (114) operacionesMath -> . divicion
    (129) numOperadores -> . enteros
    (130) numOperadores -> . decimales
    (115) suma -> . numOperadores PLUS inicializarOp
    (116) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN
    (117) suma -> . numOperadores PLUS suma
    (118) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN suma
    (119) resta -> . numOperadores MINUS inicializarOp
    (120) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN
    (121) resta -> . numOperadores MINUS resta
    (122) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN resta
    (123) multiplicacion -> . numOperadores TIMES LPAREN inicializarOp RPAREN
    (124) multiplicacion -> . numOperadores TIMES inicializarOp
    (125) multiplicacion -> . numOperadores TIMES multiplicacion
    (126) divicion -> . numOperadores DIVIDE LPAREN inicializarOp RPAREN
    (127) divicion -> . numOperadores DIVIDE inicializarOp
    (128) divicion -> . numOperadores DIVIDE divicion
    (131) enteros -> . NUM
    (132) enteros -> . numNegative
    (135) decimales -> . enteros PERIOD NUM
    (133) numNegative -> . MINUS NUM
    (134) numNegative -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    ID              shift and go to state 84
    NUM             shift and go to state 85
    STRING          shift and go to state 86
    MINUS           shift and go to state 49
    PLUS            shift and go to state 51
    PERIOD          reduce using rule 134 (numNegative -> .)
    TIMES           reduce using rule 134 (numNegative -> .)
    DIVIDE          reduce using rule 134 (numNegative -> .)
    RPAREN          reduce using rule 134 (numNegative -> .)

  ! PLUS            [ reduce using rule 134 (numNegative -> .) ]
  ! MINUS           [ reduce using rule 134 (numNegative -> .) ]

    expression                     shift and go to state 188
    conditionalEspecifico          shift and go to state 82
    inicializarOp                  shift and go to state 83
    operacionesMath                shift and go to state 50
    numOperadores                  shift and go to state 52
    suma                           shift and go to state 55
    resta                          shift and go to state 56
    multiplicacion                 shift and go to state 57
    divicion                       shift and go to state 58
    enteros                        shift and go to state 59
    decimales                      shift and go to state 60
    numNegative                    shift and go to state 62

state 140

    (32) impresion -> ALERT LPAREN valores_de_impresion RPAREN . COLON

    COLON           shift and go to state 189


state 141

    (38) impresion_vacio -> ALERT LPAREN RPAREN COLON .

    $end            reduce using rule 38 (impresion_vacio -> ALERT LPAREN RPAREN COLON .)
    RBLOCK          reduce using rule 38 (impresion_vacio -> ALERT LPAREN RPAREN COLON .)
    RETURN          reduce using rule 38 (impresion_vacio -> ALERT LPAREN RPAREN COLON .)


state 142

    (91) return_ops -> javaScript_param operadores_mat . return_ops
    (90) return_ops -> . javaScript_param
    (91) return_ops -> . javaScript_param operadores_mat return_ops
    (39) javaScript_param -> . STRING
    (40) javaScript_param -> . inicializarOp
    (41) javaScript_param -> . boolean
    (42) javaScript_param -> . ID
    (107) inicializarOp -> . MINUS operacionesMath
    (108) inicializarOp -> . PLUS operacionesMath
    (109) inicializarOp -> . operacionesMath
    (110) inicializarOp -> . numOperadores
    (43) boolean -> . TRUE
    (44) boolean -> . FALSE
    (111) operacionesMath -> . suma
    (112) operacionesMath -> . resta
    (113) operacionesMath -> . multiplicacion
    (114) operacionesMath -> . divicion
    (129) numOperadores -> . enteros
    (130) numOperadores -> . decimales
    (115) suma -> . numOperadores PLUS inicializarOp
    (116) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN
    (117) suma -> . numOperadores PLUS suma
    (118) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN suma
    (119) resta -> . numOperadores MINUS inicializarOp
    (120) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN
    (121) resta -> . numOperadores MINUS resta
    (122) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN resta
    (123) multiplicacion -> . numOperadores TIMES LPAREN inicializarOp RPAREN
    (124) multiplicacion -> . numOperadores TIMES inicializarOp
    (125) multiplicacion -> . numOperadores TIMES multiplicacion
    (126) divicion -> . numOperadores DIVIDE LPAREN inicializarOp RPAREN
    (127) divicion -> . numOperadores DIVIDE inicializarOp
    (128) divicion -> . numOperadores DIVIDE divicion
    (131) enteros -> . NUM
    (132) enteros -> . numNegative
    (135) decimales -> . enteros PERIOD NUM
    (133) numNegative -> . MINUS NUM
    (134) numNegative -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    STRING          shift and go to state 46
    ID              shift and go to state 42
    MINUS           shift and go to state 49
    PLUS            shift and go to state 51
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUM             shift and go to state 61
    PERIOD          reduce using rule 134 (numNegative -> .)
    TIMES           reduce using rule 134 (numNegative -> .)
    DIVIDE          reduce using rule 134 (numNegative -> .)
    RPAREN          reduce using rule 134 (numNegative -> .)
    COLON           reduce using rule 134 (numNegative -> .)

  ! PLUS            [ reduce using rule 134 (numNegative -> .) ]
  ! MINUS           [ reduce using rule 134 (numNegative -> .) ]

    javaScript_param               shift and go to state 190
    return_ops                     shift and go to state 191
    inicializarOp                  shift and go to state 47
    boolean                        shift and go to state 48
    operacionesMath                shift and go to state 50
    numOperadores                  shift and go to state 52
    suma                           shift and go to state 55
    resta                          shift and go to state 56
    multiplicacion                 shift and go to state 57
    divicion                       shift and go to state 58
    enteros                        shift and go to state 59
    decimales                      shift and go to state 60
    numNegative                    shift and go to state 62

state 143

    (92) operadores_mat -> PLUS .

    STRING          reduce using rule 92 (operadores_mat -> PLUS .)
    ID              reduce using rule 92 (operadores_mat -> PLUS .)
    MINUS           reduce using rule 92 (operadores_mat -> PLUS .)
    PLUS            reduce using rule 92 (operadores_mat -> PLUS .)
    TRUE            reduce using rule 92 (operadores_mat -> PLUS .)
    FALSE           reduce using rule 92 (operadores_mat -> PLUS .)
    NUM             reduce using rule 92 (operadores_mat -> PLUS .)
    DIVIDE          reduce using rule 92 (operadores_mat -> PLUS .)
    TIMES           reduce using rule 92 (operadores_mat -> PLUS .)
    PERIOD          reduce using rule 92 (operadores_mat -> PLUS .)
    RPAREN          reduce using rule 92 (operadores_mat -> PLUS .)
    COLON           reduce using rule 92 (operadores_mat -> PLUS .)


state 144

    (93) operadores_mat -> MINUS .

    STRING          reduce using rule 93 (operadores_mat -> MINUS .)
    ID              reduce using rule 93 (operadores_mat -> MINUS .)
    MINUS           reduce using rule 93 (operadores_mat -> MINUS .)
    PLUS            reduce using rule 93 (operadores_mat -> MINUS .)
    TRUE            reduce using rule 93 (operadores_mat -> MINUS .)
    FALSE           reduce using rule 93 (operadores_mat -> MINUS .)
    NUM             reduce using rule 93 (operadores_mat -> MINUS .)
    DIVIDE          reduce using rule 93 (operadores_mat -> MINUS .)
    TIMES           reduce using rule 93 (operadores_mat -> MINUS .)
    PERIOD          reduce using rule 93 (operadores_mat -> MINUS .)
    RPAREN          reduce using rule 93 (operadores_mat -> MINUS .)
    COLON           reduce using rule 93 (operadores_mat -> MINUS .)


state 145

    (94) operadores_mat -> DIVIDE .

    STRING          reduce using rule 94 (operadores_mat -> DIVIDE .)
    ID              reduce using rule 94 (operadores_mat -> DIVIDE .)
    MINUS           reduce using rule 94 (operadores_mat -> DIVIDE .)
    PLUS            reduce using rule 94 (operadores_mat -> DIVIDE .)
    TRUE            reduce using rule 94 (operadores_mat -> DIVIDE .)
    FALSE           reduce using rule 94 (operadores_mat -> DIVIDE .)
    NUM             reduce using rule 94 (operadores_mat -> DIVIDE .)
    DIVIDE          reduce using rule 94 (operadores_mat -> DIVIDE .)
    TIMES           reduce using rule 94 (operadores_mat -> DIVIDE .)
    PERIOD          reduce using rule 94 (operadores_mat -> DIVIDE .)
    RPAREN          reduce using rule 94 (operadores_mat -> DIVIDE .)
    COLON           reduce using rule 94 (operadores_mat -> DIVIDE .)


state 146

    (95) operadores_mat -> TIMES .

    STRING          reduce using rule 95 (operadores_mat -> TIMES .)
    ID              reduce using rule 95 (operadores_mat -> TIMES .)
    MINUS           reduce using rule 95 (operadores_mat -> TIMES .)
    PLUS            reduce using rule 95 (operadores_mat -> TIMES .)
    TRUE            reduce using rule 95 (operadores_mat -> TIMES .)
    FALSE           reduce using rule 95 (operadores_mat -> TIMES .)
    NUM             reduce using rule 95 (operadores_mat -> TIMES .)
    DIVIDE          reduce using rule 95 (operadores_mat -> TIMES .)
    TIMES           reduce using rule 95 (operadores_mat -> TIMES .)
    PERIOD          reduce using rule 95 (operadores_mat -> TIMES .)
    RPAREN          reduce using rule 95 (operadores_mat -> TIMES .)
    COLON           reduce using rule 95 (operadores_mat -> TIMES .)


state 147

    (99) params -> javaScript_param COMMA params .

    RPAREN          reduce using rule 99 (params -> javaScript_param COMMA params .)


state 148

    (133) numNegative -> MINUS NUM .

    PERIOD          reduce using rule 133 (numNegative -> MINUS NUM .)
    PLUS            reduce using rule 133 (numNegative -> MINUS NUM .)
    MINUS           reduce using rule 133 (numNegative -> MINUS NUM .)
    TIMES           reduce using rule 133 (numNegative -> MINUS NUM .)
    DIVIDE          reduce using rule 133 (numNegative -> MINUS NUM .)


state 149

    (115) suma -> numOperadores PLUS inicializarOp .

    COMMA           reduce using rule 115 (suma -> numOperadores PLUS inicializarOp .)
    RPAREN          reduce using rule 115 (suma -> numOperadores PLUS inicializarOp .)
    COLON           reduce using rule 115 (suma -> numOperadores PLUS inicializarOp .)
    AND             reduce using rule 115 (suma -> numOperadores PLUS inicializarOp .)
    OR              reduce using rule 115 (suma -> numOperadores PLUS inicializarOp .)
    NOT             reduce using rule 115 (suma -> numOperadores PLUS inicializarOp .)
    PLUS            reduce using rule 115 (suma -> numOperadores PLUS inicializarOp .)
    MINUS           reduce using rule 115 (suma -> numOperadores PLUS inicializarOp .)
    DIVIDE          reduce using rule 115 (suma -> numOperadores PLUS inicializarOp .)
    TIMES           reduce using rule 115 (suma -> numOperadores PLUS inicializarOp .)
    RBRACKET        reduce using rule 115 (suma -> numOperadores PLUS inicializarOp .)


state 150

    (116) suma -> numOperadores PLUS LPAREN . inicializarOp RPAREN
    (118) suma -> numOperadores PLUS LPAREN . inicializarOp RPAREN suma
    (107) inicializarOp -> . MINUS operacionesMath
    (108) inicializarOp -> . PLUS operacionesMath
    (109) inicializarOp -> . operacionesMath
    (110) inicializarOp -> . numOperadores
    (111) operacionesMath -> . suma
    (112) operacionesMath -> . resta
    (113) operacionesMath -> . multiplicacion
    (114) operacionesMath -> . divicion
    (129) numOperadores -> . enteros
    (130) numOperadores -> . decimales
    (115) suma -> . numOperadores PLUS inicializarOp
    (116) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN
    (117) suma -> . numOperadores PLUS suma
    (118) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN suma
    (119) resta -> . numOperadores MINUS inicializarOp
    (120) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN
    (121) resta -> . numOperadores MINUS resta
    (122) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN resta
    (123) multiplicacion -> . numOperadores TIMES LPAREN inicializarOp RPAREN
    (124) multiplicacion -> . numOperadores TIMES inicializarOp
    (125) multiplicacion -> . numOperadores TIMES multiplicacion
    (126) divicion -> . numOperadores DIVIDE LPAREN inicializarOp RPAREN
    (127) divicion -> . numOperadores DIVIDE inicializarOp
    (128) divicion -> . numOperadores DIVIDE divicion
    (131) enteros -> . NUM
    (132) enteros -> . numNegative
    (135) decimales -> . enteros PERIOD NUM
    (133) numNegative -> . MINUS NUM
    (134) numNegative -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    MINUS           shift and go to state 49
    PLUS            shift and go to state 51
    NUM             shift and go to state 61
    PERIOD          reduce using rule 134 (numNegative -> .)
    TIMES           reduce using rule 134 (numNegative -> .)
    DIVIDE          reduce using rule 134 (numNegative -> .)
    RPAREN          reduce using rule 134 (numNegative -> .)

  ! PLUS            [ reduce using rule 134 (numNegative -> .) ]
  ! MINUS           [ reduce using rule 134 (numNegative -> .) ]

    numOperadores                  shift and go to state 52
    inicializarOp                  shift and go to state 192
    suma                           shift and go to state 55
    operacionesMath                shift and go to state 50
    resta                          shift and go to state 56
    multiplicacion                 shift and go to state 57
    divicion                       shift and go to state 58
    enteros                        shift and go to state 59
    decimales                      shift and go to state 60
    numNegative                    shift and go to state 62

state 151

    (117) suma -> numOperadores PLUS suma .
    (111) operacionesMath -> suma .

  ! reduce/reduce conflict for COMMA resolved using rule 111 (operacionesMath -> suma .)
  ! reduce/reduce conflict for RPAREN resolved using rule 111 (operacionesMath -> suma .)
  ! reduce/reduce conflict for COLON resolved using rule 111 (operacionesMath -> suma .)
  ! reduce/reduce conflict for AND resolved using rule 111 (operacionesMath -> suma .)
  ! reduce/reduce conflict for OR resolved using rule 111 (operacionesMath -> suma .)
  ! reduce/reduce conflict for NOT resolved using rule 111 (operacionesMath -> suma .)
  ! reduce/reduce conflict for PLUS resolved using rule 111 (operacionesMath -> suma .)
  ! reduce/reduce conflict for MINUS resolved using rule 111 (operacionesMath -> suma .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 111 (operacionesMath -> suma .)
  ! reduce/reduce conflict for TIMES resolved using rule 111 (operacionesMath -> suma .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 111 (operacionesMath -> suma .)
    COMMA           reduce using rule 111 (operacionesMath -> suma .)
    RPAREN          reduce using rule 111 (operacionesMath -> suma .)
    COLON           reduce using rule 111 (operacionesMath -> suma .)
    AND             reduce using rule 111 (operacionesMath -> suma .)
    OR              reduce using rule 111 (operacionesMath -> suma .)
    NOT             reduce using rule 111 (operacionesMath -> suma .)
    PLUS            reduce using rule 111 (operacionesMath -> suma .)
    MINUS           reduce using rule 111 (operacionesMath -> suma .)
    DIVIDE          reduce using rule 111 (operacionesMath -> suma .)
    TIMES           reduce using rule 111 (operacionesMath -> suma .)
    RBRACKET        reduce using rule 111 (operacionesMath -> suma .)

  ! COMMA           [ reduce using rule 117 (suma -> numOperadores PLUS suma .) ]
  ! RPAREN          [ reduce using rule 117 (suma -> numOperadores PLUS suma .) ]
  ! COLON           [ reduce using rule 117 (suma -> numOperadores PLUS suma .) ]
  ! AND             [ reduce using rule 117 (suma -> numOperadores PLUS suma .) ]
  ! OR              [ reduce using rule 117 (suma -> numOperadores PLUS suma .) ]
  ! NOT             [ reduce using rule 117 (suma -> numOperadores PLUS suma .) ]
  ! PLUS            [ reduce using rule 117 (suma -> numOperadores PLUS suma .) ]
  ! MINUS           [ reduce using rule 117 (suma -> numOperadores PLUS suma .) ]
  ! DIVIDE          [ reduce using rule 117 (suma -> numOperadores PLUS suma .) ]
  ! TIMES           [ reduce using rule 117 (suma -> numOperadores PLUS suma .) ]
  ! RBRACKET        [ reduce using rule 117 (suma -> numOperadores PLUS suma .) ]


state 152

    (110) inicializarOp -> numOperadores .
    (119) resta -> numOperadores . MINUS inicializarOp
    (120) resta -> numOperadores . MINUS LPAREN inicializarOp RPAREN
    (121) resta -> numOperadores . MINUS resta
    (122) resta -> numOperadores . MINUS LPAREN inicializarOp RPAREN resta
    (115) suma -> numOperadores . PLUS inicializarOp
    (116) suma -> numOperadores . PLUS LPAREN inicializarOp RPAREN
    (117) suma -> numOperadores . PLUS suma
    (118) suma -> numOperadores . PLUS LPAREN inicializarOp RPAREN suma
    (123) multiplicacion -> numOperadores . TIMES LPAREN inicializarOp RPAREN
    (124) multiplicacion -> numOperadores . TIMES inicializarOp
    (125) multiplicacion -> numOperadores . TIMES multiplicacion
    (126) divicion -> numOperadores . DIVIDE LPAREN inicializarOp RPAREN
    (127) divicion -> numOperadores . DIVIDE inicializarOp
    (128) divicion -> numOperadores . DIVIDE divicion

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COMMA           reduce using rule 110 (inicializarOp -> numOperadores .)
    RPAREN          reduce using rule 110 (inicializarOp -> numOperadores .)
    COLON           reduce using rule 110 (inicializarOp -> numOperadores .)
    AND             reduce using rule 110 (inicializarOp -> numOperadores .)
    OR              reduce using rule 110 (inicializarOp -> numOperadores .)
    NOT             reduce using rule 110 (inicializarOp -> numOperadores .)
    RBRACKET        reduce using rule 110 (inicializarOp -> numOperadores .)
    MINUS           shift and go to state 104
    PLUS            shift and go to state 103
    TIMES           shift and go to state 105
    DIVIDE          shift and go to state 106

  ! PLUS            [ reduce using rule 110 (inicializarOp -> numOperadores .) ]
  ! MINUS           [ reduce using rule 110 (inicializarOp -> numOperadores .) ]
  ! DIVIDE          [ reduce using rule 110 (inicializarOp -> numOperadores .) ]
  ! TIMES           [ reduce using rule 110 (inicializarOp -> numOperadores .) ]


state 153

    (119) resta -> numOperadores MINUS inicializarOp .

    COMMA           reduce using rule 119 (resta -> numOperadores MINUS inicializarOp .)
    RPAREN          reduce using rule 119 (resta -> numOperadores MINUS inicializarOp .)
    COLON           reduce using rule 119 (resta -> numOperadores MINUS inicializarOp .)
    AND             reduce using rule 119 (resta -> numOperadores MINUS inicializarOp .)
    OR              reduce using rule 119 (resta -> numOperadores MINUS inicializarOp .)
    NOT             reduce using rule 119 (resta -> numOperadores MINUS inicializarOp .)
    PLUS            reduce using rule 119 (resta -> numOperadores MINUS inicializarOp .)
    MINUS           reduce using rule 119 (resta -> numOperadores MINUS inicializarOp .)
    DIVIDE          reduce using rule 119 (resta -> numOperadores MINUS inicializarOp .)
    TIMES           reduce using rule 119 (resta -> numOperadores MINUS inicializarOp .)
    RBRACKET        reduce using rule 119 (resta -> numOperadores MINUS inicializarOp .)


state 154

    (120) resta -> numOperadores MINUS LPAREN . inicializarOp RPAREN
    (122) resta -> numOperadores MINUS LPAREN . inicializarOp RPAREN resta
    (107) inicializarOp -> . MINUS operacionesMath
    (108) inicializarOp -> . PLUS operacionesMath
    (109) inicializarOp -> . operacionesMath
    (110) inicializarOp -> . numOperadores
    (111) operacionesMath -> . suma
    (112) operacionesMath -> . resta
    (113) operacionesMath -> . multiplicacion
    (114) operacionesMath -> . divicion
    (129) numOperadores -> . enteros
    (130) numOperadores -> . decimales
    (115) suma -> . numOperadores PLUS inicializarOp
    (116) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN
    (117) suma -> . numOperadores PLUS suma
    (118) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN suma
    (119) resta -> . numOperadores MINUS inicializarOp
    (120) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN
    (121) resta -> . numOperadores MINUS resta
    (122) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN resta
    (123) multiplicacion -> . numOperadores TIMES LPAREN inicializarOp RPAREN
    (124) multiplicacion -> . numOperadores TIMES inicializarOp
    (125) multiplicacion -> . numOperadores TIMES multiplicacion
    (126) divicion -> . numOperadores DIVIDE LPAREN inicializarOp RPAREN
    (127) divicion -> . numOperadores DIVIDE inicializarOp
    (128) divicion -> . numOperadores DIVIDE divicion
    (131) enteros -> . NUM
    (132) enteros -> . numNegative
    (135) decimales -> . enteros PERIOD NUM
    (133) numNegative -> . MINUS NUM
    (134) numNegative -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    MINUS           shift and go to state 49
    PLUS            shift and go to state 51
    NUM             shift and go to state 61
    PERIOD          reduce using rule 134 (numNegative -> .)
    TIMES           reduce using rule 134 (numNegative -> .)
    DIVIDE          reduce using rule 134 (numNegative -> .)
    RPAREN          reduce using rule 134 (numNegative -> .)

  ! PLUS            [ reduce using rule 134 (numNegative -> .) ]
  ! MINUS           [ reduce using rule 134 (numNegative -> .) ]

    numOperadores                  shift and go to state 52
    inicializarOp                  shift and go to state 193
    resta                          shift and go to state 56
    operacionesMath                shift and go to state 50
    suma                           shift and go to state 55
    multiplicacion                 shift and go to state 57
    divicion                       shift and go to state 58
    enteros                        shift and go to state 59
    decimales                      shift and go to state 60
    numNegative                    shift and go to state 62

state 155

    (121) resta -> numOperadores MINUS resta .
    (112) operacionesMath -> resta .

  ! reduce/reduce conflict for COMMA resolved using rule 112 (operacionesMath -> resta .)
  ! reduce/reduce conflict for RPAREN resolved using rule 112 (operacionesMath -> resta .)
  ! reduce/reduce conflict for COLON resolved using rule 112 (operacionesMath -> resta .)
  ! reduce/reduce conflict for AND resolved using rule 112 (operacionesMath -> resta .)
  ! reduce/reduce conflict for OR resolved using rule 112 (operacionesMath -> resta .)
  ! reduce/reduce conflict for NOT resolved using rule 112 (operacionesMath -> resta .)
  ! reduce/reduce conflict for PLUS resolved using rule 112 (operacionesMath -> resta .)
  ! reduce/reduce conflict for MINUS resolved using rule 112 (operacionesMath -> resta .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 112 (operacionesMath -> resta .)
  ! reduce/reduce conflict for TIMES resolved using rule 112 (operacionesMath -> resta .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 112 (operacionesMath -> resta .)
    COMMA           reduce using rule 112 (operacionesMath -> resta .)
    RPAREN          reduce using rule 112 (operacionesMath -> resta .)
    COLON           reduce using rule 112 (operacionesMath -> resta .)
    AND             reduce using rule 112 (operacionesMath -> resta .)
    OR              reduce using rule 112 (operacionesMath -> resta .)
    NOT             reduce using rule 112 (operacionesMath -> resta .)
    PLUS            reduce using rule 112 (operacionesMath -> resta .)
    MINUS           reduce using rule 112 (operacionesMath -> resta .)
    DIVIDE          reduce using rule 112 (operacionesMath -> resta .)
    TIMES           reduce using rule 112 (operacionesMath -> resta .)
    RBRACKET        reduce using rule 112 (operacionesMath -> resta .)

  ! COMMA           [ reduce using rule 121 (resta -> numOperadores MINUS resta .) ]
  ! RPAREN          [ reduce using rule 121 (resta -> numOperadores MINUS resta .) ]
  ! COLON           [ reduce using rule 121 (resta -> numOperadores MINUS resta .) ]
  ! AND             [ reduce using rule 121 (resta -> numOperadores MINUS resta .) ]
  ! OR              [ reduce using rule 121 (resta -> numOperadores MINUS resta .) ]
  ! NOT             [ reduce using rule 121 (resta -> numOperadores MINUS resta .) ]
  ! PLUS            [ reduce using rule 121 (resta -> numOperadores MINUS resta .) ]
  ! MINUS           [ reduce using rule 121 (resta -> numOperadores MINUS resta .) ]
  ! DIVIDE          [ reduce using rule 121 (resta -> numOperadores MINUS resta .) ]
  ! TIMES           [ reduce using rule 121 (resta -> numOperadores MINUS resta .) ]
  ! RBRACKET        [ reduce using rule 121 (resta -> numOperadores MINUS resta .) ]


state 156

    (110) inicializarOp -> numOperadores .
    (123) multiplicacion -> numOperadores . TIMES LPAREN inicializarOp RPAREN
    (124) multiplicacion -> numOperadores . TIMES inicializarOp
    (125) multiplicacion -> numOperadores . TIMES multiplicacion
    (115) suma -> numOperadores . PLUS inicializarOp
    (116) suma -> numOperadores . PLUS LPAREN inicializarOp RPAREN
    (117) suma -> numOperadores . PLUS suma
    (118) suma -> numOperadores . PLUS LPAREN inicializarOp RPAREN suma
    (119) resta -> numOperadores . MINUS inicializarOp
    (120) resta -> numOperadores . MINUS LPAREN inicializarOp RPAREN
    (121) resta -> numOperadores . MINUS resta
    (122) resta -> numOperadores . MINUS LPAREN inicializarOp RPAREN resta
    (126) divicion -> numOperadores . DIVIDE LPAREN inicializarOp RPAREN
    (127) divicion -> numOperadores . DIVIDE inicializarOp
    (128) divicion -> numOperadores . DIVIDE divicion

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    COMMA           reduce using rule 110 (inicializarOp -> numOperadores .)
    RPAREN          reduce using rule 110 (inicializarOp -> numOperadores .)
    COLON           reduce using rule 110 (inicializarOp -> numOperadores .)
    AND             reduce using rule 110 (inicializarOp -> numOperadores .)
    OR              reduce using rule 110 (inicializarOp -> numOperadores .)
    NOT             reduce using rule 110 (inicializarOp -> numOperadores .)
    RBRACKET        reduce using rule 110 (inicializarOp -> numOperadores .)
    TIMES           shift and go to state 105
    PLUS            shift and go to state 103
    MINUS           shift and go to state 104
    DIVIDE          shift and go to state 106

  ! PLUS            [ reduce using rule 110 (inicializarOp -> numOperadores .) ]
  ! MINUS           [ reduce using rule 110 (inicializarOp -> numOperadores .) ]
  ! DIVIDE          [ reduce using rule 110 (inicializarOp -> numOperadores .) ]
  ! TIMES           [ reduce using rule 110 (inicializarOp -> numOperadores .) ]


state 157

    (123) multiplicacion -> numOperadores TIMES LPAREN . inicializarOp RPAREN
    (107) inicializarOp -> . MINUS operacionesMath
    (108) inicializarOp -> . PLUS operacionesMath
    (109) inicializarOp -> . operacionesMath
    (110) inicializarOp -> . numOperadores
    (111) operacionesMath -> . suma
    (112) operacionesMath -> . resta
    (113) operacionesMath -> . multiplicacion
    (114) operacionesMath -> . divicion
    (129) numOperadores -> . enteros
    (130) numOperadores -> . decimales
    (115) suma -> . numOperadores PLUS inicializarOp
    (116) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN
    (117) suma -> . numOperadores PLUS suma
    (118) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN suma
    (119) resta -> . numOperadores MINUS inicializarOp
    (120) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN
    (121) resta -> . numOperadores MINUS resta
    (122) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN resta
    (123) multiplicacion -> . numOperadores TIMES LPAREN inicializarOp RPAREN
    (124) multiplicacion -> . numOperadores TIMES inicializarOp
    (125) multiplicacion -> . numOperadores TIMES multiplicacion
    (126) divicion -> . numOperadores DIVIDE LPAREN inicializarOp RPAREN
    (127) divicion -> . numOperadores DIVIDE inicializarOp
    (128) divicion -> . numOperadores DIVIDE divicion
    (131) enteros -> . NUM
    (132) enteros -> . numNegative
    (135) decimales -> . enteros PERIOD NUM
    (133) numNegative -> . MINUS NUM
    (134) numNegative -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    MINUS           shift and go to state 49
    PLUS            shift and go to state 51
    NUM             shift and go to state 61
    PERIOD          reduce using rule 134 (numNegative -> .)
    TIMES           reduce using rule 134 (numNegative -> .)
    DIVIDE          reduce using rule 134 (numNegative -> .)
    RPAREN          reduce using rule 134 (numNegative -> .)

  ! PLUS            [ reduce using rule 134 (numNegative -> .) ]
  ! MINUS           [ reduce using rule 134 (numNegative -> .) ]

    numOperadores                  shift and go to state 52
    inicializarOp                  shift and go to state 194
    operacionesMath                shift and go to state 50
    suma                           shift and go to state 55
    resta                          shift and go to state 56
    multiplicacion                 shift and go to state 57
    divicion                       shift and go to state 58
    enteros                        shift and go to state 59
    decimales                      shift and go to state 60
    numNegative                    shift and go to state 62

state 158

    (124) multiplicacion -> numOperadores TIMES inicializarOp .

    COMMA           reduce using rule 124 (multiplicacion -> numOperadores TIMES inicializarOp .)
    RPAREN          reduce using rule 124 (multiplicacion -> numOperadores TIMES inicializarOp .)
    COLON           reduce using rule 124 (multiplicacion -> numOperadores TIMES inicializarOp .)
    AND             reduce using rule 124 (multiplicacion -> numOperadores TIMES inicializarOp .)
    OR              reduce using rule 124 (multiplicacion -> numOperadores TIMES inicializarOp .)
    NOT             reduce using rule 124 (multiplicacion -> numOperadores TIMES inicializarOp .)
    PLUS            reduce using rule 124 (multiplicacion -> numOperadores TIMES inicializarOp .)
    MINUS           reduce using rule 124 (multiplicacion -> numOperadores TIMES inicializarOp .)
    DIVIDE          reduce using rule 124 (multiplicacion -> numOperadores TIMES inicializarOp .)
    TIMES           reduce using rule 124 (multiplicacion -> numOperadores TIMES inicializarOp .)
    RBRACKET        reduce using rule 124 (multiplicacion -> numOperadores TIMES inicializarOp .)


state 159

    (125) multiplicacion -> numOperadores TIMES multiplicacion .
    (113) operacionesMath -> multiplicacion .

  ! reduce/reduce conflict for COMMA resolved using rule 113 (operacionesMath -> multiplicacion .)
  ! reduce/reduce conflict for RPAREN resolved using rule 113 (operacionesMath -> multiplicacion .)
  ! reduce/reduce conflict for COLON resolved using rule 113 (operacionesMath -> multiplicacion .)
  ! reduce/reduce conflict for AND resolved using rule 113 (operacionesMath -> multiplicacion .)
  ! reduce/reduce conflict for OR resolved using rule 113 (operacionesMath -> multiplicacion .)
  ! reduce/reduce conflict for NOT resolved using rule 113 (operacionesMath -> multiplicacion .)
  ! reduce/reduce conflict for PLUS resolved using rule 113 (operacionesMath -> multiplicacion .)
  ! reduce/reduce conflict for MINUS resolved using rule 113 (operacionesMath -> multiplicacion .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 113 (operacionesMath -> multiplicacion .)
  ! reduce/reduce conflict for TIMES resolved using rule 113 (operacionesMath -> multiplicacion .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 113 (operacionesMath -> multiplicacion .)
    COMMA           reduce using rule 113 (operacionesMath -> multiplicacion .)
    RPAREN          reduce using rule 113 (operacionesMath -> multiplicacion .)
    COLON           reduce using rule 113 (operacionesMath -> multiplicacion .)
    AND             reduce using rule 113 (operacionesMath -> multiplicacion .)
    OR              reduce using rule 113 (operacionesMath -> multiplicacion .)
    NOT             reduce using rule 113 (operacionesMath -> multiplicacion .)
    PLUS            reduce using rule 113 (operacionesMath -> multiplicacion .)
    MINUS           reduce using rule 113 (operacionesMath -> multiplicacion .)
    DIVIDE          reduce using rule 113 (operacionesMath -> multiplicacion .)
    TIMES           reduce using rule 113 (operacionesMath -> multiplicacion .)
    RBRACKET        reduce using rule 113 (operacionesMath -> multiplicacion .)

  ! COMMA           [ reduce using rule 125 (multiplicacion -> numOperadores TIMES multiplicacion .) ]
  ! RPAREN          [ reduce using rule 125 (multiplicacion -> numOperadores TIMES multiplicacion .) ]
  ! COLON           [ reduce using rule 125 (multiplicacion -> numOperadores TIMES multiplicacion .) ]
  ! AND             [ reduce using rule 125 (multiplicacion -> numOperadores TIMES multiplicacion .) ]
  ! OR              [ reduce using rule 125 (multiplicacion -> numOperadores TIMES multiplicacion .) ]
  ! NOT             [ reduce using rule 125 (multiplicacion -> numOperadores TIMES multiplicacion .) ]
  ! PLUS            [ reduce using rule 125 (multiplicacion -> numOperadores TIMES multiplicacion .) ]
  ! MINUS           [ reduce using rule 125 (multiplicacion -> numOperadores TIMES multiplicacion .) ]
  ! DIVIDE          [ reduce using rule 125 (multiplicacion -> numOperadores TIMES multiplicacion .) ]
  ! TIMES           [ reduce using rule 125 (multiplicacion -> numOperadores TIMES multiplicacion .) ]
  ! RBRACKET        [ reduce using rule 125 (multiplicacion -> numOperadores TIMES multiplicacion .) ]


state 160

    (110) inicializarOp -> numOperadores .
    (126) divicion -> numOperadores . DIVIDE LPAREN inicializarOp RPAREN
    (127) divicion -> numOperadores . DIVIDE inicializarOp
    (128) divicion -> numOperadores . DIVIDE divicion
    (115) suma -> numOperadores . PLUS inicializarOp
    (116) suma -> numOperadores . PLUS LPAREN inicializarOp RPAREN
    (117) suma -> numOperadores . PLUS suma
    (118) suma -> numOperadores . PLUS LPAREN inicializarOp RPAREN suma
    (119) resta -> numOperadores . MINUS inicializarOp
    (120) resta -> numOperadores . MINUS LPAREN inicializarOp RPAREN
    (121) resta -> numOperadores . MINUS resta
    (122) resta -> numOperadores . MINUS LPAREN inicializarOp RPAREN resta
    (123) multiplicacion -> numOperadores . TIMES LPAREN inicializarOp RPAREN
    (124) multiplicacion -> numOperadores . TIMES inicializarOp
    (125) multiplicacion -> numOperadores . TIMES multiplicacion

  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
    COMMA           reduce using rule 110 (inicializarOp -> numOperadores .)
    RPAREN          reduce using rule 110 (inicializarOp -> numOperadores .)
    COLON           reduce using rule 110 (inicializarOp -> numOperadores .)
    AND             reduce using rule 110 (inicializarOp -> numOperadores .)
    OR              reduce using rule 110 (inicializarOp -> numOperadores .)
    NOT             reduce using rule 110 (inicializarOp -> numOperadores .)
    RBRACKET        reduce using rule 110 (inicializarOp -> numOperadores .)
    DIVIDE          shift and go to state 106
    PLUS            shift and go to state 103
    MINUS           shift and go to state 104
    TIMES           shift and go to state 105

  ! PLUS            [ reduce using rule 110 (inicializarOp -> numOperadores .) ]
  ! MINUS           [ reduce using rule 110 (inicializarOp -> numOperadores .) ]
  ! DIVIDE          [ reduce using rule 110 (inicializarOp -> numOperadores .) ]
  ! TIMES           [ reduce using rule 110 (inicializarOp -> numOperadores .) ]


state 161

    (126) divicion -> numOperadores DIVIDE LPAREN . inicializarOp RPAREN
    (107) inicializarOp -> . MINUS operacionesMath
    (108) inicializarOp -> . PLUS operacionesMath
    (109) inicializarOp -> . operacionesMath
    (110) inicializarOp -> . numOperadores
    (111) operacionesMath -> . suma
    (112) operacionesMath -> . resta
    (113) operacionesMath -> . multiplicacion
    (114) operacionesMath -> . divicion
    (129) numOperadores -> . enteros
    (130) numOperadores -> . decimales
    (115) suma -> . numOperadores PLUS inicializarOp
    (116) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN
    (117) suma -> . numOperadores PLUS suma
    (118) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN suma
    (119) resta -> . numOperadores MINUS inicializarOp
    (120) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN
    (121) resta -> . numOperadores MINUS resta
    (122) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN resta
    (123) multiplicacion -> . numOperadores TIMES LPAREN inicializarOp RPAREN
    (124) multiplicacion -> . numOperadores TIMES inicializarOp
    (125) multiplicacion -> . numOperadores TIMES multiplicacion
    (126) divicion -> . numOperadores DIVIDE LPAREN inicializarOp RPAREN
    (127) divicion -> . numOperadores DIVIDE inicializarOp
    (128) divicion -> . numOperadores DIVIDE divicion
    (131) enteros -> . NUM
    (132) enteros -> . numNegative
    (135) decimales -> . enteros PERIOD NUM
    (133) numNegative -> . MINUS NUM
    (134) numNegative -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    MINUS           shift and go to state 49
    PLUS            shift and go to state 51
    NUM             shift and go to state 61
    PERIOD          reduce using rule 134 (numNegative -> .)
    TIMES           reduce using rule 134 (numNegative -> .)
    DIVIDE          reduce using rule 134 (numNegative -> .)
    RPAREN          reduce using rule 134 (numNegative -> .)

  ! PLUS            [ reduce using rule 134 (numNegative -> .) ]
  ! MINUS           [ reduce using rule 134 (numNegative -> .) ]

    numOperadores                  shift and go to state 52
    inicializarOp                  shift and go to state 195
    operacionesMath                shift and go to state 50
    suma                           shift and go to state 55
    resta                          shift and go to state 56
    multiplicacion                 shift and go to state 57
    divicion                       shift and go to state 58
    enteros                        shift and go to state 59
    decimales                      shift and go to state 60
    numNegative                    shift and go to state 62

state 162

    (127) divicion -> numOperadores DIVIDE inicializarOp .

    COMMA           reduce using rule 127 (divicion -> numOperadores DIVIDE inicializarOp .)
    RPAREN          reduce using rule 127 (divicion -> numOperadores DIVIDE inicializarOp .)
    COLON           reduce using rule 127 (divicion -> numOperadores DIVIDE inicializarOp .)
    AND             reduce using rule 127 (divicion -> numOperadores DIVIDE inicializarOp .)
    OR              reduce using rule 127 (divicion -> numOperadores DIVIDE inicializarOp .)
    NOT             reduce using rule 127 (divicion -> numOperadores DIVIDE inicializarOp .)
    PLUS            reduce using rule 127 (divicion -> numOperadores DIVIDE inicializarOp .)
    MINUS           reduce using rule 127 (divicion -> numOperadores DIVIDE inicializarOp .)
    DIVIDE          reduce using rule 127 (divicion -> numOperadores DIVIDE inicializarOp .)
    TIMES           reduce using rule 127 (divicion -> numOperadores DIVIDE inicializarOp .)
    RBRACKET        reduce using rule 127 (divicion -> numOperadores DIVIDE inicializarOp .)


state 163

    (128) divicion -> numOperadores DIVIDE divicion .
    (114) operacionesMath -> divicion .

  ! reduce/reduce conflict for COMMA resolved using rule 114 (operacionesMath -> divicion .)
  ! reduce/reduce conflict for RPAREN resolved using rule 114 (operacionesMath -> divicion .)
  ! reduce/reduce conflict for COLON resolved using rule 114 (operacionesMath -> divicion .)
  ! reduce/reduce conflict for AND resolved using rule 114 (operacionesMath -> divicion .)
  ! reduce/reduce conflict for OR resolved using rule 114 (operacionesMath -> divicion .)
  ! reduce/reduce conflict for NOT resolved using rule 114 (operacionesMath -> divicion .)
  ! reduce/reduce conflict for PLUS resolved using rule 114 (operacionesMath -> divicion .)
  ! reduce/reduce conflict for MINUS resolved using rule 114 (operacionesMath -> divicion .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 114 (operacionesMath -> divicion .)
  ! reduce/reduce conflict for TIMES resolved using rule 114 (operacionesMath -> divicion .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 114 (operacionesMath -> divicion .)
    COMMA           reduce using rule 114 (operacionesMath -> divicion .)
    RPAREN          reduce using rule 114 (operacionesMath -> divicion .)
    COLON           reduce using rule 114 (operacionesMath -> divicion .)
    AND             reduce using rule 114 (operacionesMath -> divicion .)
    OR              reduce using rule 114 (operacionesMath -> divicion .)
    NOT             reduce using rule 114 (operacionesMath -> divicion .)
    PLUS            reduce using rule 114 (operacionesMath -> divicion .)
    MINUS           reduce using rule 114 (operacionesMath -> divicion .)
    DIVIDE          reduce using rule 114 (operacionesMath -> divicion .)
    TIMES           reduce using rule 114 (operacionesMath -> divicion .)
    RBRACKET        reduce using rule 114 (operacionesMath -> divicion .)

  ! COMMA           [ reduce using rule 128 (divicion -> numOperadores DIVIDE divicion .) ]
  ! RPAREN          [ reduce using rule 128 (divicion -> numOperadores DIVIDE divicion .) ]
  ! COLON           [ reduce using rule 128 (divicion -> numOperadores DIVIDE divicion .) ]
  ! AND             [ reduce using rule 128 (divicion -> numOperadores DIVIDE divicion .) ]
  ! OR              [ reduce using rule 128 (divicion -> numOperadores DIVIDE divicion .) ]
  ! NOT             [ reduce using rule 128 (divicion -> numOperadores DIVIDE divicion .) ]
  ! PLUS            [ reduce using rule 128 (divicion -> numOperadores DIVIDE divicion .) ]
  ! MINUS           [ reduce using rule 128 (divicion -> numOperadores DIVIDE divicion .) ]
  ! DIVIDE          [ reduce using rule 128 (divicion -> numOperadores DIVIDE divicion .) ]
  ! TIMES           [ reduce using rule 128 (divicion -> numOperadores DIVIDE divicion .) ]
  ! RBRACKET        [ reduce using rule 128 (divicion -> numOperadores DIVIDE divicion .) ]


state 164

    (135) decimales -> enteros PERIOD NUM .

    PLUS            reduce using rule 135 (decimales -> enteros PERIOD NUM .)
    MINUS           reduce using rule 135 (decimales -> enteros PERIOD NUM .)
    TIMES           reduce using rule 135 (decimales -> enteros PERIOD NUM .)
    DIVIDE          reduce using rule 135 (decimales -> enteros PERIOD NUM .)
    COMMA           reduce using rule 135 (decimales -> enteros PERIOD NUM .)
    RPAREN          reduce using rule 135 (decimales -> enteros PERIOD NUM .)
    COLON           reduce using rule 135 (decimales -> enteros PERIOD NUM .)
    AND             reduce using rule 135 (decimales -> enteros PERIOD NUM .)
    OR              reduce using rule 135 (decimales -> enteros PERIOD NUM .)
    NOT             reduce using rule 135 (decimales -> enteros PERIOD NUM .)
    RBRACKET        reduce using rule 135 (decimales -> enteros PERIOD NUM .)


state 165

    (63) arrayDeclare -> LBRACKET arrayValues RBRACKET .

    COLON           reduce using rule 63 (arrayDeclare -> LBRACKET arrayValues RBRACKET .)
    RPAREN          reduce using rule 63 (arrayDeclare -> LBRACKET arrayValues RBRACKET .)
    COMMA           reduce using rule 63 (arrayDeclare -> LBRACKET arrayValues RBRACKET .)
    RBRACKET        reduce using rule 63 (arrayDeclare -> LBRACKET arrayValues RBRACKET .)


state 166

    (67) arrayValues -> javaScript_param COMMA . arrayValues
    (66) arrayValues -> . javaScript_param
    (67) arrayValues -> . javaScript_param COMMA arrayValues
    (39) javaScript_param -> . STRING
    (40) javaScript_param -> . inicializarOp
    (41) javaScript_param -> . boolean
    (42) javaScript_param -> . ID
    (107) inicializarOp -> . MINUS operacionesMath
    (108) inicializarOp -> . PLUS operacionesMath
    (109) inicializarOp -> . operacionesMath
    (110) inicializarOp -> . numOperadores
    (43) boolean -> . TRUE
    (44) boolean -> . FALSE
    (111) operacionesMath -> . suma
    (112) operacionesMath -> . resta
    (113) operacionesMath -> . multiplicacion
    (114) operacionesMath -> . divicion
    (129) numOperadores -> . enteros
    (130) numOperadores -> . decimales
    (115) suma -> . numOperadores PLUS inicializarOp
    (116) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN
    (117) suma -> . numOperadores PLUS suma
    (118) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN suma
    (119) resta -> . numOperadores MINUS inicializarOp
    (120) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN
    (121) resta -> . numOperadores MINUS resta
    (122) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN resta
    (123) multiplicacion -> . numOperadores TIMES LPAREN inicializarOp RPAREN
    (124) multiplicacion -> . numOperadores TIMES inicializarOp
    (125) multiplicacion -> . numOperadores TIMES multiplicacion
    (126) divicion -> . numOperadores DIVIDE LPAREN inicializarOp RPAREN
    (127) divicion -> . numOperadores DIVIDE inicializarOp
    (128) divicion -> . numOperadores DIVIDE divicion
    (131) enteros -> . NUM
    (132) enteros -> . numNegative
    (135) decimales -> . enteros PERIOD NUM
    (133) numNegative -> . MINUS NUM
    (134) numNegative -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    STRING          shift and go to state 46
    ID              shift and go to state 42
    MINUS           shift and go to state 49
    PLUS            shift and go to state 51
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUM             shift and go to state 61
    PERIOD          reduce using rule 134 (numNegative -> .)
    TIMES           reduce using rule 134 (numNegative -> .)
    DIVIDE          reduce using rule 134 (numNegative -> .)
    COMMA           reduce using rule 134 (numNegative -> .)
    RBRACKET        reduce using rule 134 (numNegative -> .)
    RPAREN          reduce using rule 134 (numNegative -> .)

  ! PLUS            [ reduce using rule 134 (numNegative -> .) ]
  ! MINUS           [ reduce using rule 134 (numNegative -> .) ]

    javaScript_param               shift and go to state 110
    arrayValues                    shift and go to state 196
    inicializarOp                  shift and go to state 47
    boolean                        shift and go to state 48
    operacionesMath                shift and go to state 50
    numOperadores                  shift and go to state 52
    suma                           shift and go to state 55
    resta                          shift and go to state 56
    multiplicacion                 shift and go to state 57
    divicion                       shift and go to state 58
    enteros                        shift and go to state 59
    decimales                      shift and go to state 60
    numNegative                    shift and go to state 62

state 167

    (64) arrayDeclare -> NEW ARRAY LPAREN . arrayValues RPAREN
    (65) arrayDeclare -> NEW ARRAY LPAREN . RPAREN
    (66) arrayValues -> . javaScript_param
    (67) arrayValues -> . javaScript_param COMMA arrayValues
    (39) javaScript_param -> . STRING
    (40) javaScript_param -> . inicializarOp
    (41) javaScript_param -> . boolean
    (42) javaScript_param -> . ID
    (107) inicializarOp -> . MINUS operacionesMath
    (108) inicializarOp -> . PLUS operacionesMath
    (109) inicializarOp -> . operacionesMath
    (110) inicializarOp -> . numOperadores
    (43) boolean -> . TRUE
    (44) boolean -> . FALSE
    (111) operacionesMath -> . suma
    (112) operacionesMath -> . resta
    (113) operacionesMath -> . multiplicacion
    (114) operacionesMath -> . divicion
    (129) numOperadores -> . enteros
    (130) numOperadores -> . decimales
    (115) suma -> . numOperadores PLUS inicializarOp
    (116) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN
    (117) suma -> . numOperadores PLUS suma
    (118) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN suma
    (119) resta -> . numOperadores MINUS inicializarOp
    (120) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN
    (121) resta -> . numOperadores MINUS resta
    (122) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN resta
    (123) multiplicacion -> . numOperadores TIMES LPAREN inicializarOp RPAREN
    (124) multiplicacion -> . numOperadores TIMES inicializarOp
    (125) multiplicacion -> . numOperadores TIMES multiplicacion
    (126) divicion -> . numOperadores DIVIDE LPAREN inicializarOp RPAREN
    (127) divicion -> . numOperadores DIVIDE inicializarOp
    (128) divicion -> . numOperadores DIVIDE divicion
    (131) enteros -> . NUM
    (132) enteros -> . numNegative
    (135) decimales -> . enteros PERIOD NUM
    (133) numNegative -> . MINUS NUM
    (134) numNegative -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 198
    STRING          shift and go to state 46
    ID              shift and go to state 42
    MINUS           shift and go to state 49
    PLUS            shift and go to state 51
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUM             shift and go to state 61
    PERIOD          reduce using rule 134 (numNegative -> .)
    TIMES           reduce using rule 134 (numNegative -> .)
    DIVIDE          reduce using rule 134 (numNegative -> .)
    COMMA           reduce using rule 134 (numNegative -> .)

  ! PLUS            [ reduce using rule 134 (numNegative -> .) ]
  ! MINUS           [ reduce using rule 134 (numNegative -> .) ]
  ! RPAREN          [ reduce using rule 134 (numNegative -> .) ]

    arrayValues                    shift and go to state 197
    javaScript_param               shift and go to state 110
    inicializarOp                  shift and go to state 47
    boolean                        shift and go to state 48
    operacionesMath                shift and go to state 50
    numOperadores                  shift and go to state 52
    suma                           shift and go to state 55
    resta                          shift and go to state 56
    multiplicacion                 shift and go to state 57
    divicion                       shift and go to state 58
    enteros                        shift and go to state 59
    decimales                      shift and go to state 60
    numNegative                    shift and go to state 62

state 168

    (102) declararSet -> NEW SET LPAREN . RPAREN
    (103) declararSet -> NEW SET LPAREN . LBRACKET iterableSet RBRACKET RPAREN

    RPAREN          shift and go to state 199
    LBRACKET        shift and go to state 200


state 169

    (71) declareMap -> NEW MAP LPAREN . LBRACKET iterableMap RBRACKET RPAREN
    (72) declareMap -> NEW MAP LPAREN . RPAREN

    LBRACKET        shift and go to state 201
    RPAREN          shift and go to state 202


state 170

    (68) methodArray -> PERIOD PUSH LPAREN javaScript_param . RPAREN

    RPAREN          shift and go to state 203


state 171

    (69) methodArray -> PERIOD UNSHIFT LPAREN arrayValues . RPAREN

    RPAREN          shift and go to state 204


state 172

    (70) methodArray -> PERIOD POP LPAREN RPAREN .

    COLON           reduce using rule 70 (methodArray -> PERIOD POP LPAREN RPAREN .)


state 173

    (104) methodSet -> PERIOD ADD LPAREN javaScript_param . RPAREN

    RPAREN          shift and go to state 205


state 174

    (105) methodSet -> PERIOD DELETE LPAREN javaScript_param . RPAREN

    RPAREN          shift and go to state 206


state 175

    (106) methodSet -> PERIOD CLEAR LPAREN RPAREN .
    (82) methodMap -> PERIOD CLEAR LPAREN RPAREN .

  ! reduce/reduce conflict for COLON resolved using rule 82 (methodMap -> PERIOD CLEAR LPAREN RPAREN .)
    COLON           reduce using rule 82 (methodMap -> PERIOD CLEAR LPAREN RPAREN .)

  ! COLON           [ reduce using rule 106 (methodSet -> PERIOD CLEAR LPAREN RPAREN .) ]


state 176

    (84) declareteFunction -> FUNCTION ID LPAREN params RPAREN . sentencesCmpt
    (86) sentencesCmpt -> . LBLOCK sentencia RBLOCK
    (87) sentencesCmpt -> . LBLOCK RBLOCK
    (88) sentencesCmpt -> . LBLOCK RETURN valores_de_impresion COLON RBLOCK
    (89) sentencesCmpt -> . LBLOCK sentencia RETURN valores_de_impresion COLON RBLOCK

    LBLOCK          shift and go to state 178

    sentencesCmpt                  shift and go to state 207

state 177

    (85) declareteFunction -> FUNCTION ID LPAREN RPAREN sentencesCmpt .

    $end            reduce using rule 85 (declareteFunction -> FUNCTION ID LPAREN RPAREN sentencesCmpt .)
    RBLOCK          reduce using rule 85 (declareteFunction -> FUNCTION ID LPAREN RPAREN sentencesCmpt .)
    RETURN          reduce using rule 85 (declareteFunction -> FUNCTION ID LPAREN RPAREN sentencesCmpt .)


state 178

    (86) sentencesCmpt -> LBLOCK . sentencia RBLOCK
    (87) sentencesCmpt -> LBLOCK . RBLOCK
    (88) sentencesCmpt -> LBLOCK . RETURN valores_de_impresion COLON RBLOCK
    (89) sentencesCmpt -> LBLOCK . sentencia RETURN valores_de_impresion COLON RBLOCK
    (1) sentencia -> . callMethods
    (2) sentencia -> . callFunction COLON
    (3) sentencia -> . varDeclaration
    (4) sentencia -> . controlExpression
    (5) sentencia -> . declareteFunction
    (59) callMethods -> . ID methodArray COLON
    (60) callMethods -> . ID methodSet COLON
    (61) callMethods -> . ID methodMap COLON
    (96) callFunction -> . ID LPAREN params RPAREN
    (97) callFunction -> . ID LPAREN RPAREN
    (49) varDeclaration -> . varType assign COLON
    (50) varDeclaration -> . assign COLON
    (51) varDeclaration -> . varType_let ID COLON
    (52) varDeclaration -> . varType_let assign COLON
    (8) controlExpression -> . sentencias_if
    (9) controlExpression -> . sentencias_if_else
    (10) controlExpression -> . sentencias_while
    (11) controlExpression -> . impresion
    (12) controlExpression -> . impresion_vacio
    (84) declareteFunction -> . FUNCTION ID LPAREN params RPAREN sentencesCmpt
    (85) declareteFunction -> . FUNCTION ID LPAREN RPAREN sentencesCmpt
    (47) varType -> . varType_let
    (48) varType -> . CONST
    (53) assign -> . ID EQUAL estructuras_datos
    (54) assign -> . ID EQUAL javaScript_param
    (55) assign -> . ID EQUAL
    (45) varType_let -> . LET
    (46) varType_let -> . VAR
    (24) sentencias_if -> . IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias
    (25) sentencias_if -> . IF LPAREN expression RPAREN cuerpo_de_sentencias
    (26) sentencias_if_else -> . IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias
    (27) sentencias_if_else -> . IF LPAREN expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias
    (30) sentencias_while -> . WHILE LPAREN expression RPAREN cuerpo_de_sentencias
    (31) sentencias_while -> . WHILE LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias
    (32) impresion -> . ALERT LPAREN valores_de_impresion RPAREN COLON
    (38) impresion_vacio -> . ALERT LPAREN RPAREN COLON

    RBLOCK          shift and go to state 209
    RETURN          shift and go to state 210
    ID              shift and go to state 7
    FUNCTION        shift and go to state 16
    CONST           shift and go to state 17
    LET             shift and go to state 18
    VAR             shift and go to state 19
    IF              shift and go to state 20
    WHILE           shift and go to state 21
    ALERT           shift and go to state 22

    sentencia                      shift and go to state 208
    callMethods                    shift and go to state 2
    callFunction                   shift and go to state 3
    varDeclaration                 shift and go to state 4
    controlExpression              shift and go to state 5
    declareteFunction              shift and go to state 6
    varType                        shift and go to state 8
    assign                         shift and go to state 9
    varType_let                    shift and go to state 10
    sentencias_if                  shift and go to state 11
    sentencias_if_else             shift and go to state 12
    sentencias_while               shift and go to state 13
    impresion                      shift and go to state 14
    impresion_vacio                shift and go to state 15

state 179

    (24) sentencias_if -> IF LPAREN expression operadorLogical expression . RPAREN cuerpo_de_sentencias
    (26) sentencias_if_else -> IF LPAREN expression operadorLogical expression . RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias

    RPAREN          shift and go to state 211


state 180

    (25) sentencias_if -> IF LPAREN expression RPAREN cuerpo_de_sentencias .
    (27) sentencias_if_else -> IF LPAREN expression RPAREN cuerpo_de_sentencias . ELSE cuerpo_de_sentencias

    $end            reduce using rule 25 (sentencias_if -> IF LPAREN expression RPAREN cuerpo_de_sentencias .)
    RBLOCK          reduce using rule 25 (sentencias_if -> IF LPAREN expression RPAREN cuerpo_de_sentencias .)
    RETURN          reduce using rule 25 (sentencias_if -> IF LPAREN expression RPAREN cuerpo_de_sentencias .)
    ELSE            shift and go to state 212


state 181

    (28) cuerpo_de_sentencias -> LBLOCK . sentencia RBLOCK
    (29) cuerpo_de_sentencias -> LBLOCK . RBLOCK
    (1) sentencia -> . callMethods
    (2) sentencia -> . callFunction COLON
    (3) sentencia -> . varDeclaration
    (4) sentencia -> . controlExpression
    (5) sentencia -> . declareteFunction
    (59) callMethods -> . ID methodArray COLON
    (60) callMethods -> . ID methodSet COLON
    (61) callMethods -> . ID methodMap COLON
    (96) callFunction -> . ID LPAREN params RPAREN
    (97) callFunction -> . ID LPAREN RPAREN
    (49) varDeclaration -> . varType assign COLON
    (50) varDeclaration -> . assign COLON
    (51) varDeclaration -> . varType_let ID COLON
    (52) varDeclaration -> . varType_let assign COLON
    (8) controlExpression -> . sentencias_if
    (9) controlExpression -> . sentencias_if_else
    (10) controlExpression -> . sentencias_while
    (11) controlExpression -> . impresion
    (12) controlExpression -> . impresion_vacio
    (84) declareteFunction -> . FUNCTION ID LPAREN params RPAREN sentencesCmpt
    (85) declareteFunction -> . FUNCTION ID LPAREN RPAREN sentencesCmpt
    (47) varType -> . varType_let
    (48) varType -> . CONST
    (53) assign -> . ID EQUAL estructuras_datos
    (54) assign -> . ID EQUAL javaScript_param
    (55) assign -> . ID EQUAL
    (45) varType_let -> . LET
    (46) varType_let -> . VAR
    (24) sentencias_if -> . IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias
    (25) sentencias_if -> . IF LPAREN expression RPAREN cuerpo_de_sentencias
    (26) sentencias_if_else -> . IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias
    (27) sentencias_if_else -> . IF LPAREN expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias
    (30) sentencias_while -> . WHILE LPAREN expression RPAREN cuerpo_de_sentencias
    (31) sentencias_while -> . WHILE LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias
    (32) impresion -> . ALERT LPAREN valores_de_impresion RPAREN COLON
    (38) impresion_vacio -> . ALERT LPAREN RPAREN COLON

    RBLOCK          shift and go to state 214
    ID              shift and go to state 7
    FUNCTION        shift and go to state 16
    CONST           shift and go to state 17
    LET             shift and go to state 18
    VAR             shift and go to state 19
    IF              shift and go to state 20
    WHILE           shift and go to state 21
    ALERT           shift and go to state 22

    sentencia                      shift and go to state 213
    callMethods                    shift and go to state 2
    callFunction                   shift and go to state 3
    varDeclaration                 shift and go to state 4
    controlExpression              shift and go to state 5
    declareteFunction              shift and go to state 6
    varType                        shift and go to state 8
    assign                         shift and go to state 9
    varType_let                    shift and go to state 10
    sentencias_if                  shift and go to state 11
    sentencias_if_else             shift and go to state 12
    sentencias_while               shift and go to state 13
    impresion                      shift and go to state 14
    impresion_vacio                shift and go to state 15

state 182

    (136) conditionalEspecifico -> ID opConditional dataCondi .

    RPAREN          reduce using rule 136 (conditionalEspecifico -> ID opConditional dataCondi .)
    AND             reduce using rule 136 (conditionalEspecifico -> ID opConditional dataCondi .)
    OR              reduce using rule 136 (conditionalEspecifico -> ID opConditional dataCondi .)
    NOT             reduce using rule 136 (conditionalEspecifico -> ID opConditional dataCondi .)


state 183

    (139) dataCondi -> STRING .

    RPAREN          reduce using rule 139 (dataCondi -> STRING .)
    AND             reduce using rule 139 (dataCondi -> STRING .)
    OR              reduce using rule 139 (dataCondi -> STRING .)
    NOT             reduce using rule 139 (dataCondi -> STRING .)


state 184

    (140) dataCondi -> NUM .

    RPAREN          reduce using rule 140 (dataCondi -> NUM .)
    AND             reduce using rule 140 (dataCondi -> NUM .)
    OR              reduce using rule 140 (dataCondi -> NUM .)
    NOT             reduce using rule 140 (dataCondi -> NUM .)


state 185

    (137) conditionalEspecifico -> NUM opConditional NUM .

    RPAREN          reduce using rule 137 (conditionalEspecifico -> NUM opConditional NUM .)
    AND             reduce using rule 137 (conditionalEspecifico -> NUM opConditional NUM .)
    OR              reduce using rule 137 (conditionalEspecifico -> NUM opConditional NUM .)
    NOT             reduce using rule 137 (conditionalEspecifico -> NUM opConditional NUM .)


state 186

    (138) conditionalEspecifico -> STRING opConditional STRING .

    RPAREN          reduce using rule 138 (conditionalEspecifico -> STRING opConditional STRING .)
    AND             reduce using rule 138 (conditionalEspecifico -> STRING opConditional STRING .)
    OR              reduce using rule 138 (conditionalEspecifico -> STRING opConditional STRING .)
    NOT             reduce using rule 138 (conditionalEspecifico -> STRING opConditional STRING .)


state 187

    (30) sentencias_while -> WHILE LPAREN expression RPAREN cuerpo_de_sentencias .

    $end            reduce using rule 30 (sentencias_while -> WHILE LPAREN expression RPAREN cuerpo_de_sentencias .)
    RBLOCK          reduce using rule 30 (sentencias_while -> WHILE LPAREN expression RPAREN cuerpo_de_sentencias .)
    RETURN          reduce using rule 30 (sentencias_while -> WHILE LPAREN expression RPAREN cuerpo_de_sentencias .)


state 188

    (31) sentencias_while -> WHILE LPAREN expression operadorLogical expression . RPAREN cuerpo_de_sentencias

    RPAREN          shift and go to state 215


state 189

    (32) impresion -> ALERT LPAREN valores_de_impresion RPAREN COLON .

    $end            reduce using rule 32 (impresion -> ALERT LPAREN valores_de_impresion RPAREN COLON .)
    RBLOCK          reduce using rule 32 (impresion -> ALERT LPAREN valores_de_impresion RPAREN COLON .)
    RETURN          reduce using rule 32 (impresion -> ALERT LPAREN valores_de_impresion RPAREN COLON .)


state 190

    (90) return_ops -> javaScript_param .
    (91) return_ops -> javaScript_param . operadores_mat return_ops
    (92) operadores_mat -> . PLUS
    (93) operadores_mat -> . MINUS
    (94) operadores_mat -> . DIVIDE
    (95) operadores_mat -> . TIMES

    RPAREN          reduce using rule 90 (return_ops -> javaScript_param .)
    COLON           reduce using rule 90 (return_ops -> javaScript_param .)
    PLUS            shift and go to state 143
    MINUS           shift and go to state 144
    DIVIDE          shift and go to state 145
    TIMES           shift and go to state 146

    operadores_mat                 shift and go to state 142

state 191

    (91) return_ops -> javaScript_param operadores_mat return_ops .

    RPAREN          reduce using rule 91 (return_ops -> javaScript_param operadores_mat return_ops .)
    COLON           reduce using rule 91 (return_ops -> javaScript_param operadores_mat return_ops .)


state 192

    (116) suma -> numOperadores PLUS LPAREN inicializarOp . RPAREN
    (118) suma -> numOperadores PLUS LPAREN inicializarOp . RPAREN suma

    RPAREN          shift and go to state 216


state 193

    (120) resta -> numOperadores MINUS LPAREN inicializarOp . RPAREN
    (122) resta -> numOperadores MINUS LPAREN inicializarOp . RPAREN resta

    RPAREN          shift and go to state 217


state 194

    (123) multiplicacion -> numOperadores TIMES LPAREN inicializarOp . RPAREN

    RPAREN          shift and go to state 218


state 195

    (126) divicion -> numOperadores DIVIDE LPAREN inicializarOp . RPAREN

    RPAREN          shift and go to state 219


state 196

    (67) arrayValues -> javaScript_param COMMA arrayValues .

    RBRACKET        reduce using rule 67 (arrayValues -> javaScript_param COMMA arrayValues .)
    RPAREN          reduce using rule 67 (arrayValues -> javaScript_param COMMA arrayValues .)


state 197

    (64) arrayDeclare -> NEW ARRAY LPAREN arrayValues . RPAREN

    RPAREN          shift and go to state 220


state 198

    (65) arrayDeclare -> NEW ARRAY LPAREN RPAREN .

    COLON           reduce using rule 65 (arrayDeclare -> NEW ARRAY LPAREN RPAREN .)
    RPAREN          reduce using rule 65 (arrayDeclare -> NEW ARRAY LPAREN RPAREN .)
    COMMA           reduce using rule 65 (arrayDeclare -> NEW ARRAY LPAREN RPAREN .)
    RBRACKET        reduce using rule 65 (arrayDeclare -> NEW ARRAY LPAREN RPAREN .)


state 199

    (102) declararSet -> NEW SET LPAREN RPAREN .

    COLON           reduce using rule 102 (declararSet -> NEW SET LPAREN RPAREN .)
    RPAREN          reduce using rule 102 (declararSet -> NEW SET LPAREN RPAREN .)
    COMMA           reduce using rule 102 (declararSet -> NEW SET LPAREN RPAREN .)
    RBRACKET        reduce using rule 102 (declararSet -> NEW SET LPAREN RPAREN .)


state 200

    (103) declararSet -> NEW SET LPAREN LBRACKET . iterableSet RBRACKET RPAREN
    (79) iterableSet -> . keyValue
    (80) iterableSet -> . keyValue COMMA iterableSet
    (81) iterableSet -> .
    (75) keyValue -> . javaScript_param
    (76) keyValue -> . declararSet
    (77) keyValue -> . declareMap
    (78) keyValue -> . arrayDeclare
    (39) javaScript_param -> . STRING
    (40) javaScript_param -> . inicializarOp
    (41) javaScript_param -> . boolean
    (42) javaScript_param -> . ID
    (102) declararSet -> . NEW SET LPAREN RPAREN
    (103) declararSet -> . NEW SET LPAREN LBRACKET iterableSet RBRACKET RPAREN
    (71) declareMap -> . NEW MAP LPAREN LBRACKET iterableMap RBRACKET RPAREN
    (72) declareMap -> . NEW MAP LPAREN RPAREN
    (62) arrayDeclare -> . LBRACKET RBRACKET
    (63) arrayDeclare -> . LBRACKET arrayValues RBRACKET
    (64) arrayDeclare -> . NEW ARRAY LPAREN arrayValues RPAREN
    (65) arrayDeclare -> . NEW ARRAY LPAREN RPAREN
    (107) inicializarOp -> . MINUS operacionesMath
    (108) inicializarOp -> . PLUS operacionesMath
    (109) inicializarOp -> . operacionesMath
    (110) inicializarOp -> . numOperadores
    (43) boolean -> . TRUE
    (44) boolean -> . FALSE
    (111) operacionesMath -> . suma
    (112) operacionesMath -> . resta
    (113) operacionesMath -> . multiplicacion
    (114) operacionesMath -> . divicion
    (129) numOperadores -> . enteros
    (130) numOperadores -> . decimales
    (115) suma -> . numOperadores PLUS inicializarOp
    (116) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN
    (117) suma -> . numOperadores PLUS suma
    (118) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN suma
    (119) resta -> . numOperadores MINUS inicializarOp
    (120) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN
    (121) resta -> . numOperadores MINUS resta
    (122) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN resta
    (123) multiplicacion -> . numOperadores TIMES LPAREN inicializarOp RPAREN
    (124) multiplicacion -> . numOperadores TIMES inicializarOp
    (125) multiplicacion -> . numOperadores TIMES multiplicacion
    (126) divicion -> . numOperadores DIVIDE LPAREN inicializarOp RPAREN
    (127) divicion -> . numOperadores DIVIDE inicializarOp
    (128) divicion -> . numOperadores DIVIDE divicion
    (131) enteros -> . NUM
    (132) enteros -> . numNegative
    (135) decimales -> . enteros PERIOD NUM
    (133) numNegative -> . MINUS NUM
    (134) numNegative -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for RBRACKET resolved using rule 81 (iterableSet -> .)
    RBRACKET        reduce using rule 81 (iterableSet -> .)
    STRING          shift and go to state 46
    ID              shift and go to state 42
    NEW             shift and go to state 221
    LBRACKET        shift and go to state 68
    MINUS           shift and go to state 49
    PLUS            shift and go to state 51
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUM             shift and go to state 61
    PERIOD          reduce using rule 134 (numNegative -> .)
    TIMES           reduce using rule 134 (numNegative -> .)
    DIVIDE          reduce using rule 134 (numNegative -> .)
    COMMA           reduce using rule 134 (numNegative -> .)

  ! PLUS            [ reduce using rule 134 (numNegative -> .) ]
  ! MINUS           [ reduce using rule 134 (numNegative -> .) ]
  ! RBRACKET        [ reduce using rule 134 (numNegative -> .) ]

    iterableSet                    shift and go to state 222
    keyValue                       shift and go to state 223
    javaScript_param               shift and go to state 224
    declararSet                    shift and go to state 225
    declareMap                     shift and go to state 226
    arrayDeclare                   shift and go to state 227
    inicializarOp                  shift and go to state 47
    boolean                        shift and go to state 48
    operacionesMath                shift and go to state 50
    numOperadores                  shift and go to state 52
    suma                           shift and go to state 55
    resta                          shift and go to state 56
    multiplicacion                 shift and go to state 57
    divicion                       shift and go to state 58
    enteros                        shift and go to state 59
    decimales                      shift and go to state 60
    numNegative                    shift and go to state 62

state 201

    (71) declareMap -> NEW MAP LPAREN LBRACKET . iterableMap RBRACKET RPAREN
    (73) iterableMap -> . LBRACKET keyValue COMMA keyValue RBRACKET
    (74) iterableMap -> . LBRACKET keyValue COMMA keyValue RBRACKET COMMA iterableMap

    LBRACKET        shift and go to state 228

    iterableMap                    shift and go to state 229

state 202

    (72) declareMap -> NEW MAP LPAREN RPAREN .

    COLON           reduce using rule 72 (declareMap -> NEW MAP LPAREN RPAREN .)
    RPAREN          reduce using rule 72 (declareMap -> NEW MAP LPAREN RPAREN .)
    COMMA           reduce using rule 72 (declareMap -> NEW MAP LPAREN RPAREN .)
    RBRACKET        reduce using rule 72 (declareMap -> NEW MAP LPAREN RPAREN .)


state 203

    (68) methodArray -> PERIOD PUSH LPAREN javaScript_param RPAREN .

    COLON           reduce using rule 68 (methodArray -> PERIOD PUSH LPAREN javaScript_param RPAREN .)


state 204

    (69) methodArray -> PERIOD UNSHIFT LPAREN arrayValues RPAREN .

    COLON           reduce using rule 69 (methodArray -> PERIOD UNSHIFT LPAREN arrayValues RPAREN .)


state 205

    (104) methodSet -> PERIOD ADD LPAREN javaScript_param RPAREN .

    COLON           reduce using rule 104 (methodSet -> PERIOD ADD LPAREN javaScript_param RPAREN .)


state 206

    (105) methodSet -> PERIOD DELETE LPAREN javaScript_param RPAREN .

    COLON           reduce using rule 105 (methodSet -> PERIOD DELETE LPAREN javaScript_param RPAREN .)


state 207

    (84) declareteFunction -> FUNCTION ID LPAREN params RPAREN sentencesCmpt .

    $end            reduce using rule 84 (declareteFunction -> FUNCTION ID LPAREN params RPAREN sentencesCmpt .)
    RBLOCK          reduce using rule 84 (declareteFunction -> FUNCTION ID LPAREN params RPAREN sentencesCmpt .)
    RETURN          reduce using rule 84 (declareteFunction -> FUNCTION ID LPAREN params RPAREN sentencesCmpt .)


state 208

    (86) sentencesCmpt -> LBLOCK sentencia . RBLOCK
    (89) sentencesCmpt -> LBLOCK sentencia . RETURN valores_de_impresion COLON RBLOCK

    RBLOCK          shift and go to state 230
    RETURN          shift and go to state 231


state 209

    (87) sentencesCmpt -> LBLOCK RBLOCK .

    $end            reduce using rule 87 (sentencesCmpt -> LBLOCK RBLOCK .)
    RBLOCK          reduce using rule 87 (sentencesCmpt -> LBLOCK RBLOCK .)
    RETURN          reduce using rule 87 (sentencesCmpt -> LBLOCK RBLOCK .)


state 210

    (88) sentencesCmpt -> LBLOCK RETURN . valores_de_impresion COLON RBLOCK
    (33) valores_de_impresion -> . inicializarOp
    (34) valores_de_impresion -> . javaScript_param
    (35) valores_de_impresion -> . callFunction
    (36) valores_de_impresion -> . estructuras_datos
    (37) valores_de_impresion -> . return_ops
    (107) inicializarOp -> . MINUS operacionesMath
    (108) inicializarOp -> . PLUS operacionesMath
    (109) inicializarOp -> . operacionesMath
    (110) inicializarOp -> . numOperadores
    (39) javaScript_param -> . STRING
    (40) javaScript_param -> . inicializarOp
    (41) javaScript_param -> . boolean
    (42) javaScript_param -> . ID
    (96) callFunction -> . ID LPAREN params RPAREN
    (97) callFunction -> . ID LPAREN RPAREN
    (56) estructuras_datos -> . arrayDeclare
    (57) estructuras_datos -> . declararSet
    (58) estructuras_datos -> . declareMap
    (90) return_ops -> . javaScript_param
    (91) return_ops -> . javaScript_param operadores_mat return_ops
    (111) operacionesMath -> . suma
    (112) operacionesMath -> . resta
    (113) operacionesMath -> . multiplicacion
    (114) operacionesMath -> . divicion
    (129) numOperadores -> . enteros
    (130) numOperadores -> . decimales
    (43) boolean -> . TRUE
    (44) boolean -> . FALSE
    (62) arrayDeclare -> . LBRACKET RBRACKET
    (63) arrayDeclare -> . LBRACKET arrayValues RBRACKET
    (64) arrayDeclare -> . NEW ARRAY LPAREN arrayValues RPAREN
    (65) arrayDeclare -> . NEW ARRAY LPAREN RPAREN
    (102) declararSet -> . NEW SET LPAREN RPAREN
    (103) declararSet -> . NEW SET LPAREN LBRACKET iterableSet RBRACKET RPAREN
    (71) declareMap -> . NEW MAP LPAREN LBRACKET iterableMap RBRACKET RPAREN
    (72) declareMap -> . NEW MAP LPAREN RPAREN
    (115) suma -> . numOperadores PLUS inicializarOp
    (116) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN
    (117) suma -> . numOperadores PLUS suma
    (118) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN suma
    (119) resta -> . numOperadores MINUS inicializarOp
    (120) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN
    (121) resta -> . numOperadores MINUS resta
    (122) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN resta
    (123) multiplicacion -> . numOperadores TIMES LPAREN inicializarOp RPAREN
    (124) multiplicacion -> . numOperadores TIMES inicializarOp
    (125) multiplicacion -> . numOperadores TIMES multiplicacion
    (126) divicion -> . numOperadores DIVIDE LPAREN inicializarOp RPAREN
    (127) divicion -> . numOperadores DIVIDE inicializarOp
    (128) divicion -> . numOperadores DIVIDE divicion
    (131) enteros -> . NUM
    (132) enteros -> . numNegative
    (135) decimales -> . enteros PERIOD NUM
    (133) numNegative -> . MINUS NUM
    (134) numNegative -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    MINUS           shift and go to state 49
    PLUS            shift and go to state 51
    STRING          shift and go to state 46
    ID              shift and go to state 95
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    LBRACKET        shift and go to state 68
    NEW             shift and go to state 69
    NUM             shift and go to state 61
    PERIOD          reduce using rule 134 (numNegative -> .)
    TIMES           reduce using rule 134 (numNegative -> .)
    DIVIDE          reduce using rule 134 (numNegative -> .)
    COLON           reduce using rule 134 (numNegative -> .)

  ! PLUS            [ reduce using rule 134 (numNegative -> .) ]
  ! MINUS           [ reduce using rule 134 (numNegative -> .) ]

    valores_de_impresion           shift and go to state 232
    inicializarOp                  shift and go to state 90
    javaScript_param               shift and go to state 91
    callFunction                   shift and go to state 92
    estructuras_datos              shift and go to state 93
    return_ops                     shift and go to state 94
    operacionesMath                shift and go to state 50
    numOperadores                  shift and go to state 52
    boolean                        shift and go to state 48
    arrayDeclare                   shift and go to state 65
    declararSet                    shift and go to state 66
    declareMap                     shift and go to state 67
    suma                           shift and go to state 55
    resta                          shift and go to state 56
    multiplicacion                 shift and go to state 57
    divicion                       shift and go to state 58
    enteros                        shift and go to state 59
    decimales                      shift and go to state 60
    numNegative                    shift and go to state 62

state 211

    (24) sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN . cuerpo_de_sentencias
    (26) sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN . cuerpo_de_sentencias ELSE cuerpo_de_sentencias
    (28) cuerpo_de_sentencias -> . LBLOCK sentencia RBLOCK
    (29) cuerpo_de_sentencias -> . LBLOCK RBLOCK

    LBLOCK          shift and go to state 181

    cuerpo_de_sentencias           shift and go to state 233

state 212

    (27) sentencias_if_else -> IF LPAREN expression RPAREN cuerpo_de_sentencias ELSE . cuerpo_de_sentencias
    (28) cuerpo_de_sentencias -> . LBLOCK sentencia RBLOCK
    (29) cuerpo_de_sentencias -> . LBLOCK RBLOCK

    LBLOCK          shift and go to state 181

    cuerpo_de_sentencias           shift and go to state 234

state 213

    (28) cuerpo_de_sentencias -> LBLOCK sentencia . RBLOCK

    RBLOCK          shift and go to state 235


state 214

    (29) cuerpo_de_sentencias -> LBLOCK RBLOCK .

    ELSE            reduce using rule 29 (cuerpo_de_sentencias -> LBLOCK RBLOCK .)
    $end            reduce using rule 29 (cuerpo_de_sentencias -> LBLOCK RBLOCK .)
    RBLOCK          reduce using rule 29 (cuerpo_de_sentencias -> LBLOCK RBLOCK .)
    RETURN          reduce using rule 29 (cuerpo_de_sentencias -> LBLOCK RBLOCK .)


state 215

    (31) sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN . cuerpo_de_sentencias
    (28) cuerpo_de_sentencias -> . LBLOCK sentencia RBLOCK
    (29) cuerpo_de_sentencias -> . LBLOCK RBLOCK

    LBLOCK          shift and go to state 181

    cuerpo_de_sentencias           shift and go to state 236

state 216

    (116) suma -> numOperadores PLUS LPAREN inicializarOp RPAREN .
    (118) suma -> numOperadores PLUS LPAREN inicializarOp RPAREN . suma
    (115) suma -> . numOperadores PLUS inicializarOp
    (116) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN
    (117) suma -> . numOperadores PLUS suma
    (118) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN suma
    (129) numOperadores -> . enteros
    (130) numOperadores -> . decimales
    (131) enteros -> . NUM
    (132) enteros -> . numNegative
    (135) decimales -> . enteros PERIOD NUM
    (133) numNegative -> . MINUS NUM
    (134) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for PLUS resolved using rule 116 (suma -> numOperadores PLUS LPAREN inicializarOp RPAREN .)
    COMMA           reduce using rule 116 (suma -> numOperadores PLUS LPAREN inicializarOp RPAREN .)
    RPAREN          reduce using rule 116 (suma -> numOperadores PLUS LPAREN inicializarOp RPAREN .)
    COLON           reduce using rule 116 (suma -> numOperadores PLUS LPAREN inicializarOp RPAREN .)
    AND             reduce using rule 116 (suma -> numOperadores PLUS LPAREN inicializarOp RPAREN .)
    OR              reduce using rule 116 (suma -> numOperadores PLUS LPAREN inicializarOp RPAREN .)
    NOT             reduce using rule 116 (suma -> numOperadores PLUS LPAREN inicializarOp RPAREN .)
    PLUS            reduce using rule 116 (suma -> numOperadores PLUS LPAREN inicializarOp RPAREN .)
    DIVIDE          reduce using rule 116 (suma -> numOperadores PLUS LPAREN inicializarOp RPAREN .)
    TIMES           reduce using rule 116 (suma -> numOperadores PLUS LPAREN inicializarOp RPAREN .)
    RBRACKET        reduce using rule 116 (suma -> numOperadores PLUS LPAREN inicializarOp RPAREN .)
    NUM             shift and go to state 61
    MINUS           shift and go to state 98
    PERIOD          reduce using rule 134 (numNegative -> .)

  ! MINUS           [ reduce using rule 116 (suma -> numOperadores PLUS LPAREN inicializarOp RPAREN .) ]
  ! PLUS            [ reduce using rule 134 (numNegative -> .) ]

    numOperadores                  shift and go to state 237
    suma                           shift and go to state 238
    enteros                        shift and go to state 59
    decimales                      shift and go to state 60
    numNegative                    shift and go to state 62

state 217

    (120) resta -> numOperadores MINUS LPAREN inicializarOp RPAREN .
    (122) resta -> numOperadores MINUS LPAREN inicializarOp RPAREN . resta
    (119) resta -> . numOperadores MINUS inicializarOp
    (120) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN
    (121) resta -> . numOperadores MINUS resta
    (122) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN resta
    (129) numOperadores -> . enteros
    (130) numOperadores -> . decimales
    (131) enteros -> . NUM
    (132) enteros -> . numNegative
    (135) decimales -> . enteros PERIOD NUM
    (133) numNegative -> . MINUS NUM
    (134) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    COMMA           reduce using rule 120 (resta -> numOperadores MINUS LPAREN inicializarOp RPAREN .)
    RPAREN          reduce using rule 120 (resta -> numOperadores MINUS LPAREN inicializarOp RPAREN .)
    COLON           reduce using rule 120 (resta -> numOperadores MINUS LPAREN inicializarOp RPAREN .)
    AND             reduce using rule 120 (resta -> numOperadores MINUS LPAREN inicializarOp RPAREN .)
    OR              reduce using rule 120 (resta -> numOperadores MINUS LPAREN inicializarOp RPAREN .)
    NOT             reduce using rule 120 (resta -> numOperadores MINUS LPAREN inicializarOp RPAREN .)
    PLUS            reduce using rule 120 (resta -> numOperadores MINUS LPAREN inicializarOp RPAREN .)
    DIVIDE          reduce using rule 120 (resta -> numOperadores MINUS LPAREN inicializarOp RPAREN .)
    TIMES           reduce using rule 120 (resta -> numOperadores MINUS LPAREN inicializarOp RPAREN .)
    RBRACKET        reduce using rule 120 (resta -> numOperadores MINUS LPAREN inicializarOp RPAREN .)
    NUM             shift and go to state 61
    MINUS           shift and go to state 98
    PERIOD          reduce using rule 134 (numNegative -> .)

  ! MINUS           [ reduce using rule 120 (resta -> numOperadores MINUS LPAREN inicializarOp RPAREN .) ]
  ! MINUS           [ reduce using rule 134 (numNegative -> .) ]

    numOperadores                  shift and go to state 239
    resta                          shift and go to state 240
    enteros                        shift and go to state 59
    decimales                      shift and go to state 60
    numNegative                    shift and go to state 62

state 218

    (123) multiplicacion -> numOperadores TIMES LPAREN inicializarOp RPAREN .

    COMMA           reduce using rule 123 (multiplicacion -> numOperadores TIMES LPAREN inicializarOp RPAREN .)
    RPAREN          reduce using rule 123 (multiplicacion -> numOperadores TIMES LPAREN inicializarOp RPAREN .)
    COLON           reduce using rule 123 (multiplicacion -> numOperadores TIMES LPAREN inicializarOp RPAREN .)
    AND             reduce using rule 123 (multiplicacion -> numOperadores TIMES LPAREN inicializarOp RPAREN .)
    OR              reduce using rule 123 (multiplicacion -> numOperadores TIMES LPAREN inicializarOp RPAREN .)
    NOT             reduce using rule 123 (multiplicacion -> numOperadores TIMES LPAREN inicializarOp RPAREN .)
    PLUS            reduce using rule 123 (multiplicacion -> numOperadores TIMES LPAREN inicializarOp RPAREN .)
    MINUS           reduce using rule 123 (multiplicacion -> numOperadores TIMES LPAREN inicializarOp RPAREN .)
    DIVIDE          reduce using rule 123 (multiplicacion -> numOperadores TIMES LPAREN inicializarOp RPAREN .)
    TIMES           reduce using rule 123 (multiplicacion -> numOperadores TIMES LPAREN inicializarOp RPAREN .)
    RBRACKET        reduce using rule 123 (multiplicacion -> numOperadores TIMES LPAREN inicializarOp RPAREN .)


state 219

    (126) divicion -> numOperadores DIVIDE LPAREN inicializarOp RPAREN .

    COMMA           reduce using rule 126 (divicion -> numOperadores DIVIDE LPAREN inicializarOp RPAREN .)
    RPAREN          reduce using rule 126 (divicion -> numOperadores DIVIDE LPAREN inicializarOp RPAREN .)
    COLON           reduce using rule 126 (divicion -> numOperadores DIVIDE LPAREN inicializarOp RPAREN .)
    AND             reduce using rule 126 (divicion -> numOperadores DIVIDE LPAREN inicializarOp RPAREN .)
    OR              reduce using rule 126 (divicion -> numOperadores DIVIDE LPAREN inicializarOp RPAREN .)
    NOT             reduce using rule 126 (divicion -> numOperadores DIVIDE LPAREN inicializarOp RPAREN .)
    PLUS            reduce using rule 126 (divicion -> numOperadores DIVIDE LPAREN inicializarOp RPAREN .)
    MINUS           reduce using rule 126 (divicion -> numOperadores DIVIDE LPAREN inicializarOp RPAREN .)
    DIVIDE          reduce using rule 126 (divicion -> numOperadores DIVIDE LPAREN inicializarOp RPAREN .)
    TIMES           reduce using rule 126 (divicion -> numOperadores DIVIDE LPAREN inicializarOp RPAREN .)
    RBRACKET        reduce using rule 126 (divicion -> numOperadores DIVIDE LPAREN inicializarOp RPAREN .)


state 220

    (64) arrayDeclare -> NEW ARRAY LPAREN arrayValues RPAREN .

    COLON           reduce using rule 64 (arrayDeclare -> NEW ARRAY LPAREN arrayValues RPAREN .)
    RPAREN          reduce using rule 64 (arrayDeclare -> NEW ARRAY LPAREN arrayValues RPAREN .)
    COMMA           reduce using rule 64 (arrayDeclare -> NEW ARRAY LPAREN arrayValues RPAREN .)
    RBRACKET        reduce using rule 64 (arrayDeclare -> NEW ARRAY LPAREN arrayValues RPAREN .)


state 221

    (102) declararSet -> NEW . SET LPAREN RPAREN
    (103) declararSet -> NEW . SET LPAREN LBRACKET iterableSet RBRACKET RPAREN
    (71) declareMap -> NEW . MAP LPAREN LBRACKET iterableMap RBRACKET RPAREN
    (72) declareMap -> NEW . MAP LPAREN RPAREN
    (64) arrayDeclare -> NEW . ARRAY LPAREN arrayValues RPAREN
    (65) arrayDeclare -> NEW . ARRAY LPAREN RPAREN

    SET             shift and go to state 112
    MAP             shift and go to state 113
    ARRAY           shift and go to state 111


state 222

    (103) declararSet -> NEW SET LPAREN LBRACKET iterableSet . RBRACKET RPAREN

    RBRACKET        shift and go to state 241


state 223

    (79) iterableSet -> keyValue .
    (80) iterableSet -> keyValue . COMMA iterableSet

    RBRACKET        reduce using rule 79 (iterableSet -> keyValue .)
    COMMA           shift and go to state 242


state 224

    (75) keyValue -> javaScript_param .

    COMMA           reduce using rule 75 (keyValue -> javaScript_param .)
    RBRACKET        reduce using rule 75 (keyValue -> javaScript_param .)


state 225

    (76) keyValue -> declararSet .

    COMMA           reduce using rule 76 (keyValue -> declararSet .)
    RBRACKET        reduce using rule 76 (keyValue -> declararSet .)


state 226

    (77) keyValue -> declareMap .

    COMMA           reduce using rule 77 (keyValue -> declareMap .)
    RBRACKET        reduce using rule 77 (keyValue -> declareMap .)


state 227

    (78) keyValue -> arrayDeclare .

    COMMA           reduce using rule 78 (keyValue -> arrayDeclare .)
    RBRACKET        reduce using rule 78 (keyValue -> arrayDeclare .)


state 228

    (73) iterableMap -> LBRACKET . keyValue COMMA keyValue RBRACKET
    (74) iterableMap -> LBRACKET . keyValue COMMA keyValue RBRACKET COMMA iterableMap
    (75) keyValue -> . javaScript_param
    (76) keyValue -> . declararSet
    (77) keyValue -> . declareMap
    (78) keyValue -> . arrayDeclare
    (39) javaScript_param -> . STRING
    (40) javaScript_param -> . inicializarOp
    (41) javaScript_param -> . boolean
    (42) javaScript_param -> . ID
    (102) declararSet -> . NEW SET LPAREN RPAREN
    (103) declararSet -> . NEW SET LPAREN LBRACKET iterableSet RBRACKET RPAREN
    (71) declareMap -> . NEW MAP LPAREN LBRACKET iterableMap RBRACKET RPAREN
    (72) declareMap -> . NEW MAP LPAREN RPAREN
    (62) arrayDeclare -> . LBRACKET RBRACKET
    (63) arrayDeclare -> . LBRACKET arrayValues RBRACKET
    (64) arrayDeclare -> . NEW ARRAY LPAREN arrayValues RPAREN
    (65) arrayDeclare -> . NEW ARRAY LPAREN RPAREN
    (107) inicializarOp -> . MINUS operacionesMath
    (108) inicializarOp -> . PLUS operacionesMath
    (109) inicializarOp -> . operacionesMath
    (110) inicializarOp -> . numOperadores
    (43) boolean -> . TRUE
    (44) boolean -> . FALSE
    (111) operacionesMath -> . suma
    (112) operacionesMath -> . resta
    (113) operacionesMath -> . multiplicacion
    (114) operacionesMath -> . divicion
    (129) numOperadores -> . enteros
    (130) numOperadores -> . decimales
    (115) suma -> . numOperadores PLUS inicializarOp
    (116) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN
    (117) suma -> . numOperadores PLUS suma
    (118) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN suma
    (119) resta -> . numOperadores MINUS inicializarOp
    (120) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN
    (121) resta -> . numOperadores MINUS resta
    (122) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN resta
    (123) multiplicacion -> . numOperadores TIMES LPAREN inicializarOp RPAREN
    (124) multiplicacion -> . numOperadores TIMES inicializarOp
    (125) multiplicacion -> . numOperadores TIMES multiplicacion
    (126) divicion -> . numOperadores DIVIDE LPAREN inicializarOp RPAREN
    (127) divicion -> . numOperadores DIVIDE inicializarOp
    (128) divicion -> . numOperadores DIVIDE divicion
    (131) enteros -> . NUM
    (132) enteros -> . numNegative
    (135) decimales -> . enteros PERIOD NUM
    (133) numNegative -> . MINUS NUM
    (134) numNegative -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    STRING          shift and go to state 46
    ID              shift and go to state 42
    NEW             shift and go to state 221
    LBRACKET        shift and go to state 68
    MINUS           shift and go to state 49
    PLUS            shift and go to state 51
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUM             shift and go to state 61
    PERIOD          reduce using rule 134 (numNegative -> .)
    TIMES           reduce using rule 134 (numNegative -> .)
    DIVIDE          reduce using rule 134 (numNegative -> .)
    COMMA           reduce using rule 134 (numNegative -> .)

  ! PLUS            [ reduce using rule 134 (numNegative -> .) ]
  ! MINUS           [ reduce using rule 134 (numNegative -> .) ]

    keyValue                       shift and go to state 243
    javaScript_param               shift and go to state 224
    declararSet                    shift and go to state 225
    declareMap                     shift and go to state 226
    arrayDeclare                   shift and go to state 227
    inicializarOp                  shift and go to state 47
    boolean                        shift and go to state 48
    operacionesMath                shift and go to state 50
    numOperadores                  shift and go to state 52
    suma                           shift and go to state 55
    resta                          shift and go to state 56
    multiplicacion                 shift and go to state 57
    divicion                       shift and go to state 58
    enteros                        shift and go to state 59
    decimales                      shift and go to state 60
    numNegative                    shift and go to state 62

state 229

    (71) declareMap -> NEW MAP LPAREN LBRACKET iterableMap . RBRACKET RPAREN

    RBRACKET        shift and go to state 244


state 230

    (86) sentencesCmpt -> LBLOCK sentencia RBLOCK .

    $end            reduce using rule 86 (sentencesCmpt -> LBLOCK sentencia RBLOCK .)
    RBLOCK          reduce using rule 86 (sentencesCmpt -> LBLOCK sentencia RBLOCK .)
    RETURN          reduce using rule 86 (sentencesCmpt -> LBLOCK sentencia RBLOCK .)


state 231

    (89) sentencesCmpt -> LBLOCK sentencia RETURN . valores_de_impresion COLON RBLOCK
    (33) valores_de_impresion -> . inicializarOp
    (34) valores_de_impresion -> . javaScript_param
    (35) valores_de_impresion -> . callFunction
    (36) valores_de_impresion -> . estructuras_datos
    (37) valores_de_impresion -> . return_ops
    (107) inicializarOp -> . MINUS operacionesMath
    (108) inicializarOp -> . PLUS operacionesMath
    (109) inicializarOp -> . operacionesMath
    (110) inicializarOp -> . numOperadores
    (39) javaScript_param -> . STRING
    (40) javaScript_param -> . inicializarOp
    (41) javaScript_param -> . boolean
    (42) javaScript_param -> . ID
    (96) callFunction -> . ID LPAREN params RPAREN
    (97) callFunction -> . ID LPAREN RPAREN
    (56) estructuras_datos -> . arrayDeclare
    (57) estructuras_datos -> . declararSet
    (58) estructuras_datos -> . declareMap
    (90) return_ops -> . javaScript_param
    (91) return_ops -> . javaScript_param operadores_mat return_ops
    (111) operacionesMath -> . suma
    (112) operacionesMath -> . resta
    (113) operacionesMath -> . multiplicacion
    (114) operacionesMath -> . divicion
    (129) numOperadores -> . enteros
    (130) numOperadores -> . decimales
    (43) boolean -> . TRUE
    (44) boolean -> . FALSE
    (62) arrayDeclare -> . LBRACKET RBRACKET
    (63) arrayDeclare -> . LBRACKET arrayValues RBRACKET
    (64) arrayDeclare -> . NEW ARRAY LPAREN arrayValues RPAREN
    (65) arrayDeclare -> . NEW ARRAY LPAREN RPAREN
    (102) declararSet -> . NEW SET LPAREN RPAREN
    (103) declararSet -> . NEW SET LPAREN LBRACKET iterableSet RBRACKET RPAREN
    (71) declareMap -> . NEW MAP LPAREN LBRACKET iterableMap RBRACKET RPAREN
    (72) declareMap -> . NEW MAP LPAREN RPAREN
    (115) suma -> . numOperadores PLUS inicializarOp
    (116) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN
    (117) suma -> . numOperadores PLUS suma
    (118) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN suma
    (119) resta -> . numOperadores MINUS inicializarOp
    (120) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN
    (121) resta -> . numOperadores MINUS resta
    (122) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN resta
    (123) multiplicacion -> . numOperadores TIMES LPAREN inicializarOp RPAREN
    (124) multiplicacion -> . numOperadores TIMES inicializarOp
    (125) multiplicacion -> . numOperadores TIMES multiplicacion
    (126) divicion -> . numOperadores DIVIDE LPAREN inicializarOp RPAREN
    (127) divicion -> . numOperadores DIVIDE inicializarOp
    (128) divicion -> . numOperadores DIVIDE divicion
    (131) enteros -> . NUM
    (132) enteros -> . numNegative
    (135) decimales -> . enteros PERIOD NUM
    (133) numNegative -> . MINUS NUM
    (134) numNegative -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    MINUS           shift and go to state 49
    PLUS            shift and go to state 51
    STRING          shift and go to state 46
    ID              shift and go to state 95
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    LBRACKET        shift and go to state 68
    NEW             shift and go to state 69
    NUM             shift and go to state 61
    PERIOD          reduce using rule 134 (numNegative -> .)
    TIMES           reduce using rule 134 (numNegative -> .)
    DIVIDE          reduce using rule 134 (numNegative -> .)
    COLON           reduce using rule 134 (numNegative -> .)

  ! PLUS            [ reduce using rule 134 (numNegative -> .) ]
  ! MINUS           [ reduce using rule 134 (numNegative -> .) ]

    valores_de_impresion           shift and go to state 245
    inicializarOp                  shift and go to state 90
    javaScript_param               shift and go to state 91
    callFunction                   shift and go to state 92
    estructuras_datos              shift and go to state 93
    return_ops                     shift and go to state 94
    operacionesMath                shift and go to state 50
    numOperadores                  shift and go to state 52
    boolean                        shift and go to state 48
    arrayDeclare                   shift and go to state 65
    declararSet                    shift and go to state 66
    declareMap                     shift and go to state 67
    suma                           shift and go to state 55
    resta                          shift and go to state 56
    multiplicacion                 shift and go to state 57
    divicion                       shift and go to state 58
    enteros                        shift and go to state 59
    decimales                      shift and go to state 60
    numNegative                    shift and go to state 62

state 232

    (88) sentencesCmpt -> LBLOCK RETURN valores_de_impresion . COLON RBLOCK

    COLON           shift and go to state 246


state 233

    (24) sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias .
    (26) sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias . ELSE cuerpo_de_sentencias

    $end            reduce using rule 24 (sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias .)
    RBLOCK          reduce using rule 24 (sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias .)
    RETURN          reduce using rule 24 (sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias .)
    ELSE            shift and go to state 247


state 234

    (27) sentencias_if_else -> IF LPAREN expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias .

    $end            reduce using rule 27 (sentencias_if_else -> IF LPAREN expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias .)
    RBLOCK          reduce using rule 27 (sentencias_if_else -> IF LPAREN expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias .)
    RETURN          reduce using rule 27 (sentencias_if_else -> IF LPAREN expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias .)


state 235

    (28) cuerpo_de_sentencias -> LBLOCK sentencia RBLOCK .

    ELSE            reduce using rule 28 (cuerpo_de_sentencias -> LBLOCK sentencia RBLOCK .)
    $end            reduce using rule 28 (cuerpo_de_sentencias -> LBLOCK sentencia RBLOCK .)
    RBLOCK          reduce using rule 28 (cuerpo_de_sentencias -> LBLOCK sentencia RBLOCK .)
    RETURN          reduce using rule 28 (cuerpo_de_sentencias -> LBLOCK sentencia RBLOCK .)


state 236

    (31) sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias .

    $end            reduce using rule 31 (sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias .)
    RBLOCK          reduce using rule 31 (sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias .)
    RETURN          reduce using rule 31 (sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias .)


state 237

    (115) suma -> numOperadores . PLUS inicializarOp
    (116) suma -> numOperadores . PLUS LPAREN inicializarOp RPAREN
    (117) suma -> numOperadores . PLUS suma
    (118) suma -> numOperadores . PLUS LPAREN inicializarOp RPAREN suma

    PLUS            shift and go to state 103


state 238

    (118) suma -> numOperadores PLUS LPAREN inicializarOp RPAREN suma .

    COMMA           reduce using rule 118 (suma -> numOperadores PLUS LPAREN inicializarOp RPAREN suma .)
    RPAREN          reduce using rule 118 (suma -> numOperadores PLUS LPAREN inicializarOp RPAREN suma .)
    COLON           reduce using rule 118 (suma -> numOperadores PLUS LPAREN inicializarOp RPAREN suma .)
    AND             reduce using rule 118 (suma -> numOperadores PLUS LPAREN inicializarOp RPAREN suma .)
    OR              reduce using rule 118 (suma -> numOperadores PLUS LPAREN inicializarOp RPAREN suma .)
    NOT             reduce using rule 118 (suma -> numOperadores PLUS LPAREN inicializarOp RPAREN suma .)
    PLUS            reduce using rule 118 (suma -> numOperadores PLUS LPAREN inicializarOp RPAREN suma .)
    MINUS           reduce using rule 118 (suma -> numOperadores PLUS LPAREN inicializarOp RPAREN suma .)
    DIVIDE          reduce using rule 118 (suma -> numOperadores PLUS LPAREN inicializarOp RPAREN suma .)
    TIMES           reduce using rule 118 (suma -> numOperadores PLUS LPAREN inicializarOp RPAREN suma .)
    RBRACKET        reduce using rule 118 (suma -> numOperadores PLUS LPAREN inicializarOp RPAREN suma .)


state 239

    (119) resta -> numOperadores . MINUS inicializarOp
    (120) resta -> numOperadores . MINUS LPAREN inicializarOp RPAREN
    (121) resta -> numOperadores . MINUS resta
    (122) resta -> numOperadores . MINUS LPAREN inicializarOp RPAREN resta

    MINUS           shift and go to state 104


state 240

    (122) resta -> numOperadores MINUS LPAREN inicializarOp RPAREN resta .

    COMMA           reduce using rule 122 (resta -> numOperadores MINUS LPAREN inicializarOp RPAREN resta .)
    RPAREN          reduce using rule 122 (resta -> numOperadores MINUS LPAREN inicializarOp RPAREN resta .)
    COLON           reduce using rule 122 (resta -> numOperadores MINUS LPAREN inicializarOp RPAREN resta .)
    AND             reduce using rule 122 (resta -> numOperadores MINUS LPAREN inicializarOp RPAREN resta .)
    OR              reduce using rule 122 (resta -> numOperadores MINUS LPAREN inicializarOp RPAREN resta .)
    NOT             reduce using rule 122 (resta -> numOperadores MINUS LPAREN inicializarOp RPAREN resta .)
    PLUS            reduce using rule 122 (resta -> numOperadores MINUS LPAREN inicializarOp RPAREN resta .)
    MINUS           reduce using rule 122 (resta -> numOperadores MINUS LPAREN inicializarOp RPAREN resta .)
    DIVIDE          reduce using rule 122 (resta -> numOperadores MINUS LPAREN inicializarOp RPAREN resta .)
    TIMES           reduce using rule 122 (resta -> numOperadores MINUS LPAREN inicializarOp RPAREN resta .)
    RBRACKET        reduce using rule 122 (resta -> numOperadores MINUS LPAREN inicializarOp RPAREN resta .)


state 241

    (103) declararSet -> NEW SET LPAREN LBRACKET iterableSet RBRACKET . RPAREN

    RPAREN          shift and go to state 248


state 242

    (80) iterableSet -> keyValue COMMA . iterableSet
    (79) iterableSet -> . keyValue
    (80) iterableSet -> . keyValue COMMA iterableSet
    (81) iterableSet -> .
    (75) keyValue -> . javaScript_param
    (76) keyValue -> . declararSet
    (77) keyValue -> . declareMap
    (78) keyValue -> . arrayDeclare
    (39) javaScript_param -> . STRING
    (40) javaScript_param -> . inicializarOp
    (41) javaScript_param -> . boolean
    (42) javaScript_param -> . ID
    (102) declararSet -> . NEW SET LPAREN RPAREN
    (103) declararSet -> . NEW SET LPAREN LBRACKET iterableSet RBRACKET RPAREN
    (71) declareMap -> . NEW MAP LPAREN LBRACKET iterableMap RBRACKET RPAREN
    (72) declareMap -> . NEW MAP LPAREN RPAREN
    (62) arrayDeclare -> . LBRACKET RBRACKET
    (63) arrayDeclare -> . LBRACKET arrayValues RBRACKET
    (64) arrayDeclare -> . NEW ARRAY LPAREN arrayValues RPAREN
    (65) arrayDeclare -> . NEW ARRAY LPAREN RPAREN
    (107) inicializarOp -> . MINUS operacionesMath
    (108) inicializarOp -> . PLUS operacionesMath
    (109) inicializarOp -> . operacionesMath
    (110) inicializarOp -> . numOperadores
    (43) boolean -> . TRUE
    (44) boolean -> . FALSE
    (111) operacionesMath -> . suma
    (112) operacionesMath -> . resta
    (113) operacionesMath -> . multiplicacion
    (114) operacionesMath -> . divicion
    (129) numOperadores -> . enteros
    (130) numOperadores -> . decimales
    (115) suma -> . numOperadores PLUS inicializarOp
    (116) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN
    (117) suma -> . numOperadores PLUS suma
    (118) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN suma
    (119) resta -> . numOperadores MINUS inicializarOp
    (120) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN
    (121) resta -> . numOperadores MINUS resta
    (122) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN resta
    (123) multiplicacion -> . numOperadores TIMES LPAREN inicializarOp RPAREN
    (124) multiplicacion -> . numOperadores TIMES inicializarOp
    (125) multiplicacion -> . numOperadores TIMES multiplicacion
    (126) divicion -> . numOperadores DIVIDE LPAREN inicializarOp RPAREN
    (127) divicion -> . numOperadores DIVIDE inicializarOp
    (128) divicion -> . numOperadores DIVIDE divicion
    (131) enteros -> . NUM
    (132) enteros -> . numNegative
    (135) decimales -> . enteros PERIOD NUM
    (133) numNegative -> . MINUS NUM
    (134) numNegative -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for RBRACKET resolved using rule 81 (iterableSet -> .)
    RBRACKET        reduce using rule 81 (iterableSet -> .)
    STRING          shift and go to state 46
    ID              shift and go to state 42
    NEW             shift and go to state 221
    LBRACKET        shift and go to state 68
    MINUS           shift and go to state 49
    PLUS            shift and go to state 51
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUM             shift and go to state 61
    PERIOD          reduce using rule 134 (numNegative -> .)
    TIMES           reduce using rule 134 (numNegative -> .)
    DIVIDE          reduce using rule 134 (numNegative -> .)
    COMMA           reduce using rule 134 (numNegative -> .)

  ! PLUS            [ reduce using rule 134 (numNegative -> .) ]
  ! MINUS           [ reduce using rule 134 (numNegative -> .) ]
  ! RBRACKET        [ reduce using rule 134 (numNegative -> .) ]

    keyValue                       shift and go to state 223
    iterableSet                    shift and go to state 249
    javaScript_param               shift and go to state 224
    declararSet                    shift and go to state 225
    declareMap                     shift and go to state 226
    arrayDeclare                   shift and go to state 227
    inicializarOp                  shift and go to state 47
    boolean                        shift and go to state 48
    operacionesMath                shift and go to state 50
    numOperadores                  shift and go to state 52
    suma                           shift and go to state 55
    resta                          shift and go to state 56
    multiplicacion                 shift and go to state 57
    divicion                       shift and go to state 58
    enteros                        shift and go to state 59
    decimales                      shift and go to state 60
    numNegative                    shift and go to state 62

state 243

    (73) iterableMap -> LBRACKET keyValue . COMMA keyValue RBRACKET
    (74) iterableMap -> LBRACKET keyValue . COMMA keyValue RBRACKET COMMA iterableMap

    COMMA           shift and go to state 250


state 244

    (71) declareMap -> NEW MAP LPAREN LBRACKET iterableMap RBRACKET . RPAREN

    RPAREN          shift and go to state 251


state 245

    (89) sentencesCmpt -> LBLOCK sentencia RETURN valores_de_impresion . COLON RBLOCK

    COLON           shift and go to state 252


state 246

    (88) sentencesCmpt -> LBLOCK RETURN valores_de_impresion COLON . RBLOCK

    RBLOCK          shift and go to state 253


state 247

    (26) sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias ELSE . cuerpo_de_sentencias
    (28) cuerpo_de_sentencias -> . LBLOCK sentencia RBLOCK
    (29) cuerpo_de_sentencias -> . LBLOCK RBLOCK

    LBLOCK          shift and go to state 181

    cuerpo_de_sentencias           shift and go to state 254

state 248

    (103) declararSet -> NEW SET LPAREN LBRACKET iterableSet RBRACKET RPAREN .

    COLON           reduce using rule 103 (declararSet -> NEW SET LPAREN LBRACKET iterableSet RBRACKET RPAREN .)
    RPAREN          reduce using rule 103 (declararSet -> NEW SET LPAREN LBRACKET iterableSet RBRACKET RPAREN .)
    COMMA           reduce using rule 103 (declararSet -> NEW SET LPAREN LBRACKET iterableSet RBRACKET RPAREN .)
    RBRACKET        reduce using rule 103 (declararSet -> NEW SET LPAREN LBRACKET iterableSet RBRACKET RPAREN .)


state 249

    (80) iterableSet -> keyValue COMMA iterableSet .

    RBRACKET        reduce using rule 80 (iterableSet -> keyValue COMMA iterableSet .)


state 250

    (73) iterableMap -> LBRACKET keyValue COMMA . keyValue RBRACKET
    (74) iterableMap -> LBRACKET keyValue COMMA . keyValue RBRACKET COMMA iterableMap
    (75) keyValue -> . javaScript_param
    (76) keyValue -> . declararSet
    (77) keyValue -> . declareMap
    (78) keyValue -> . arrayDeclare
    (39) javaScript_param -> . STRING
    (40) javaScript_param -> . inicializarOp
    (41) javaScript_param -> . boolean
    (42) javaScript_param -> . ID
    (102) declararSet -> . NEW SET LPAREN RPAREN
    (103) declararSet -> . NEW SET LPAREN LBRACKET iterableSet RBRACKET RPAREN
    (71) declareMap -> . NEW MAP LPAREN LBRACKET iterableMap RBRACKET RPAREN
    (72) declareMap -> . NEW MAP LPAREN RPAREN
    (62) arrayDeclare -> . LBRACKET RBRACKET
    (63) arrayDeclare -> . LBRACKET arrayValues RBRACKET
    (64) arrayDeclare -> . NEW ARRAY LPAREN arrayValues RPAREN
    (65) arrayDeclare -> . NEW ARRAY LPAREN RPAREN
    (107) inicializarOp -> . MINUS operacionesMath
    (108) inicializarOp -> . PLUS operacionesMath
    (109) inicializarOp -> . operacionesMath
    (110) inicializarOp -> . numOperadores
    (43) boolean -> . TRUE
    (44) boolean -> . FALSE
    (111) operacionesMath -> . suma
    (112) operacionesMath -> . resta
    (113) operacionesMath -> . multiplicacion
    (114) operacionesMath -> . divicion
    (129) numOperadores -> . enteros
    (130) numOperadores -> . decimales
    (115) suma -> . numOperadores PLUS inicializarOp
    (116) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN
    (117) suma -> . numOperadores PLUS suma
    (118) suma -> . numOperadores PLUS LPAREN inicializarOp RPAREN suma
    (119) resta -> . numOperadores MINUS inicializarOp
    (120) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN
    (121) resta -> . numOperadores MINUS resta
    (122) resta -> . numOperadores MINUS LPAREN inicializarOp RPAREN resta
    (123) multiplicacion -> . numOperadores TIMES LPAREN inicializarOp RPAREN
    (124) multiplicacion -> . numOperadores TIMES inicializarOp
    (125) multiplicacion -> . numOperadores TIMES multiplicacion
    (126) divicion -> . numOperadores DIVIDE LPAREN inicializarOp RPAREN
    (127) divicion -> . numOperadores DIVIDE inicializarOp
    (128) divicion -> . numOperadores DIVIDE divicion
    (131) enteros -> . NUM
    (132) enteros -> . numNegative
    (135) decimales -> . enteros PERIOD NUM
    (133) numNegative -> . MINUS NUM
    (134) numNegative -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    STRING          shift and go to state 46
    ID              shift and go to state 42
    NEW             shift and go to state 221
    LBRACKET        shift and go to state 68
    MINUS           shift and go to state 49
    PLUS            shift and go to state 51
    TRUE            shift and go to state 53
    FALSE           shift and go to state 54
    NUM             shift and go to state 61
    PERIOD          reduce using rule 134 (numNegative -> .)
    TIMES           reduce using rule 134 (numNegative -> .)
    DIVIDE          reduce using rule 134 (numNegative -> .)
    RBRACKET        reduce using rule 134 (numNegative -> .)

  ! PLUS            [ reduce using rule 134 (numNegative -> .) ]
  ! MINUS           [ reduce using rule 134 (numNegative -> .) ]

    keyValue                       shift and go to state 255
    javaScript_param               shift and go to state 224
    declararSet                    shift and go to state 225
    declareMap                     shift and go to state 226
    arrayDeclare                   shift and go to state 227
    inicializarOp                  shift and go to state 47
    boolean                        shift and go to state 48
    operacionesMath                shift and go to state 50
    numOperadores                  shift and go to state 52
    suma                           shift and go to state 55
    resta                          shift and go to state 56
    multiplicacion                 shift and go to state 57
    divicion                       shift and go to state 58
    enteros                        shift and go to state 59
    decimales                      shift and go to state 60
    numNegative                    shift and go to state 62

state 251

    (71) declareMap -> NEW MAP LPAREN LBRACKET iterableMap RBRACKET RPAREN .

    COLON           reduce using rule 71 (declareMap -> NEW MAP LPAREN LBRACKET iterableMap RBRACKET RPAREN .)
    RPAREN          reduce using rule 71 (declareMap -> NEW MAP LPAREN LBRACKET iterableMap RBRACKET RPAREN .)
    COMMA           reduce using rule 71 (declareMap -> NEW MAP LPAREN LBRACKET iterableMap RBRACKET RPAREN .)
    RBRACKET        reduce using rule 71 (declareMap -> NEW MAP LPAREN LBRACKET iterableMap RBRACKET RPAREN .)


state 252

    (89) sentencesCmpt -> LBLOCK sentencia RETURN valores_de_impresion COLON . RBLOCK

    RBLOCK          shift and go to state 256


state 253

    (88) sentencesCmpt -> LBLOCK RETURN valores_de_impresion COLON RBLOCK .

    $end            reduce using rule 88 (sentencesCmpt -> LBLOCK RETURN valores_de_impresion COLON RBLOCK .)
    RBLOCK          reduce using rule 88 (sentencesCmpt -> LBLOCK RETURN valores_de_impresion COLON RBLOCK .)
    RETURN          reduce using rule 88 (sentencesCmpt -> LBLOCK RETURN valores_de_impresion COLON RBLOCK .)


state 254

    (26) sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias .

    $end            reduce using rule 26 (sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias .)
    RBLOCK          reduce using rule 26 (sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias .)
    RETURN          reduce using rule 26 (sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias .)


state 255

    (73) iterableMap -> LBRACKET keyValue COMMA keyValue . RBRACKET
    (74) iterableMap -> LBRACKET keyValue COMMA keyValue . RBRACKET COMMA iterableMap

    RBRACKET        shift and go to state 257


state 256

    (89) sentencesCmpt -> LBLOCK sentencia RETURN valores_de_impresion COLON RBLOCK .

    $end            reduce using rule 89 (sentencesCmpt -> LBLOCK sentencia RETURN valores_de_impresion COLON RBLOCK .)
    RBLOCK          reduce using rule 89 (sentencesCmpt -> LBLOCK sentencia RETURN valores_de_impresion COLON RBLOCK .)
    RETURN          reduce using rule 89 (sentencesCmpt -> LBLOCK sentencia RETURN valores_de_impresion COLON RBLOCK .)


state 257

    (73) iterableMap -> LBRACKET keyValue COMMA keyValue RBRACKET .
    (74) iterableMap -> LBRACKET keyValue COMMA keyValue RBRACKET . COMMA iterableMap

    RBRACKET        reduce using rule 73 (iterableMap -> LBRACKET keyValue COMMA keyValue RBRACKET .)
    COMMA           shift and go to state 258


state 258

    (74) iterableMap -> LBRACKET keyValue COMMA keyValue RBRACKET COMMA . iterableMap
    (73) iterableMap -> . LBRACKET keyValue COMMA keyValue RBRACKET
    (74) iterableMap -> . LBRACKET keyValue COMMA keyValue RBRACKET COMMA iterableMap

    LBRACKET        shift and go to state 228

    iterableMap                    shift and go to state 259

state 259

    (74) iterableMap -> LBRACKET keyValue COMMA keyValue RBRACKET COMMA iterableMap .

    RBRACKET        reduce using rule 74 (iterableMap -> LBRACKET keyValue COMMA keyValue RBRACKET COMMA iterableMap .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 10 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 27 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 27 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 27 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 28 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 28 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 36 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 36 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 37 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 37 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 38 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 38 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 38 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 49 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 51 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 52 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 52 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 52 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 52 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 68 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 68 resolved as shift
WARNING: shift/reduce conflict for RBRACKET in state 68 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 80 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 80 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 80 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 97 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 97 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 103 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 103 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 104 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 104 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 105 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 105 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 106 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 106 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 114 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 114 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 115 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 115 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 117 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 117 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 118 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 118 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 122 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 122 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 139 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 139 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 142 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 142 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 150 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 150 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 152 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 152 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 152 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 152 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 154 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 154 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 156 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 156 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 156 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 156 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 157 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 157 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 160 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 160 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 160 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 160 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 161 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 161 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 166 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 166 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 167 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 167 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 167 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 200 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 200 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 210 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 210 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 216 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 217 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 217 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 228 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 228 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 231 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 231 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 242 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 242 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 250 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 250 resolved as shift
WARNING: reduce/reduce conflict in state 28 resolved using rule (assign -> ID EQUAL)
WARNING: rejected rule (numNegative -> <empty>) in state 28
WARNING: reduce/reduce conflict in state 90 resolved using rule (valores_de_impresion -> inicializarOp)
WARNING: rejected rule (javaScript_param -> inicializarOp) in state 90
WARNING: reduce/reduce conflict in state 91 resolved using rule (valores_de_impresion -> javaScript_param)
WARNING: rejected rule (return_ops -> javaScript_param) in state 91
WARNING: reduce/reduce conflict in state 100 resolved using rule (enteros -> NUM)
WARNING: rejected rule (numNegative -> MINUS NUM) in state 100
WARNING: reduce/reduce conflict in state 151 resolved using rule (operacionesMath -> suma)
WARNING: rejected rule (suma -> numOperadores PLUS suma) in state 151
WARNING: reduce/reduce conflict in state 155 resolved using rule (operacionesMath -> resta)
WARNING: rejected rule (resta -> numOperadores MINUS resta) in state 155
WARNING: reduce/reduce conflict in state 159 resolved using rule (operacionesMath -> multiplicacion)
WARNING: rejected rule (multiplicacion -> numOperadores TIMES multiplicacion) in state 159
WARNING: reduce/reduce conflict in state 163 resolved using rule (operacionesMath -> divicion)
WARNING: rejected rule (divicion -> numOperadores DIVIDE divicion) in state 163
WARNING: reduce/reduce conflict in state 175 resolved using rule (methodMap -> PERIOD CLEAR LPAREN RPAREN)
WARNING: rejected rule (methodSet -> PERIOD CLEAR LPAREN RPAREN) in state 175
WARNING: reduce/reduce conflict in state 200 resolved using rule (iterableSet -> <empty>)
WARNING: rejected rule (numNegative -> <empty>) in state 200
WARNING: reduce/reduce conflict in state 216 resolved using rule (suma -> numOperadores PLUS LPAREN inicializarOp RPAREN)
WARNING: rejected rule (numNegative -> <empty>) in state 216
WARNING: reduce/reduce conflict in state 242 resolved using rule (iterableSet -> <empty>)
WARNING: rejected rule (numNegative -> <empty>) in state 242
WARNING: Rule (suma -> numOperadores PLUS suma) is never reduced
WARNING: Rule (resta -> numOperadores MINUS resta) is never reduced
WARNING: Rule (multiplicacion -> numOperadores TIMES multiplicacion) is never reduced
WARNING: Rule (divicion -> numOperadores DIVIDE divicion) is never reduced
WARNING: Rule (methodSet -> PERIOD CLEAR LPAREN RPAREN) is never reduced
