Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DIV_EQUAL
    GET
    HAS
    MINUS_EQUAL
    MOD
    MOD_EQUAL
    MUL_EQUAL
    PLUS_EQUAL
    TWOPOINTS
    WITH
    YIELD

Grammar

Rule 0     S' -> sentencia
Rule 1     sentencia -> callMethods
Rule 2     sentencia -> callFunction COLON
Rule 3     sentencia -> varDeclaration
Rule 4     sentencia -> controlExpression
Rule 5     sentencia -> impresion
Rule 6     sentencia -> declareteFunction
Rule 7     sentencia -> assingOperadores
Rule 8     expression -> conditionalEspecifico
Rule 9     expression -> inicializarOp
Rule 10    assingOperadores -> varType ID EQUAL inicializarOp
Rule 11    controlExpression -> sentencias_if
Rule 12    controlExpression -> sentencias_if_else
Rule 13    controlExpression -> sentencias_while
Rule 14    controlExpression -> impresion
Rule 15    controlExpression -> impresion_vacio
Rule 16    opConditional -> ISEQUAL
Rule 17    opConditional -> IS_NOT_IDENTICAL
Rule 18    opConditional -> IS_IDENTICAL
Rule 19    opConditional -> GREATER
Rule 20    opConditional -> GREATEREQUAL
Rule 21    opConditional -> LESS
Rule 22    opConditional -> LESSEQUAL
Rule 23    opConditional -> boolean
Rule 24    operadorLogical -> AND
Rule 25    operadorLogical -> OR
Rule 26    operadorLogical -> NOT
Rule 27    sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias
Rule 28    sentencias_if -> IF LPAREN expression RPAREN cuerpo_de_sentencias
Rule 29    sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias
Rule 30    sentencias_if_else -> IF LPAREN expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias
Rule 31    cuerpo_de_sentencias -> LBLOCK sentencia RBLOCK
Rule 32    cuerpo_de_sentencias -> LBLOCK RBLOCK
Rule 33    sentencias_while -> WHILE LPAREN expression RPAREN cuerpo_de_sentencias
Rule 34    sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias
Rule 35    impresion -> ALERT LPAREN expression RPAREN COLON
Rule 36    impresion -> <empty>
Rule 37    impresion_vacio -> ALERT LPAREN RPAREN COLON
Rule 38    javaScript_param -> STRING
Rule 39    javaScript_param -> NUM
Rule 40    javaScript_param -> boolean
Rule 41    javaScript_param -> ID
Rule 42    boolean -> TRUE
Rule 43    boolean -> FALSE
Rule 44    varType -> LET
Rule 45    varType -> CONST
Rule 46    varType -> VAR
Rule 47    varDeclaration -> varType assign
Rule 48    varDeclaration -> assign
Rule 49    varDeclaration -> LET ID COLON
Rule 50    varDeclaration -> VAR ID COLON
Rule 51    assign -> ID EQUAL arrayDeclare COLON
Rule 52    assign -> ID EQUAL declareMap COLON
Rule 53    assign -> ID EQUAL declararSet COLON
Rule 54    assign -> ID EQUAL javaScript_param COLON
Rule 55    callMethods -> ID methodArray COLON
Rule 56    callMethods -> ID methodSet COLON
Rule 57    callMethods -> ID methodMap COLON
Rule 58    arrayDeclare -> LBRACKET RBRACKET
Rule 59    arrayDeclare -> LBRACKET arrayValues RBRACKET
Rule 60    arrayDeclare -> NEW ARRAY LPAREN arrayValues RPAREN
Rule 61    arrayDeclare -> NEW ARRAY LPAREN RPAREN
Rule 62    arrayValues -> javaScript_param
Rule 63    arrayValues -> javaScript_param COMMA arrayValues
Rule 64    methodArray -> PERIOD PUSH LPAREN javaScript_param RPAREN
Rule 65    methodArray -> PERIOD UNSHIFT LPAREN arrayValues RPAREN
Rule 66    methodArray -> PERIOD POP LPAREN RPAREN
Rule 67    declareMap -> NEW MAP LPAREN LBRACKET iterableMap RBRACKET RPAREN
Rule 68    declareMap -> NEW MAP LPAREN RPAREN
Rule 69    iterableMap -> LBRACKET keyValue COMMA keyValue RBRACKET
Rule 70    iterableMap -> LBRACKET keyValue COMMA keyValue RBRACKET COMMA iterableMap
Rule 71    keyValue -> javaScript_param
Rule 72    keyValue -> declararSet
Rule 73    keyValue -> declareMap
Rule 74    keyValue -> arrayDeclare
Rule 75    iterableSet -> keyValue
Rule 76    iterableSet -> keyValue COMMA iterableSet
Rule 77    iterableSet -> <empty>
Rule 78    methodMap -> PERIOD CLEAR LPAREN RPAREN
Rule 79    methodMap -> PERIOD LENGTH LPAREN RPAREN
Rule 80    declareteFunction -> FUNCTION ID LPAREN params RPAREN
Rule 81    declareteFunction -> FUNCTION ID LPAREN params RPAREN sentencesCmpt
Rule 82    declareteFunction -> varType ID EQUAL FUNCTION LPAREN params RPAREN
Rule 83    sentencesCmpt -> LBLOCK sentencia RBLOCK
Rule 84    sentencesCmpt -> LBLOCK sentencia RETURN RBLOCK
Rule 85    callFunction -> ID LPAREN params RPAREN
Rule 86    params -> paramList
Rule 87    paramList -> javaScript_param
Rule 88    paramList -> javaScript_param COMMA paramList
Rule 89    args -> argslist
Rule 90    args -> javaScript_param
Rule 91    argslist -> args
Rule 92    argslist -> args COMMA argslist
Rule 93    declararSet -> NEW SET LPAREN RPAREN
Rule 94    declararSet -> NEW SET LPAREN LBRACKET iterableSet RBRACKET RPAREN
Rule 95    methodSet -> PERIOD ADD LPAREN javaScript_param RPAREN
Rule 96    methodSet -> PERIOD DELETE LPAREN javaScript_param RPAREN
Rule 97    methodSet -> PERIOD CLEAR LPAREN RPAREN
Rule 98    inicializarOp -> PLUS operacionesMath
Rule 99    inicializarOp -> MINUS operacionesMath
Rule 100   inicializarOp -> operacionesMath
Rule 101   operacionesMath -> numOperadores PLUS suma
Rule 102   operacionesMath -> suma
Rule 103   operacionesMath -> suma operacionesMath
Rule 104   operacionesMath -> restas
Rule 105   operacionesMath -> numOperadores MINUS restas
Rule 106   operacionesMath -> restas operacionesMath
Rule 107   operacionesMath -> multiplicacion
Rule 108   operacionesMath -> numOperadores TIMES multiplicacion
Rule 109   operacionesMath -> multiplicacion operacionesMath
Rule 110   operacionesMath -> divicion
Rule 111   operacionesMath -> numOperadores DIVIDE divicion
Rule 112   operacionesMath -> divicion operacionesMath
Rule 113   suma -> numOperadores PLUS LPAREN numOperadores RPAREN
Rule 114   suma -> numOperadores PLUS NUM
Rule 115   suma -> numOperadores
Rule 116   restas -> numOperadores MINUS LPAREN numOperadores RPAREN
Rule 117   restas -> numOperadores MINUS NUM
Rule 118   restas -> numOperadores
Rule 119   multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN
Rule 120   multiplicacion -> numOperadores TIMES NUM
Rule 121   multiplicacion -> numOperadores
Rule 122   divicion -> numOperadores DIVIDE LPAREN numOperadores RPAREN
Rule 123   divicion -> numOperadores DIVIDE NUM
Rule 124   divicion -> numOperadores
Rule 125   numOperadores -> enteros
Rule 126   numOperadores -> decimales
Rule 127   enteros -> NUM
Rule 128   enteros -> numNegative
Rule 129   numNegative -> MINUS NUM
Rule 130   numNegative -> <empty>
Rule 131   decimales -> enteros PERIOD NUM
Rule 132   conditionalEspecifico -> ID opConditional dataCondi
Rule 133   conditionalEspecifico -> NUM opConditional NUM
Rule 134   conditionalEspecifico -> STRING opConditional STRING
Rule 135   dataCondi -> STRING
Rule 136   dataCondi -> NUM

Terminals, with rules where they appear

ADD                  : 95
ALERT                : 35 37
AND                  : 24
ARRAY                : 60 61
CLEAR                : 78 97
COLON                : 2 35 37 49 50 51 52 53 54 55 56 57
COMMA                : 63 69 70 70 76 88 92
CONST                : 45
DELETE               : 96
DIVIDE               : 111 122 123
DIV_EQUAL            : 
ELSE                 : 29 30
EQUAL                : 10 51 52 53 54 82
FALSE                : 43
FUNCTION             : 80 81 82
GET                  : 
GREATER              : 19
GREATEREQUAL         : 20
HAS                  : 
ID                   : 10 41 49 50 51 52 53 54 55 56 57 80 81 82 85 132
IF                   : 27 28 29 30
ISEQUAL              : 16
IS_IDENTICAL         : 18
IS_NOT_IDENTICAL     : 17
LBLOCK               : 31 32 83 84
LBRACKET             : 58 59 67 69 70 94
LENGTH               : 79
LESS                 : 21
LESSEQUAL            : 22
LET                  : 44 49
LPAREN               : 27 28 29 30 33 34 35 37 60 61 64 65 66 67 68 78 79 80 81 82 85 93 94 95 96 97 113 116 119 122
MAP                  : 67 68
MINUS                : 99 105 116 117 129
MINUS_EQUAL          : 
MOD                  : 
MOD_EQUAL            : 
MUL_EQUAL            : 
NEW                  : 60 61 67 68 93 94
NOT                  : 26
NUM                  : 39 114 117 120 123 127 129 131 133 133 136
OR                   : 25
PERIOD               : 64 65 66 78 79 95 96 97 131
PLUS                 : 98 101 113 114
PLUS_EQUAL           : 
POP                  : 66
PUSH                 : 64
RBLOCK               : 31 32 83 84
RBRACKET             : 58 59 67 69 70 94
RETURN               : 84
RPAREN               : 27 28 29 30 33 34 35 37 60 61 64 65 66 67 68 78 79 80 81 82 85 93 94 95 96 97 113 116 119 122
SET                  : 93 94
STRING               : 38 134 134 135
TIMES                : 108 119 120
TRUE                 : 42
TWOPOINTS            : 
UNSHIFT              : 65
VAR                  : 46 50
WHILE                : 33 34
WITH                 : 
YIELD                : 
error                : 

Nonterminals, with rules where they appear

args                 : 91 92
argslist             : 89 92
arrayDeclare         : 51 74
arrayValues          : 59 60 63 65
assign               : 47 48
assingOperadores     : 7
boolean              : 23 40
callFunction         : 2
callMethods          : 1
conditionalEspecifico : 8
controlExpression    : 4
cuerpo_de_sentencias : 27 28 29 29 30 30 33 34
dataCondi            : 132
decimales            : 126
declararSet          : 53 72
declareMap           : 52 73
declareteFunction    : 6
divicion             : 110 111 112
enteros              : 125 131
expression           : 27 27 28 29 29 30 33 34 34 35
impresion            : 5 14
impresion_vacio      : 15
inicializarOp        : 9 10
iterableMap          : 67 70
iterableSet          : 76 94
javaScript_param     : 54 62 63 64 71 87 88 90 95 96
keyValue             : 69 69 70 70 75 76
methodArray          : 55
methodMap            : 57
methodSet            : 56
multiplicacion       : 107 108 109
numNegative          : 128
numOperadores        : 101 105 108 111 113 113 114 115 116 116 117 118 119 119 120 121 122 122 123 124
opConditional        : 132 133 134
operacionesMath      : 98 99 100 103 106 109 112
operadorLogical      : 27 29 34
paramList            : 86 88
params               : 80 81 82 85
restas               : 104 105 106
sentencesCmpt        : 81
sentencia            : 31 83 84 0
sentencias_if        : 11
sentencias_if_else   : 12
sentencias_while     : 13
suma                 : 101 102 103
varDeclaration       : 3
varType              : 10 47 82

Parsing method: LALR

state 0

    (0) S' -> . sentencia
    (1) sentencia -> . callMethods
    (2) sentencia -> . callFunction COLON
    (3) sentencia -> . varDeclaration
    (4) sentencia -> . controlExpression
    (5) sentencia -> . impresion
    (6) sentencia -> . declareteFunction
    (7) sentencia -> . assingOperadores
    (55) callMethods -> . ID methodArray COLON
    (56) callMethods -> . ID methodSet COLON
    (57) callMethods -> . ID methodMap COLON
    (85) callFunction -> . ID LPAREN params RPAREN
    (47) varDeclaration -> . varType assign
    (48) varDeclaration -> . assign
    (49) varDeclaration -> . LET ID COLON
    (50) varDeclaration -> . VAR ID COLON
    (11) controlExpression -> . sentencias_if
    (12) controlExpression -> . sentencias_if_else
    (13) controlExpression -> . sentencias_while
    (14) controlExpression -> . impresion
    (15) controlExpression -> . impresion_vacio
    (35) impresion -> . ALERT LPAREN expression RPAREN COLON
    (36) impresion -> .
    (80) declareteFunction -> . FUNCTION ID LPAREN params RPAREN
    (81) declareteFunction -> . FUNCTION ID LPAREN params RPAREN sentencesCmpt
    (82) declareteFunction -> . varType ID EQUAL FUNCTION LPAREN params RPAREN
    (10) assingOperadores -> . varType ID EQUAL inicializarOp
    (44) varType -> . LET
    (45) varType -> . CONST
    (46) varType -> . VAR
    (51) assign -> . ID EQUAL arrayDeclare COLON
    (52) assign -> . ID EQUAL declareMap COLON
    (53) assign -> . ID EQUAL declararSet COLON
    (54) assign -> . ID EQUAL javaScript_param COLON
    (27) sentencias_if -> . IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias
    (28) sentencias_if -> . IF LPAREN expression RPAREN cuerpo_de_sentencias
    (29) sentencias_if_else -> . IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias
    (30) sentencias_if_else -> . IF LPAREN expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias
    (33) sentencias_while -> . WHILE LPAREN expression RPAREN cuerpo_de_sentencias
    (34) sentencias_while -> . WHILE LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias
    (37) impresion_vacio -> . ALERT LPAREN RPAREN COLON

    ID              shift and go to state 9
    LET             shift and go to state 12
    VAR             shift and go to state 13
    ALERT           shift and go to state 18
    $end            reduce using rule 36 (impresion -> .)
    FUNCTION        shift and go to state 19
    CONST           shift and go to state 20
    IF              shift and go to state 21
    WHILE           shift and go to state 22

    sentencia                      shift and go to state 1
    callMethods                    shift and go to state 2
    callFunction                   shift and go to state 3
    varDeclaration                 shift and go to state 4
    controlExpression              shift and go to state 5
    impresion                      shift and go to state 6
    declareteFunction              shift and go to state 7
    assingOperadores               shift and go to state 8
    varType                        shift and go to state 10
    assign                         shift and go to state 11
    sentencias_if                  shift and go to state 14
    sentencias_if_else             shift and go to state 15
    sentencias_while               shift and go to state 16
    impresion_vacio                shift and go to state 17

state 1

    (0) S' -> sentencia .



state 2

    (1) sentencia -> callMethods .

    $end            reduce using rule 1 (sentencia -> callMethods .)
    RBLOCK          reduce using rule 1 (sentencia -> callMethods .)
    RETURN          reduce using rule 1 (sentencia -> callMethods .)


state 3

    (2) sentencia -> callFunction . COLON

    COLON           shift and go to state 23


state 4

    (3) sentencia -> varDeclaration .

    $end            reduce using rule 3 (sentencia -> varDeclaration .)
    RBLOCK          reduce using rule 3 (sentencia -> varDeclaration .)
    RETURN          reduce using rule 3 (sentencia -> varDeclaration .)


state 5

    (4) sentencia -> controlExpression .

    $end            reduce using rule 4 (sentencia -> controlExpression .)
    RBLOCK          reduce using rule 4 (sentencia -> controlExpression .)
    RETURN          reduce using rule 4 (sentencia -> controlExpression .)


state 6

    (5) sentencia -> impresion .
    (14) controlExpression -> impresion .

  ! reduce/reduce conflict for $end resolved using rule 5 (sentencia -> impresion .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 5 (sentencia -> impresion .)
  ! reduce/reduce conflict for RETURN resolved using rule 5 (sentencia -> impresion .)
    $end            reduce using rule 5 (sentencia -> impresion .)
    RBLOCK          reduce using rule 5 (sentencia -> impresion .)
    RETURN          reduce using rule 5 (sentencia -> impresion .)

  ! $end            [ reduce using rule 14 (controlExpression -> impresion .) ]
  ! RBLOCK          [ reduce using rule 14 (controlExpression -> impresion .) ]
  ! RETURN          [ reduce using rule 14 (controlExpression -> impresion .) ]


state 7

    (6) sentencia -> declareteFunction .

    $end            reduce using rule 6 (sentencia -> declareteFunction .)
    RBLOCK          reduce using rule 6 (sentencia -> declareteFunction .)
    RETURN          reduce using rule 6 (sentencia -> declareteFunction .)


state 8

    (7) sentencia -> assingOperadores .

    $end            reduce using rule 7 (sentencia -> assingOperadores .)
    RBLOCK          reduce using rule 7 (sentencia -> assingOperadores .)
    RETURN          reduce using rule 7 (sentencia -> assingOperadores .)


state 9

    (55) callMethods -> ID . methodArray COLON
    (56) callMethods -> ID . methodSet COLON
    (57) callMethods -> ID . methodMap COLON
    (85) callFunction -> ID . LPAREN params RPAREN
    (51) assign -> ID . EQUAL arrayDeclare COLON
    (52) assign -> ID . EQUAL declareMap COLON
    (53) assign -> ID . EQUAL declararSet COLON
    (54) assign -> ID . EQUAL javaScript_param COLON
    (64) methodArray -> . PERIOD PUSH LPAREN javaScript_param RPAREN
    (65) methodArray -> . PERIOD UNSHIFT LPAREN arrayValues RPAREN
    (66) methodArray -> . PERIOD POP LPAREN RPAREN
    (95) methodSet -> . PERIOD ADD LPAREN javaScript_param RPAREN
    (96) methodSet -> . PERIOD DELETE LPAREN javaScript_param RPAREN
    (97) methodSet -> . PERIOD CLEAR LPAREN RPAREN
    (78) methodMap -> . PERIOD CLEAR LPAREN RPAREN
    (79) methodMap -> . PERIOD LENGTH LPAREN RPAREN

    LPAREN          shift and go to state 27
    EQUAL           shift and go to state 28
    PERIOD          shift and go to state 29

    methodArray                    shift and go to state 24
    methodSet                      shift and go to state 25
    methodMap                      shift and go to state 26

state 10

    (47) varDeclaration -> varType . assign
    (82) declareteFunction -> varType . ID EQUAL FUNCTION LPAREN params RPAREN
    (10) assingOperadores -> varType . ID EQUAL inicializarOp
    (51) assign -> . ID EQUAL arrayDeclare COLON
    (52) assign -> . ID EQUAL declareMap COLON
    (53) assign -> . ID EQUAL declararSet COLON
    (54) assign -> . ID EQUAL javaScript_param COLON

    ID              shift and go to state 31

    assign                         shift and go to state 30

state 11

    (48) varDeclaration -> assign .

    $end            reduce using rule 48 (varDeclaration -> assign .)
    RBLOCK          reduce using rule 48 (varDeclaration -> assign .)
    RETURN          reduce using rule 48 (varDeclaration -> assign .)


state 12

    (49) varDeclaration -> LET . ID COLON
    (44) varType -> LET .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 32

  ! ID              [ reduce using rule 44 (varType -> LET .) ]


state 13

    (50) varDeclaration -> VAR . ID COLON
    (46) varType -> VAR .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 33

  ! ID              [ reduce using rule 46 (varType -> VAR .) ]


state 14

    (11) controlExpression -> sentencias_if .

    $end            reduce using rule 11 (controlExpression -> sentencias_if .)
    RBLOCK          reduce using rule 11 (controlExpression -> sentencias_if .)
    RETURN          reduce using rule 11 (controlExpression -> sentencias_if .)


state 15

    (12) controlExpression -> sentencias_if_else .

    $end            reduce using rule 12 (controlExpression -> sentencias_if_else .)
    RBLOCK          reduce using rule 12 (controlExpression -> sentencias_if_else .)
    RETURN          reduce using rule 12 (controlExpression -> sentencias_if_else .)


state 16

    (13) controlExpression -> sentencias_while .

    $end            reduce using rule 13 (controlExpression -> sentencias_while .)
    RBLOCK          reduce using rule 13 (controlExpression -> sentencias_while .)
    RETURN          reduce using rule 13 (controlExpression -> sentencias_while .)


state 17

    (15) controlExpression -> impresion_vacio .

    $end            reduce using rule 15 (controlExpression -> impresion_vacio .)
    RBLOCK          reduce using rule 15 (controlExpression -> impresion_vacio .)
    RETURN          reduce using rule 15 (controlExpression -> impresion_vacio .)


state 18

    (35) impresion -> ALERT . LPAREN expression RPAREN COLON
    (37) impresion_vacio -> ALERT . LPAREN RPAREN COLON

    LPAREN          shift and go to state 34


state 19

    (80) declareteFunction -> FUNCTION . ID LPAREN params RPAREN
    (81) declareteFunction -> FUNCTION . ID LPAREN params RPAREN sentencesCmpt

    ID              shift and go to state 35


state 20

    (45) varType -> CONST .

    ID              reduce using rule 45 (varType -> CONST .)


state 21

    (27) sentencias_if -> IF . LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias
    (28) sentencias_if -> IF . LPAREN expression RPAREN cuerpo_de_sentencias
    (29) sentencias_if_else -> IF . LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias
    (30) sentencias_if_else -> IF . LPAREN expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias

    LPAREN          shift and go to state 36


state 22

    (33) sentencias_while -> WHILE . LPAREN expression RPAREN cuerpo_de_sentencias
    (34) sentencias_while -> WHILE . LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias

    LPAREN          shift and go to state 37


state 23

    (2) sentencia -> callFunction COLON .

    $end            reduce using rule 2 (sentencia -> callFunction COLON .)
    RBLOCK          reduce using rule 2 (sentencia -> callFunction COLON .)
    RETURN          reduce using rule 2 (sentencia -> callFunction COLON .)


state 24

    (55) callMethods -> ID methodArray . COLON

    COLON           shift and go to state 38


state 25

    (56) callMethods -> ID methodSet . COLON

    COLON           shift and go to state 39


state 26

    (57) callMethods -> ID methodMap . COLON

    COLON           shift and go to state 40


state 27

    (85) callFunction -> ID LPAREN . params RPAREN
    (86) params -> . paramList
    (87) paramList -> . javaScript_param
    (88) paramList -> . javaScript_param COMMA paramList
    (38) javaScript_param -> . STRING
    (39) javaScript_param -> . NUM
    (40) javaScript_param -> . boolean
    (41) javaScript_param -> . ID
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE

    STRING          shift and go to state 45
    NUM             shift and go to state 46
    ID              shift and go to state 41
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    params                         shift and go to state 42
    paramList                      shift and go to state 43
    javaScript_param               shift and go to state 44
    boolean                        shift and go to state 47

state 28

    (51) assign -> ID EQUAL . arrayDeclare COLON
    (52) assign -> ID EQUAL . declareMap COLON
    (53) assign -> ID EQUAL . declararSet COLON
    (54) assign -> ID EQUAL . javaScript_param COLON
    (58) arrayDeclare -> . LBRACKET RBRACKET
    (59) arrayDeclare -> . LBRACKET arrayValues RBRACKET
    (60) arrayDeclare -> . NEW ARRAY LPAREN arrayValues RPAREN
    (61) arrayDeclare -> . NEW ARRAY LPAREN RPAREN
    (67) declareMap -> . NEW MAP LPAREN LBRACKET iterableMap RBRACKET RPAREN
    (68) declareMap -> . NEW MAP LPAREN RPAREN
    (93) declararSet -> . NEW SET LPAREN RPAREN
    (94) declararSet -> . NEW SET LPAREN LBRACKET iterableSet RBRACKET RPAREN
    (38) javaScript_param -> . STRING
    (39) javaScript_param -> . NUM
    (40) javaScript_param -> . boolean
    (41) javaScript_param -> . ID
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE

    LBRACKET        shift and go to state 54
    NEW             shift and go to state 55
    STRING          shift and go to state 45
    NUM             shift and go to state 46
    ID              shift and go to state 41
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    arrayDeclare                   shift and go to state 50
    declareMap                     shift and go to state 51
    declararSet                    shift and go to state 52
    javaScript_param               shift and go to state 53
    boolean                        shift and go to state 47

state 29

    (64) methodArray -> PERIOD . PUSH LPAREN javaScript_param RPAREN
    (65) methodArray -> PERIOD . UNSHIFT LPAREN arrayValues RPAREN
    (66) methodArray -> PERIOD . POP LPAREN RPAREN
    (95) methodSet -> PERIOD . ADD LPAREN javaScript_param RPAREN
    (96) methodSet -> PERIOD . DELETE LPAREN javaScript_param RPAREN
    (97) methodSet -> PERIOD . CLEAR LPAREN RPAREN
    (78) methodMap -> PERIOD . CLEAR LPAREN RPAREN
    (79) methodMap -> PERIOD . LENGTH LPAREN RPAREN

    PUSH            shift and go to state 56
    UNSHIFT         shift and go to state 57
    POP             shift and go to state 58
    ADD             shift and go to state 59
    DELETE          shift and go to state 60
    CLEAR           shift and go to state 61
    LENGTH          shift and go to state 62


state 30

    (47) varDeclaration -> varType assign .

    $end            reduce using rule 47 (varDeclaration -> varType assign .)
    RBLOCK          reduce using rule 47 (varDeclaration -> varType assign .)
    RETURN          reduce using rule 47 (varDeclaration -> varType assign .)


state 31

    (82) declareteFunction -> varType ID . EQUAL FUNCTION LPAREN params RPAREN
    (10) assingOperadores -> varType ID . EQUAL inicializarOp
    (51) assign -> ID . EQUAL arrayDeclare COLON
    (52) assign -> ID . EQUAL declareMap COLON
    (53) assign -> ID . EQUAL declararSet COLON
    (54) assign -> ID . EQUAL javaScript_param COLON

    EQUAL           shift and go to state 63


state 32

    (49) varDeclaration -> LET ID . COLON

    COLON           shift and go to state 64


state 33

    (50) varDeclaration -> VAR ID . COLON

    COLON           shift and go to state 65


state 34

    (35) impresion -> ALERT LPAREN . expression RPAREN COLON
    (37) impresion_vacio -> ALERT LPAREN . RPAREN COLON
    (8) expression -> . conditionalEspecifico
    (9) expression -> . inicializarOp
    (132) conditionalEspecifico -> . ID opConditional dataCondi
    (133) conditionalEspecifico -> . NUM opConditional NUM
    (134) conditionalEspecifico -> . STRING opConditional STRING
    (98) inicializarOp -> . PLUS operacionesMath
    (99) inicializarOp -> . MINUS operacionesMath
    (100) inicializarOp -> . operacionesMath
    (101) operacionesMath -> . numOperadores PLUS suma
    (102) operacionesMath -> . suma
    (103) operacionesMath -> . suma operacionesMath
    (104) operacionesMath -> . restas
    (105) operacionesMath -> . numOperadores MINUS restas
    (106) operacionesMath -> . restas operacionesMath
    (107) operacionesMath -> . multiplicacion
    (108) operacionesMath -> . numOperadores TIMES multiplicacion
    (109) operacionesMath -> . multiplicacion operacionesMath
    (110) operacionesMath -> . divicion
    (111) operacionesMath -> . numOperadores DIVIDE divicion
    (112) operacionesMath -> . divicion operacionesMath
    (125) numOperadores -> . enteros
    (126) numOperadores -> . decimales
    (113) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (114) suma -> . numOperadores PLUS NUM
    (115) suma -> . numOperadores
    (116) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (117) restas -> . numOperadores MINUS NUM
    (118) restas -> . numOperadores
    (119) multiplicacion -> . numOperadores TIMES LPAREN numOperadores RPAREN
    (120) multiplicacion -> . numOperadores TIMES NUM
    (121) multiplicacion -> . numOperadores
    (122) divicion -> . numOperadores DIVIDE LPAREN numOperadores RPAREN
    (123) divicion -> . numOperadores DIVIDE NUM
    (124) divicion -> . numOperadores
    (127) enteros -> . NUM
    (128) enteros -> . numNegative
    (131) decimales -> . enteros PERIOD NUM
    (129) numNegative -> . MINUS NUM
    (130) numNegative -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 67
    ID              shift and go to state 70
    NUM             shift and go to state 71
    STRING          shift and go to state 72
    PLUS            shift and go to state 73
    MINUS           shift and go to state 75
    PERIOD          reduce using rule 130 (numNegative -> .)
    TIMES           reduce using rule 130 (numNegative -> .)
    DIVIDE          reduce using rule 130 (numNegative -> .)

  ! PLUS            [ reduce using rule 130 (numNegative -> .) ]
  ! MINUS           [ reduce using rule 130 (numNegative -> .) ]
  ! NUM             [ reduce using rule 130 (numNegative -> .) ]
  ! RPAREN          [ reduce using rule 130 (numNegative -> .) ]

    expression                     shift and go to state 66
    conditionalEspecifico          shift and go to state 68
    inicializarOp                  shift and go to state 69
    operacionesMath                shift and go to state 74
    numOperadores                  shift and go to state 76
    suma                           shift and go to state 77
    restas                         shift and go to state 78
    multiplicacion                 shift and go to state 79
    divicion                       shift and go to state 80
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 35

    (80) declareteFunction -> FUNCTION ID . LPAREN params RPAREN
    (81) declareteFunction -> FUNCTION ID . LPAREN params RPAREN sentencesCmpt

    LPAREN          shift and go to state 84


state 36

    (27) sentencias_if -> IF LPAREN . expression operadorLogical expression RPAREN cuerpo_de_sentencias
    (28) sentencias_if -> IF LPAREN . expression RPAREN cuerpo_de_sentencias
    (29) sentencias_if_else -> IF LPAREN . expression operadorLogical expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias
    (30) sentencias_if_else -> IF LPAREN . expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias
    (8) expression -> . conditionalEspecifico
    (9) expression -> . inicializarOp
    (132) conditionalEspecifico -> . ID opConditional dataCondi
    (133) conditionalEspecifico -> . NUM opConditional NUM
    (134) conditionalEspecifico -> . STRING opConditional STRING
    (98) inicializarOp -> . PLUS operacionesMath
    (99) inicializarOp -> . MINUS operacionesMath
    (100) inicializarOp -> . operacionesMath
    (101) operacionesMath -> . numOperadores PLUS suma
    (102) operacionesMath -> . suma
    (103) operacionesMath -> . suma operacionesMath
    (104) operacionesMath -> . restas
    (105) operacionesMath -> . numOperadores MINUS restas
    (106) operacionesMath -> . restas operacionesMath
    (107) operacionesMath -> . multiplicacion
    (108) operacionesMath -> . numOperadores TIMES multiplicacion
    (109) operacionesMath -> . multiplicacion operacionesMath
    (110) operacionesMath -> . divicion
    (111) operacionesMath -> . numOperadores DIVIDE divicion
    (112) operacionesMath -> . divicion operacionesMath
    (125) numOperadores -> . enteros
    (126) numOperadores -> . decimales
    (113) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (114) suma -> . numOperadores PLUS NUM
    (115) suma -> . numOperadores
    (116) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (117) restas -> . numOperadores MINUS NUM
    (118) restas -> . numOperadores
    (119) multiplicacion -> . numOperadores TIMES LPAREN numOperadores RPAREN
    (120) multiplicacion -> . numOperadores TIMES NUM
    (121) multiplicacion -> . numOperadores
    (122) divicion -> . numOperadores DIVIDE LPAREN numOperadores RPAREN
    (123) divicion -> . numOperadores DIVIDE NUM
    (124) divicion -> . numOperadores
    (127) enteros -> . NUM
    (128) enteros -> . numNegative
    (131) decimales -> . enteros PERIOD NUM
    (129) numNegative -> . MINUS NUM
    (130) numNegative -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
    ID              shift and go to state 70
    NUM             shift and go to state 71
    STRING          shift and go to state 72
    PLUS            shift and go to state 73
    MINUS           shift and go to state 75
    PERIOD          reduce using rule 130 (numNegative -> .)
    TIMES           reduce using rule 130 (numNegative -> .)
    DIVIDE          reduce using rule 130 (numNegative -> .)
    RPAREN          reduce using rule 130 (numNegative -> .)
    AND             reduce using rule 130 (numNegative -> .)
    OR              reduce using rule 130 (numNegative -> .)
    NOT             reduce using rule 130 (numNegative -> .)

  ! PLUS            [ reduce using rule 130 (numNegative -> .) ]
  ! MINUS           [ reduce using rule 130 (numNegative -> .) ]
  ! NUM             [ reduce using rule 130 (numNegative -> .) ]

    expression                     shift and go to state 85
    conditionalEspecifico          shift and go to state 68
    inicializarOp                  shift and go to state 69
    operacionesMath                shift and go to state 74
    numOperadores                  shift and go to state 76
    suma                           shift and go to state 77
    restas                         shift and go to state 78
    multiplicacion                 shift and go to state 79
    divicion                       shift and go to state 80
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 37

    (33) sentencias_while -> WHILE LPAREN . expression RPAREN cuerpo_de_sentencias
    (34) sentencias_while -> WHILE LPAREN . expression operadorLogical expression RPAREN cuerpo_de_sentencias
    (8) expression -> . conditionalEspecifico
    (9) expression -> . inicializarOp
    (132) conditionalEspecifico -> . ID opConditional dataCondi
    (133) conditionalEspecifico -> . NUM opConditional NUM
    (134) conditionalEspecifico -> . STRING opConditional STRING
    (98) inicializarOp -> . PLUS operacionesMath
    (99) inicializarOp -> . MINUS operacionesMath
    (100) inicializarOp -> . operacionesMath
    (101) operacionesMath -> . numOperadores PLUS suma
    (102) operacionesMath -> . suma
    (103) operacionesMath -> . suma operacionesMath
    (104) operacionesMath -> . restas
    (105) operacionesMath -> . numOperadores MINUS restas
    (106) operacionesMath -> . restas operacionesMath
    (107) operacionesMath -> . multiplicacion
    (108) operacionesMath -> . numOperadores TIMES multiplicacion
    (109) operacionesMath -> . multiplicacion operacionesMath
    (110) operacionesMath -> . divicion
    (111) operacionesMath -> . numOperadores DIVIDE divicion
    (112) operacionesMath -> . divicion operacionesMath
    (125) numOperadores -> . enteros
    (126) numOperadores -> . decimales
    (113) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (114) suma -> . numOperadores PLUS NUM
    (115) suma -> . numOperadores
    (116) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (117) restas -> . numOperadores MINUS NUM
    (118) restas -> . numOperadores
    (119) multiplicacion -> . numOperadores TIMES LPAREN numOperadores RPAREN
    (120) multiplicacion -> . numOperadores TIMES NUM
    (121) multiplicacion -> . numOperadores
    (122) divicion -> . numOperadores DIVIDE LPAREN numOperadores RPAREN
    (123) divicion -> . numOperadores DIVIDE NUM
    (124) divicion -> . numOperadores
    (127) enteros -> . NUM
    (128) enteros -> . numNegative
    (131) decimales -> . enteros PERIOD NUM
    (129) numNegative -> . MINUS NUM
    (130) numNegative -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
    ID              shift and go to state 70
    NUM             shift and go to state 71
    STRING          shift and go to state 72
    PLUS            shift and go to state 73
    MINUS           shift and go to state 75
    PERIOD          reduce using rule 130 (numNegative -> .)
    TIMES           reduce using rule 130 (numNegative -> .)
    DIVIDE          reduce using rule 130 (numNegative -> .)
    RPAREN          reduce using rule 130 (numNegative -> .)
    AND             reduce using rule 130 (numNegative -> .)
    OR              reduce using rule 130 (numNegative -> .)
    NOT             reduce using rule 130 (numNegative -> .)

  ! PLUS            [ reduce using rule 130 (numNegative -> .) ]
  ! MINUS           [ reduce using rule 130 (numNegative -> .) ]
  ! NUM             [ reduce using rule 130 (numNegative -> .) ]

    expression                     shift and go to state 86
    conditionalEspecifico          shift and go to state 68
    inicializarOp                  shift and go to state 69
    operacionesMath                shift and go to state 74
    numOperadores                  shift and go to state 76
    suma                           shift and go to state 77
    restas                         shift and go to state 78
    multiplicacion                 shift and go to state 79
    divicion                       shift and go to state 80
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 38

    (55) callMethods -> ID methodArray COLON .

    $end            reduce using rule 55 (callMethods -> ID methodArray COLON .)
    RBLOCK          reduce using rule 55 (callMethods -> ID methodArray COLON .)
    RETURN          reduce using rule 55 (callMethods -> ID methodArray COLON .)


state 39

    (56) callMethods -> ID methodSet COLON .

    $end            reduce using rule 56 (callMethods -> ID methodSet COLON .)
    RBLOCK          reduce using rule 56 (callMethods -> ID methodSet COLON .)
    RETURN          reduce using rule 56 (callMethods -> ID methodSet COLON .)


state 40

    (57) callMethods -> ID methodMap COLON .

    $end            reduce using rule 57 (callMethods -> ID methodMap COLON .)
    RBLOCK          reduce using rule 57 (callMethods -> ID methodMap COLON .)
    RETURN          reduce using rule 57 (callMethods -> ID methodMap COLON .)


state 41

    (41) javaScript_param -> ID .

    COMMA           reduce using rule 41 (javaScript_param -> ID .)
    RPAREN          reduce using rule 41 (javaScript_param -> ID .)
    COLON           reduce using rule 41 (javaScript_param -> ID .)
    RBRACKET        reduce using rule 41 (javaScript_param -> ID .)


state 42

    (85) callFunction -> ID LPAREN params . RPAREN

    RPAREN          shift and go to state 87


state 43

    (86) params -> paramList .

    RPAREN          reduce using rule 86 (params -> paramList .)


state 44

    (87) paramList -> javaScript_param .
    (88) paramList -> javaScript_param . COMMA paramList

    RPAREN          reduce using rule 87 (paramList -> javaScript_param .)
    COMMA           shift and go to state 88


state 45

    (38) javaScript_param -> STRING .

    COMMA           reduce using rule 38 (javaScript_param -> STRING .)
    RPAREN          reduce using rule 38 (javaScript_param -> STRING .)
    COLON           reduce using rule 38 (javaScript_param -> STRING .)
    RBRACKET        reduce using rule 38 (javaScript_param -> STRING .)


state 46

    (39) javaScript_param -> NUM .

    COMMA           reduce using rule 39 (javaScript_param -> NUM .)
    RPAREN          reduce using rule 39 (javaScript_param -> NUM .)
    COLON           reduce using rule 39 (javaScript_param -> NUM .)
    RBRACKET        reduce using rule 39 (javaScript_param -> NUM .)


state 47

    (40) javaScript_param -> boolean .

    COMMA           reduce using rule 40 (javaScript_param -> boolean .)
    RPAREN          reduce using rule 40 (javaScript_param -> boolean .)
    COLON           reduce using rule 40 (javaScript_param -> boolean .)
    RBRACKET        reduce using rule 40 (javaScript_param -> boolean .)


state 48

    (42) boolean -> TRUE .

    COMMA           reduce using rule 42 (boolean -> TRUE .)
    RPAREN          reduce using rule 42 (boolean -> TRUE .)
    COLON           reduce using rule 42 (boolean -> TRUE .)
    RBRACKET        reduce using rule 42 (boolean -> TRUE .)
    STRING          reduce using rule 42 (boolean -> TRUE .)
    NUM             reduce using rule 42 (boolean -> TRUE .)


state 49

    (43) boolean -> FALSE .

    COMMA           reduce using rule 43 (boolean -> FALSE .)
    RPAREN          reduce using rule 43 (boolean -> FALSE .)
    COLON           reduce using rule 43 (boolean -> FALSE .)
    RBRACKET        reduce using rule 43 (boolean -> FALSE .)
    STRING          reduce using rule 43 (boolean -> FALSE .)
    NUM             reduce using rule 43 (boolean -> FALSE .)


state 50

    (51) assign -> ID EQUAL arrayDeclare . COLON

    COLON           shift and go to state 89


state 51

    (52) assign -> ID EQUAL declareMap . COLON

    COLON           shift and go to state 90


state 52

    (53) assign -> ID EQUAL declararSet . COLON

    COLON           shift and go to state 91


state 53

    (54) assign -> ID EQUAL javaScript_param . COLON

    COLON           shift and go to state 92


state 54

    (58) arrayDeclare -> LBRACKET . RBRACKET
    (59) arrayDeclare -> LBRACKET . arrayValues RBRACKET
    (62) arrayValues -> . javaScript_param
    (63) arrayValues -> . javaScript_param COMMA arrayValues
    (38) javaScript_param -> . STRING
    (39) javaScript_param -> . NUM
    (40) javaScript_param -> . boolean
    (41) javaScript_param -> . ID
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE

    RBRACKET        shift and go to state 93
    STRING          shift and go to state 45
    NUM             shift and go to state 46
    ID              shift and go to state 41
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    arrayValues                    shift and go to state 94
    javaScript_param               shift and go to state 95
    boolean                        shift and go to state 47

state 55

    (60) arrayDeclare -> NEW . ARRAY LPAREN arrayValues RPAREN
    (61) arrayDeclare -> NEW . ARRAY LPAREN RPAREN
    (67) declareMap -> NEW . MAP LPAREN LBRACKET iterableMap RBRACKET RPAREN
    (68) declareMap -> NEW . MAP LPAREN RPAREN
    (93) declararSet -> NEW . SET LPAREN RPAREN
    (94) declararSet -> NEW . SET LPAREN LBRACKET iterableSet RBRACKET RPAREN

    ARRAY           shift and go to state 96
    MAP             shift and go to state 97
    SET             shift and go to state 98


state 56

    (64) methodArray -> PERIOD PUSH . LPAREN javaScript_param RPAREN

    LPAREN          shift and go to state 99


state 57

    (65) methodArray -> PERIOD UNSHIFT . LPAREN arrayValues RPAREN

    LPAREN          shift and go to state 100


state 58

    (66) methodArray -> PERIOD POP . LPAREN RPAREN

    LPAREN          shift and go to state 101


state 59

    (95) methodSet -> PERIOD ADD . LPAREN javaScript_param RPAREN

    LPAREN          shift and go to state 102


state 60

    (96) methodSet -> PERIOD DELETE . LPAREN javaScript_param RPAREN

    LPAREN          shift and go to state 103


state 61

    (97) methodSet -> PERIOD CLEAR . LPAREN RPAREN
    (78) methodMap -> PERIOD CLEAR . LPAREN RPAREN

    LPAREN          shift and go to state 104


state 62

    (79) methodMap -> PERIOD LENGTH . LPAREN RPAREN

    LPAREN          shift and go to state 105


state 63

    (82) declareteFunction -> varType ID EQUAL . FUNCTION LPAREN params RPAREN
    (10) assingOperadores -> varType ID EQUAL . inicializarOp
    (51) assign -> ID EQUAL . arrayDeclare COLON
    (52) assign -> ID EQUAL . declareMap COLON
    (53) assign -> ID EQUAL . declararSet COLON
    (54) assign -> ID EQUAL . javaScript_param COLON
    (98) inicializarOp -> . PLUS operacionesMath
    (99) inicializarOp -> . MINUS operacionesMath
    (100) inicializarOp -> . operacionesMath
    (58) arrayDeclare -> . LBRACKET RBRACKET
    (59) arrayDeclare -> . LBRACKET arrayValues RBRACKET
    (60) arrayDeclare -> . NEW ARRAY LPAREN arrayValues RPAREN
    (61) arrayDeclare -> . NEW ARRAY LPAREN RPAREN
    (67) declareMap -> . NEW MAP LPAREN LBRACKET iterableMap RBRACKET RPAREN
    (68) declareMap -> . NEW MAP LPAREN RPAREN
    (93) declararSet -> . NEW SET LPAREN RPAREN
    (94) declararSet -> . NEW SET LPAREN LBRACKET iterableSet RBRACKET RPAREN
    (38) javaScript_param -> . STRING
    (39) javaScript_param -> . NUM
    (40) javaScript_param -> . boolean
    (41) javaScript_param -> . ID
    (101) operacionesMath -> . numOperadores PLUS suma
    (102) operacionesMath -> . suma
    (103) operacionesMath -> . suma operacionesMath
    (104) operacionesMath -> . restas
    (105) operacionesMath -> . numOperadores MINUS restas
    (106) operacionesMath -> . restas operacionesMath
    (107) operacionesMath -> . multiplicacion
    (108) operacionesMath -> . numOperadores TIMES multiplicacion
    (109) operacionesMath -> . multiplicacion operacionesMath
    (110) operacionesMath -> . divicion
    (111) operacionesMath -> . numOperadores DIVIDE divicion
    (112) operacionesMath -> . divicion operacionesMath
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE
    (125) numOperadores -> . enteros
    (126) numOperadores -> . decimales
    (113) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (114) suma -> . numOperadores PLUS NUM
    (115) suma -> . numOperadores
    (116) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (117) restas -> . numOperadores MINUS NUM
    (118) restas -> . numOperadores
    (119) multiplicacion -> . numOperadores TIMES LPAREN numOperadores RPAREN
    (120) multiplicacion -> . numOperadores TIMES NUM
    (121) multiplicacion -> . numOperadores
    (122) divicion -> . numOperadores DIVIDE LPAREN numOperadores RPAREN
    (123) divicion -> . numOperadores DIVIDE NUM
    (124) divicion -> . numOperadores
    (127) enteros -> . NUM
    (128) enteros -> . numNegative
    (131) decimales -> . enteros PERIOD NUM
    (129) numNegative -> . MINUS NUM
    (130) numNegative -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
    FUNCTION        shift and go to state 106
    PLUS            shift and go to state 73
    MINUS           shift and go to state 75
    LBRACKET        shift and go to state 54
    NEW             shift and go to state 55
    STRING          shift and go to state 45
    NUM             shift and go to state 108
    ID              shift and go to state 41
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    PERIOD          reduce using rule 130 (numNegative -> .)
    TIMES           reduce using rule 130 (numNegative -> .)
    DIVIDE          reduce using rule 130 (numNegative -> .)
    $end            reduce using rule 130 (numNegative -> .)
    RBLOCK          reduce using rule 130 (numNegative -> .)
    RETURN          reduce using rule 130 (numNegative -> .)

  ! PLUS            [ reduce using rule 130 (numNegative -> .) ]
  ! MINUS           [ reduce using rule 130 (numNegative -> .) ]
  ! NUM             [ reduce using rule 130 (numNegative -> .) ]

    inicializarOp                  shift and go to state 107
    arrayDeclare                   shift and go to state 50
    declareMap                     shift and go to state 51
    declararSet                    shift and go to state 52
    javaScript_param               shift and go to state 53
    operacionesMath                shift and go to state 74
    boolean                        shift and go to state 47
    numOperadores                  shift and go to state 76
    suma                           shift and go to state 77
    restas                         shift and go to state 78
    multiplicacion                 shift and go to state 79
    divicion                       shift and go to state 80
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 64

    (49) varDeclaration -> LET ID COLON .

    $end            reduce using rule 49 (varDeclaration -> LET ID COLON .)
    RBLOCK          reduce using rule 49 (varDeclaration -> LET ID COLON .)
    RETURN          reduce using rule 49 (varDeclaration -> LET ID COLON .)


state 65

    (50) varDeclaration -> VAR ID COLON .

    $end            reduce using rule 50 (varDeclaration -> VAR ID COLON .)
    RBLOCK          reduce using rule 50 (varDeclaration -> VAR ID COLON .)
    RETURN          reduce using rule 50 (varDeclaration -> VAR ID COLON .)


state 66

    (35) impresion -> ALERT LPAREN expression . RPAREN COLON

    RPAREN          shift and go to state 109


state 67

    (37) impresion_vacio -> ALERT LPAREN RPAREN . COLON

    COLON           shift and go to state 110


state 68

    (8) expression -> conditionalEspecifico .

    RPAREN          reduce using rule 8 (expression -> conditionalEspecifico .)
    AND             reduce using rule 8 (expression -> conditionalEspecifico .)
    OR              reduce using rule 8 (expression -> conditionalEspecifico .)
    NOT             reduce using rule 8 (expression -> conditionalEspecifico .)


state 69

    (9) expression -> inicializarOp .

    RPAREN          reduce using rule 9 (expression -> inicializarOp .)
    AND             reduce using rule 9 (expression -> inicializarOp .)
    OR              reduce using rule 9 (expression -> inicializarOp .)
    NOT             reduce using rule 9 (expression -> inicializarOp .)


state 70

    (132) conditionalEspecifico -> ID . opConditional dataCondi
    (16) opConditional -> . ISEQUAL
    (17) opConditional -> . IS_NOT_IDENTICAL
    (18) opConditional -> . IS_IDENTICAL
    (19) opConditional -> . GREATER
    (20) opConditional -> . GREATEREQUAL
    (21) opConditional -> . LESS
    (22) opConditional -> . LESSEQUAL
    (23) opConditional -> . boolean
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE

    ISEQUAL         shift and go to state 112
    IS_NOT_IDENTICAL shift and go to state 113
    IS_IDENTICAL    shift and go to state 114
    GREATER         shift and go to state 115
    GREATEREQUAL    shift and go to state 116
    LESS            shift and go to state 117
    LESSEQUAL       shift and go to state 118
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    opConditional                  shift and go to state 111
    boolean                        shift and go to state 119

state 71

    (133) conditionalEspecifico -> NUM . opConditional NUM
    (127) enteros -> NUM .
    (16) opConditional -> . ISEQUAL
    (17) opConditional -> . IS_NOT_IDENTICAL
    (18) opConditional -> . IS_IDENTICAL
    (19) opConditional -> . GREATER
    (20) opConditional -> . GREATEREQUAL
    (21) opConditional -> . LESS
    (22) opConditional -> . LESSEQUAL
    (23) opConditional -> . boolean
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE

    PERIOD          reduce using rule 127 (enteros -> NUM .)
    PLUS            reduce using rule 127 (enteros -> NUM .)
    MINUS           reduce using rule 127 (enteros -> NUM .)
    TIMES           reduce using rule 127 (enteros -> NUM .)
    DIVIDE          reduce using rule 127 (enteros -> NUM .)
    NUM             reduce using rule 127 (enteros -> NUM .)
    RPAREN          reduce using rule 127 (enteros -> NUM .)
    AND             reduce using rule 127 (enteros -> NUM .)
    OR              reduce using rule 127 (enteros -> NUM .)
    NOT             reduce using rule 127 (enteros -> NUM .)
    ISEQUAL         shift and go to state 112
    IS_NOT_IDENTICAL shift and go to state 113
    IS_IDENTICAL    shift and go to state 114
    GREATER         shift and go to state 115
    GREATEREQUAL    shift and go to state 116
    LESS            shift and go to state 117
    LESSEQUAL       shift and go to state 118
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    opConditional                  shift and go to state 120
    boolean                        shift and go to state 119

state 72

    (134) conditionalEspecifico -> STRING . opConditional STRING
    (16) opConditional -> . ISEQUAL
    (17) opConditional -> . IS_NOT_IDENTICAL
    (18) opConditional -> . IS_IDENTICAL
    (19) opConditional -> . GREATER
    (20) opConditional -> . GREATEREQUAL
    (21) opConditional -> . LESS
    (22) opConditional -> . LESSEQUAL
    (23) opConditional -> . boolean
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE

    ISEQUAL         shift and go to state 112
    IS_NOT_IDENTICAL shift and go to state 113
    IS_IDENTICAL    shift and go to state 114
    GREATER         shift and go to state 115
    GREATEREQUAL    shift and go to state 116
    LESS            shift and go to state 117
    LESSEQUAL       shift and go to state 118
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    opConditional                  shift and go to state 121
    boolean                        shift and go to state 119

state 73

    (98) inicializarOp -> PLUS . operacionesMath
    (101) operacionesMath -> . numOperadores PLUS suma
    (102) operacionesMath -> . suma
    (103) operacionesMath -> . suma operacionesMath
    (104) operacionesMath -> . restas
    (105) operacionesMath -> . numOperadores MINUS restas
    (106) operacionesMath -> . restas operacionesMath
    (107) operacionesMath -> . multiplicacion
    (108) operacionesMath -> . numOperadores TIMES multiplicacion
    (109) operacionesMath -> . multiplicacion operacionesMath
    (110) operacionesMath -> . divicion
    (111) operacionesMath -> . numOperadores DIVIDE divicion
    (112) operacionesMath -> . divicion operacionesMath
    (125) numOperadores -> . enteros
    (126) numOperadores -> . decimales
    (113) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (114) suma -> . numOperadores PLUS NUM
    (115) suma -> . numOperadores
    (116) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (117) restas -> . numOperadores MINUS NUM
    (118) restas -> . numOperadores
    (119) multiplicacion -> . numOperadores TIMES LPAREN numOperadores RPAREN
    (120) multiplicacion -> . numOperadores TIMES NUM
    (121) multiplicacion -> . numOperadores
    (122) divicion -> . numOperadores DIVIDE LPAREN numOperadores RPAREN
    (123) divicion -> . numOperadores DIVIDE NUM
    (124) divicion -> . numOperadores
    (127) enteros -> . NUM
    (128) enteros -> . numNegative
    (131) decimales -> . enteros PERIOD NUM
    (129) numNegative -> . MINUS NUM
    (130) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
    NUM             shift and go to state 124
    MINUS           shift and go to state 123
    PERIOD          reduce using rule 130 (numNegative -> .)
    PLUS            reduce using rule 130 (numNegative -> .)
    TIMES           reduce using rule 130 (numNegative -> .)
    DIVIDE          reduce using rule 130 (numNegative -> .)
    RPAREN          reduce using rule 130 (numNegative -> .)
    AND             reduce using rule 130 (numNegative -> .)
    OR              reduce using rule 130 (numNegative -> .)
    NOT             reduce using rule 130 (numNegative -> .)
    $end            reduce using rule 130 (numNegative -> .)
    RBLOCK          reduce using rule 130 (numNegative -> .)
    RETURN          reduce using rule 130 (numNegative -> .)

  ! MINUS           [ reduce using rule 130 (numNegative -> .) ]
  ! NUM             [ reduce using rule 130 (numNegative -> .) ]

    operacionesMath                shift and go to state 122
    numOperadores                  shift and go to state 76
    suma                           shift and go to state 77
    restas                         shift and go to state 78
    multiplicacion                 shift and go to state 79
    divicion                       shift and go to state 80
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 74

    (100) inicializarOp -> operacionesMath .

    RPAREN          reduce using rule 100 (inicializarOp -> operacionesMath .)
    AND             reduce using rule 100 (inicializarOp -> operacionesMath .)
    OR              reduce using rule 100 (inicializarOp -> operacionesMath .)
    NOT             reduce using rule 100 (inicializarOp -> operacionesMath .)
    $end            reduce using rule 100 (inicializarOp -> operacionesMath .)
    RBLOCK          reduce using rule 100 (inicializarOp -> operacionesMath .)
    RETURN          reduce using rule 100 (inicializarOp -> operacionesMath .)


state 75

    (99) inicializarOp -> MINUS . operacionesMath
    (129) numNegative -> MINUS . NUM
    (101) operacionesMath -> . numOperadores PLUS suma
    (102) operacionesMath -> . suma
    (103) operacionesMath -> . suma operacionesMath
    (104) operacionesMath -> . restas
    (105) operacionesMath -> . numOperadores MINUS restas
    (106) operacionesMath -> . restas operacionesMath
    (107) operacionesMath -> . multiplicacion
    (108) operacionesMath -> . numOperadores TIMES multiplicacion
    (109) operacionesMath -> . multiplicacion operacionesMath
    (110) operacionesMath -> . divicion
    (111) operacionesMath -> . numOperadores DIVIDE divicion
    (112) operacionesMath -> . divicion operacionesMath
    (125) numOperadores -> . enteros
    (126) numOperadores -> . decimales
    (113) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (114) suma -> . numOperadores PLUS NUM
    (115) suma -> . numOperadores
    (116) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (117) restas -> . numOperadores MINUS NUM
    (118) restas -> . numOperadores
    (119) multiplicacion -> . numOperadores TIMES LPAREN numOperadores RPAREN
    (120) multiplicacion -> . numOperadores TIMES NUM
    (121) multiplicacion -> . numOperadores
    (122) divicion -> . numOperadores DIVIDE LPAREN numOperadores RPAREN
    (123) divicion -> . numOperadores DIVIDE NUM
    (124) divicion -> . numOperadores
    (127) enteros -> . NUM
    (128) enteros -> . numNegative
    (131) decimales -> . enteros PERIOD NUM
    (129) numNegative -> . MINUS NUM
    (130) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
    NUM             shift and go to state 126
    MINUS           shift and go to state 123
    PERIOD          reduce using rule 130 (numNegative -> .)
    PLUS            reduce using rule 130 (numNegative -> .)
    TIMES           reduce using rule 130 (numNegative -> .)
    DIVIDE          reduce using rule 130 (numNegative -> .)
    RPAREN          reduce using rule 130 (numNegative -> .)
    AND             reduce using rule 130 (numNegative -> .)
    OR              reduce using rule 130 (numNegative -> .)
    NOT             reduce using rule 130 (numNegative -> .)
    $end            reduce using rule 130 (numNegative -> .)
    RBLOCK          reduce using rule 130 (numNegative -> .)
    RETURN          reduce using rule 130 (numNegative -> .)

  ! MINUS           [ reduce using rule 130 (numNegative -> .) ]
  ! NUM             [ reduce using rule 130 (numNegative -> .) ]

    operacionesMath                shift and go to state 125
    numOperadores                  shift and go to state 76
    suma                           shift and go to state 77
    restas                         shift and go to state 78
    multiplicacion                 shift and go to state 79
    divicion                       shift and go to state 80
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 76

    (101) operacionesMath -> numOperadores . PLUS suma
    (105) operacionesMath -> numOperadores . MINUS restas
    (108) operacionesMath -> numOperadores . TIMES multiplicacion
    (111) operacionesMath -> numOperadores . DIVIDE divicion
    (113) suma -> numOperadores . PLUS LPAREN numOperadores RPAREN
    (114) suma -> numOperadores . PLUS NUM
    (115) suma -> numOperadores .
    (116) restas -> numOperadores . MINUS LPAREN numOperadores RPAREN
    (117) restas -> numOperadores . MINUS NUM
    (118) restas -> numOperadores .
    (119) multiplicacion -> numOperadores . TIMES LPAREN numOperadores RPAREN
    (120) multiplicacion -> numOperadores . TIMES NUM
    (121) multiplicacion -> numOperadores .
    (122) divicion -> numOperadores . DIVIDE LPAREN numOperadores RPAREN
    (123) divicion -> numOperadores . DIVIDE NUM
    (124) divicion -> numOperadores .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! reduce/reduce conflict for NUM resolved using rule 115 (suma -> numOperadores .)
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! reduce/reduce conflict for PERIOD resolved using rule 115 (suma -> numOperadores .)
  ! reduce/reduce conflict for RPAREN resolved using rule 115 (suma -> numOperadores .)
  ! reduce/reduce conflict for AND resolved using rule 115 (suma -> numOperadores .)
  ! reduce/reduce conflict for OR resolved using rule 115 (suma -> numOperadores .)
  ! reduce/reduce conflict for NOT resolved using rule 115 (suma -> numOperadores .)
  ! reduce/reduce conflict for $end resolved using rule 115 (suma -> numOperadores .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 115 (suma -> numOperadores .)
  ! reduce/reduce conflict for RETURN resolved using rule 115 (suma -> numOperadores .)
  ! reduce/reduce conflict for NUM resolved using rule 115 (suma -> numOperadores .)
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! reduce/reduce conflict for PERIOD resolved using rule 115 (suma -> numOperadores .)
  ! reduce/reduce conflict for RPAREN resolved using rule 115 (suma -> numOperadores .)
  ! reduce/reduce conflict for AND resolved using rule 115 (suma -> numOperadores .)
  ! reduce/reduce conflict for OR resolved using rule 115 (suma -> numOperadores .)
  ! reduce/reduce conflict for NOT resolved using rule 115 (suma -> numOperadores .)
  ! reduce/reduce conflict for $end resolved using rule 115 (suma -> numOperadores .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 115 (suma -> numOperadores .)
  ! reduce/reduce conflict for RETURN resolved using rule 115 (suma -> numOperadores .)
  ! reduce/reduce conflict for NUM resolved using rule 115 (suma -> numOperadores .)
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! reduce/reduce conflict for PERIOD resolved using rule 115 (suma -> numOperadores .)
  ! reduce/reduce conflict for RPAREN resolved using rule 115 (suma -> numOperadores .)
  ! reduce/reduce conflict for AND resolved using rule 115 (suma -> numOperadores .)
  ! reduce/reduce conflict for OR resolved using rule 115 (suma -> numOperadores .)
  ! reduce/reduce conflict for NOT resolved using rule 115 (suma -> numOperadores .)
  ! reduce/reduce conflict for $end resolved using rule 115 (suma -> numOperadores .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 115 (suma -> numOperadores .)
  ! reduce/reduce conflict for RETURN resolved using rule 115 (suma -> numOperadores .)
    PLUS            shift and go to state 127
    MINUS           shift and go to state 128
    TIMES           shift and go to state 129
    DIVIDE          shift and go to state 130
    NUM             reduce using rule 115 (suma -> numOperadores .)
    PERIOD          reduce using rule 115 (suma -> numOperadores .)
    RPAREN          reduce using rule 115 (suma -> numOperadores .)
    AND             reduce using rule 115 (suma -> numOperadores .)
    OR              reduce using rule 115 (suma -> numOperadores .)
    NOT             reduce using rule 115 (suma -> numOperadores .)
    $end            reduce using rule 115 (suma -> numOperadores .)
    RBLOCK          reduce using rule 115 (suma -> numOperadores .)
    RETURN          reduce using rule 115 (suma -> numOperadores .)

  ! MINUS           [ reduce using rule 115 (suma -> numOperadores .) ]
  ! PLUS            [ reduce using rule 115 (suma -> numOperadores .) ]
  ! TIMES           [ reduce using rule 115 (suma -> numOperadores .) ]
  ! DIVIDE          [ reduce using rule 115 (suma -> numOperadores .) ]
  ! NUM             [ reduce using rule 118 (restas -> numOperadores .) ]
  ! MINUS           [ reduce using rule 118 (restas -> numOperadores .) ]
  ! PLUS            [ reduce using rule 118 (restas -> numOperadores .) ]
  ! TIMES           [ reduce using rule 118 (restas -> numOperadores .) ]
  ! DIVIDE          [ reduce using rule 118 (restas -> numOperadores .) ]
  ! PERIOD          [ reduce using rule 118 (restas -> numOperadores .) ]
  ! RPAREN          [ reduce using rule 118 (restas -> numOperadores .) ]
  ! AND             [ reduce using rule 118 (restas -> numOperadores .) ]
  ! OR              [ reduce using rule 118 (restas -> numOperadores .) ]
  ! NOT             [ reduce using rule 118 (restas -> numOperadores .) ]
  ! $end            [ reduce using rule 118 (restas -> numOperadores .) ]
  ! RBLOCK          [ reduce using rule 118 (restas -> numOperadores .) ]
  ! RETURN          [ reduce using rule 118 (restas -> numOperadores .) ]
  ! NUM             [ reduce using rule 121 (multiplicacion -> numOperadores .) ]
  ! MINUS           [ reduce using rule 121 (multiplicacion -> numOperadores .) ]
  ! PLUS            [ reduce using rule 121 (multiplicacion -> numOperadores .) ]
  ! TIMES           [ reduce using rule 121 (multiplicacion -> numOperadores .) ]
  ! DIVIDE          [ reduce using rule 121 (multiplicacion -> numOperadores .) ]
  ! PERIOD          [ reduce using rule 121 (multiplicacion -> numOperadores .) ]
  ! RPAREN          [ reduce using rule 121 (multiplicacion -> numOperadores .) ]
  ! AND             [ reduce using rule 121 (multiplicacion -> numOperadores .) ]
  ! OR              [ reduce using rule 121 (multiplicacion -> numOperadores .) ]
  ! NOT             [ reduce using rule 121 (multiplicacion -> numOperadores .) ]
  ! $end            [ reduce using rule 121 (multiplicacion -> numOperadores .) ]
  ! RBLOCK          [ reduce using rule 121 (multiplicacion -> numOperadores .) ]
  ! RETURN          [ reduce using rule 121 (multiplicacion -> numOperadores .) ]
  ! NUM             [ reduce using rule 124 (divicion -> numOperadores .) ]
  ! MINUS           [ reduce using rule 124 (divicion -> numOperadores .) ]
  ! PLUS            [ reduce using rule 124 (divicion -> numOperadores .) ]
  ! TIMES           [ reduce using rule 124 (divicion -> numOperadores .) ]
  ! DIVIDE          [ reduce using rule 124 (divicion -> numOperadores .) ]
  ! PERIOD          [ reduce using rule 124 (divicion -> numOperadores .) ]
  ! RPAREN          [ reduce using rule 124 (divicion -> numOperadores .) ]
  ! AND             [ reduce using rule 124 (divicion -> numOperadores .) ]
  ! OR              [ reduce using rule 124 (divicion -> numOperadores .) ]
  ! NOT             [ reduce using rule 124 (divicion -> numOperadores .) ]
  ! $end            [ reduce using rule 124 (divicion -> numOperadores .) ]
  ! RBLOCK          [ reduce using rule 124 (divicion -> numOperadores .) ]
  ! RETURN          [ reduce using rule 124 (divicion -> numOperadores .) ]


state 77

    (102) operacionesMath -> suma .
    (103) operacionesMath -> suma . operacionesMath
    (101) operacionesMath -> . numOperadores PLUS suma
    (102) operacionesMath -> . suma
    (103) operacionesMath -> . suma operacionesMath
    (104) operacionesMath -> . restas
    (105) operacionesMath -> . numOperadores MINUS restas
    (106) operacionesMath -> . restas operacionesMath
    (107) operacionesMath -> . multiplicacion
    (108) operacionesMath -> . numOperadores TIMES multiplicacion
    (109) operacionesMath -> . multiplicacion operacionesMath
    (110) operacionesMath -> . divicion
    (111) operacionesMath -> . numOperadores DIVIDE divicion
    (112) operacionesMath -> . divicion operacionesMath
    (125) numOperadores -> . enteros
    (126) numOperadores -> . decimales
    (113) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (114) suma -> . numOperadores PLUS NUM
    (115) suma -> . numOperadores
    (116) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (117) restas -> . numOperadores MINUS NUM
    (118) restas -> . numOperadores
    (119) multiplicacion -> . numOperadores TIMES LPAREN numOperadores RPAREN
    (120) multiplicacion -> . numOperadores TIMES NUM
    (121) multiplicacion -> . numOperadores
    (122) divicion -> . numOperadores DIVIDE LPAREN numOperadores RPAREN
    (123) divicion -> . numOperadores DIVIDE NUM
    (124) divicion -> . numOperadores
    (127) enteros -> . NUM
    (128) enteros -> . numNegative
    (131) decimales -> . enteros PERIOD NUM
    (129) numNegative -> . MINUS NUM
    (130) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! reduce/reduce conflict for RPAREN resolved using rule 102 (operacionesMath -> suma .)
  ! reduce/reduce conflict for AND resolved using rule 102 (operacionesMath -> suma .)
  ! reduce/reduce conflict for OR resolved using rule 102 (operacionesMath -> suma .)
  ! reduce/reduce conflict for NOT resolved using rule 102 (operacionesMath -> suma .)
  ! reduce/reduce conflict for $end resolved using rule 102 (operacionesMath -> suma .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 102 (operacionesMath -> suma .)
  ! reduce/reduce conflict for RETURN resolved using rule 102 (operacionesMath -> suma .)
    RPAREN          reduce using rule 102 (operacionesMath -> suma .)
    AND             reduce using rule 102 (operacionesMath -> suma .)
    OR              reduce using rule 102 (operacionesMath -> suma .)
    NOT             reduce using rule 102 (operacionesMath -> suma .)
    $end            reduce using rule 102 (operacionesMath -> suma .)
    RBLOCK          reduce using rule 102 (operacionesMath -> suma .)
    RETURN          reduce using rule 102 (operacionesMath -> suma .)
    NUM             shift and go to state 124
    MINUS           shift and go to state 123
    PERIOD          reduce using rule 130 (numNegative -> .)
    PLUS            reduce using rule 130 (numNegative -> .)
    TIMES           reduce using rule 130 (numNegative -> .)
    DIVIDE          reduce using rule 130 (numNegative -> .)

  ! MINUS           [ reduce using rule 130 (numNegative -> .) ]
  ! NUM             [ reduce using rule 130 (numNegative -> .) ]
  ! RPAREN          [ reduce using rule 130 (numNegative -> .) ]
  ! AND             [ reduce using rule 130 (numNegative -> .) ]
  ! OR              [ reduce using rule 130 (numNegative -> .) ]
  ! NOT             [ reduce using rule 130 (numNegative -> .) ]
  ! $end            [ reduce using rule 130 (numNegative -> .) ]
  ! RBLOCK          [ reduce using rule 130 (numNegative -> .) ]
  ! RETURN          [ reduce using rule 130 (numNegative -> .) ]

    suma                           shift and go to state 77
    operacionesMath                shift and go to state 131
    numOperadores                  shift and go to state 76
    restas                         shift and go to state 78
    multiplicacion                 shift and go to state 79
    divicion                       shift and go to state 80
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 78

    (104) operacionesMath -> restas .
    (106) operacionesMath -> restas . operacionesMath
    (101) operacionesMath -> . numOperadores PLUS suma
    (102) operacionesMath -> . suma
    (103) operacionesMath -> . suma operacionesMath
    (104) operacionesMath -> . restas
    (105) operacionesMath -> . numOperadores MINUS restas
    (106) operacionesMath -> . restas operacionesMath
    (107) operacionesMath -> . multiplicacion
    (108) operacionesMath -> . numOperadores TIMES multiplicacion
    (109) operacionesMath -> . multiplicacion operacionesMath
    (110) operacionesMath -> . divicion
    (111) operacionesMath -> . numOperadores DIVIDE divicion
    (112) operacionesMath -> . divicion operacionesMath
    (125) numOperadores -> . enteros
    (126) numOperadores -> . decimales
    (113) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (114) suma -> . numOperadores PLUS NUM
    (115) suma -> . numOperadores
    (116) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (117) restas -> . numOperadores MINUS NUM
    (118) restas -> . numOperadores
    (119) multiplicacion -> . numOperadores TIMES LPAREN numOperadores RPAREN
    (120) multiplicacion -> . numOperadores TIMES NUM
    (121) multiplicacion -> . numOperadores
    (122) divicion -> . numOperadores DIVIDE LPAREN numOperadores RPAREN
    (123) divicion -> . numOperadores DIVIDE NUM
    (124) divicion -> . numOperadores
    (127) enteros -> . NUM
    (128) enteros -> . numNegative
    (131) decimales -> . enteros PERIOD NUM
    (129) numNegative -> . MINUS NUM
    (130) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! reduce/reduce conflict for RPAREN resolved using rule 104 (operacionesMath -> restas .)
  ! reduce/reduce conflict for AND resolved using rule 104 (operacionesMath -> restas .)
  ! reduce/reduce conflict for OR resolved using rule 104 (operacionesMath -> restas .)
  ! reduce/reduce conflict for NOT resolved using rule 104 (operacionesMath -> restas .)
  ! reduce/reduce conflict for $end resolved using rule 104 (operacionesMath -> restas .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 104 (operacionesMath -> restas .)
  ! reduce/reduce conflict for RETURN resolved using rule 104 (operacionesMath -> restas .)
    RPAREN          reduce using rule 104 (operacionesMath -> restas .)
    AND             reduce using rule 104 (operacionesMath -> restas .)
    OR              reduce using rule 104 (operacionesMath -> restas .)
    NOT             reduce using rule 104 (operacionesMath -> restas .)
    $end            reduce using rule 104 (operacionesMath -> restas .)
    RBLOCK          reduce using rule 104 (operacionesMath -> restas .)
    RETURN          reduce using rule 104 (operacionesMath -> restas .)
    NUM             shift and go to state 124
    MINUS           shift and go to state 123
    PERIOD          reduce using rule 130 (numNegative -> .)
    PLUS            reduce using rule 130 (numNegative -> .)
    TIMES           reduce using rule 130 (numNegative -> .)
    DIVIDE          reduce using rule 130 (numNegative -> .)

  ! MINUS           [ reduce using rule 130 (numNegative -> .) ]
  ! NUM             [ reduce using rule 130 (numNegative -> .) ]
  ! RPAREN          [ reduce using rule 130 (numNegative -> .) ]
  ! AND             [ reduce using rule 130 (numNegative -> .) ]
  ! OR              [ reduce using rule 130 (numNegative -> .) ]
  ! NOT             [ reduce using rule 130 (numNegative -> .) ]
  ! $end            [ reduce using rule 130 (numNegative -> .) ]
  ! RBLOCK          [ reduce using rule 130 (numNegative -> .) ]
  ! RETURN          [ reduce using rule 130 (numNegative -> .) ]

    restas                         shift and go to state 78
    operacionesMath                shift and go to state 132
    numOperadores                  shift and go to state 76
    suma                           shift and go to state 77
    multiplicacion                 shift and go to state 79
    divicion                       shift and go to state 80
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 79

    (107) operacionesMath -> multiplicacion .
    (109) operacionesMath -> multiplicacion . operacionesMath
    (101) operacionesMath -> . numOperadores PLUS suma
    (102) operacionesMath -> . suma
    (103) operacionesMath -> . suma operacionesMath
    (104) operacionesMath -> . restas
    (105) operacionesMath -> . numOperadores MINUS restas
    (106) operacionesMath -> . restas operacionesMath
    (107) operacionesMath -> . multiplicacion
    (108) operacionesMath -> . numOperadores TIMES multiplicacion
    (109) operacionesMath -> . multiplicacion operacionesMath
    (110) operacionesMath -> . divicion
    (111) operacionesMath -> . numOperadores DIVIDE divicion
    (112) operacionesMath -> . divicion operacionesMath
    (125) numOperadores -> . enteros
    (126) numOperadores -> . decimales
    (113) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (114) suma -> . numOperadores PLUS NUM
    (115) suma -> . numOperadores
    (116) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (117) restas -> . numOperadores MINUS NUM
    (118) restas -> . numOperadores
    (119) multiplicacion -> . numOperadores TIMES LPAREN numOperadores RPAREN
    (120) multiplicacion -> . numOperadores TIMES NUM
    (121) multiplicacion -> . numOperadores
    (122) divicion -> . numOperadores DIVIDE LPAREN numOperadores RPAREN
    (123) divicion -> . numOperadores DIVIDE NUM
    (124) divicion -> . numOperadores
    (127) enteros -> . NUM
    (128) enteros -> . numNegative
    (131) decimales -> . enteros PERIOD NUM
    (129) numNegative -> . MINUS NUM
    (130) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! reduce/reduce conflict for RPAREN resolved using rule 107 (operacionesMath -> multiplicacion .)
  ! reduce/reduce conflict for AND resolved using rule 107 (operacionesMath -> multiplicacion .)
  ! reduce/reduce conflict for OR resolved using rule 107 (operacionesMath -> multiplicacion .)
  ! reduce/reduce conflict for NOT resolved using rule 107 (operacionesMath -> multiplicacion .)
  ! reduce/reduce conflict for $end resolved using rule 107 (operacionesMath -> multiplicacion .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 107 (operacionesMath -> multiplicacion .)
  ! reduce/reduce conflict for RETURN resolved using rule 107 (operacionesMath -> multiplicacion .)
    RPAREN          reduce using rule 107 (operacionesMath -> multiplicacion .)
    AND             reduce using rule 107 (operacionesMath -> multiplicacion .)
    OR              reduce using rule 107 (operacionesMath -> multiplicacion .)
    NOT             reduce using rule 107 (operacionesMath -> multiplicacion .)
    $end            reduce using rule 107 (operacionesMath -> multiplicacion .)
    RBLOCK          reduce using rule 107 (operacionesMath -> multiplicacion .)
    RETURN          reduce using rule 107 (operacionesMath -> multiplicacion .)
    NUM             shift and go to state 124
    MINUS           shift and go to state 123
    PERIOD          reduce using rule 130 (numNegative -> .)
    PLUS            reduce using rule 130 (numNegative -> .)
    TIMES           reduce using rule 130 (numNegative -> .)
    DIVIDE          reduce using rule 130 (numNegative -> .)

  ! MINUS           [ reduce using rule 130 (numNegative -> .) ]
  ! NUM             [ reduce using rule 130 (numNegative -> .) ]
  ! RPAREN          [ reduce using rule 130 (numNegative -> .) ]
  ! AND             [ reduce using rule 130 (numNegative -> .) ]
  ! OR              [ reduce using rule 130 (numNegative -> .) ]
  ! NOT             [ reduce using rule 130 (numNegative -> .) ]
  ! $end            [ reduce using rule 130 (numNegative -> .) ]
  ! RBLOCK          [ reduce using rule 130 (numNegative -> .) ]
  ! RETURN          [ reduce using rule 130 (numNegative -> .) ]

    multiplicacion                 shift and go to state 79
    operacionesMath                shift and go to state 133
    numOperadores                  shift and go to state 76
    suma                           shift and go to state 77
    restas                         shift and go to state 78
    divicion                       shift and go to state 80
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 80

    (110) operacionesMath -> divicion .
    (112) operacionesMath -> divicion . operacionesMath
    (101) operacionesMath -> . numOperadores PLUS suma
    (102) operacionesMath -> . suma
    (103) operacionesMath -> . suma operacionesMath
    (104) operacionesMath -> . restas
    (105) operacionesMath -> . numOperadores MINUS restas
    (106) operacionesMath -> . restas operacionesMath
    (107) operacionesMath -> . multiplicacion
    (108) operacionesMath -> . numOperadores TIMES multiplicacion
    (109) operacionesMath -> . multiplicacion operacionesMath
    (110) operacionesMath -> . divicion
    (111) operacionesMath -> . numOperadores DIVIDE divicion
    (112) operacionesMath -> . divicion operacionesMath
    (125) numOperadores -> . enteros
    (126) numOperadores -> . decimales
    (113) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (114) suma -> . numOperadores PLUS NUM
    (115) suma -> . numOperadores
    (116) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (117) restas -> . numOperadores MINUS NUM
    (118) restas -> . numOperadores
    (119) multiplicacion -> . numOperadores TIMES LPAREN numOperadores RPAREN
    (120) multiplicacion -> . numOperadores TIMES NUM
    (121) multiplicacion -> . numOperadores
    (122) divicion -> . numOperadores DIVIDE LPAREN numOperadores RPAREN
    (123) divicion -> . numOperadores DIVIDE NUM
    (124) divicion -> . numOperadores
    (127) enteros -> . NUM
    (128) enteros -> . numNegative
    (131) decimales -> . enteros PERIOD NUM
    (129) numNegative -> . MINUS NUM
    (130) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! reduce/reduce conflict for RPAREN resolved using rule 110 (operacionesMath -> divicion .)
  ! reduce/reduce conflict for AND resolved using rule 110 (operacionesMath -> divicion .)
  ! reduce/reduce conflict for OR resolved using rule 110 (operacionesMath -> divicion .)
  ! reduce/reduce conflict for NOT resolved using rule 110 (operacionesMath -> divicion .)
  ! reduce/reduce conflict for $end resolved using rule 110 (operacionesMath -> divicion .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 110 (operacionesMath -> divicion .)
  ! reduce/reduce conflict for RETURN resolved using rule 110 (operacionesMath -> divicion .)
    RPAREN          reduce using rule 110 (operacionesMath -> divicion .)
    AND             reduce using rule 110 (operacionesMath -> divicion .)
    OR              reduce using rule 110 (operacionesMath -> divicion .)
    NOT             reduce using rule 110 (operacionesMath -> divicion .)
    $end            reduce using rule 110 (operacionesMath -> divicion .)
    RBLOCK          reduce using rule 110 (operacionesMath -> divicion .)
    RETURN          reduce using rule 110 (operacionesMath -> divicion .)
    NUM             shift and go to state 124
    MINUS           shift and go to state 123
    PERIOD          reduce using rule 130 (numNegative -> .)
    PLUS            reduce using rule 130 (numNegative -> .)
    TIMES           reduce using rule 130 (numNegative -> .)
    DIVIDE          reduce using rule 130 (numNegative -> .)

  ! MINUS           [ reduce using rule 130 (numNegative -> .) ]
  ! NUM             [ reduce using rule 130 (numNegative -> .) ]
  ! RPAREN          [ reduce using rule 130 (numNegative -> .) ]
  ! AND             [ reduce using rule 130 (numNegative -> .) ]
  ! OR              [ reduce using rule 130 (numNegative -> .) ]
  ! NOT             [ reduce using rule 130 (numNegative -> .) ]
  ! $end            [ reduce using rule 130 (numNegative -> .) ]
  ! RBLOCK          [ reduce using rule 130 (numNegative -> .) ]
  ! RETURN          [ reduce using rule 130 (numNegative -> .) ]

    divicion                       shift and go to state 80
    operacionesMath                shift and go to state 134
    numOperadores                  shift and go to state 76
    suma                           shift and go to state 77
    restas                         shift and go to state 78
    multiplicacion                 shift and go to state 79
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 81

    (125) numOperadores -> enteros .
    (131) decimales -> enteros . PERIOD NUM

  ! shift/reduce conflict for PERIOD resolved as shift
    PLUS            reduce using rule 125 (numOperadores -> enteros .)
    MINUS           reduce using rule 125 (numOperadores -> enteros .)
    TIMES           reduce using rule 125 (numOperadores -> enteros .)
    DIVIDE          reduce using rule 125 (numOperadores -> enteros .)
    NUM             reduce using rule 125 (numOperadores -> enteros .)
    RPAREN          reduce using rule 125 (numOperadores -> enteros .)
    AND             reduce using rule 125 (numOperadores -> enteros .)
    OR              reduce using rule 125 (numOperadores -> enteros .)
    NOT             reduce using rule 125 (numOperadores -> enteros .)
    $end            reduce using rule 125 (numOperadores -> enteros .)
    RBLOCK          reduce using rule 125 (numOperadores -> enteros .)
    RETURN          reduce using rule 125 (numOperadores -> enteros .)
    PERIOD          shift and go to state 135

  ! PERIOD          [ reduce using rule 125 (numOperadores -> enteros .) ]


state 82

    (126) numOperadores -> decimales .

    PLUS            reduce using rule 126 (numOperadores -> decimales .)
    MINUS           reduce using rule 126 (numOperadores -> decimales .)
    TIMES           reduce using rule 126 (numOperadores -> decimales .)
    DIVIDE          reduce using rule 126 (numOperadores -> decimales .)
    NUM             reduce using rule 126 (numOperadores -> decimales .)
    PERIOD          reduce using rule 126 (numOperadores -> decimales .)
    RPAREN          reduce using rule 126 (numOperadores -> decimales .)
    AND             reduce using rule 126 (numOperadores -> decimales .)
    OR              reduce using rule 126 (numOperadores -> decimales .)
    NOT             reduce using rule 126 (numOperadores -> decimales .)
    $end            reduce using rule 126 (numOperadores -> decimales .)
    RBLOCK          reduce using rule 126 (numOperadores -> decimales .)
    RETURN          reduce using rule 126 (numOperadores -> decimales .)


state 83

    (128) enteros -> numNegative .

    PERIOD          reduce using rule 128 (enteros -> numNegative .)
    PLUS            reduce using rule 128 (enteros -> numNegative .)
    MINUS           reduce using rule 128 (enteros -> numNegative .)
    TIMES           reduce using rule 128 (enteros -> numNegative .)
    DIVIDE          reduce using rule 128 (enteros -> numNegative .)
    NUM             reduce using rule 128 (enteros -> numNegative .)
    RPAREN          reduce using rule 128 (enteros -> numNegative .)
    AND             reduce using rule 128 (enteros -> numNegative .)
    OR              reduce using rule 128 (enteros -> numNegative .)
    NOT             reduce using rule 128 (enteros -> numNegative .)
    $end            reduce using rule 128 (enteros -> numNegative .)
    RBLOCK          reduce using rule 128 (enteros -> numNegative .)
    RETURN          reduce using rule 128 (enteros -> numNegative .)


state 84

    (80) declareteFunction -> FUNCTION ID LPAREN . params RPAREN
    (81) declareteFunction -> FUNCTION ID LPAREN . params RPAREN sentencesCmpt
    (86) params -> . paramList
    (87) paramList -> . javaScript_param
    (88) paramList -> . javaScript_param COMMA paramList
    (38) javaScript_param -> . STRING
    (39) javaScript_param -> . NUM
    (40) javaScript_param -> . boolean
    (41) javaScript_param -> . ID
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE

    STRING          shift and go to state 45
    NUM             shift and go to state 46
    ID              shift and go to state 41
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    params                         shift and go to state 136
    paramList                      shift and go to state 43
    javaScript_param               shift and go to state 44
    boolean                        shift and go to state 47

state 85

    (27) sentencias_if -> IF LPAREN expression . operadorLogical expression RPAREN cuerpo_de_sentencias
    (28) sentencias_if -> IF LPAREN expression . RPAREN cuerpo_de_sentencias
    (29) sentencias_if_else -> IF LPAREN expression . operadorLogical expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias
    (30) sentencias_if_else -> IF LPAREN expression . RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias
    (24) operadorLogical -> . AND
    (25) operadorLogical -> . OR
    (26) operadorLogical -> . NOT

    RPAREN          shift and go to state 138
    AND             shift and go to state 139
    OR              shift and go to state 140
    NOT             shift and go to state 141

    operadorLogical                shift and go to state 137

state 86

    (33) sentencias_while -> WHILE LPAREN expression . RPAREN cuerpo_de_sentencias
    (34) sentencias_while -> WHILE LPAREN expression . operadorLogical expression RPAREN cuerpo_de_sentencias
    (24) operadorLogical -> . AND
    (25) operadorLogical -> . OR
    (26) operadorLogical -> . NOT

    RPAREN          shift and go to state 142
    AND             shift and go to state 139
    OR              shift and go to state 140
    NOT             shift and go to state 141

    operadorLogical                shift and go to state 143

state 87

    (85) callFunction -> ID LPAREN params RPAREN .

    COLON           reduce using rule 85 (callFunction -> ID LPAREN params RPAREN .)


state 88

    (88) paramList -> javaScript_param COMMA . paramList
    (87) paramList -> . javaScript_param
    (88) paramList -> . javaScript_param COMMA paramList
    (38) javaScript_param -> . STRING
    (39) javaScript_param -> . NUM
    (40) javaScript_param -> . boolean
    (41) javaScript_param -> . ID
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE

    STRING          shift and go to state 45
    NUM             shift and go to state 46
    ID              shift and go to state 41
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    javaScript_param               shift and go to state 44
    paramList                      shift and go to state 144
    boolean                        shift and go to state 47

state 89

    (51) assign -> ID EQUAL arrayDeclare COLON .

    $end            reduce using rule 51 (assign -> ID EQUAL arrayDeclare COLON .)
    RBLOCK          reduce using rule 51 (assign -> ID EQUAL arrayDeclare COLON .)
    RETURN          reduce using rule 51 (assign -> ID EQUAL arrayDeclare COLON .)


state 90

    (52) assign -> ID EQUAL declareMap COLON .

    $end            reduce using rule 52 (assign -> ID EQUAL declareMap COLON .)
    RBLOCK          reduce using rule 52 (assign -> ID EQUAL declareMap COLON .)
    RETURN          reduce using rule 52 (assign -> ID EQUAL declareMap COLON .)


state 91

    (53) assign -> ID EQUAL declararSet COLON .

    $end            reduce using rule 53 (assign -> ID EQUAL declararSet COLON .)
    RBLOCK          reduce using rule 53 (assign -> ID EQUAL declararSet COLON .)
    RETURN          reduce using rule 53 (assign -> ID EQUAL declararSet COLON .)


state 92

    (54) assign -> ID EQUAL javaScript_param COLON .

    $end            reduce using rule 54 (assign -> ID EQUAL javaScript_param COLON .)
    RBLOCK          reduce using rule 54 (assign -> ID EQUAL javaScript_param COLON .)
    RETURN          reduce using rule 54 (assign -> ID EQUAL javaScript_param COLON .)


state 93

    (58) arrayDeclare -> LBRACKET RBRACKET .

    COLON           reduce using rule 58 (arrayDeclare -> LBRACKET RBRACKET .)
    COMMA           reduce using rule 58 (arrayDeclare -> LBRACKET RBRACKET .)
    RBRACKET        reduce using rule 58 (arrayDeclare -> LBRACKET RBRACKET .)


state 94

    (59) arrayDeclare -> LBRACKET arrayValues . RBRACKET

    RBRACKET        shift and go to state 145


state 95

    (62) arrayValues -> javaScript_param .
    (63) arrayValues -> javaScript_param . COMMA arrayValues

    RBRACKET        reduce using rule 62 (arrayValues -> javaScript_param .)
    RPAREN          reduce using rule 62 (arrayValues -> javaScript_param .)
    COMMA           shift and go to state 146


state 96

    (60) arrayDeclare -> NEW ARRAY . LPAREN arrayValues RPAREN
    (61) arrayDeclare -> NEW ARRAY . LPAREN RPAREN

    LPAREN          shift and go to state 147


state 97

    (67) declareMap -> NEW MAP . LPAREN LBRACKET iterableMap RBRACKET RPAREN
    (68) declareMap -> NEW MAP . LPAREN RPAREN

    LPAREN          shift and go to state 148


state 98

    (93) declararSet -> NEW SET . LPAREN RPAREN
    (94) declararSet -> NEW SET . LPAREN LBRACKET iterableSet RBRACKET RPAREN

    LPAREN          shift and go to state 149


state 99

    (64) methodArray -> PERIOD PUSH LPAREN . javaScript_param RPAREN
    (38) javaScript_param -> . STRING
    (39) javaScript_param -> . NUM
    (40) javaScript_param -> . boolean
    (41) javaScript_param -> . ID
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE

    STRING          shift and go to state 45
    NUM             shift and go to state 46
    ID              shift and go to state 41
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    javaScript_param               shift and go to state 150
    boolean                        shift and go to state 47

state 100

    (65) methodArray -> PERIOD UNSHIFT LPAREN . arrayValues RPAREN
    (62) arrayValues -> . javaScript_param
    (63) arrayValues -> . javaScript_param COMMA arrayValues
    (38) javaScript_param -> . STRING
    (39) javaScript_param -> . NUM
    (40) javaScript_param -> . boolean
    (41) javaScript_param -> . ID
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE

    STRING          shift and go to state 45
    NUM             shift and go to state 46
    ID              shift and go to state 41
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    arrayValues                    shift and go to state 151
    javaScript_param               shift and go to state 95
    boolean                        shift and go to state 47

state 101

    (66) methodArray -> PERIOD POP LPAREN . RPAREN

    RPAREN          shift and go to state 152


state 102

    (95) methodSet -> PERIOD ADD LPAREN . javaScript_param RPAREN
    (38) javaScript_param -> . STRING
    (39) javaScript_param -> . NUM
    (40) javaScript_param -> . boolean
    (41) javaScript_param -> . ID
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE

    STRING          shift and go to state 45
    NUM             shift and go to state 46
    ID              shift and go to state 41
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    javaScript_param               shift and go to state 153
    boolean                        shift and go to state 47

state 103

    (96) methodSet -> PERIOD DELETE LPAREN . javaScript_param RPAREN
    (38) javaScript_param -> . STRING
    (39) javaScript_param -> . NUM
    (40) javaScript_param -> . boolean
    (41) javaScript_param -> . ID
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE

    STRING          shift and go to state 45
    NUM             shift and go to state 46
    ID              shift and go to state 41
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    javaScript_param               shift and go to state 154
    boolean                        shift and go to state 47

state 104

    (97) methodSet -> PERIOD CLEAR LPAREN . RPAREN
    (78) methodMap -> PERIOD CLEAR LPAREN . RPAREN

    RPAREN          shift and go to state 155


state 105

    (79) methodMap -> PERIOD LENGTH LPAREN . RPAREN

    RPAREN          shift and go to state 156


state 106

    (82) declareteFunction -> varType ID EQUAL FUNCTION . LPAREN params RPAREN

    LPAREN          shift and go to state 157


state 107

    (10) assingOperadores -> varType ID EQUAL inicializarOp .

    $end            reduce using rule 10 (assingOperadores -> varType ID EQUAL inicializarOp .)
    RBLOCK          reduce using rule 10 (assingOperadores -> varType ID EQUAL inicializarOp .)
    RETURN          reduce using rule 10 (assingOperadores -> varType ID EQUAL inicializarOp .)


state 108

    (39) javaScript_param -> NUM .
    (127) enteros -> NUM .

    COLON           reduce using rule 39 (javaScript_param -> NUM .)
    PERIOD          reduce using rule 127 (enteros -> NUM .)
    PLUS            reduce using rule 127 (enteros -> NUM .)
    MINUS           reduce using rule 127 (enteros -> NUM .)
    TIMES           reduce using rule 127 (enteros -> NUM .)
    DIVIDE          reduce using rule 127 (enteros -> NUM .)
    NUM             reduce using rule 127 (enteros -> NUM .)
    $end            reduce using rule 127 (enteros -> NUM .)
    RBLOCK          reduce using rule 127 (enteros -> NUM .)
    RETURN          reduce using rule 127 (enteros -> NUM .)


state 109

    (35) impresion -> ALERT LPAREN expression RPAREN . COLON

    COLON           shift and go to state 158


state 110

    (37) impresion_vacio -> ALERT LPAREN RPAREN COLON .

    $end            reduce using rule 37 (impresion_vacio -> ALERT LPAREN RPAREN COLON .)
    RBLOCK          reduce using rule 37 (impresion_vacio -> ALERT LPAREN RPAREN COLON .)
    RETURN          reduce using rule 37 (impresion_vacio -> ALERT LPAREN RPAREN COLON .)


state 111

    (132) conditionalEspecifico -> ID opConditional . dataCondi
    (135) dataCondi -> . STRING
    (136) dataCondi -> . NUM

    STRING          shift and go to state 160
    NUM             shift and go to state 161

    dataCondi                      shift and go to state 159

state 112

    (16) opConditional -> ISEQUAL .

    STRING          reduce using rule 16 (opConditional -> ISEQUAL .)
    NUM             reduce using rule 16 (opConditional -> ISEQUAL .)


state 113

    (17) opConditional -> IS_NOT_IDENTICAL .

    STRING          reduce using rule 17 (opConditional -> IS_NOT_IDENTICAL .)
    NUM             reduce using rule 17 (opConditional -> IS_NOT_IDENTICAL .)


state 114

    (18) opConditional -> IS_IDENTICAL .

    STRING          reduce using rule 18 (opConditional -> IS_IDENTICAL .)
    NUM             reduce using rule 18 (opConditional -> IS_IDENTICAL .)


state 115

    (19) opConditional -> GREATER .

    STRING          reduce using rule 19 (opConditional -> GREATER .)
    NUM             reduce using rule 19 (opConditional -> GREATER .)


state 116

    (20) opConditional -> GREATEREQUAL .

    STRING          reduce using rule 20 (opConditional -> GREATEREQUAL .)
    NUM             reduce using rule 20 (opConditional -> GREATEREQUAL .)


state 117

    (21) opConditional -> LESS .

    STRING          reduce using rule 21 (opConditional -> LESS .)
    NUM             reduce using rule 21 (opConditional -> LESS .)


state 118

    (22) opConditional -> LESSEQUAL .

    STRING          reduce using rule 22 (opConditional -> LESSEQUAL .)
    NUM             reduce using rule 22 (opConditional -> LESSEQUAL .)


state 119

    (23) opConditional -> boolean .

    STRING          reduce using rule 23 (opConditional -> boolean .)
    NUM             reduce using rule 23 (opConditional -> boolean .)


state 120

    (133) conditionalEspecifico -> NUM opConditional . NUM

    NUM             shift and go to state 162


state 121

    (134) conditionalEspecifico -> STRING opConditional . STRING

    STRING          shift and go to state 163


state 122

    (98) inicializarOp -> PLUS operacionesMath .

    RPAREN          reduce using rule 98 (inicializarOp -> PLUS operacionesMath .)
    AND             reduce using rule 98 (inicializarOp -> PLUS operacionesMath .)
    OR              reduce using rule 98 (inicializarOp -> PLUS operacionesMath .)
    NOT             reduce using rule 98 (inicializarOp -> PLUS operacionesMath .)
    $end            reduce using rule 98 (inicializarOp -> PLUS operacionesMath .)
    RBLOCK          reduce using rule 98 (inicializarOp -> PLUS operacionesMath .)
    RETURN          reduce using rule 98 (inicializarOp -> PLUS operacionesMath .)


state 123

    (129) numNegative -> MINUS . NUM

    NUM             shift and go to state 164


state 124

    (127) enteros -> NUM .

    PERIOD          reduce using rule 127 (enteros -> NUM .)
    PLUS            reduce using rule 127 (enteros -> NUM .)
    MINUS           reduce using rule 127 (enteros -> NUM .)
    TIMES           reduce using rule 127 (enteros -> NUM .)
    DIVIDE          reduce using rule 127 (enteros -> NUM .)
    NUM             reduce using rule 127 (enteros -> NUM .)
    RPAREN          reduce using rule 127 (enteros -> NUM .)
    AND             reduce using rule 127 (enteros -> NUM .)
    OR              reduce using rule 127 (enteros -> NUM .)
    NOT             reduce using rule 127 (enteros -> NUM .)
    $end            reduce using rule 127 (enteros -> NUM .)
    RBLOCK          reduce using rule 127 (enteros -> NUM .)
    RETURN          reduce using rule 127 (enteros -> NUM .)


state 125

    (99) inicializarOp -> MINUS operacionesMath .

    RPAREN          reduce using rule 99 (inicializarOp -> MINUS operacionesMath .)
    AND             reduce using rule 99 (inicializarOp -> MINUS operacionesMath .)
    OR              reduce using rule 99 (inicializarOp -> MINUS operacionesMath .)
    NOT             reduce using rule 99 (inicializarOp -> MINUS operacionesMath .)
    $end            reduce using rule 99 (inicializarOp -> MINUS operacionesMath .)
    RBLOCK          reduce using rule 99 (inicializarOp -> MINUS operacionesMath .)
    RETURN          reduce using rule 99 (inicializarOp -> MINUS operacionesMath .)


state 126

    (129) numNegative -> MINUS NUM .
    (127) enteros -> NUM .

  ! reduce/reduce conflict for PERIOD resolved using rule 127 (enteros -> NUM .)
  ! reduce/reduce conflict for PLUS resolved using rule 127 (enteros -> NUM .)
  ! reduce/reduce conflict for MINUS resolved using rule 127 (enteros -> NUM .)
  ! reduce/reduce conflict for TIMES resolved using rule 127 (enteros -> NUM .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 127 (enteros -> NUM .)
  ! reduce/reduce conflict for NUM resolved using rule 127 (enteros -> NUM .)
  ! reduce/reduce conflict for RPAREN resolved using rule 127 (enteros -> NUM .)
  ! reduce/reduce conflict for AND resolved using rule 127 (enteros -> NUM .)
  ! reduce/reduce conflict for OR resolved using rule 127 (enteros -> NUM .)
  ! reduce/reduce conflict for NOT resolved using rule 127 (enteros -> NUM .)
  ! reduce/reduce conflict for $end resolved using rule 127 (enteros -> NUM .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 127 (enteros -> NUM .)
  ! reduce/reduce conflict for RETURN resolved using rule 127 (enteros -> NUM .)
    PERIOD          reduce using rule 127 (enteros -> NUM .)
    PLUS            reduce using rule 127 (enteros -> NUM .)
    MINUS           reduce using rule 127 (enteros -> NUM .)
    TIMES           reduce using rule 127 (enteros -> NUM .)
    DIVIDE          reduce using rule 127 (enteros -> NUM .)
    NUM             reduce using rule 127 (enteros -> NUM .)
    RPAREN          reduce using rule 127 (enteros -> NUM .)
    AND             reduce using rule 127 (enteros -> NUM .)
    OR              reduce using rule 127 (enteros -> NUM .)
    NOT             reduce using rule 127 (enteros -> NUM .)
    $end            reduce using rule 127 (enteros -> NUM .)
    RBLOCK          reduce using rule 127 (enteros -> NUM .)
    RETURN          reduce using rule 127 (enteros -> NUM .)

  ! PERIOD          [ reduce using rule 129 (numNegative -> MINUS NUM .) ]
  ! PLUS            [ reduce using rule 129 (numNegative -> MINUS NUM .) ]
  ! MINUS           [ reduce using rule 129 (numNegative -> MINUS NUM .) ]
  ! TIMES           [ reduce using rule 129 (numNegative -> MINUS NUM .) ]
  ! DIVIDE          [ reduce using rule 129 (numNegative -> MINUS NUM .) ]
  ! NUM             [ reduce using rule 129 (numNegative -> MINUS NUM .) ]
  ! RPAREN          [ reduce using rule 129 (numNegative -> MINUS NUM .) ]
  ! AND             [ reduce using rule 129 (numNegative -> MINUS NUM .) ]
  ! OR              [ reduce using rule 129 (numNegative -> MINUS NUM .) ]
  ! NOT             [ reduce using rule 129 (numNegative -> MINUS NUM .) ]
  ! $end            [ reduce using rule 129 (numNegative -> MINUS NUM .) ]
  ! RBLOCK          [ reduce using rule 129 (numNegative -> MINUS NUM .) ]
  ! RETURN          [ reduce using rule 129 (numNegative -> MINUS NUM .) ]


state 127

    (101) operacionesMath -> numOperadores PLUS . suma
    (113) suma -> numOperadores PLUS . LPAREN numOperadores RPAREN
    (114) suma -> numOperadores PLUS . NUM
    (113) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (114) suma -> . numOperadores PLUS NUM
    (115) suma -> . numOperadores
    (125) numOperadores -> . enteros
    (126) numOperadores -> . decimales
    (127) enteros -> . NUM
    (128) enteros -> . numNegative
    (131) decimales -> . enteros PERIOD NUM
    (129) numNegative -> . MINUS NUM
    (130) numNegative -> .

    LPAREN          shift and go to state 167
    NUM             shift and go to state 168
    MINUS           shift and go to state 123
    PERIOD          reduce using rule 130 (numNegative -> .)
    PLUS            reduce using rule 130 (numNegative -> .)
    RPAREN          reduce using rule 130 (numNegative -> .)
    AND             reduce using rule 130 (numNegative -> .)
    OR              reduce using rule 130 (numNegative -> .)
    NOT             reduce using rule 130 (numNegative -> .)
    $end            reduce using rule 130 (numNegative -> .)
    RBLOCK          reduce using rule 130 (numNegative -> .)
    RETURN          reduce using rule 130 (numNegative -> .)

    numOperadores                  shift and go to state 165
    suma                           shift and go to state 166
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 128

    (105) operacionesMath -> numOperadores MINUS . restas
    (116) restas -> numOperadores MINUS . LPAREN numOperadores RPAREN
    (117) restas -> numOperadores MINUS . NUM
    (116) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (117) restas -> . numOperadores MINUS NUM
    (118) restas -> . numOperadores
    (125) numOperadores -> . enteros
    (126) numOperadores -> . decimales
    (127) enteros -> . NUM
    (128) enteros -> . numNegative
    (131) decimales -> . enteros PERIOD NUM
    (129) numNegative -> . MINUS NUM
    (130) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
    LPAREN          shift and go to state 171
    NUM             shift and go to state 172
    MINUS           shift and go to state 123
    PERIOD          reduce using rule 130 (numNegative -> .)
    RPAREN          reduce using rule 130 (numNegative -> .)
    AND             reduce using rule 130 (numNegative -> .)
    OR              reduce using rule 130 (numNegative -> .)
    NOT             reduce using rule 130 (numNegative -> .)
    $end            reduce using rule 130 (numNegative -> .)
    RBLOCK          reduce using rule 130 (numNegative -> .)
    RETURN          reduce using rule 130 (numNegative -> .)

  ! MINUS           [ reduce using rule 130 (numNegative -> .) ]

    numOperadores                  shift and go to state 169
    restas                         shift and go to state 170
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 129

    (108) operacionesMath -> numOperadores TIMES . multiplicacion
    (119) multiplicacion -> numOperadores TIMES . LPAREN numOperadores RPAREN
    (120) multiplicacion -> numOperadores TIMES . NUM
    (119) multiplicacion -> . numOperadores TIMES LPAREN numOperadores RPAREN
    (120) multiplicacion -> . numOperadores TIMES NUM
    (121) multiplicacion -> . numOperadores
    (125) numOperadores -> . enteros
    (126) numOperadores -> . decimales
    (127) enteros -> . NUM
    (128) enteros -> . numNegative
    (131) decimales -> . enteros PERIOD NUM
    (129) numNegative -> . MINUS NUM
    (130) numNegative -> .

    LPAREN          shift and go to state 175
    NUM             shift and go to state 176
    MINUS           shift and go to state 123
    PERIOD          reduce using rule 130 (numNegative -> .)
    TIMES           reduce using rule 130 (numNegative -> .)
    RPAREN          reduce using rule 130 (numNegative -> .)
    AND             reduce using rule 130 (numNegative -> .)
    OR              reduce using rule 130 (numNegative -> .)
    NOT             reduce using rule 130 (numNegative -> .)
    $end            reduce using rule 130 (numNegative -> .)
    RBLOCK          reduce using rule 130 (numNegative -> .)
    RETURN          reduce using rule 130 (numNegative -> .)

    numOperadores                  shift and go to state 173
    multiplicacion                 shift and go to state 174
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 130

    (111) operacionesMath -> numOperadores DIVIDE . divicion
    (122) divicion -> numOperadores DIVIDE . LPAREN numOperadores RPAREN
    (123) divicion -> numOperadores DIVIDE . NUM
    (122) divicion -> . numOperadores DIVIDE LPAREN numOperadores RPAREN
    (123) divicion -> . numOperadores DIVIDE NUM
    (124) divicion -> . numOperadores
    (125) numOperadores -> . enteros
    (126) numOperadores -> . decimales
    (127) enteros -> . NUM
    (128) enteros -> . numNegative
    (131) decimales -> . enteros PERIOD NUM
    (129) numNegative -> . MINUS NUM
    (130) numNegative -> .

    LPAREN          shift and go to state 179
    NUM             shift and go to state 180
    MINUS           shift and go to state 123
    PERIOD          reduce using rule 130 (numNegative -> .)
    DIVIDE          reduce using rule 130 (numNegative -> .)
    RPAREN          reduce using rule 130 (numNegative -> .)
    AND             reduce using rule 130 (numNegative -> .)
    OR              reduce using rule 130 (numNegative -> .)
    NOT             reduce using rule 130 (numNegative -> .)
    $end            reduce using rule 130 (numNegative -> .)
    RBLOCK          reduce using rule 130 (numNegative -> .)
    RETURN          reduce using rule 130 (numNegative -> .)

    numOperadores                  shift and go to state 177
    divicion                       shift and go to state 178
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 131

    (103) operacionesMath -> suma operacionesMath .

    RPAREN          reduce using rule 103 (operacionesMath -> suma operacionesMath .)
    AND             reduce using rule 103 (operacionesMath -> suma operacionesMath .)
    OR              reduce using rule 103 (operacionesMath -> suma operacionesMath .)
    NOT             reduce using rule 103 (operacionesMath -> suma operacionesMath .)
    $end            reduce using rule 103 (operacionesMath -> suma operacionesMath .)
    RBLOCK          reduce using rule 103 (operacionesMath -> suma operacionesMath .)
    RETURN          reduce using rule 103 (operacionesMath -> suma operacionesMath .)


state 132

    (106) operacionesMath -> restas operacionesMath .

    RPAREN          reduce using rule 106 (operacionesMath -> restas operacionesMath .)
    AND             reduce using rule 106 (operacionesMath -> restas operacionesMath .)
    OR              reduce using rule 106 (operacionesMath -> restas operacionesMath .)
    NOT             reduce using rule 106 (operacionesMath -> restas operacionesMath .)
    $end            reduce using rule 106 (operacionesMath -> restas operacionesMath .)
    RBLOCK          reduce using rule 106 (operacionesMath -> restas operacionesMath .)
    RETURN          reduce using rule 106 (operacionesMath -> restas operacionesMath .)


state 133

    (109) operacionesMath -> multiplicacion operacionesMath .

    RPAREN          reduce using rule 109 (operacionesMath -> multiplicacion operacionesMath .)
    AND             reduce using rule 109 (operacionesMath -> multiplicacion operacionesMath .)
    OR              reduce using rule 109 (operacionesMath -> multiplicacion operacionesMath .)
    NOT             reduce using rule 109 (operacionesMath -> multiplicacion operacionesMath .)
    $end            reduce using rule 109 (operacionesMath -> multiplicacion operacionesMath .)
    RBLOCK          reduce using rule 109 (operacionesMath -> multiplicacion operacionesMath .)
    RETURN          reduce using rule 109 (operacionesMath -> multiplicacion operacionesMath .)


state 134

    (112) operacionesMath -> divicion operacionesMath .

    RPAREN          reduce using rule 112 (operacionesMath -> divicion operacionesMath .)
    AND             reduce using rule 112 (operacionesMath -> divicion operacionesMath .)
    OR              reduce using rule 112 (operacionesMath -> divicion operacionesMath .)
    NOT             reduce using rule 112 (operacionesMath -> divicion operacionesMath .)
    $end            reduce using rule 112 (operacionesMath -> divicion operacionesMath .)
    RBLOCK          reduce using rule 112 (operacionesMath -> divicion operacionesMath .)
    RETURN          reduce using rule 112 (operacionesMath -> divicion operacionesMath .)


state 135

    (131) decimales -> enteros PERIOD . NUM

    NUM             shift and go to state 181


state 136

    (80) declareteFunction -> FUNCTION ID LPAREN params . RPAREN
    (81) declareteFunction -> FUNCTION ID LPAREN params . RPAREN sentencesCmpt

    RPAREN          shift and go to state 182


state 137

    (27) sentencias_if -> IF LPAREN expression operadorLogical . expression RPAREN cuerpo_de_sentencias
    (29) sentencias_if_else -> IF LPAREN expression operadorLogical . expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias
    (8) expression -> . conditionalEspecifico
    (9) expression -> . inicializarOp
    (132) conditionalEspecifico -> . ID opConditional dataCondi
    (133) conditionalEspecifico -> . NUM opConditional NUM
    (134) conditionalEspecifico -> . STRING opConditional STRING
    (98) inicializarOp -> . PLUS operacionesMath
    (99) inicializarOp -> . MINUS operacionesMath
    (100) inicializarOp -> . operacionesMath
    (101) operacionesMath -> . numOperadores PLUS suma
    (102) operacionesMath -> . suma
    (103) operacionesMath -> . suma operacionesMath
    (104) operacionesMath -> . restas
    (105) operacionesMath -> . numOperadores MINUS restas
    (106) operacionesMath -> . restas operacionesMath
    (107) operacionesMath -> . multiplicacion
    (108) operacionesMath -> . numOperadores TIMES multiplicacion
    (109) operacionesMath -> . multiplicacion operacionesMath
    (110) operacionesMath -> . divicion
    (111) operacionesMath -> . numOperadores DIVIDE divicion
    (112) operacionesMath -> . divicion operacionesMath
    (125) numOperadores -> . enteros
    (126) numOperadores -> . decimales
    (113) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (114) suma -> . numOperadores PLUS NUM
    (115) suma -> . numOperadores
    (116) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (117) restas -> . numOperadores MINUS NUM
    (118) restas -> . numOperadores
    (119) multiplicacion -> . numOperadores TIMES LPAREN numOperadores RPAREN
    (120) multiplicacion -> . numOperadores TIMES NUM
    (121) multiplicacion -> . numOperadores
    (122) divicion -> . numOperadores DIVIDE LPAREN numOperadores RPAREN
    (123) divicion -> . numOperadores DIVIDE NUM
    (124) divicion -> . numOperadores
    (127) enteros -> . NUM
    (128) enteros -> . numNegative
    (131) decimales -> . enteros PERIOD NUM
    (129) numNegative -> . MINUS NUM
    (130) numNegative -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
    ID              shift and go to state 70
    NUM             shift and go to state 71
    STRING          shift and go to state 72
    PLUS            shift and go to state 73
    MINUS           shift and go to state 75
    PERIOD          reduce using rule 130 (numNegative -> .)
    TIMES           reduce using rule 130 (numNegative -> .)
    DIVIDE          reduce using rule 130 (numNegative -> .)
    RPAREN          reduce using rule 130 (numNegative -> .)

  ! PLUS            [ reduce using rule 130 (numNegative -> .) ]
  ! MINUS           [ reduce using rule 130 (numNegative -> .) ]
  ! NUM             [ reduce using rule 130 (numNegative -> .) ]

    expression                     shift and go to state 183
    conditionalEspecifico          shift and go to state 68
    inicializarOp                  shift and go to state 69
    operacionesMath                shift and go to state 74
    numOperadores                  shift and go to state 76
    suma                           shift and go to state 77
    restas                         shift and go to state 78
    multiplicacion                 shift and go to state 79
    divicion                       shift and go to state 80
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 138

    (28) sentencias_if -> IF LPAREN expression RPAREN . cuerpo_de_sentencias
    (30) sentencias_if_else -> IF LPAREN expression RPAREN . cuerpo_de_sentencias ELSE cuerpo_de_sentencias
    (31) cuerpo_de_sentencias -> . LBLOCK sentencia RBLOCK
    (32) cuerpo_de_sentencias -> . LBLOCK RBLOCK

    LBLOCK          shift and go to state 185

    cuerpo_de_sentencias           shift and go to state 184

state 139

    (24) operadorLogical -> AND .

    ID              reduce using rule 24 (operadorLogical -> AND .)
    NUM             reduce using rule 24 (operadorLogical -> AND .)
    STRING          reduce using rule 24 (operadorLogical -> AND .)
    PLUS            reduce using rule 24 (operadorLogical -> AND .)
    MINUS           reduce using rule 24 (operadorLogical -> AND .)
    RPAREN          reduce using rule 24 (operadorLogical -> AND .)
    TIMES           reduce using rule 24 (operadorLogical -> AND .)
    DIVIDE          reduce using rule 24 (operadorLogical -> AND .)
    PERIOD          reduce using rule 24 (operadorLogical -> AND .)


state 140

    (25) operadorLogical -> OR .

    ID              reduce using rule 25 (operadorLogical -> OR .)
    NUM             reduce using rule 25 (operadorLogical -> OR .)
    STRING          reduce using rule 25 (operadorLogical -> OR .)
    PLUS            reduce using rule 25 (operadorLogical -> OR .)
    MINUS           reduce using rule 25 (operadorLogical -> OR .)
    RPAREN          reduce using rule 25 (operadorLogical -> OR .)
    TIMES           reduce using rule 25 (operadorLogical -> OR .)
    DIVIDE          reduce using rule 25 (operadorLogical -> OR .)
    PERIOD          reduce using rule 25 (operadorLogical -> OR .)


state 141

    (26) operadorLogical -> NOT .

    ID              reduce using rule 26 (operadorLogical -> NOT .)
    NUM             reduce using rule 26 (operadorLogical -> NOT .)
    STRING          reduce using rule 26 (operadorLogical -> NOT .)
    PLUS            reduce using rule 26 (operadorLogical -> NOT .)
    MINUS           reduce using rule 26 (operadorLogical -> NOT .)
    RPAREN          reduce using rule 26 (operadorLogical -> NOT .)
    TIMES           reduce using rule 26 (operadorLogical -> NOT .)
    DIVIDE          reduce using rule 26 (operadorLogical -> NOT .)
    PERIOD          reduce using rule 26 (operadorLogical -> NOT .)


state 142

    (33) sentencias_while -> WHILE LPAREN expression RPAREN . cuerpo_de_sentencias
    (31) cuerpo_de_sentencias -> . LBLOCK sentencia RBLOCK
    (32) cuerpo_de_sentencias -> . LBLOCK RBLOCK

    LBLOCK          shift and go to state 185

    cuerpo_de_sentencias           shift and go to state 186

state 143

    (34) sentencias_while -> WHILE LPAREN expression operadorLogical . expression RPAREN cuerpo_de_sentencias
    (8) expression -> . conditionalEspecifico
    (9) expression -> . inicializarOp
    (132) conditionalEspecifico -> . ID opConditional dataCondi
    (133) conditionalEspecifico -> . NUM opConditional NUM
    (134) conditionalEspecifico -> . STRING opConditional STRING
    (98) inicializarOp -> . PLUS operacionesMath
    (99) inicializarOp -> . MINUS operacionesMath
    (100) inicializarOp -> . operacionesMath
    (101) operacionesMath -> . numOperadores PLUS suma
    (102) operacionesMath -> . suma
    (103) operacionesMath -> . suma operacionesMath
    (104) operacionesMath -> . restas
    (105) operacionesMath -> . numOperadores MINUS restas
    (106) operacionesMath -> . restas operacionesMath
    (107) operacionesMath -> . multiplicacion
    (108) operacionesMath -> . numOperadores TIMES multiplicacion
    (109) operacionesMath -> . multiplicacion operacionesMath
    (110) operacionesMath -> . divicion
    (111) operacionesMath -> . numOperadores DIVIDE divicion
    (112) operacionesMath -> . divicion operacionesMath
    (125) numOperadores -> . enteros
    (126) numOperadores -> . decimales
    (113) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (114) suma -> . numOperadores PLUS NUM
    (115) suma -> . numOperadores
    (116) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (117) restas -> . numOperadores MINUS NUM
    (118) restas -> . numOperadores
    (119) multiplicacion -> . numOperadores TIMES LPAREN numOperadores RPAREN
    (120) multiplicacion -> . numOperadores TIMES NUM
    (121) multiplicacion -> . numOperadores
    (122) divicion -> . numOperadores DIVIDE LPAREN numOperadores RPAREN
    (123) divicion -> . numOperadores DIVIDE NUM
    (124) divicion -> . numOperadores
    (127) enteros -> . NUM
    (128) enteros -> . numNegative
    (131) decimales -> . enteros PERIOD NUM
    (129) numNegative -> . MINUS NUM
    (130) numNegative -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
    ID              shift and go to state 70
    NUM             shift and go to state 71
    STRING          shift and go to state 72
    PLUS            shift and go to state 73
    MINUS           shift and go to state 75
    PERIOD          reduce using rule 130 (numNegative -> .)
    TIMES           reduce using rule 130 (numNegative -> .)
    DIVIDE          reduce using rule 130 (numNegative -> .)
    RPAREN          reduce using rule 130 (numNegative -> .)

  ! PLUS            [ reduce using rule 130 (numNegative -> .) ]
  ! MINUS           [ reduce using rule 130 (numNegative -> .) ]
  ! NUM             [ reduce using rule 130 (numNegative -> .) ]

    expression                     shift and go to state 187
    conditionalEspecifico          shift and go to state 68
    inicializarOp                  shift and go to state 69
    operacionesMath                shift and go to state 74
    numOperadores                  shift and go to state 76
    suma                           shift and go to state 77
    restas                         shift and go to state 78
    multiplicacion                 shift and go to state 79
    divicion                       shift and go to state 80
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 144

    (88) paramList -> javaScript_param COMMA paramList .

    RPAREN          reduce using rule 88 (paramList -> javaScript_param COMMA paramList .)


state 145

    (59) arrayDeclare -> LBRACKET arrayValues RBRACKET .

    COLON           reduce using rule 59 (arrayDeclare -> LBRACKET arrayValues RBRACKET .)
    COMMA           reduce using rule 59 (arrayDeclare -> LBRACKET arrayValues RBRACKET .)
    RBRACKET        reduce using rule 59 (arrayDeclare -> LBRACKET arrayValues RBRACKET .)


state 146

    (63) arrayValues -> javaScript_param COMMA . arrayValues
    (62) arrayValues -> . javaScript_param
    (63) arrayValues -> . javaScript_param COMMA arrayValues
    (38) javaScript_param -> . STRING
    (39) javaScript_param -> . NUM
    (40) javaScript_param -> . boolean
    (41) javaScript_param -> . ID
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE

    STRING          shift and go to state 45
    NUM             shift and go to state 46
    ID              shift and go to state 41
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    javaScript_param               shift and go to state 95
    arrayValues                    shift and go to state 188
    boolean                        shift and go to state 47

state 147

    (60) arrayDeclare -> NEW ARRAY LPAREN . arrayValues RPAREN
    (61) arrayDeclare -> NEW ARRAY LPAREN . RPAREN
    (62) arrayValues -> . javaScript_param
    (63) arrayValues -> . javaScript_param COMMA arrayValues
    (38) javaScript_param -> . STRING
    (39) javaScript_param -> . NUM
    (40) javaScript_param -> . boolean
    (41) javaScript_param -> . ID
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE

    RPAREN          shift and go to state 190
    STRING          shift and go to state 45
    NUM             shift and go to state 46
    ID              shift and go to state 41
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    arrayValues                    shift and go to state 189
    javaScript_param               shift and go to state 95
    boolean                        shift and go to state 47

state 148

    (67) declareMap -> NEW MAP LPAREN . LBRACKET iterableMap RBRACKET RPAREN
    (68) declareMap -> NEW MAP LPAREN . RPAREN

    LBRACKET        shift and go to state 191
    RPAREN          shift and go to state 192


state 149

    (93) declararSet -> NEW SET LPAREN . RPAREN
    (94) declararSet -> NEW SET LPAREN . LBRACKET iterableSet RBRACKET RPAREN

    RPAREN          shift and go to state 193
    LBRACKET        shift and go to state 194


state 150

    (64) methodArray -> PERIOD PUSH LPAREN javaScript_param . RPAREN

    RPAREN          shift and go to state 195


state 151

    (65) methodArray -> PERIOD UNSHIFT LPAREN arrayValues . RPAREN

    RPAREN          shift and go to state 196


state 152

    (66) methodArray -> PERIOD POP LPAREN RPAREN .

    COLON           reduce using rule 66 (methodArray -> PERIOD POP LPAREN RPAREN .)


state 153

    (95) methodSet -> PERIOD ADD LPAREN javaScript_param . RPAREN

    RPAREN          shift and go to state 197


state 154

    (96) methodSet -> PERIOD DELETE LPAREN javaScript_param . RPAREN

    RPAREN          shift and go to state 198


state 155

    (97) methodSet -> PERIOD CLEAR LPAREN RPAREN .
    (78) methodMap -> PERIOD CLEAR LPAREN RPAREN .

  ! reduce/reduce conflict for COLON resolved using rule 78 (methodMap -> PERIOD CLEAR LPAREN RPAREN .)
    COLON           reduce using rule 78 (methodMap -> PERIOD CLEAR LPAREN RPAREN .)

  ! COLON           [ reduce using rule 97 (methodSet -> PERIOD CLEAR LPAREN RPAREN .) ]


state 156

    (79) methodMap -> PERIOD LENGTH LPAREN RPAREN .

    COLON           reduce using rule 79 (methodMap -> PERIOD LENGTH LPAREN RPAREN .)


state 157

    (82) declareteFunction -> varType ID EQUAL FUNCTION LPAREN . params RPAREN
    (86) params -> . paramList
    (87) paramList -> . javaScript_param
    (88) paramList -> . javaScript_param COMMA paramList
    (38) javaScript_param -> . STRING
    (39) javaScript_param -> . NUM
    (40) javaScript_param -> . boolean
    (41) javaScript_param -> . ID
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE

    STRING          shift and go to state 45
    NUM             shift and go to state 46
    ID              shift and go to state 41
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    params                         shift and go to state 199
    paramList                      shift and go to state 43
    javaScript_param               shift and go to state 44
    boolean                        shift and go to state 47

state 158

    (35) impresion -> ALERT LPAREN expression RPAREN COLON .

    $end            reduce using rule 35 (impresion -> ALERT LPAREN expression RPAREN COLON .)
    RBLOCK          reduce using rule 35 (impresion -> ALERT LPAREN expression RPAREN COLON .)
    RETURN          reduce using rule 35 (impresion -> ALERT LPAREN expression RPAREN COLON .)


state 159

    (132) conditionalEspecifico -> ID opConditional dataCondi .

    RPAREN          reduce using rule 132 (conditionalEspecifico -> ID opConditional dataCondi .)
    AND             reduce using rule 132 (conditionalEspecifico -> ID opConditional dataCondi .)
    OR              reduce using rule 132 (conditionalEspecifico -> ID opConditional dataCondi .)
    NOT             reduce using rule 132 (conditionalEspecifico -> ID opConditional dataCondi .)


state 160

    (135) dataCondi -> STRING .

    RPAREN          reduce using rule 135 (dataCondi -> STRING .)
    AND             reduce using rule 135 (dataCondi -> STRING .)
    OR              reduce using rule 135 (dataCondi -> STRING .)
    NOT             reduce using rule 135 (dataCondi -> STRING .)


state 161

    (136) dataCondi -> NUM .

    RPAREN          reduce using rule 136 (dataCondi -> NUM .)
    AND             reduce using rule 136 (dataCondi -> NUM .)
    OR              reduce using rule 136 (dataCondi -> NUM .)
    NOT             reduce using rule 136 (dataCondi -> NUM .)


state 162

    (133) conditionalEspecifico -> NUM opConditional NUM .

    RPAREN          reduce using rule 133 (conditionalEspecifico -> NUM opConditional NUM .)
    AND             reduce using rule 133 (conditionalEspecifico -> NUM opConditional NUM .)
    OR              reduce using rule 133 (conditionalEspecifico -> NUM opConditional NUM .)
    NOT             reduce using rule 133 (conditionalEspecifico -> NUM opConditional NUM .)


state 163

    (134) conditionalEspecifico -> STRING opConditional STRING .

    RPAREN          reduce using rule 134 (conditionalEspecifico -> STRING opConditional STRING .)
    AND             reduce using rule 134 (conditionalEspecifico -> STRING opConditional STRING .)
    OR              reduce using rule 134 (conditionalEspecifico -> STRING opConditional STRING .)
    NOT             reduce using rule 134 (conditionalEspecifico -> STRING opConditional STRING .)


state 164

    (129) numNegative -> MINUS NUM .

    PERIOD          reduce using rule 129 (numNegative -> MINUS NUM .)
    PLUS            reduce using rule 129 (numNegative -> MINUS NUM .)
    MINUS           reduce using rule 129 (numNegative -> MINUS NUM .)
    TIMES           reduce using rule 129 (numNegative -> MINUS NUM .)
    DIVIDE          reduce using rule 129 (numNegative -> MINUS NUM .)
    NUM             reduce using rule 129 (numNegative -> MINUS NUM .)
    RPAREN          reduce using rule 129 (numNegative -> MINUS NUM .)
    AND             reduce using rule 129 (numNegative -> MINUS NUM .)
    OR              reduce using rule 129 (numNegative -> MINUS NUM .)
    NOT             reduce using rule 129 (numNegative -> MINUS NUM .)
    $end            reduce using rule 129 (numNegative -> MINUS NUM .)
    RBLOCK          reduce using rule 129 (numNegative -> MINUS NUM .)
    RETURN          reduce using rule 129 (numNegative -> MINUS NUM .)


state 165

    (113) suma -> numOperadores . PLUS LPAREN numOperadores RPAREN
    (114) suma -> numOperadores . PLUS NUM
    (115) suma -> numOperadores .

    PLUS            shift and go to state 200
    RPAREN          reduce using rule 115 (suma -> numOperadores .)
    AND             reduce using rule 115 (suma -> numOperadores .)
    OR              reduce using rule 115 (suma -> numOperadores .)
    NOT             reduce using rule 115 (suma -> numOperadores .)
    $end            reduce using rule 115 (suma -> numOperadores .)
    RBLOCK          reduce using rule 115 (suma -> numOperadores .)
    RETURN          reduce using rule 115 (suma -> numOperadores .)


state 166

    (101) operacionesMath -> numOperadores PLUS suma .

    RPAREN          reduce using rule 101 (operacionesMath -> numOperadores PLUS suma .)
    AND             reduce using rule 101 (operacionesMath -> numOperadores PLUS suma .)
    OR              reduce using rule 101 (operacionesMath -> numOperadores PLUS suma .)
    NOT             reduce using rule 101 (operacionesMath -> numOperadores PLUS suma .)
    $end            reduce using rule 101 (operacionesMath -> numOperadores PLUS suma .)
    RBLOCK          reduce using rule 101 (operacionesMath -> numOperadores PLUS suma .)
    RETURN          reduce using rule 101 (operacionesMath -> numOperadores PLUS suma .)


state 167

    (113) suma -> numOperadores PLUS LPAREN . numOperadores RPAREN
    (125) numOperadores -> . enteros
    (126) numOperadores -> . decimales
    (127) enteros -> . NUM
    (128) enteros -> . numNegative
    (131) decimales -> . enteros PERIOD NUM
    (129) numNegative -> . MINUS NUM
    (130) numNegative -> .

    NUM             shift and go to state 124
    MINUS           shift and go to state 123
    PERIOD          reduce using rule 130 (numNegative -> .)
    RPAREN          reduce using rule 130 (numNegative -> .)

    numOperadores                  shift and go to state 201
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 168

    (114) suma -> numOperadores PLUS NUM .
    (127) enteros -> NUM .

  ! reduce/reduce conflict for PERIOD resolved using rule 114 (suma -> numOperadores PLUS NUM .)
  ! reduce/reduce conflict for PLUS resolved using rule 114 (suma -> numOperadores PLUS NUM .)
  ! reduce/reduce conflict for RPAREN resolved using rule 114 (suma -> numOperadores PLUS NUM .)
  ! reduce/reduce conflict for AND resolved using rule 114 (suma -> numOperadores PLUS NUM .)
  ! reduce/reduce conflict for OR resolved using rule 114 (suma -> numOperadores PLUS NUM .)
  ! reduce/reduce conflict for NOT resolved using rule 114 (suma -> numOperadores PLUS NUM .)
  ! reduce/reduce conflict for $end resolved using rule 114 (suma -> numOperadores PLUS NUM .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 114 (suma -> numOperadores PLUS NUM .)
  ! reduce/reduce conflict for RETURN resolved using rule 114 (suma -> numOperadores PLUS NUM .)
    NUM             reduce using rule 114 (suma -> numOperadores PLUS NUM .)
    MINUS           reduce using rule 114 (suma -> numOperadores PLUS NUM .)
    PLUS            reduce using rule 114 (suma -> numOperadores PLUS NUM .)
    TIMES           reduce using rule 114 (suma -> numOperadores PLUS NUM .)
    DIVIDE          reduce using rule 114 (suma -> numOperadores PLUS NUM .)
    PERIOD          reduce using rule 114 (suma -> numOperadores PLUS NUM .)
    RPAREN          reduce using rule 114 (suma -> numOperadores PLUS NUM .)
    AND             reduce using rule 114 (suma -> numOperadores PLUS NUM .)
    OR              reduce using rule 114 (suma -> numOperadores PLUS NUM .)
    NOT             reduce using rule 114 (suma -> numOperadores PLUS NUM .)
    $end            reduce using rule 114 (suma -> numOperadores PLUS NUM .)
    RBLOCK          reduce using rule 114 (suma -> numOperadores PLUS NUM .)
    RETURN          reduce using rule 114 (suma -> numOperadores PLUS NUM .)

  ! PERIOD          [ reduce using rule 127 (enteros -> NUM .) ]
  ! PLUS            [ reduce using rule 127 (enteros -> NUM .) ]
  ! RPAREN          [ reduce using rule 127 (enteros -> NUM .) ]
  ! AND             [ reduce using rule 127 (enteros -> NUM .) ]
  ! OR              [ reduce using rule 127 (enteros -> NUM .) ]
  ! NOT             [ reduce using rule 127 (enteros -> NUM .) ]
  ! $end            [ reduce using rule 127 (enteros -> NUM .) ]
  ! RBLOCK          [ reduce using rule 127 (enteros -> NUM .) ]
  ! RETURN          [ reduce using rule 127 (enteros -> NUM .) ]


state 169

    (116) restas -> numOperadores . MINUS LPAREN numOperadores RPAREN
    (117) restas -> numOperadores . MINUS NUM
    (118) restas -> numOperadores .

    MINUS           shift and go to state 202
    RPAREN          reduce using rule 118 (restas -> numOperadores .)
    AND             reduce using rule 118 (restas -> numOperadores .)
    OR              reduce using rule 118 (restas -> numOperadores .)
    NOT             reduce using rule 118 (restas -> numOperadores .)
    $end            reduce using rule 118 (restas -> numOperadores .)
    RBLOCK          reduce using rule 118 (restas -> numOperadores .)
    RETURN          reduce using rule 118 (restas -> numOperadores .)


state 170

    (105) operacionesMath -> numOperadores MINUS restas .

    RPAREN          reduce using rule 105 (operacionesMath -> numOperadores MINUS restas .)
    AND             reduce using rule 105 (operacionesMath -> numOperadores MINUS restas .)
    OR              reduce using rule 105 (operacionesMath -> numOperadores MINUS restas .)
    NOT             reduce using rule 105 (operacionesMath -> numOperadores MINUS restas .)
    $end            reduce using rule 105 (operacionesMath -> numOperadores MINUS restas .)
    RBLOCK          reduce using rule 105 (operacionesMath -> numOperadores MINUS restas .)
    RETURN          reduce using rule 105 (operacionesMath -> numOperadores MINUS restas .)


state 171

    (116) restas -> numOperadores MINUS LPAREN . numOperadores RPAREN
    (125) numOperadores -> . enteros
    (126) numOperadores -> . decimales
    (127) enteros -> . NUM
    (128) enteros -> . numNegative
    (131) decimales -> . enteros PERIOD NUM
    (129) numNegative -> . MINUS NUM
    (130) numNegative -> .

    NUM             shift and go to state 124
    MINUS           shift and go to state 123
    PERIOD          reduce using rule 130 (numNegative -> .)
    RPAREN          reduce using rule 130 (numNegative -> .)

    numOperadores                  shift and go to state 203
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 172

    (117) restas -> numOperadores MINUS NUM .
    (127) enteros -> NUM .

  ! reduce/reduce conflict for PERIOD resolved using rule 117 (restas -> numOperadores MINUS NUM .)
  ! reduce/reduce conflict for MINUS resolved using rule 117 (restas -> numOperadores MINUS NUM .)
  ! reduce/reduce conflict for RPAREN resolved using rule 117 (restas -> numOperadores MINUS NUM .)
  ! reduce/reduce conflict for AND resolved using rule 117 (restas -> numOperadores MINUS NUM .)
  ! reduce/reduce conflict for OR resolved using rule 117 (restas -> numOperadores MINUS NUM .)
  ! reduce/reduce conflict for NOT resolved using rule 117 (restas -> numOperadores MINUS NUM .)
  ! reduce/reduce conflict for $end resolved using rule 117 (restas -> numOperadores MINUS NUM .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 117 (restas -> numOperadores MINUS NUM .)
  ! reduce/reduce conflict for RETURN resolved using rule 117 (restas -> numOperadores MINUS NUM .)
    NUM             reduce using rule 117 (restas -> numOperadores MINUS NUM .)
    MINUS           reduce using rule 117 (restas -> numOperadores MINUS NUM .)
    PLUS            reduce using rule 117 (restas -> numOperadores MINUS NUM .)
    TIMES           reduce using rule 117 (restas -> numOperadores MINUS NUM .)
    DIVIDE          reduce using rule 117 (restas -> numOperadores MINUS NUM .)
    PERIOD          reduce using rule 117 (restas -> numOperadores MINUS NUM .)
    RPAREN          reduce using rule 117 (restas -> numOperadores MINUS NUM .)
    AND             reduce using rule 117 (restas -> numOperadores MINUS NUM .)
    OR              reduce using rule 117 (restas -> numOperadores MINUS NUM .)
    NOT             reduce using rule 117 (restas -> numOperadores MINUS NUM .)
    $end            reduce using rule 117 (restas -> numOperadores MINUS NUM .)
    RBLOCK          reduce using rule 117 (restas -> numOperadores MINUS NUM .)
    RETURN          reduce using rule 117 (restas -> numOperadores MINUS NUM .)

  ! PERIOD          [ reduce using rule 127 (enteros -> NUM .) ]
  ! MINUS           [ reduce using rule 127 (enteros -> NUM .) ]
  ! RPAREN          [ reduce using rule 127 (enteros -> NUM .) ]
  ! AND             [ reduce using rule 127 (enteros -> NUM .) ]
  ! OR              [ reduce using rule 127 (enteros -> NUM .) ]
  ! NOT             [ reduce using rule 127 (enteros -> NUM .) ]
  ! $end            [ reduce using rule 127 (enteros -> NUM .) ]
  ! RBLOCK          [ reduce using rule 127 (enteros -> NUM .) ]
  ! RETURN          [ reduce using rule 127 (enteros -> NUM .) ]


state 173

    (119) multiplicacion -> numOperadores . TIMES LPAREN numOperadores RPAREN
    (120) multiplicacion -> numOperadores . TIMES NUM
    (121) multiplicacion -> numOperadores .

    TIMES           shift and go to state 204
    RPAREN          reduce using rule 121 (multiplicacion -> numOperadores .)
    AND             reduce using rule 121 (multiplicacion -> numOperadores .)
    OR              reduce using rule 121 (multiplicacion -> numOperadores .)
    NOT             reduce using rule 121 (multiplicacion -> numOperadores .)
    $end            reduce using rule 121 (multiplicacion -> numOperadores .)
    RBLOCK          reduce using rule 121 (multiplicacion -> numOperadores .)
    RETURN          reduce using rule 121 (multiplicacion -> numOperadores .)


state 174

    (108) operacionesMath -> numOperadores TIMES multiplicacion .

    RPAREN          reduce using rule 108 (operacionesMath -> numOperadores TIMES multiplicacion .)
    AND             reduce using rule 108 (operacionesMath -> numOperadores TIMES multiplicacion .)
    OR              reduce using rule 108 (operacionesMath -> numOperadores TIMES multiplicacion .)
    NOT             reduce using rule 108 (operacionesMath -> numOperadores TIMES multiplicacion .)
    $end            reduce using rule 108 (operacionesMath -> numOperadores TIMES multiplicacion .)
    RBLOCK          reduce using rule 108 (operacionesMath -> numOperadores TIMES multiplicacion .)
    RETURN          reduce using rule 108 (operacionesMath -> numOperadores TIMES multiplicacion .)


state 175

    (119) multiplicacion -> numOperadores TIMES LPAREN . numOperadores RPAREN
    (125) numOperadores -> . enteros
    (126) numOperadores -> . decimales
    (127) enteros -> . NUM
    (128) enteros -> . numNegative
    (131) decimales -> . enteros PERIOD NUM
    (129) numNegative -> . MINUS NUM
    (130) numNegative -> .

    NUM             shift and go to state 124
    MINUS           shift and go to state 123
    PERIOD          reduce using rule 130 (numNegative -> .)
    RPAREN          reduce using rule 130 (numNegative -> .)

    numOperadores                  shift and go to state 205
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 176

    (120) multiplicacion -> numOperadores TIMES NUM .
    (127) enteros -> NUM .

  ! reduce/reduce conflict for PERIOD resolved using rule 120 (multiplicacion -> numOperadores TIMES NUM .)
  ! reduce/reduce conflict for TIMES resolved using rule 120 (multiplicacion -> numOperadores TIMES NUM .)
  ! reduce/reduce conflict for RPAREN resolved using rule 120 (multiplicacion -> numOperadores TIMES NUM .)
  ! reduce/reduce conflict for AND resolved using rule 120 (multiplicacion -> numOperadores TIMES NUM .)
  ! reduce/reduce conflict for OR resolved using rule 120 (multiplicacion -> numOperadores TIMES NUM .)
  ! reduce/reduce conflict for NOT resolved using rule 120 (multiplicacion -> numOperadores TIMES NUM .)
  ! reduce/reduce conflict for $end resolved using rule 120 (multiplicacion -> numOperadores TIMES NUM .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 120 (multiplicacion -> numOperadores TIMES NUM .)
  ! reduce/reduce conflict for RETURN resolved using rule 120 (multiplicacion -> numOperadores TIMES NUM .)
    NUM             reduce using rule 120 (multiplicacion -> numOperadores TIMES NUM .)
    MINUS           reduce using rule 120 (multiplicacion -> numOperadores TIMES NUM .)
    PLUS            reduce using rule 120 (multiplicacion -> numOperadores TIMES NUM .)
    TIMES           reduce using rule 120 (multiplicacion -> numOperadores TIMES NUM .)
    DIVIDE          reduce using rule 120 (multiplicacion -> numOperadores TIMES NUM .)
    PERIOD          reduce using rule 120 (multiplicacion -> numOperadores TIMES NUM .)
    RPAREN          reduce using rule 120 (multiplicacion -> numOperadores TIMES NUM .)
    AND             reduce using rule 120 (multiplicacion -> numOperadores TIMES NUM .)
    OR              reduce using rule 120 (multiplicacion -> numOperadores TIMES NUM .)
    NOT             reduce using rule 120 (multiplicacion -> numOperadores TIMES NUM .)
    $end            reduce using rule 120 (multiplicacion -> numOperadores TIMES NUM .)
    RBLOCK          reduce using rule 120 (multiplicacion -> numOperadores TIMES NUM .)
    RETURN          reduce using rule 120 (multiplicacion -> numOperadores TIMES NUM .)

  ! PERIOD          [ reduce using rule 127 (enteros -> NUM .) ]
  ! TIMES           [ reduce using rule 127 (enteros -> NUM .) ]
  ! RPAREN          [ reduce using rule 127 (enteros -> NUM .) ]
  ! AND             [ reduce using rule 127 (enteros -> NUM .) ]
  ! OR              [ reduce using rule 127 (enteros -> NUM .) ]
  ! NOT             [ reduce using rule 127 (enteros -> NUM .) ]
  ! $end            [ reduce using rule 127 (enteros -> NUM .) ]
  ! RBLOCK          [ reduce using rule 127 (enteros -> NUM .) ]
  ! RETURN          [ reduce using rule 127 (enteros -> NUM .) ]


state 177

    (122) divicion -> numOperadores . DIVIDE LPAREN numOperadores RPAREN
    (123) divicion -> numOperadores . DIVIDE NUM
    (124) divicion -> numOperadores .

    DIVIDE          shift and go to state 206
    RPAREN          reduce using rule 124 (divicion -> numOperadores .)
    AND             reduce using rule 124 (divicion -> numOperadores .)
    OR              reduce using rule 124 (divicion -> numOperadores .)
    NOT             reduce using rule 124 (divicion -> numOperadores .)
    $end            reduce using rule 124 (divicion -> numOperadores .)
    RBLOCK          reduce using rule 124 (divicion -> numOperadores .)
    RETURN          reduce using rule 124 (divicion -> numOperadores .)


state 178

    (111) operacionesMath -> numOperadores DIVIDE divicion .

    RPAREN          reduce using rule 111 (operacionesMath -> numOperadores DIVIDE divicion .)
    AND             reduce using rule 111 (operacionesMath -> numOperadores DIVIDE divicion .)
    OR              reduce using rule 111 (operacionesMath -> numOperadores DIVIDE divicion .)
    NOT             reduce using rule 111 (operacionesMath -> numOperadores DIVIDE divicion .)
    $end            reduce using rule 111 (operacionesMath -> numOperadores DIVIDE divicion .)
    RBLOCK          reduce using rule 111 (operacionesMath -> numOperadores DIVIDE divicion .)
    RETURN          reduce using rule 111 (operacionesMath -> numOperadores DIVIDE divicion .)


state 179

    (122) divicion -> numOperadores DIVIDE LPAREN . numOperadores RPAREN
    (125) numOperadores -> . enteros
    (126) numOperadores -> . decimales
    (127) enteros -> . NUM
    (128) enteros -> . numNegative
    (131) decimales -> . enteros PERIOD NUM
    (129) numNegative -> . MINUS NUM
    (130) numNegative -> .

    NUM             shift and go to state 124
    MINUS           shift and go to state 123
    PERIOD          reduce using rule 130 (numNegative -> .)
    RPAREN          reduce using rule 130 (numNegative -> .)

    numOperadores                  shift and go to state 207
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 180

    (123) divicion -> numOperadores DIVIDE NUM .
    (127) enteros -> NUM .

  ! reduce/reduce conflict for PERIOD resolved using rule 123 (divicion -> numOperadores DIVIDE NUM .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 123 (divicion -> numOperadores DIVIDE NUM .)
  ! reduce/reduce conflict for RPAREN resolved using rule 123 (divicion -> numOperadores DIVIDE NUM .)
  ! reduce/reduce conflict for AND resolved using rule 123 (divicion -> numOperadores DIVIDE NUM .)
  ! reduce/reduce conflict for OR resolved using rule 123 (divicion -> numOperadores DIVIDE NUM .)
  ! reduce/reduce conflict for NOT resolved using rule 123 (divicion -> numOperadores DIVIDE NUM .)
  ! reduce/reduce conflict for $end resolved using rule 123 (divicion -> numOperadores DIVIDE NUM .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 123 (divicion -> numOperadores DIVIDE NUM .)
  ! reduce/reduce conflict for RETURN resolved using rule 123 (divicion -> numOperadores DIVIDE NUM .)
    NUM             reduce using rule 123 (divicion -> numOperadores DIVIDE NUM .)
    MINUS           reduce using rule 123 (divicion -> numOperadores DIVIDE NUM .)
    PLUS            reduce using rule 123 (divicion -> numOperadores DIVIDE NUM .)
    TIMES           reduce using rule 123 (divicion -> numOperadores DIVIDE NUM .)
    DIVIDE          reduce using rule 123 (divicion -> numOperadores DIVIDE NUM .)
    PERIOD          reduce using rule 123 (divicion -> numOperadores DIVIDE NUM .)
    RPAREN          reduce using rule 123 (divicion -> numOperadores DIVIDE NUM .)
    AND             reduce using rule 123 (divicion -> numOperadores DIVIDE NUM .)
    OR              reduce using rule 123 (divicion -> numOperadores DIVIDE NUM .)
    NOT             reduce using rule 123 (divicion -> numOperadores DIVIDE NUM .)
    $end            reduce using rule 123 (divicion -> numOperadores DIVIDE NUM .)
    RBLOCK          reduce using rule 123 (divicion -> numOperadores DIVIDE NUM .)
    RETURN          reduce using rule 123 (divicion -> numOperadores DIVIDE NUM .)

  ! PERIOD          [ reduce using rule 127 (enteros -> NUM .) ]
  ! DIVIDE          [ reduce using rule 127 (enteros -> NUM .) ]
  ! RPAREN          [ reduce using rule 127 (enteros -> NUM .) ]
  ! AND             [ reduce using rule 127 (enteros -> NUM .) ]
  ! OR              [ reduce using rule 127 (enteros -> NUM .) ]
  ! NOT             [ reduce using rule 127 (enteros -> NUM .) ]
  ! $end            [ reduce using rule 127 (enteros -> NUM .) ]
  ! RBLOCK          [ reduce using rule 127 (enteros -> NUM .) ]
  ! RETURN          [ reduce using rule 127 (enteros -> NUM .) ]


state 181

    (131) decimales -> enteros PERIOD NUM .

    PLUS            reduce using rule 131 (decimales -> enteros PERIOD NUM .)
    MINUS           reduce using rule 131 (decimales -> enteros PERIOD NUM .)
    TIMES           reduce using rule 131 (decimales -> enteros PERIOD NUM .)
    DIVIDE          reduce using rule 131 (decimales -> enteros PERIOD NUM .)
    NUM             reduce using rule 131 (decimales -> enteros PERIOD NUM .)
    PERIOD          reduce using rule 131 (decimales -> enteros PERIOD NUM .)
    RPAREN          reduce using rule 131 (decimales -> enteros PERIOD NUM .)
    AND             reduce using rule 131 (decimales -> enteros PERIOD NUM .)
    OR              reduce using rule 131 (decimales -> enteros PERIOD NUM .)
    NOT             reduce using rule 131 (decimales -> enteros PERIOD NUM .)
    $end            reduce using rule 131 (decimales -> enteros PERIOD NUM .)
    RBLOCK          reduce using rule 131 (decimales -> enteros PERIOD NUM .)
    RETURN          reduce using rule 131 (decimales -> enteros PERIOD NUM .)


state 182

    (80) declareteFunction -> FUNCTION ID LPAREN params RPAREN .
    (81) declareteFunction -> FUNCTION ID LPAREN params RPAREN . sentencesCmpt
    (83) sentencesCmpt -> . LBLOCK sentencia RBLOCK
    (84) sentencesCmpt -> . LBLOCK sentencia RETURN RBLOCK

    $end            reduce using rule 80 (declareteFunction -> FUNCTION ID LPAREN params RPAREN .)
    RBLOCK          reduce using rule 80 (declareteFunction -> FUNCTION ID LPAREN params RPAREN .)
    RETURN          reduce using rule 80 (declareteFunction -> FUNCTION ID LPAREN params RPAREN .)
    LBLOCK          shift and go to state 209

    sentencesCmpt                  shift and go to state 208

state 183

    (27) sentencias_if -> IF LPAREN expression operadorLogical expression . RPAREN cuerpo_de_sentencias
    (29) sentencias_if_else -> IF LPAREN expression operadorLogical expression . RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias

    RPAREN          shift and go to state 210


state 184

    (28) sentencias_if -> IF LPAREN expression RPAREN cuerpo_de_sentencias .
    (30) sentencias_if_else -> IF LPAREN expression RPAREN cuerpo_de_sentencias . ELSE cuerpo_de_sentencias

    $end            reduce using rule 28 (sentencias_if -> IF LPAREN expression RPAREN cuerpo_de_sentencias .)
    RBLOCK          reduce using rule 28 (sentencias_if -> IF LPAREN expression RPAREN cuerpo_de_sentencias .)
    RETURN          reduce using rule 28 (sentencias_if -> IF LPAREN expression RPAREN cuerpo_de_sentencias .)
    ELSE            shift and go to state 211


state 185

    (31) cuerpo_de_sentencias -> LBLOCK . sentencia RBLOCK
    (32) cuerpo_de_sentencias -> LBLOCK . RBLOCK
    (1) sentencia -> . callMethods
    (2) sentencia -> . callFunction COLON
    (3) sentencia -> . varDeclaration
    (4) sentencia -> . controlExpression
    (5) sentencia -> . impresion
    (6) sentencia -> . declareteFunction
    (7) sentencia -> . assingOperadores
    (55) callMethods -> . ID methodArray COLON
    (56) callMethods -> . ID methodSet COLON
    (57) callMethods -> . ID methodMap COLON
    (85) callFunction -> . ID LPAREN params RPAREN
    (47) varDeclaration -> . varType assign
    (48) varDeclaration -> . assign
    (49) varDeclaration -> . LET ID COLON
    (50) varDeclaration -> . VAR ID COLON
    (11) controlExpression -> . sentencias_if
    (12) controlExpression -> . sentencias_if_else
    (13) controlExpression -> . sentencias_while
    (14) controlExpression -> . impresion
    (15) controlExpression -> . impresion_vacio
    (35) impresion -> . ALERT LPAREN expression RPAREN COLON
    (36) impresion -> .
    (80) declareteFunction -> . FUNCTION ID LPAREN params RPAREN
    (81) declareteFunction -> . FUNCTION ID LPAREN params RPAREN sentencesCmpt
    (82) declareteFunction -> . varType ID EQUAL FUNCTION LPAREN params RPAREN
    (10) assingOperadores -> . varType ID EQUAL inicializarOp
    (44) varType -> . LET
    (45) varType -> . CONST
    (46) varType -> . VAR
    (51) assign -> . ID EQUAL arrayDeclare COLON
    (52) assign -> . ID EQUAL declareMap COLON
    (53) assign -> . ID EQUAL declararSet COLON
    (54) assign -> . ID EQUAL javaScript_param COLON
    (27) sentencias_if -> . IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias
    (28) sentencias_if -> . IF LPAREN expression RPAREN cuerpo_de_sentencias
    (29) sentencias_if_else -> . IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias
    (30) sentencias_if_else -> . IF LPAREN expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias
    (33) sentencias_while -> . WHILE LPAREN expression RPAREN cuerpo_de_sentencias
    (34) sentencias_while -> . WHILE LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias
    (37) impresion_vacio -> . ALERT LPAREN RPAREN COLON

  ! shift/reduce conflict for RBLOCK resolved as shift
    RBLOCK          shift and go to state 213
    ID              shift and go to state 9
    LET             shift and go to state 12
    VAR             shift and go to state 13
    ALERT           shift and go to state 18
    FUNCTION        shift and go to state 19
    CONST           shift and go to state 20
    IF              shift and go to state 21
    WHILE           shift and go to state 22

  ! RBLOCK          [ reduce using rule 36 (impresion -> .) ]

    sentencia                      shift and go to state 212
    callMethods                    shift and go to state 2
    callFunction                   shift and go to state 3
    varDeclaration                 shift and go to state 4
    controlExpression              shift and go to state 5
    impresion                      shift and go to state 6
    declareteFunction              shift and go to state 7
    assingOperadores               shift and go to state 8
    varType                        shift and go to state 10
    assign                         shift and go to state 11
    sentencias_if                  shift and go to state 14
    sentencias_if_else             shift and go to state 15
    sentencias_while               shift and go to state 16
    impresion_vacio                shift and go to state 17

state 186

    (33) sentencias_while -> WHILE LPAREN expression RPAREN cuerpo_de_sentencias .

    $end            reduce using rule 33 (sentencias_while -> WHILE LPAREN expression RPAREN cuerpo_de_sentencias .)
    RBLOCK          reduce using rule 33 (sentencias_while -> WHILE LPAREN expression RPAREN cuerpo_de_sentencias .)
    RETURN          reduce using rule 33 (sentencias_while -> WHILE LPAREN expression RPAREN cuerpo_de_sentencias .)


state 187

    (34) sentencias_while -> WHILE LPAREN expression operadorLogical expression . RPAREN cuerpo_de_sentencias

    RPAREN          shift and go to state 214


state 188

    (63) arrayValues -> javaScript_param COMMA arrayValues .

    RBRACKET        reduce using rule 63 (arrayValues -> javaScript_param COMMA arrayValues .)
    RPAREN          reduce using rule 63 (arrayValues -> javaScript_param COMMA arrayValues .)


state 189

    (60) arrayDeclare -> NEW ARRAY LPAREN arrayValues . RPAREN

    RPAREN          shift and go to state 215


state 190

    (61) arrayDeclare -> NEW ARRAY LPAREN RPAREN .

    COLON           reduce using rule 61 (arrayDeclare -> NEW ARRAY LPAREN RPAREN .)
    COMMA           reduce using rule 61 (arrayDeclare -> NEW ARRAY LPAREN RPAREN .)
    RBRACKET        reduce using rule 61 (arrayDeclare -> NEW ARRAY LPAREN RPAREN .)


state 191

    (67) declareMap -> NEW MAP LPAREN LBRACKET . iterableMap RBRACKET RPAREN
    (69) iterableMap -> . LBRACKET keyValue COMMA keyValue RBRACKET
    (70) iterableMap -> . LBRACKET keyValue COMMA keyValue RBRACKET COMMA iterableMap

    LBRACKET        shift and go to state 216

    iterableMap                    shift and go to state 217

state 192

    (68) declareMap -> NEW MAP LPAREN RPAREN .

    COLON           reduce using rule 68 (declareMap -> NEW MAP LPAREN RPAREN .)
    COMMA           reduce using rule 68 (declareMap -> NEW MAP LPAREN RPAREN .)
    RBRACKET        reduce using rule 68 (declareMap -> NEW MAP LPAREN RPAREN .)


state 193

    (93) declararSet -> NEW SET LPAREN RPAREN .

    COLON           reduce using rule 93 (declararSet -> NEW SET LPAREN RPAREN .)
    COMMA           reduce using rule 93 (declararSet -> NEW SET LPAREN RPAREN .)
    RBRACKET        reduce using rule 93 (declararSet -> NEW SET LPAREN RPAREN .)


state 194

    (94) declararSet -> NEW SET LPAREN LBRACKET . iterableSet RBRACKET RPAREN
    (75) iterableSet -> . keyValue
    (76) iterableSet -> . keyValue COMMA iterableSet
    (77) iterableSet -> .
    (71) keyValue -> . javaScript_param
    (72) keyValue -> . declararSet
    (73) keyValue -> . declareMap
    (74) keyValue -> . arrayDeclare
    (38) javaScript_param -> . STRING
    (39) javaScript_param -> . NUM
    (40) javaScript_param -> . boolean
    (41) javaScript_param -> . ID
    (93) declararSet -> . NEW SET LPAREN RPAREN
    (94) declararSet -> . NEW SET LPAREN LBRACKET iterableSet RBRACKET RPAREN
    (67) declareMap -> . NEW MAP LPAREN LBRACKET iterableMap RBRACKET RPAREN
    (68) declareMap -> . NEW MAP LPAREN RPAREN
    (58) arrayDeclare -> . LBRACKET RBRACKET
    (59) arrayDeclare -> . LBRACKET arrayValues RBRACKET
    (60) arrayDeclare -> . NEW ARRAY LPAREN arrayValues RPAREN
    (61) arrayDeclare -> . NEW ARRAY LPAREN RPAREN
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE

    RBRACKET        reduce using rule 77 (iterableSet -> .)
    STRING          shift and go to state 45
    NUM             shift and go to state 46
    ID              shift and go to state 41
    NEW             shift and go to state 218
    LBRACKET        shift and go to state 54
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    iterableSet                    shift and go to state 219
    keyValue                       shift and go to state 220
    javaScript_param               shift and go to state 221
    declararSet                    shift and go to state 222
    declareMap                     shift and go to state 223
    arrayDeclare                   shift and go to state 224
    boolean                        shift and go to state 47

state 195

    (64) methodArray -> PERIOD PUSH LPAREN javaScript_param RPAREN .

    COLON           reduce using rule 64 (methodArray -> PERIOD PUSH LPAREN javaScript_param RPAREN .)


state 196

    (65) methodArray -> PERIOD UNSHIFT LPAREN arrayValues RPAREN .

    COLON           reduce using rule 65 (methodArray -> PERIOD UNSHIFT LPAREN arrayValues RPAREN .)


state 197

    (95) methodSet -> PERIOD ADD LPAREN javaScript_param RPAREN .

    COLON           reduce using rule 95 (methodSet -> PERIOD ADD LPAREN javaScript_param RPAREN .)


state 198

    (96) methodSet -> PERIOD DELETE LPAREN javaScript_param RPAREN .

    COLON           reduce using rule 96 (methodSet -> PERIOD DELETE LPAREN javaScript_param RPAREN .)


state 199

    (82) declareteFunction -> varType ID EQUAL FUNCTION LPAREN params . RPAREN

    RPAREN          shift and go to state 225


state 200

    (113) suma -> numOperadores PLUS . LPAREN numOperadores RPAREN
    (114) suma -> numOperadores PLUS . NUM

    LPAREN          shift and go to state 167
    NUM             shift and go to state 226


state 201

    (113) suma -> numOperadores PLUS LPAREN numOperadores . RPAREN

    RPAREN          shift and go to state 227


state 202

    (116) restas -> numOperadores MINUS . LPAREN numOperadores RPAREN
    (117) restas -> numOperadores MINUS . NUM

    LPAREN          shift and go to state 171
    NUM             shift and go to state 228


state 203

    (116) restas -> numOperadores MINUS LPAREN numOperadores . RPAREN

    RPAREN          shift and go to state 229


state 204

    (119) multiplicacion -> numOperadores TIMES . LPAREN numOperadores RPAREN
    (120) multiplicacion -> numOperadores TIMES . NUM

    LPAREN          shift and go to state 175
    NUM             shift and go to state 230


state 205

    (119) multiplicacion -> numOperadores TIMES LPAREN numOperadores . RPAREN

    RPAREN          shift and go to state 231


state 206

    (122) divicion -> numOperadores DIVIDE . LPAREN numOperadores RPAREN
    (123) divicion -> numOperadores DIVIDE . NUM

    LPAREN          shift and go to state 179
    NUM             shift and go to state 232


state 207

    (122) divicion -> numOperadores DIVIDE LPAREN numOperadores . RPAREN

    RPAREN          shift and go to state 233


state 208

    (81) declareteFunction -> FUNCTION ID LPAREN params RPAREN sentencesCmpt .

    $end            reduce using rule 81 (declareteFunction -> FUNCTION ID LPAREN params RPAREN sentencesCmpt .)
    RBLOCK          reduce using rule 81 (declareteFunction -> FUNCTION ID LPAREN params RPAREN sentencesCmpt .)
    RETURN          reduce using rule 81 (declareteFunction -> FUNCTION ID LPAREN params RPAREN sentencesCmpt .)


state 209

    (83) sentencesCmpt -> LBLOCK . sentencia RBLOCK
    (84) sentencesCmpt -> LBLOCK . sentencia RETURN RBLOCK
    (1) sentencia -> . callMethods
    (2) sentencia -> . callFunction COLON
    (3) sentencia -> . varDeclaration
    (4) sentencia -> . controlExpression
    (5) sentencia -> . impresion
    (6) sentencia -> . declareteFunction
    (7) sentencia -> . assingOperadores
    (55) callMethods -> . ID methodArray COLON
    (56) callMethods -> . ID methodSet COLON
    (57) callMethods -> . ID methodMap COLON
    (85) callFunction -> . ID LPAREN params RPAREN
    (47) varDeclaration -> . varType assign
    (48) varDeclaration -> . assign
    (49) varDeclaration -> . LET ID COLON
    (50) varDeclaration -> . VAR ID COLON
    (11) controlExpression -> . sentencias_if
    (12) controlExpression -> . sentencias_if_else
    (13) controlExpression -> . sentencias_while
    (14) controlExpression -> . impresion
    (15) controlExpression -> . impresion_vacio
    (35) impresion -> . ALERT LPAREN expression RPAREN COLON
    (36) impresion -> .
    (80) declareteFunction -> . FUNCTION ID LPAREN params RPAREN
    (81) declareteFunction -> . FUNCTION ID LPAREN params RPAREN sentencesCmpt
    (82) declareteFunction -> . varType ID EQUAL FUNCTION LPAREN params RPAREN
    (10) assingOperadores -> . varType ID EQUAL inicializarOp
    (44) varType -> . LET
    (45) varType -> . CONST
    (46) varType -> . VAR
    (51) assign -> . ID EQUAL arrayDeclare COLON
    (52) assign -> . ID EQUAL declareMap COLON
    (53) assign -> . ID EQUAL declararSet COLON
    (54) assign -> . ID EQUAL javaScript_param COLON
    (27) sentencias_if -> . IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias
    (28) sentencias_if -> . IF LPAREN expression RPAREN cuerpo_de_sentencias
    (29) sentencias_if_else -> . IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias
    (30) sentencias_if_else -> . IF LPAREN expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias
    (33) sentencias_while -> . WHILE LPAREN expression RPAREN cuerpo_de_sentencias
    (34) sentencias_while -> . WHILE LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias
    (37) impresion_vacio -> . ALERT LPAREN RPAREN COLON

    ID              shift and go to state 9
    LET             shift and go to state 12
    VAR             shift and go to state 13
    ALERT           shift and go to state 18
    RBLOCK          reduce using rule 36 (impresion -> .)
    RETURN          reduce using rule 36 (impresion -> .)
    FUNCTION        shift and go to state 19
    CONST           shift and go to state 20
    IF              shift and go to state 21
    WHILE           shift and go to state 22

    sentencia                      shift and go to state 234
    callMethods                    shift and go to state 2
    callFunction                   shift and go to state 3
    varDeclaration                 shift and go to state 4
    controlExpression              shift and go to state 5
    impresion                      shift and go to state 6
    declareteFunction              shift and go to state 7
    assingOperadores               shift and go to state 8
    varType                        shift and go to state 10
    assign                         shift and go to state 11
    sentencias_if                  shift and go to state 14
    sentencias_if_else             shift and go to state 15
    sentencias_while               shift and go to state 16
    impresion_vacio                shift and go to state 17

state 210

    (27) sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN . cuerpo_de_sentencias
    (29) sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN . cuerpo_de_sentencias ELSE cuerpo_de_sentencias
    (31) cuerpo_de_sentencias -> . LBLOCK sentencia RBLOCK
    (32) cuerpo_de_sentencias -> . LBLOCK RBLOCK

    LBLOCK          shift and go to state 185

    cuerpo_de_sentencias           shift and go to state 235

state 211

    (30) sentencias_if_else -> IF LPAREN expression RPAREN cuerpo_de_sentencias ELSE . cuerpo_de_sentencias
    (31) cuerpo_de_sentencias -> . LBLOCK sentencia RBLOCK
    (32) cuerpo_de_sentencias -> . LBLOCK RBLOCK

    LBLOCK          shift and go to state 185

    cuerpo_de_sentencias           shift and go to state 236

state 212

    (31) cuerpo_de_sentencias -> LBLOCK sentencia . RBLOCK

    RBLOCK          shift and go to state 237


state 213

    (32) cuerpo_de_sentencias -> LBLOCK RBLOCK .

    ELSE            reduce using rule 32 (cuerpo_de_sentencias -> LBLOCK RBLOCK .)
    $end            reduce using rule 32 (cuerpo_de_sentencias -> LBLOCK RBLOCK .)
    RBLOCK          reduce using rule 32 (cuerpo_de_sentencias -> LBLOCK RBLOCK .)
    RETURN          reduce using rule 32 (cuerpo_de_sentencias -> LBLOCK RBLOCK .)


state 214

    (34) sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN . cuerpo_de_sentencias
    (31) cuerpo_de_sentencias -> . LBLOCK sentencia RBLOCK
    (32) cuerpo_de_sentencias -> . LBLOCK RBLOCK

    LBLOCK          shift and go to state 185

    cuerpo_de_sentencias           shift and go to state 238

state 215

    (60) arrayDeclare -> NEW ARRAY LPAREN arrayValues RPAREN .

    COLON           reduce using rule 60 (arrayDeclare -> NEW ARRAY LPAREN arrayValues RPAREN .)
    COMMA           reduce using rule 60 (arrayDeclare -> NEW ARRAY LPAREN arrayValues RPAREN .)
    RBRACKET        reduce using rule 60 (arrayDeclare -> NEW ARRAY LPAREN arrayValues RPAREN .)


state 216

    (69) iterableMap -> LBRACKET . keyValue COMMA keyValue RBRACKET
    (70) iterableMap -> LBRACKET . keyValue COMMA keyValue RBRACKET COMMA iterableMap
    (71) keyValue -> . javaScript_param
    (72) keyValue -> . declararSet
    (73) keyValue -> . declareMap
    (74) keyValue -> . arrayDeclare
    (38) javaScript_param -> . STRING
    (39) javaScript_param -> . NUM
    (40) javaScript_param -> . boolean
    (41) javaScript_param -> . ID
    (93) declararSet -> . NEW SET LPAREN RPAREN
    (94) declararSet -> . NEW SET LPAREN LBRACKET iterableSet RBRACKET RPAREN
    (67) declareMap -> . NEW MAP LPAREN LBRACKET iterableMap RBRACKET RPAREN
    (68) declareMap -> . NEW MAP LPAREN RPAREN
    (58) arrayDeclare -> . LBRACKET RBRACKET
    (59) arrayDeclare -> . LBRACKET arrayValues RBRACKET
    (60) arrayDeclare -> . NEW ARRAY LPAREN arrayValues RPAREN
    (61) arrayDeclare -> . NEW ARRAY LPAREN RPAREN
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE

    STRING          shift and go to state 45
    NUM             shift and go to state 46
    ID              shift and go to state 41
    NEW             shift and go to state 218
    LBRACKET        shift and go to state 54
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    keyValue                       shift and go to state 239
    javaScript_param               shift and go to state 221
    declararSet                    shift and go to state 222
    declareMap                     shift and go to state 223
    arrayDeclare                   shift and go to state 224
    boolean                        shift and go to state 47

state 217

    (67) declareMap -> NEW MAP LPAREN LBRACKET iterableMap . RBRACKET RPAREN

    RBRACKET        shift and go to state 240


state 218

    (93) declararSet -> NEW . SET LPAREN RPAREN
    (94) declararSet -> NEW . SET LPAREN LBRACKET iterableSet RBRACKET RPAREN
    (67) declareMap -> NEW . MAP LPAREN LBRACKET iterableMap RBRACKET RPAREN
    (68) declareMap -> NEW . MAP LPAREN RPAREN
    (60) arrayDeclare -> NEW . ARRAY LPAREN arrayValues RPAREN
    (61) arrayDeclare -> NEW . ARRAY LPAREN RPAREN

    SET             shift and go to state 98
    MAP             shift and go to state 97
    ARRAY           shift and go to state 96


state 219

    (94) declararSet -> NEW SET LPAREN LBRACKET iterableSet . RBRACKET RPAREN

    RBRACKET        shift and go to state 241


state 220

    (75) iterableSet -> keyValue .
    (76) iterableSet -> keyValue . COMMA iterableSet

    RBRACKET        reduce using rule 75 (iterableSet -> keyValue .)
    COMMA           shift and go to state 242


state 221

    (71) keyValue -> javaScript_param .

    COMMA           reduce using rule 71 (keyValue -> javaScript_param .)
    RBRACKET        reduce using rule 71 (keyValue -> javaScript_param .)


state 222

    (72) keyValue -> declararSet .

    COMMA           reduce using rule 72 (keyValue -> declararSet .)
    RBRACKET        reduce using rule 72 (keyValue -> declararSet .)


state 223

    (73) keyValue -> declareMap .

    COMMA           reduce using rule 73 (keyValue -> declareMap .)
    RBRACKET        reduce using rule 73 (keyValue -> declareMap .)


state 224

    (74) keyValue -> arrayDeclare .

    COMMA           reduce using rule 74 (keyValue -> arrayDeclare .)
    RBRACKET        reduce using rule 74 (keyValue -> arrayDeclare .)


state 225

    (82) declareteFunction -> varType ID EQUAL FUNCTION LPAREN params RPAREN .

    $end            reduce using rule 82 (declareteFunction -> varType ID EQUAL FUNCTION LPAREN params RPAREN .)
    RBLOCK          reduce using rule 82 (declareteFunction -> varType ID EQUAL FUNCTION LPAREN params RPAREN .)
    RETURN          reduce using rule 82 (declareteFunction -> varType ID EQUAL FUNCTION LPAREN params RPAREN .)


state 226

    (114) suma -> numOperadores PLUS NUM .

    RPAREN          reduce using rule 114 (suma -> numOperadores PLUS NUM .)
    AND             reduce using rule 114 (suma -> numOperadores PLUS NUM .)
    OR              reduce using rule 114 (suma -> numOperadores PLUS NUM .)
    NOT             reduce using rule 114 (suma -> numOperadores PLUS NUM .)
    $end            reduce using rule 114 (suma -> numOperadores PLUS NUM .)
    RBLOCK          reduce using rule 114 (suma -> numOperadores PLUS NUM .)
    RETURN          reduce using rule 114 (suma -> numOperadores PLUS NUM .)


state 227

    (113) suma -> numOperadores PLUS LPAREN numOperadores RPAREN .

    NUM             reduce using rule 113 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    MINUS           reduce using rule 113 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    PLUS            reduce using rule 113 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    TIMES           reduce using rule 113 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    DIVIDE          reduce using rule 113 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    PERIOD          reduce using rule 113 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    RPAREN          reduce using rule 113 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    AND             reduce using rule 113 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    OR              reduce using rule 113 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    NOT             reduce using rule 113 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    $end            reduce using rule 113 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    RBLOCK          reduce using rule 113 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    RETURN          reduce using rule 113 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)


state 228

    (117) restas -> numOperadores MINUS NUM .

    RPAREN          reduce using rule 117 (restas -> numOperadores MINUS NUM .)
    AND             reduce using rule 117 (restas -> numOperadores MINUS NUM .)
    OR              reduce using rule 117 (restas -> numOperadores MINUS NUM .)
    NOT             reduce using rule 117 (restas -> numOperadores MINUS NUM .)
    $end            reduce using rule 117 (restas -> numOperadores MINUS NUM .)
    RBLOCK          reduce using rule 117 (restas -> numOperadores MINUS NUM .)
    RETURN          reduce using rule 117 (restas -> numOperadores MINUS NUM .)


state 229

    (116) restas -> numOperadores MINUS LPAREN numOperadores RPAREN .

    NUM             reduce using rule 116 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    MINUS           reduce using rule 116 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    PLUS            reduce using rule 116 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    TIMES           reduce using rule 116 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    DIVIDE          reduce using rule 116 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    PERIOD          reduce using rule 116 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    RPAREN          reduce using rule 116 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    AND             reduce using rule 116 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    OR              reduce using rule 116 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    NOT             reduce using rule 116 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    $end            reduce using rule 116 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    RBLOCK          reduce using rule 116 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    RETURN          reduce using rule 116 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)


state 230

    (120) multiplicacion -> numOperadores TIMES NUM .

    RPAREN          reduce using rule 120 (multiplicacion -> numOperadores TIMES NUM .)
    AND             reduce using rule 120 (multiplicacion -> numOperadores TIMES NUM .)
    OR              reduce using rule 120 (multiplicacion -> numOperadores TIMES NUM .)
    NOT             reduce using rule 120 (multiplicacion -> numOperadores TIMES NUM .)
    $end            reduce using rule 120 (multiplicacion -> numOperadores TIMES NUM .)
    RBLOCK          reduce using rule 120 (multiplicacion -> numOperadores TIMES NUM .)
    RETURN          reduce using rule 120 (multiplicacion -> numOperadores TIMES NUM .)


state 231

    (119) multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .

    NUM             reduce using rule 119 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    MINUS           reduce using rule 119 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    PLUS            reduce using rule 119 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    TIMES           reduce using rule 119 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    DIVIDE          reduce using rule 119 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    PERIOD          reduce using rule 119 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    RPAREN          reduce using rule 119 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    AND             reduce using rule 119 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    OR              reduce using rule 119 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    NOT             reduce using rule 119 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    $end            reduce using rule 119 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    RBLOCK          reduce using rule 119 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    RETURN          reduce using rule 119 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)


state 232

    (123) divicion -> numOperadores DIVIDE NUM .

    RPAREN          reduce using rule 123 (divicion -> numOperadores DIVIDE NUM .)
    AND             reduce using rule 123 (divicion -> numOperadores DIVIDE NUM .)
    OR              reduce using rule 123 (divicion -> numOperadores DIVIDE NUM .)
    NOT             reduce using rule 123 (divicion -> numOperadores DIVIDE NUM .)
    $end            reduce using rule 123 (divicion -> numOperadores DIVIDE NUM .)
    RBLOCK          reduce using rule 123 (divicion -> numOperadores DIVIDE NUM .)
    RETURN          reduce using rule 123 (divicion -> numOperadores DIVIDE NUM .)


state 233

    (122) divicion -> numOperadores DIVIDE LPAREN numOperadores RPAREN .

    NUM             reduce using rule 122 (divicion -> numOperadores DIVIDE LPAREN numOperadores RPAREN .)
    MINUS           reduce using rule 122 (divicion -> numOperadores DIVIDE LPAREN numOperadores RPAREN .)
    PLUS            reduce using rule 122 (divicion -> numOperadores DIVIDE LPAREN numOperadores RPAREN .)
    TIMES           reduce using rule 122 (divicion -> numOperadores DIVIDE LPAREN numOperadores RPAREN .)
    DIVIDE          reduce using rule 122 (divicion -> numOperadores DIVIDE LPAREN numOperadores RPAREN .)
    PERIOD          reduce using rule 122 (divicion -> numOperadores DIVIDE LPAREN numOperadores RPAREN .)
    RPAREN          reduce using rule 122 (divicion -> numOperadores DIVIDE LPAREN numOperadores RPAREN .)
    AND             reduce using rule 122 (divicion -> numOperadores DIVIDE LPAREN numOperadores RPAREN .)
    OR              reduce using rule 122 (divicion -> numOperadores DIVIDE LPAREN numOperadores RPAREN .)
    NOT             reduce using rule 122 (divicion -> numOperadores DIVIDE LPAREN numOperadores RPAREN .)
    $end            reduce using rule 122 (divicion -> numOperadores DIVIDE LPAREN numOperadores RPAREN .)
    RBLOCK          reduce using rule 122 (divicion -> numOperadores DIVIDE LPAREN numOperadores RPAREN .)
    RETURN          reduce using rule 122 (divicion -> numOperadores DIVIDE LPAREN numOperadores RPAREN .)


state 234

    (83) sentencesCmpt -> LBLOCK sentencia . RBLOCK
    (84) sentencesCmpt -> LBLOCK sentencia . RETURN RBLOCK

    RBLOCK          shift and go to state 243
    RETURN          shift and go to state 244


state 235

    (27) sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias .
    (29) sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias . ELSE cuerpo_de_sentencias

    $end            reduce using rule 27 (sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias .)
    RBLOCK          reduce using rule 27 (sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias .)
    RETURN          reduce using rule 27 (sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias .)
    ELSE            shift and go to state 245


state 236

    (30) sentencias_if_else -> IF LPAREN expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias .

    $end            reduce using rule 30 (sentencias_if_else -> IF LPAREN expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias .)
    RBLOCK          reduce using rule 30 (sentencias_if_else -> IF LPAREN expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias .)
    RETURN          reduce using rule 30 (sentencias_if_else -> IF LPAREN expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias .)


state 237

    (31) cuerpo_de_sentencias -> LBLOCK sentencia RBLOCK .

    ELSE            reduce using rule 31 (cuerpo_de_sentencias -> LBLOCK sentencia RBLOCK .)
    $end            reduce using rule 31 (cuerpo_de_sentencias -> LBLOCK sentencia RBLOCK .)
    RBLOCK          reduce using rule 31 (cuerpo_de_sentencias -> LBLOCK sentencia RBLOCK .)
    RETURN          reduce using rule 31 (cuerpo_de_sentencias -> LBLOCK sentencia RBLOCK .)


state 238

    (34) sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias .

    $end            reduce using rule 34 (sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias .)
    RBLOCK          reduce using rule 34 (sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias .)
    RETURN          reduce using rule 34 (sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias .)


state 239

    (69) iterableMap -> LBRACKET keyValue . COMMA keyValue RBRACKET
    (70) iterableMap -> LBRACKET keyValue . COMMA keyValue RBRACKET COMMA iterableMap

    COMMA           shift and go to state 246


state 240

    (67) declareMap -> NEW MAP LPAREN LBRACKET iterableMap RBRACKET . RPAREN

    RPAREN          shift and go to state 247


state 241

    (94) declararSet -> NEW SET LPAREN LBRACKET iterableSet RBRACKET . RPAREN

    RPAREN          shift and go to state 248


state 242

    (76) iterableSet -> keyValue COMMA . iterableSet
    (75) iterableSet -> . keyValue
    (76) iterableSet -> . keyValue COMMA iterableSet
    (77) iterableSet -> .
    (71) keyValue -> . javaScript_param
    (72) keyValue -> . declararSet
    (73) keyValue -> . declareMap
    (74) keyValue -> . arrayDeclare
    (38) javaScript_param -> . STRING
    (39) javaScript_param -> . NUM
    (40) javaScript_param -> . boolean
    (41) javaScript_param -> . ID
    (93) declararSet -> . NEW SET LPAREN RPAREN
    (94) declararSet -> . NEW SET LPAREN LBRACKET iterableSet RBRACKET RPAREN
    (67) declareMap -> . NEW MAP LPAREN LBRACKET iterableMap RBRACKET RPAREN
    (68) declareMap -> . NEW MAP LPAREN RPAREN
    (58) arrayDeclare -> . LBRACKET RBRACKET
    (59) arrayDeclare -> . LBRACKET arrayValues RBRACKET
    (60) arrayDeclare -> . NEW ARRAY LPAREN arrayValues RPAREN
    (61) arrayDeclare -> . NEW ARRAY LPAREN RPAREN
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE

    RBRACKET        reduce using rule 77 (iterableSet -> .)
    STRING          shift and go to state 45
    NUM             shift and go to state 46
    ID              shift and go to state 41
    NEW             shift and go to state 218
    LBRACKET        shift and go to state 54
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    keyValue                       shift and go to state 220
    iterableSet                    shift and go to state 249
    javaScript_param               shift and go to state 221
    declararSet                    shift and go to state 222
    declareMap                     shift and go to state 223
    arrayDeclare                   shift and go to state 224
    boolean                        shift and go to state 47

state 243

    (83) sentencesCmpt -> LBLOCK sentencia RBLOCK .

    $end            reduce using rule 83 (sentencesCmpt -> LBLOCK sentencia RBLOCK .)
    RBLOCK          reduce using rule 83 (sentencesCmpt -> LBLOCK sentencia RBLOCK .)
    RETURN          reduce using rule 83 (sentencesCmpt -> LBLOCK sentencia RBLOCK .)


state 244

    (84) sentencesCmpt -> LBLOCK sentencia RETURN . RBLOCK

    RBLOCK          shift and go to state 250


state 245

    (29) sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias ELSE . cuerpo_de_sentencias
    (31) cuerpo_de_sentencias -> . LBLOCK sentencia RBLOCK
    (32) cuerpo_de_sentencias -> . LBLOCK RBLOCK

    LBLOCK          shift and go to state 185

    cuerpo_de_sentencias           shift and go to state 251

state 246

    (69) iterableMap -> LBRACKET keyValue COMMA . keyValue RBRACKET
    (70) iterableMap -> LBRACKET keyValue COMMA . keyValue RBRACKET COMMA iterableMap
    (71) keyValue -> . javaScript_param
    (72) keyValue -> . declararSet
    (73) keyValue -> . declareMap
    (74) keyValue -> . arrayDeclare
    (38) javaScript_param -> . STRING
    (39) javaScript_param -> . NUM
    (40) javaScript_param -> . boolean
    (41) javaScript_param -> . ID
    (93) declararSet -> . NEW SET LPAREN RPAREN
    (94) declararSet -> . NEW SET LPAREN LBRACKET iterableSet RBRACKET RPAREN
    (67) declareMap -> . NEW MAP LPAREN LBRACKET iterableMap RBRACKET RPAREN
    (68) declareMap -> . NEW MAP LPAREN RPAREN
    (58) arrayDeclare -> . LBRACKET RBRACKET
    (59) arrayDeclare -> . LBRACKET arrayValues RBRACKET
    (60) arrayDeclare -> . NEW ARRAY LPAREN arrayValues RPAREN
    (61) arrayDeclare -> . NEW ARRAY LPAREN RPAREN
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE

    STRING          shift and go to state 45
    NUM             shift and go to state 46
    ID              shift and go to state 41
    NEW             shift and go to state 218
    LBRACKET        shift and go to state 54
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    keyValue                       shift and go to state 252
    javaScript_param               shift and go to state 221
    declararSet                    shift and go to state 222
    declareMap                     shift and go to state 223
    arrayDeclare                   shift and go to state 224
    boolean                        shift and go to state 47

state 247

    (67) declareMap -> NEW MAP LPAREN LBRACKET iterableMap RBRACKET RPAREN .

    COLON           reduce using rule 67 (declareMap -> NEW MAP LPAREN LBRACKET iterableMap RBRACKET RPAREN .)
    COMMA           reduce using rule 67 (declareMap -> NEW MAP LPAREN LBRACKET iterableMap RBRACKET RPAREN .)
    RBRACKET        reduce using rule 67 (declareMap -> NEW MAP LPAREN LBRACKET iterableMap RBRACKET RPAREN .)


state 248

    (94) declararSet -> NEW SET LPAREN LBRACKET iterableSet RBRACKET RPAREN .

    COLON           reduce using rule 94 (declararSet -> NEW SET LPAREN LBRACKET iterableSet RBRACKET RPAREN .)
    COMMA           reduce using rule 94 (declararSet -> NEW SET LPAREN LBRACKET iterableSet RBRACKET RPAREN .)
    RBRACKET        reduce using rule 94 (declararSet -> NEW SET LPAREN LBRACKET iterableSet RBRACKET RPAREN .)


state 249

    (76) iterableSet -> keyValue COMMA iterableSet .

    RBRACKET        reduce using rule 76 (iterableSet -> keyValue COMMA iterableSet .)


state 250

    (84) sentencesCmpt -> LBLOCK sentencia RETURN RBLOCK .

    $end            reduce using rule 84 (sentencesCmpt -> LBLOCK sentencia RETURN RBLOCK .)
    RBLOCK          reduce using rule 84 (sentencesCmpt -> LBLOCK sentencia RETURN RBLOCK .)
    RETURN          reduce using rule 84 (sentencesCmpt -> LBLOCK sentencia RETURN RBLOCK .)


state 251

    (29) sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias .

    $end            reduce using rule 29 (sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias .)
    RBLOCK          reduce using rule 29 (sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias .)
    RETURN          reduce using rule 29 (sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias .)


state 252

    (69) iterableMap -> LBRACKET keyValue COMMA keyValue . RBRACKET
    (70) iterableMap -> LBRACKET keyValue COMMA keyValue . RBRACKET COMMA iterableMap

    RBRACKET        shift and go to state 253


state 253

    (69) iterableMap -> LBRACKET keyValue COMMA keyValue RBRACKET .
    (70) iterableMap -> LBRACKET keyValue COMMA keyValue RBRACKET . COMMA iterableMap

    RBRACKET        reduce using rule 69 (iterableMap -> LBRACKET keyValue COMMA keyValue RBRACKET .)
    COMMA           shift and go to state 254


state 254

    (70) iterableMap -> LBRACKET keyValue COMMA keyValue RBRACKET COMMA . iterableMap
    (69) iterableMap -> . LBRACKET keyValue COMMA keyValue RBRACKET
    (70) iterableMap -> . LBRACKET keyValue COMMA keyValue RBRACKET COMMA iterableMap

    LBRACKET        shift and go to state 216

    iterableMap                    shift and go to state 255

state 255

    (70) iterableMap -> LBRACKET keyValue COMMA keyValue RBRACKET COMMA iterableMap .

    RBRACKET        reduce using rule 70 (iterableMap -> LBRACKET keyValue COMMA keyValue RBRACKET COMMA iterableMap .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 12 resolved as shift
WARNING: shift/reduce conflict for ID in state 13 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 34 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 34 resolved as shift
WARNING: shift/reduce conflict for NUM in state 34 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 34 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 36 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 36 resolved as shift
WARNING: shift/reduce conflict for NUM in state 36 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 37 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 37 resolved as shift
WARNING: shift/reduce conflict for NUM in state 37 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 63 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 63 resolved as shift
WARNING: shift/reduce conflict for NUM in state 63 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 73 resolved as shift
WARNING: shift/reduce conflict for NUM in state 73 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 75 resolved as shift
WARNING: shift/reduce conflict for NUM in state 75 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 76 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 76 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 76 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 76 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 76 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 76 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 76 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 76 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 76 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 76 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 76 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 76 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 76 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 76 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 76 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 76 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 77 resolved as shift
WARNING: shift/reduce conflict for NUM in state 77 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 78 resolved as shift
WARNING: shift/reduce conflict for NUM in state 78 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 79 resolved as shift
WARNING: shift/reduce conflict for NUM in state 79 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 80 resolved as shift
WARNING: shift/reduce conflict for NUM in state 80 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 81 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 128 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 137 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 137 resolved as shift
WARNING: shift/reduce conflict for NUM in state 137 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 143 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 143 resolved as shift
WARNING: shift/reduce conflict for NUM in state 143 resolved as shift
WARNING: shift/reduce conflict for RBLOCK in state 185 resolved as shift
WARNING: reduce/reduce conflict in state 6 resolved using rule (sentencia -> impresion)
WARNING: rejected rule (controlExpression -> impresion) in state 6
WARNING: reduce/reduce conflict in state 76 resolved using rule (suma -> numOperadores)
WARNING: rejected rule (restas -> numOperadores) in state 76
WARNING: reduce/reduce conflict in state 76 resolved using rule (suma -> numOperadores)
WARNING: rejected rule (multiplicacion -> numOperadores) in state 76
WARNING: reduce/reduce conflict in state 76 resolved using rule (suma -> numOperadores)
WARNING: rejected rule (divicion -> numOperadores) in state 76
WARNING: reduce/reduce conflict in state 77 resolved using rule (operacionesMath -> suma)
WARNING: rejected rule (numNegative -> <empty>) in state 77
WARNING: reduce/reduce conflict in state 78 resolved using rule (operacionesMath -> restas)
WARNING: rejected rule (numNegative -> <empty>) in state 78
WARNING: reduce/reduce conflict in state 79 resolved using rule (operacionesMath -> multiplicacion)
WARNING: rejected rule (numNegative -> <empty>) in state 79
WARNING: reduce/reduce conflict in state 80 resolved using rule (operacionesMath -> divicion)
WARNING: rejected rule (numNegative -> <empty>) in state 80
WARNING: reduce/reduce conflict in state 126 resolved using rule (enteros -> NUM)
WARNING: rejected rule (numNegative -> MINUS NUM) in state 126
WARNING: reduce/reduce conflict in state 155 resolved using rule (methodMap -> PERIOD CLEAR LPAREN RPAREN)
WARNING: rejected rule (methodSet -> PERIOD CLEAR LPAREN RPAREN) in state 155
WARNING: reduce/reduce conflict in state 168 resolved using rule (suma -> numOperadores PLUS NUM)
WARNING: rejected rule (enteros -> NUM) in state 168
WARNING: reduce/reduce conflict in state 172 resolved using rule (restas -> numOperadores MINUS NUM)
WARNING: rejected rule (enteros -> NUM) in state 172
WARNING: reduce/reduce conflict in state 176 resolved using rule (multiplicacion -> numOperadores TIMES NUM)
WARNING: rejected rule (enteros -> NUM) in state 176
WARNING: reduce/reduce conflict in state 180 resolved using rule (divicion -> numOperadores DIVIDE NUM)
WARNING: rejected rule (enteros -> NUM) in state 180
WARNING: Rule (controlExpression -> impresion) is never reduced
WARNING: Rule (methodSet -> PERIOD CLEAR LPAREN RPAREN) is never reduced
