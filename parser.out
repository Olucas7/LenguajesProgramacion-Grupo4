Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BREAK
    CASE
    CATCH
    CLASS
    CONTINUE
    DEBUGGER
    DEFAULT
    DIVIDE
    DIV_EQUAL
    DO
    EXPORT
    EXTENDS
    FINALLY
    FOR
    IMPORT
    IN
    INSTANCEOF
    MINUS_EQUAL
    MOD
    MOD_EQUAL
    MUL_EQUAL
    PLUS_EQUAL
    PRINT
    SWITCH
    THIS
    THROW
    TIMES
    TRY
    TWOPOINTS
    TYPEOF
    WITH
    YIELD

Grammar

Rule 0     S' -> sentencia
Rule 1     sentencia -> callMethods
Rule 2     sentencia -> varType ID EQUAL callMethods
Rule 3     sentencia -> callFunction
Rule 4     sentencia -> javaScript_param
Rule 5     sentencia -> varDeclaration
Rule 6     sentencia -> controlExpression
Rule 7     sentencia -> impresion
Rule 8     sentencia -> operacionesMath
Rule 9     sentencia -> declareteFunction
Rule 10    expression -> ID opConditional ID
Rule 11    expression -> ID opConditional NUM
Rule 12    expression -> NUM opConditional NUM
Rule 13    expression -> operacionesMath
Rule 14    controlExpression -> sentencias_if
Rule 15    controlExpression -> sentencias_if_else
Rule 16    controlExpression -> sentencias_while
Rule 17    controlExpression -> impresion
Rule 18    controlExpression -> impresion_vacio
Rule 19    opConditional -> ISEQUAL
Rule 20    opConditional -> IS_NOT_IDENTICAL
Rule 21    opConditional -> IS_IDENTICAL
Rule 22    opConditional -> GREATER
Rule 23    opConditional -> GREATEREQUAL
Rule 24    opConditional -> LESS
Rule 25    opConditional -> LESSEQUAL
Rule 26    operadorLogical -> AND
Rule 27    operadorLogical -> OR
Rule 28    operadorLogical -> NOT
Rule 29    sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
Rule 30    sentencias_if -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK
Rule 31    sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
Rule 32    sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
Rule 33    sentencias_while -> WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK
Rule 34    sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
Rule 35    impresion -> ALERT LPAREN expression RPAREN
Rule 36    impresion_vacio -> ALERT LPAREN RPAREN
Rule 37    javaScript_param -> STRING
Rule 38    javaScript_param -> NUM
Rule 39    javaScript_param -> boolean
Rule 40    javaScript_param -> ID
Rule 41    empty -> <empty>
Rule 42    boolean -> TRUE
Rule 43    boolean -> FALSE
Rule 44    varType -> LET
Rule 45    varType -> CONST
Rule 46    varType -> VAR
Rule 47    varType -> empty
Rule 48    varDeclaration -> varType ID EQUAL arrayDeclare COLON
Rule 49    varDeclaration -> varType ID EQUAL declareMap COLON
Rule 50    varDeclaration -> varType ID EQUAL declararSet COLON
Rule 51    callMethods -> ID methodArray COLON
Rule 52    callMethods -> ID methodSet COLON
Rule 53    callMethods -> ID methodMap COLON
Rule 54    arrayDeclare -> LBRACKET arrayValues RBRACKET
Rule 55    arrayDeclare -> NEW ARRAY LPAREN arrayValues RPAREN
Rule 56    arrayValues -> arrayValue
Rule 57    arrayValues -> arrayValue COMMA arrayValue
Rule 58    arrayValue -> LPAREN expression RPAREN
Rule 59    arrayValue -> ID
Rule 60    arrayValue -> NUM
Rule 61    arrayValue -> STRING
Rule 62    arrayValue -> boolean
Rule 63    arrayValue -> empty
Rule 64    methodArray -> PERIOD PUSH LPAREN arrayValue RPAREN
Rule 65    methodArray -> PERIOD UNSHIFT LPAREN arrayValue RPAREN
Rule 66    methodArray -> PERIOD POP LPAREN empty RPAREN
Rule 67    declareMap -> NEW MAP LPAREN iterable RPAREN
Rule 68    iterable -> arrayDeclare
Rule 69    iterable -> declararSet
Rule 70    iterable -> empty
Rule 71    methodMap -> PERIOD CLEAR LPAREN RPAREN
Rule 72    methodMap -> PERIOD LENGTH LPAREN RPAREN
Rule 73    declareteFunction -> FUNCTION ID LPAREN params RPAREN
Rule 74    declareteFunction -> FUNCTION ID LPAREN params RPAREN sentencesCmpt
Rule 75    declareteFunction -> varType ID EQUAL FUNCTION LPAREN params RPAREN
Rule 76    sentencesCmpt -> LBLOCK sentencia RBLOCK
Rule 77    sentencesCmpt -> LBLOCK sentencia RETURN RBLOCK
Rule 78    callFunction -> ID LPAREN params RPAREN
Rule 79    params -> paramList
Rule 80    params -> empty
Rule 81    param -> ID
Rule 82    param -> ID LBRACKET RBRACKET
Rule 83    paramList -> param
Rule 84    paramList -> param COMMA paramList
Rule 85    args -> argslist
Rule 86    args -> empty
Rule 87    args -> javaScript_param
Rule 88    argslist -> args
Rule 89    argslist -> args COMMA argslist
Rule 90    declararSet -> NEW SET LPAREN setValues RPAREN
Rule 91    contiene -> ID PERIOD HAS LPAREN params RPAREN
Rule 92    setValues -> setValue
Rule 93    setValues -> setValue COMMA setValue
Rule 94    setValue -> ID
Rule 95    setValue -> NUM
Rule 96    setValue -> STRING
Rule 97    setValue -> boolean
Rule 98    setValue -> empty
Rule 99    methodSet -> PERIOD ADD LPAREN setValue RPAREN
Rule 100   methodSet -> PERIOD DELETE LPAREN setValue RPAREN
Rule 101   methodSet -> PERIOD CLEAR LPAREN empty RPAREN
Rule 102   operacionesMath -> sumas
Rule 103   operacionesMath -> sumas operacionesMath
Rule 104   operacionesMath -> restas
Rule 105   operacionesMath -> restas operacionesMath
Rule 106   sumas -> numOperadores PLUS LPAREN numOperadores RPAREN
Rule 107   sumas -> numOperadores PLUS NUM
Rule 108   numOperadores -> enteros
Rule 109   numOperadores -> decimales
Rule 110   enteros -> NUM
Rule 111   enteros -> numNegative
Rule 112   numNegative -> MINUS NUM
Rule 113   numNegative -> <empty>
Rule 114   decimales -> enteros PERIOD NUM
Rule 115   restas -> numOperadores MINUS LPAREN numOperadores RPAREN
Rule 116   restas -> numOperadores MINUS NUM

Terminals, with rules where they appear

ADD                  : 99
ALERT                : 35 36
AND                  : 26
ARRAY                : 55
BREAK                : 
CASE                 : 
CATCH                : 
CLASS                : 
CLEAR                : 71 101
COLON                : 48 49 50 51 52 53
COMMA                : 57 84 89 93
CONST                : 45
CONTINUE             : 
DEBUGGER             : 
DEFAULT              : 
DELETE               : 100
DIVIDE               : 
DIV_EQUAL            : 
DO                   : 
ELSE                 : 31 32
EQUAL                : 2 48 49 50 75
EXPORT               : 
EXTENDS              : 
FALSE                : 43
FINALLY              : 
FOR                  : 
FUNCTION             : 73 74 75
GREATER              : 22
GREATEREQUAL         : 23
HAS                  : 91
ID                   : 2 10 10 11 40 48 49 50 51 52 53 59 73 74 75 78 81 82 91 94
IF                   : 29 30 31 32
IMPORT               : 
IN                   : 
INSTANCEOF           : 
ISEQUAL              : 19
IS_IDENTICAL         : 21
IS_NOT_IDENTICAL     : 20
LBLOCK               : 29 30 31 31 32 32 33 34 76 77
LBRACKET             : 54 82
LENGTH               : 72
LESS                 : 24
LESSEQUAL            : 25
LET                  : 44
LPAREN               : 29 30 31 32 33 34 35 36 55 58 64 65 66 67 71 72 73 74 75 78 90 91 99 100 101 106 115
MAP                  : 67
MINUS                : 112 115 116
MINUS_EQUAL          : 
MOD                  : 
MOD_EQUAL            : 
MUL_EQUAL            : 
NEW                  : 55 67 90
NOT                  : 28
NUM                  : 11 12 12 38 60 95 107 110 112 114 116
OR                   : 27
PERIOD               : 64 65 66 71 72 91 99 100 101 114
PLUS                 : 106 107
PLUS_EQUAL           : 
POP                  : 66
PRINT                : 
PUSH                 : 64
RBLOCK               : 29 30 31 31 32 32 33 34 76 77
RBRACKET             : 54 82
RETURN               : 77
RPAREN               : 29 30 31 32 33 34 35 36 55 58 64 65 66 67 71 72 73 74 75 78 90 91 99 100 101 106 115
SET                  : 90
STRING               : 37 61 96
SWITCH               : 
THIS                 : 
THROW                : 
TIMES                : 
TRUE                 : 42
TRY                  : 
TWOPOINTS            : 
TYPEOF               : 
UNSHIFT              : 65
VAR                  : 46
WHILE                : 33 34
WITH                 : 
YIELD                : 
error                : 

Nonterminals, with rules where they appear

args                 : 88 89
argslist             : 85 89
arrayDeclare         : 48 68
arrayValue           : 56 57 57 64 65
arrayValues          : 54 55
boolean              : 39 62 97
callFunction         : 3
callMethods          : 1 2
contiene             : 
controlExpression    : 6
decimales            : 109
declararSet          : 50 69
declareMap           : 49
declareteFunction    : 9
empty                : 47 63 66 70 80 86 98 101
enteros              : 108 114
expression           : 29 29 30 31 31 32 33 34 34 35 58
impresion            : 7 17
impresion_vacio      : 18
iterable             : 67
javaScript_param     : 4 87
methodArray          : 51
methodMap            : 53
methodSet            : 52
numNegative          : 111
numOperadores        : 106 106 107 115 115 116
opConditional        : 10 11 12
operacionesMath      : 8 13 103 105
operadorLogical      : 29 31 34
param                : 83 84
paramList            : 79 84
params               : 73 74 75 78 91
restas               : 104 105
sentencesCmpt        : 74
sentencia            : 29 30 31 31 32 32 33 34 76 77 0
sentencias_if        : 14
sentencias_if_else   : 15
sentencias_while     : 16
setValue             : 92 93 93 99 100
setValues            : 90
sumas                : 102 103
varDeclaration       : 5
varType              : 2 48 49 50 75

Parsing method: LALR

state 0

    (0) S' -> . sentencia
    (1) sentencia -> . callMethods
    (2) sentencia -> . varType ID EQUAL callMethods
    (3) sentencia -> . callFunction
    (4) sentencia -> . javaScript_param
    (5) sentencia -> . varDeclaration
    (6) sentencia -> . controlExpression
    (7) sentencia -> . impresion
    (8) sentencia -> . operacionesMath
    (9) sentencia -> . declareteFunction
    (51) callMethods -> . ID methodArray COLON
    (52) callMethods -> . ID methodSet COLON
    (53) callMethods -> . ID methodMap COLON
    (44) varType -> . LET
    (45) varType -> . CONST
    (46) varType -> . VAR
    (47) varType -> . empty
    (78) callFunction -> . ID LPAREN params RPAREN
    (37) javaScript_param -> . STRING
    (38) javaScript_param -> . NUM
    (39) javaScript_param -> . boolean
    (40) javaScript_param -> . ID
    (48) varDeclaration -> . varType ID EQUAL arrayDeclare COLON
    (49) varDeclaration -> . varType ID EQUAL declareMap COLON
    (50) varDeclaration -> . varType ID EQUAL declararSet COLON
    (14) controlExpression -> . sentencias_if
    (15) controlExpression -> . sentencias_if_else
    (16) controlExpression -> . sentencias_while
    (17) controlExpression -> . impresion
    (18) controlExpression -> . impresion_vacio
    (35) impresion -> . ALERT LPAREN expression RPAREN
    (102) operacionesMath -> . sumas
    (103) operacionesMath -> . sumas operacionesMath
    (104) operacionesMath -> . restas
    (105) operacionesMath -> . restas operacionesMath
    (73) declareteFunction -> . FUNCTION ID LPAREN params RPAREN
    (74) declareteFunction -> . FUNCTION ID LPAREN params RPAREN sentencesCmpt
    (75) declareteFunction -> . varType ID EQUAL FUNCTION LPAREN params RPAREN
    (41) empty -> .
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE
    (29) sentencias_if -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (30) sentencias_if -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (31) sentencias_if_else -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (32) sentencias_if_else -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (33) sentencias_while -> . WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (34) sentencias_while -> . WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (36) impresion_vacio -> . ALERT LPAREN RPAREN
    (106) sumas -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (107) sumas -> . numOperadores PLUS NUM
    (115) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (116) restas -> . numOperadores MINUS NUM
    (108) numOperadores -> . enteros
    (109) numOperadores -> . decimales
    (110) enteros -> . NUM
    (111) enteros -> . numNegative
    (114) decimales -> . enteros PERIOD NUM
    (112) numNegative -> . MINUS NUM
    (113) numNegative -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    ID              shift and go to state 4
    LET             shift and go to state 12
    CONST           shift and go to state 13
    VAR             shift and go to state 14
    STRING          shift and go to state 16
    NUM             shift and go to state 17
    ALERT           shift and go to state 23
    FUNCTION        shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    IF              shift and go to state 29
    WHILE           shift and go to state 30
    MINUS           shift and go to state 32
    PERIOD          reduce using rule 113 (numNegative -> .)
    PLUS            reduce using rule 113 (numNegative -> .)

  ! ID              [ reduce using rule 41 (empty -> .) ]
  ! MINUS           [ reduce using rule 113 (numNegative -> .) ]

    sentencia                      shift and go to state 1
    callMethods                    shift and go to state 2
    varType                        shift and go to state 3
    callFunction                   shift and go to state 5
    javaScript_param               shift and go to state 6
    varDeclaration                 shift and go to state 7
    controlExpression              shift and go to state 8
    impresion                      shift and go to state 9
    operacionesMath                shift and go to state 10
    declareteFunction              shift and go to state 11
    empty                          shift and go to state 15
    boolean                        shift and go to state 18
    sentencias_if                  shift and go to state 19
    sentencias_if_else             shift and go to state 20
    sentencias_while               shift and go to state 21
    impresion_vacio                shift and go to state 22
    sumas                          shift and go to state 24
    restas                         shift and go to state 25
    numOperadores                  shift and go to state 31
    enteros                        shift and go to state 33
    decimales                      shift and go to state 34
    numNegative                    shift and go to state 35

state 1

    (0) S' -> sentencia .



state 2

    (1) sentencia -> callMethods .

    $end            reduce using rule 1 (sentencia -> callMethods .)
    RBLOCK          reduce using rule 1 (sentencia -> callMethods .)
    RETURN          reduce using rule 1 (sentencia -> callMethods .)


state 3

    (2) sentencia -> varType . ID EQUAL callMethods
    (48) varDeclaration -> varType . ID EQUAL arrayDeclare COLON
    (49) varDeclaration -> varType . ID EQUAL declareMap COLON
    (50) varDeclaration -> varType . ID EQUAL declararSet COLON
    (75) declareteFunction -> varType . ID EQUAL FUNCTION LPAREN params RPAREN

    ID              shift and go to state 36


state 4

    (51) callMethods -> ID . methodArray COLON
    (52) callMethods -> ID . methodSet COLON
    (53) callMethods -> ID . methodMap COLON
    (78) callFunction -> ID . LPAREN params RPAREN
    (40) javaScript_param -> ID .
    (64) methodArray -> . PERIOD PUSH LPAREN arrayValue RPAREN
    (65) methodArray -> . PERIOD UNSHIFT LPAREN arrayValue RPAREN
    (66) methodArray -> . PERIOD POP LPAREN empty RPAREN
    (99) methodSet -> . PERIOD ADD LPAREN setValue RPAREN
    (100) methodSet -> . PERIOD DELETE LPAREN setValue RPAREN
    (101) methodSet -> . PERIOD CLEAR LPAREN empty RPAREN
    (71) methodMap -> . PERIOD CLEAR LPAREN RPAREN
    (72) methodMap -> . PERIOD LENGTH LPAREN RPAREN

    LPAREN          shift and go to state 40
    $end            reduce using rule 40 (javaScript_param -> ID .)
    RBLOCK          reduce using rule 40 (javaScript_param -> ID .)
    RETURN          reduce using rule 40 (javaScript_param -> ID .)
    PERIOD          shift and go to state 41

    methodArray                    shift and go to state 37
    methodSet                      shift and go to state 38
    methodMap                      shift and go to state 39

state 5

    (3) sentencia -> callFunction .

    $end            reduce using rule 3 (sentencia -> callFunction .)
    RBLOCK          reduce using rule 3 (sentencia -> callFunction .)
    RETURN          reduce using rule 3 (sentencia -> callFunction .)


state 6

    (4) sentencia -> javaScript_param .

    $end            reduce using rule 4 (sentencia -> javaScript_param .)
    RBLOCK          reduce using rule 4 (sentencia -> javaScript_param .)
    RETURN          reduce using rule 4 (sentencia -> javaScript_param .)


state 7

    (5) sentencia -> varDeclaration .

    $end            reduce using rule 5 (sentencia -> varDeclaration .)
    RBLOCK          reduce using rule 5 (sentencia -> varDeclaration .)
    RETURN          reduce using rule 5 (sentencia -> varDeclaration .)


state 8

    (6) sentencia -> controlExpression .

    $end            reduce using rule 6 (sentencia -> controlExpression .)
    RBLOCK          reduce using rule 6 (sentencia -> controlExpression .)
    RETURN          reduce using rule 6 (sentencia -> controlExpression .)


state 9

    (7) sentencia -> impresion .
    (17) controlExpression -> impresion .

  ! reduce/reduce conflict for $end resolved using rule 7 (sentencia -> impresion .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 7 (sentencia -> impresion .)
  ! reduce/reduce conflict for RETURN resolved using rule 7 (sentencia -> impresion .)
    $end            reduce using rule 7 (sentencia -> impresion .)
    RBLOCK          reduce using rule 7 (sentencia -> impresion .)
    RETURN          reduce using rule 7 (sentencia -> impresion .)

  ! $end            [ reduce using rule 17 (controlExpression -> impresion .) ]
  ! RBLOCK          [ reduce using rule 17 (controlExpression -> impresion .) ]
  ! RETURN          [ reduce using rule 17 (controlExpression -> impresion .) ]


state 10

    (8) sentencia -> operacionesMath .

    $end            reduce using rule 8 (sentencia -> operacionesMath .)
    RBLOCK          reduce using rule 8 (sentencia -> operacionesMath .)
    RETURN          reduce using rule 8 (sentencia -> operacionesMath .)


state 11

    (9) sentencia -> declareteFunction .

    $end            reduce using rule 9 (sentencia -> declareteFunction .)
    RBLOCK          reduce using rule 9 (sentencia -> declareteFunction .)
    RETURN          reduce using rule 9 (sentencia -> declareteFunction .)


state 12

    (44) varType -> LET .

    ID              reduce using rule 44 (varType -> LET .)


state 13

    (45) varType -> CONST .

    ID              reduce using rule 45 (varType -> CONST .)


state 14

    (46) varType -> VAR .

    ID              reduce using rule 46 (varType -> VAR .)


state 15

    (47) varType -> empty .

    ID              reduce using rule 47 (varType -> empty .)


state 16

    (37) javaScript_param -> STRING .

    $end            reduce using rule 37 (javaScript_param -> STRING .)
    RBLOCK          reduce using rule 37 (javaScript_param -> STRING .)
    RETURN          reduce using rule 37 (javaScript_param -> STRING .)


state 17

    (38) javaScript_param -> NUM .
    (110) enteros -> NUM .

    $end            reduce using rule 38 (javaScript_param -> NUM .)
    RBLOCK          reduce using rule 38 (javaScript_param -> NUM .)
    RETURN          reduce using rule 38 (javaScript_param -> NUM .)
    PERIOD          reduce using rule 110 (enteros -> NUM .)
    PLUS            reduce using rule 110 (enteros -> NUM .)
    MINUS           reduce using rule 110 (enteros -> NUM .)


state 18

    (39) javaScript_param -> boolean .

    $end            reduce using rule 39 (javaScript_param -> boolean .)
    RBLOCK          reduce using rule 39 (javaScript_param -> boolean .)
    RETURN          reduce using rule 39 (javaScript_param -> boolean .)


state 19

    (14) controlExpression -> sentencias_if .

    $end            reduce using rule 14 (controlExpression -> sentencias_if .)
    RBLOCK          reduce using rule 14 (controlExpression -> sentencias_if .)
    RETURN          reduce using rule 14 (controlExpression -> sentencias_if .)


state 20

    (15) controlExpression -> sentencias_if_else .

    $end            reduce using rule 15 (controlExpression -> sentencias_if_else .)
    RBLOCK          reduce using rule 15 (controlExpression -> sentencias_if_else .)
    RETURN          reduce using rule 15 (controlExpression -> sentencias_if_else .)


state 21

    (16) controlExpression -> sentencias_while .

    $end            reduce using rule 16 (controlExpression -> sentencias_while .)
    RBLOCK          reduce using rule 16 (controlExpression -> sentencias_while .)
    RETURN          reduce using rule 16 (controlExpression -> sentencias_while .)


state 22

    (18) controlExpression -> impresion_vacio .

    $end            reduce using rule 18 (controlExpression -> impresion_vacio .)
    RBLOCK          reduce using rule 18 (controlExpression -> impresion_vacio .)
    RETURN          reduce using rule 18 (controlExpression -> impresion_vacio .)


state 23

    (35) impresion -> ALERT . LPAREN expression RPAREN
    (36) impresion_vacio -> ALERT . LPAREN RPAREN

    LPAREN          shift and go to state 42


state 24

    (102) operacionesMath -> sumas .
    (103) operacionesMath -> sumas . operacionesMath
    (102) operacionesMath -> . sumas
    (103) operacionesMath -> . sumas operacionesMath
    (104) operacionesMath -> . restas
    (105) operacionesMath -> . restas operacionesMath
    (106) sumas -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (107) sumas -> . numOperadores PLUS NUM
    (115) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (116) restas -> . numOperadores MINUS NUM
    (108) numOperadores -> . enteros
    (109) numOperadores -> . decimales
    (110) enteros -> . NUM
    (111) enteros -> . numNegative
    (114) decimales -> . enteros PERIOD NUM
    (112) numNegative -> . MINUS NUM
    (113) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 102 (operacionesMath -> sumas .)
    RPAREN          reduce using rule 102 (operacionesMath -> sumas .)
    AND             reduce using rule 102 (operacionesMath -> sumas .)
    OR              reduce using rule 102 (operacionesMath -> sumas .)
    NOT             reduce using rule 102 (operacionesMath -> sumas .)
    RBLOCK          reduce using rule 102 (operacionesMath -> sumas .)
    RETURN          reduce using rule 102 (operacionesMath -> sumas .)
    NUM             shift and go to state 44
    MINUS           shift and go to state 32
    PERIOD          reduce using rule 113 (numNegative -> .)
    PLUS            reduce using rule 113 (numNegative -> .)

  ! MINUS           [ reduce using rule 113 (numNegative -> .) ]

    sumas                          shift and go to state 24
    operacionesMath                shift and go to state 43
    restas                         shift and go to state 25
    numOperadores                  shift and go to state 31
    enteros                        shift and go to state 33
    decimales                      shift and go to state 34
    numNegative                    shift and go to state 35

state 25

    (104) operacionesMath -> restas .
    (105) operacionesMath -> restas . operacionesMath
    (102) operacionesMath -> . sumas
    (103) operacionesMath -> . sumas operacionesMath
    (104) operacionesMath -> . restas
    (105) operacionesMath -> . restas operacionesMath
    (106) sumas -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (107) sumas -> . numOperadores PLUS NUM
    (115) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (116) restas -> . numOperadores MINUS NUM
    (108) numOperadores -> . enteros
    (109) numOperadores -> . decimales
    (110) enteros -> . NUM
    (111) enteros -> . numNegative
    (114) decimales -> . enteros PERIOD NUM
    (112) numNegative -> . MINUS NUM
    (113) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 104 (operacionesMath -> restas .)
    RPAREN          reduce using rule 104 (operacionesMath -> restas .)
    AND             reduce using rule 104 (operacionesMath -> restas .)
    OR              reduce using rule 104 (operacionesMath -> restas .)
    NOT             reduce using rule 104 (operacionesMath -> restas .)
    RBLOCK          reduce using rule 104 (operacionesMath -> restas .)
    RETURN          reduce using rule 104 (operacionesMath -> restas .)
    NUM             shift and go to state 44
    MINUS           shift and go to state 32
    PERIOD          reduce using rule 113 (numNegative -> .)
    PLUS            reduce using rule 113 (numNegative -> .)

  ! MINUS           [ reduce using rule 113 (numNegative -> .) ]

    restas                         shift and go to state 25
    operacionesMath                shift and go to state 45
    sumas                          shift and go to state 24
    numOperadores                  shift and go to state 31
    enteros                        shift and go to state 33
    decimales                      shift and go to state 34
    numNegative                    shift and go to state 35

state 26

    (73) declareteFunction -> FUNCTION . ID LPAREN params RPAREN
    (74) declareteFunction -> FUNCTION . ID LPAREN params RPAREN sentencesCmpt

    ID              shift and go to state 46


state 27

    (42) boolean -> TRUE .

    $end            reduce using rule 42 (boolean -> TRUE .)
    COMMA           reduce using rule 42 (boolean -> TRUE .)
    RBRACKET        reduce using rule 42 (boolean -> TRUE .)
    RPAREN          reduce using rule 42 (boolean -> TRUE .)
    RBLOCK          reduce using rule 42 (boolean -> TRUE .)
    RETURN          reduce using rule 42 (boolean -> TRUE .)


state 28

    (43) boolean -> FALSE .

    $end            reduce using rule 43 (boolean -> FALSE .)
    COMMA           reduce using rule 43 (boolean -> FALSE .)
    RBRACKET        reduce using rule 43 (boolean -> FALSE .)
    RPAREN          reduce using rule 43 (boolean -> FALSE .)
    RBLOCK          reduce using rule 43 (boolean -> FALSE .)
    RETURN          reduce using rule 43 (boolean -> FALSE .)


state 29

    (29) sentencias_if -> IF . LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (30) sentencias_if -> IF . LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (31) sentencias_if_else -> IF . LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (32) sentencias_if_else -> IF . LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK

    LPAREN          shift and go to state 47


state 30

    (33) sentencias_while -> WHILE . LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (34) sentencias_while -> WHILE . LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK

    LPAREN          shift and go to state 48


state 31

    (106) sumas -> numOperadores . PLUS LPAREN numOperadores RPAREN
    (107) sumas -> numOperadores . PLUS NUM
    (115) restas -> numOperadores . MINUS LPAREN numOperadores RPAREN
    (116) restas -> numOperadores . MINUS NUM

    PLUS            shift and go to state 49
    MINUS           shift and go to state 50


state 32

    (112) numNegative -> MINUS . NUM

    NUM             shift and go to state 51


state 33

    (108) numOperadores -> enteros .
    (114) decimales -> enteros . PERIOD NUM

    PLUS            reduce using rule 108 (numOperadores -> enteros .)
    MINUS           reduce using rule 108 (numOperadores -> enteros .)
    RPAREN          reduce using rule 108 (numOperadores -> enteros .)
    PERIOD          shift and go to state 52


state 34

    (109) numOperadores -> decimales .

    PLUS            reduce using rule 109 (numOperadores -> decimales .)
    MINUS           reduce using rule 109 (numOperadores -> decimales .)
    RPAREN          reduce using rule 109 (numOperadores -> decimales .)


state 35

    (111) enteros -> numNegative .

    PERIOD          reduce using rule 111 (enteros -> numNegative .)
    PLUS            reduce using rule 111 (enteros -> numNegative .)
    MINUS           reduce using rule 111 (enteros -> numNegative .)
    RPAREN          reduce using rule 111 (enteros -> numNegative .)


state 36

    (2) sentencia -> varType ID . EQUAL callMethods
    (48) varDeclaration -> varType ID . EQUAL arrayDeclare COLON
    (49) varDeclaration -> varType ID . EQUAL declareMap COLON
    (50) varDeclaration -> varType ID . EQUAL declararSet COLON
    (75) declareteFunction -> varType ID . EQUAL FUNCTION LPAREN params RPAREN

    EQUAL           shift and go to state 53


state 37

    (51) callMethods -> ID methodArray . COLON

    COLON           shift and go to state 54


state 38

    (52) callMethods -> ID methodSet . COLON

    COLON           shift and go to state 55


state 39

    (53) callMethods -> ID methodMap . COLON

    COLON           shift and go to state 56


state 40

    (78) callFunction -> ID LPAREN . params RPAREN
    (79) params -> . paramList
    (80) params -> . empty
    (83) paramList -> . param
    (84) paramList -> . param COMMA paramList
    (41) empty -> .
    (81) param -> . ID
    (82) param -> . ID LBRACKET RBRACKET

    RPAREN          reduce using rule 41 (empty -> .)
    ID              shift and go to state 57

    params                         shift and go to state 58
    paramList                      shift and go to state 59
    empty                          shift and go to state 60
    param                          shift and go to state 61

state 41

    (64) methodArray -> PERIOD . PUSH LPAREN arrayValue RPAREN
    (65) methodArray -> PERIOD . UNSHIFT LPAREN arrayValue RPAREN
    (66) methodArray -> PERIOD . POP LPAREN empty RPAREN
    (99) methodSet -> PERIOD . ADD LPAREN setValue RPAREN
    (100) methodSet -> PERIOD . DELETE LPAREN setValue RPAREN
    (101) methodSet -> PERIOD . CLEAR LPAREN empty RPAREN
    (71) methodMap -> PERIOD . CLEAR LPAREN RPAREN
    (72) methodMap -> PERIOD . LENGTH LPAREN RPAREN

    PUSH            shift and go to state 62
    UNSHIFT         shift and go to state 63
    POP             shift and go to state 64
    ADD             shift and go to state 65
    DELETE          shift and go to state 66
    CLEAR           shift and go to state 67
    LENGTH          shift and go to state 68


state 42

    (35) impresion -> ALERT LPAREN . expression RPAREN
    (36) impresion_vacio -> ALERT LPAREN . RPAREN
    (10) expression -> . ID opConditional ID
    (11) expression -> . ID opConditional NUM
    (12) expression -> . NUM opConditional NUM
    (13) expression -> . operacionesMath
    (102) operacionesMath -> . sumas
    (103) operacionesMath -> . sumas operacionesMath
    (104) operacionesMath -> . restas
    (105) operacionesMath -> . restas operacionesMath
    (106) sumas -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (107) sumas -> . numOperadores PLUS NUM
    (115) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (116) restas -> . numOperadores MINUS NUM
    (108) numOperadores -> . enteros
    (109) numOperadores -> . decimales
    (110) enteros -> . NUM
    (111) enteros -> . numNegative
    (114) decimales -> . enteros PERIOD NUM
    (112) numNegative -> . MINUS NUM
    (113) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
    RPAREN          shift and go to state 70
    ID              shift and go to state 71
    NUM             shift and go to state 72
    MINUS           shift and go to state 32
    PERIOD          reduce using rule 113 (numNegative -> .)
    PLUS            reduce using rule 113 (numNegative -> .)

  ! MINUS           [ reduce using rule 113 (numNegative -> .) ]

    expression                     shift and go to state 69
    operacionesMath                shift and go to state 73
    sumas                          shift and go to state 24
    restas                         shift and go to state 25
    numOperadores                  shift and go to state 31
    enteros                        shift and go to state 33
    decimales                      shift and go to state 34
    numNegative                    shift and go to state 35

state 43

    (103) operacionesMath -> sumas operacionesMath .

    $end            reduce using rule 103 (operacionesMath -> sumas operacionesMath .)
    RPAREN          reduce using rule 103 (operacionesMath -> sumas operacionesMath .)
    AND             reduce using rule 103 (operacionesMath -> sumas operacionesMath .)
    OR              reduce using rule 103 (operacionesMath -> sumas operacionesMath .)
    NOT             reduce using rule 103 (operacionesMath -> sumas operacionesMath .)
    RBLOCK          reduce using rule 103 (operacionesMath -> sumas operacionesMath .)
    RETURN          reduce using rule 103 (operacionesMath -> sumas operacionesMath .)


state 44

    (110) enteros -> NUM .

    PERIOD          reduce using rule 110 (enteros -> NUM .)
    PLUS            reduce using rule 110 (enteros -> NUM .)
    MINUS           reduce using rule 110 (enteros -> NUM .)
    RPAREN          reduce using rule 110 (enteros -> NUM .)


state 45

    (105) operacionesMath -> restas operacionesMath .

    $end            reduce using rule 105 (operacionesMath -> restas operacionesMath .)
    RPAREN          reduce using rule 105 (operacionesMath -> restas operacionesMath .)
    AND             reduce using rule 105 (operacionesMath -> restas operacionesMath .)
    OR              reduce using rule 105 (operacionesMath -> restas operacionesMath .)
    NOT             reduce using rule 105 (operacionesMath -> restas operacionesMath .)
    RBLOCK          reduce using rule 105 (operacionesMath -> restas operacionesMath .)
    RETURN          reduce using rule 105 (operacionesMath -> restas operacionesMath .)


state 46

    (73) declareteFunction -> FUNCTION ID . LPAREN params RPAREN
    (74) declareteFunction -> FUNCTION ID . LPAREN params RPAREN sentencesCmpt

    LPAREN          shift and go to state 74


state 47

    (29) sentencias_if -> IF LPAREN . expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (30) sentencias_if -> IF LPAREN . expression RPAREN LBLOCK sentencia RBLOCK
    (31) sentencias_if_else -> IF LPAREN . expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (32) sentencias_if_else -> IF LPAREN . expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (10) expression -> . ID opConditional ID
    (11) expression -> . ID opConditional NUM
    (12) expression -> . NUM opConditional NUM
    (13) expression -> . operacionesMath
    (102) operacionesMath -> . sumas
    (103) operacionesMath -> . sumas operacionesMath
    (104) operacionesMath -> . restas
    (105) operacionesMath -> . restas operacionesMath
    (106) sumas -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (107) sumas -> . numOperadores PLUS NUM
    (115) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (116) restas -> . numOperadores MINUS NUM
    (108) numOperadores -> . enteros
    (109) numOperadores -> . decimales
    (110) enteros -> . NUM
    (111) enteros -> . numNegative
    (114) decimales -> . enteros PERIOD NUM
    (112) numNegative -> . MINUS NUM
    (113) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
    ID              shift and go to state 71
    NUM             shift and go to state 72
    MINUS           shift and go to state 32
    PERIOD          reduce using rule 113 (numNegative -> .)
    PLUS            reduce using rule 113 (numNegative -> .)

  ! MINUS           [ reduce using rule 113 (numNegative -> .) ]

    expression                     shift and go to state 75
    operacionesMath                shift and go to state 73
    sumas                          shift and go to state 24
    restas                         shift and go to state 25
    numOperadores                  shift and go to state 31
    enteros                        shift and go to state 33
    decimales                      shift and go to state 34
    numNegative                    shift and go to state 35

state 48

    (33) sentencias_while -> WHILE LPAREN . expression RPAREN LBLOCK sentencia RBLOCK
    (34) sentencias_while -> WHILE LPAREN . expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (10) expression -> . ID opConditional ID
    (11) expression -> . ID opConditional NUM
    (12) expression -> . NUM opConditional NUM
    (13) expression -> . operacionesMath
    (102) operacionesMath -> . sumas
    (103) operacionesMath -> . sumas operacionesMath
    (104) operacionesMath -> . restas
    (105) operacionesMath -> . restas operacionesMath
    (106) sumas -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (107) sumas -> . numOperadores PLUS NUM
    (115) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (116) restas -> . numOperadores MINUS NUM
    (108) numOperadores -> . enteros
    (109) numOperadores -> . decimales
    (110) enteros -> . NUM
    (111) enteros -> . numNegative
    (114) decimales -> . enteros PERIOD NUM
    (112) numNegative -> . MINUS NUM
    (113) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
    ID              shift and go to state 71
    NUM             shift and go to state 72
    MINUS           shift and go to state 32
    PERIOD          reduce using rule 113 (numNegative -> .)
    PLUS            reduce using rule 113 (numNegative -> .)

  ! MINUS           [ reduce using rule 113 (numNegative -> .) ]

    expression                     shift and go to state 76
    operacionesMath                shift and go to state 73
    sumas                          shift and go to state 24
    restas                         shift and go to state 25
    numOperadores                  shift and go to state 31
    enteros                        shift and go to state 33
    decimales                      shift and go to state 34
    numNegative                    shift and go to state 35

state 49

    (106) sumas -> numOperadores PLUS . LPAREN numOperadores RPAREN
    (107) sumas -> numOperadores PLUS . NUM

    LPAREN          shift and go to state 77
    NUM             shift and go to state 78


state 50

    (115) restas -> numOperadores MINUS . LPAREN numOperadores RPAREN
    (116) restas -> numOperadores MINUS . NUM

    LPAREN          shift and go to state 79
    NUM             shift and go to state 80


state 51

    (112) numNegative -> MINUS NUM .

    PERIOD          reduce using rule 112 (numNegative -> MINUS NUM .)
    PLUS            reduce using rule 112 (numNegative -> MINUS NUM .)
    MINUS           reduce using rule 112 (numNegative -> MINUS NUM .)
    RPAREN          reduce using rule 112 (numNegative -> MINUS NUM .)


state 52

    (114) decimales -> enteros PERIOD . NUM

    NUM             shift and go to state 81


state 53

    (2) sentencia -> varType ID EQUAL . callMethods
    (48) varDeclaration -> varType ID EQUAL . arrayDeclare COLON
    (49) varDeclaration -> varType ID EQUAL . declareMap COLON
    (50) varDeclaration -> varType ID EQUAL . declararSet COLON
    (75) declareteFunction -> varType ID EQUAL . FUNCTION LPAREN params RPAREN
    (51) callMethods -> . ID methodArray COLON
    (52) callMethods -> . ID methodSet COLON
    (53) callMethods -> . ID methodMap COLON
    (54) arrayDeclare -> . LBRACKET arrayValues RBRACKET
    (55) arrayDeclare -> . NEW ARRAY LPAREN arrayValues RPAREN
    (67) declareMap -> . NEW MAP LPAREN iterable RPAREN
    (90) declararSet -> . NEW SET LPAREN setValues RPAREN

    FUNCTION        shift and go to state 87
    ID              shift and go to state 82
    LBRACKET        shift and go to state 88
    NEW             shift and go to state 89

    callMethods                    shift and go to state 83
    arrayDeclare                   shift and go to state 84
    declareMap                     shift and go to state 85
    declararSet                    shift and go to state 86

state 54

    (51) callMethods -> ID methodArray COLON .

    $end            reduce using rule 51 (callMethods -> ID methodArray COLON .)
    RBLOCK          reduce using rule 51 (callMethods -> ID methodArray COLON .)
    RETURN          reduce using rule 51 (callMethods -> ID methodArray COLON .)


state 55

    (52) callMethods -> ID methodSet COLON .

    $end            reduce using rule 52 (callMethods -> ID methodSet COLON .)
    RBLOCK          reduce using rule 52 (callMethods -> ID methodSet COLON .)
    RETURN          reduce using rule 52 (callMethods -> ID methodSet COLON .)


state 56

    (53) callMethods -> ID methodMap COLON .

    $end            reduce using rule 53 (callMethods -> ID methodMap COLON .)
    RBLOCK          reduce using rule 53 (callMethods -> ID methodMap COLON .)
    RETURN          reduce using rule 53 (callMethods -> ID methodMap COLON .)


state 57

    (81) param -> ID .
    (82) param -> ID . LBRACKET RBRACKET

    COMMA           reduce using rule 81 (param -> ID .)
    RPAREN          reduce using rule 81 (param -> ID .)
    LBRACKET        shift and go to state 90


state 58

    (78) callFunction -> ID LPAREN params . RPAREN

    RPAREN          shift and go to state 91


state 59

    (79) params -> paramList .

    RPAREN          reduce using rule 79 (params -> paramList .)


state 60

    (80) params -> empty .

    RPAREN          reduce using rule 80 (params -> empty .)


state 61

    (83) paramList -> param .
    (84) paramList -> param . COMMA paramList

    RPAREN          reduce using rule 83 (paramList -> param .)
    COMMA           shift and go to state 92


state 62

    (64) methodArray -> PERIOD PUSH . LPAREN arrayValue RPAREN

    LPAREN          shift and go to state 93


state 63

    (65) methodArray -> PERIOD UNSHIFT . LPAREN arrayValue RPAREN

    LPAREN          shift and go to state 94


state 64

    (66) methodArray -> PERIOD POP . LPAREN empty RPAREN

    LPAREN          shift and go to state 95


state 65

    (99) methodSet -> PERIOD ADD . LPAREN setValue RPAREN

    LPAREN          shift and go to state 96


state 66

    (100) methodSet -> PERIOD DELETE . LPAREN setValue RPAREN

    LPAREN          shift and go to state 97


state 67

    (101) methodSet -> PERIOD CLEAR . LPAREN empty RPAREN
    (71) methodMap -> PERIOD CLEAR . LPAREN RPAREN

    LPAREN          shift and go to state 98


state 68

    (72) methodMap -> PERIOD LENGTH . LPAREN RPAREN

    LPAREN          shift and go to state 99


state 69

    (35) impresion -> ALERT LPAREN expression . RPAREN

    RPAREN          shift and go to state 100


state 70

    (36) impresion_vacio -> ALERT LPAREN RPAREN .

    $end            reduce using rule 36 (impresion_vacio -> ALERT LPAREN RPAREN .)
    RBLOCK          reduce using rule 36 (impresion_vacio -> ALERT LPAREN RPAREN .)
    RETURN          reduce using rule 36 (impresion_vacio -> ALERT LPAREN RPAREN .)


state 71

    (10) expression -> ID . opConditional ID
    (11) expression -> ID . opConditional NUM
    (19) opConditional -> . ISEQUAL
    (20) opConditional -> . IS_NOT_IDENTICAL
    (21) opConditional -> . IS_IDENTICAL
    (22) opConditional -> . GREATER
    (23) opConditional -> . GREATEREQUAL
    (24) opConditional -> . LESS
    (25) opConditional -> . LESSEQUAL

    ISEQUAL         shift and go to state 102
    IS_NOT_IDENTICAL shift and go to state 103
    IS_IDENTICAL    shift and go to state 104
    GREATER         shift and go to state 105
    GREATEREQUAL    shift and go to state 106
    LESS            shift and go to state 107
    LESSEQUAL       shift and go to state 108

    opConditional                  shift and go to state 101

state 72

    (12) expression -> NUM . opConditional NUM
    (110) enteros -> NUM .
    (19) opConditional -> . ISEQUAL
    (20) opConditional -> . IS_NOT_IDENTICAL
    (21) opConditional -> . IS_IDENTICAL
    (22) opConditional -> . GREATER
    (23) opConditional -> . GREATEREQUAL
    (24) opConditional -> . LESS
    (25) opConditional -> . LESSEQUAL

    PERIOD          reduce using rule 110 (enteros -> NUM .)
    PLUS            reduce using rule 110 (enteros -> NUM .)
    MINUS           reduce using rule 110 (enteros -> NUM .)
    ISEQUAL         shift and go to state 102
    IS_NOT_IDENTICAL shift and go to state 103
    IS_IDENTICAL    shift and go to state 104
    GREATER         shift and go to state 105
    GREATEREQUAL    shift and go to state 106
    LESS            shift and go to state 107
    LESSEQUAL       shift and go to state 108

    opConditional                  shift and go to state 109

state 73

    (13) expression -> operacionesMath .

    RPAREN          reduce using rule 13 (expression -> operacionesMath .)
    AND             reduce using rule 13 (expression -> operacionesMath .)
    OR              reduce using rule 13 (expression -> operacionesMath .)
    NOT             reduce using rule 13 (expression -> operacionesMath .)


state 74

    (73) declareteFunction -> FUNCTION ID LPAREN . params RPAREN
    (74) declareteFunction -> FUNCTION ID LPAREN . params RPAREN sentencesCmpt
    (79) params -> . paramList
    (80) params -> . empty
    (83) paramList -> . param
    (84) paramList -> . param COMMA paramList
    (41) empty -> .
    (81) param -> . ID
    (82) param -> . ID LBRACKET RBRACKET

    RPAREN          reduce using rule 41 (empty -> .)
    ID              shift and go to state 57

    params                         shift and go to state 110
    paramList                      shift and go to state 59
    empty                          shift and go to state 60
    param                          shift and go to state 61

state 75

    (29) sentencias_if -> IF LPAREN expression . operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (30) sentencias_if -> IF LPAREN expression . RPAREN LBLOCK sentencia RBLOCK
    (31) sentencias_if_else -> IF LPAREN expression . operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (32) sentencias_if_else -> IF LPAREN expression . RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (26) operadorLogical -> . AND
    (27) operadorLogical -> . OR
    (28) operadorLogical -> . NOT

    RPAREN          shift and go to state 112
    AND             shift and go to state 113
    OR              shift and go to state 114
    NOT             shift and go to state 115

    operadorLogical                shift and go to state 111

state 76

    (33) sentencias_while -> WHILE LPAREN expression . RPAREN LBLOCK sentencia RBLOCK
    (34) sentencias_while -> WHILE LPAREN expression . operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (26) operadorLogical -> . AND
    (27) operadorLogical -> . OR
    (28) operadorLogical -> . NOT

    RPAREN          shift and go to state 116
    AND             shift and go to state 113
    OR              shift and go to state 114
    NOT             shift and go to state 115

    operadorLogical                shift and go to state 117

state 77

    (106) sumas -> numOperadores PLUS LPAREN . numOperadores RPAREN
    (108) numOperadores -> . enteros
    (109) numOperadores -> . decimales
    (110) enteros -> . NUM
    (111) enteros -> . numNegative
    (114) decimales -> . enteros PERIOD NUM
    (112) numNegative -> . MINUS NUM
    (113) numNegative -> .

    NUM             shift and go to state 44
    MINUS           shift and go to state 32
    PERIOD          reduce using rule 113 (numNegative -> .)
    RPAREN          reduce using rule 113 (numNegative -> .)

    numOperadores                  shift and go to state 118
    enteros                        shift and go to state 33
    decimales                      shift and go to state 34
    numNegative                    shift and go to state 35

state 78

    (107) sumas -> numOperadores PLUS NUM .

    NUM             reduce using rule 107 (sumas -> numOperadores PLUS NUM .)
    MINUS           reduce using rule 107 (sumas -> numOperadores PLUS NUM .)
    PLUS            reduce using rule 107 (sumas -> numOperadores PLUS NUM .)
    PERIOD          reduce using rule 107 (sumas -> numOperadores PLUS NUM .)
    $end            reduce using rule 107 (sumas -> numOperadores PLUS NUM .)
    RPAREN          reduce using rule 107 (sumas -> numOperadores PLUS NUM .)
    AND             reduce using rule 107 (sumas -> numOperadores PLUS NUM .)
    OR              reduce using rule 107 (sumas -> numOperadores PLUS NUM .)
    NOT             reduce using rule 107 (sumas -> numOperadores PLUS NUM .)
    RBLOCK          reduce using rule 107 (sumas -> numOperadores PLUS NUM .)
    RETURN          reduce using rule 107 (sumas -> numOperadores PLUS NUM .)


state 79

    (115) restas -> numOperadores MINUS LPAREN . numOperadores RPAREN
    (108) numOperadores -> . enteros
    (109) numOperadores -> . decimales
    (110) enteros -> . NUM
    (111) enteros -> . numNegative
    (114) decimales -> . enteros PERIOD NUM
    (112) numNegative -> . MINUS NUM
    (113) numNegative -> .

    NUM             shift and go to state 44
    MINUS           shift and go to state 32
    PERIOD          reduce using rule 113 (numNegative -> .)
    RPAREN          reduce using rule 113 (numNegative -> .)

    numOperadores                  shift and go to state 119
    enteros                        shift and go to state 33
    decimales                      shift and go to state 34
    numNegative                    shift and go to state 35

state 80

    (116) restas -> numOperadores MINUS NUM .

    NUM             reduce using rule 116 (restas -> numOperadores MINUS NUM .)
    MINUS           reduce using rule 116 (restas -> numOperadores MINUS NUM .)
    PLUS            reduce using rule 116 (restas -> numOperadores MINUS NUM .)
    PERIOD          reduce using rule 116 (restas -> numOperadores MINUS NUM .)
    $end            reduce using rule 116 (restas -> numOperadores MINUS NUM .)
    RPAREN          reduce using rule 116 (restas -> numOperadores MINUS NUM .)
    AND             reduce using rule 116 (restas -> numOperadores MINUS NUM .)
    OR              reduce using rule 116 (restas -> numOperadores MINUS NUM .)
    NOT             reduce using rule 116 (restas -> numOperadores MINUS NUM .)
    RBLOCK          reduce using rule 116 (restas -> numOperadores MINUS NUM .)
    RETURN          reduce using rule 116 (restas -> numOperadores MINUS NUM .)


state 81

    (114) decimales -> enteros PERIOD NUM .

    PLUS            reduce using rule 114 (decimales -> enteros PERIOD NUM .)
    MINUS           reduce using rule 114 (decimales -> enteros PERIOD NUM .)
    RPAREN          reduce using rule 114 (decimales -> enteros PERIOD NUM .)


state 82

    (51) callMethods -> ID . methodArray COLON
    (52) callMethods -> ID . methodSet COLON
    (53) callMethods -> ID . methodMap COLON
    (64) methodArray -> . PERIOD PUSH LPAREN arrayValue RPAREN
    (65) methodArray -> . PERIOD UNSHIFT LPAREN arrayValue RPAREN
    (66) methodArray -> . PERIOD POP LPAREN empty RPAREN
    (99) methodSet -> . PERIOD ADD LPAREN setValue RPAREN
    (100) methodSet -> . PERIOD DELETE LPAREN setValue RPAREN
    (101) methodSet -> . PERIOD CLEAR LPAREN empty RPAREN
    (71) methodMap -> . PERIOD CLEAR LPAREN RPAREN
    (72) methodMap -> . PERIOD LENGTH LPAREN RPAREN

    PERIOD          shift and go to state 41

    methodArray                    shift and go to state 37
    methodSet                      shift and go to state 38
    methodMap                      shift and go to state 39

state 83

    (2) sentencia -> varType ID EQUAL callMethods .

    $end            reduce using rule 2 (sentencia -> varType ID EQUAL callMethods .)
    RBLOCK          reduce using rule 2 (sentencia -> varType ID EQUAL callMethods .)
    RETURN          reduce using rule 2 (sentencia -> varType ID EQUAL callMethods .)


state 84

    (48) varDeclaration -> varType ID EQUAL arrayDeclare . COLON

    COLON           shift and go to state 120


state 85

    (49) varDeclaration -> varType ID EQUAL declareMap . COLON

    COLON           shift and go to state 121


state 86

    (50) varDeclaration -> varType ID EQUAL declararSet . COLON

    COLON           shift and go to state 122


state 87

    (75) declareteFunction -> varType ID EQUAL FUNCTION . LPAREN params RPAREN

    LPAREN          shift and go to state 123


state 88

    (54) arrayDeclare -> LBRACKET . arrayValues RBRACKET
    (56) arrayValues -> . arrayValue
    (57) arrayValues -> . arrayValue COMMA arrayValue
    (58) arrayValue -> . LPAREN expression RPAREN
    (59) arrayValue -> . ID
    (60) arrayValue -> . NUM
    (61) arrayValue -> . STRING
    (62) arrayValue -> . boolean
    (63) arrayValue -> . empty
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE
    (41) empty -> .

    LPAREN          shift and go to state 126
    ID              shift and go to state 127
    NUM             shift and go to state 128
    STRING          shift and go to state 129
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    COMMA           reduce using rule 41 (empty -> .)
    RBRACKET        reduce using rule 41 (empty -> .)

    arrayValues                    shift and go to state 124
    arrayValue                     shift and go to state 125
    boolean                        shift and go to state 130
    empty                          shift and go to state 131

state 89

    (55) arrayDeclare -> NEW . ARRAY LPAREN arrayValues RPAREN
    (67) declareMap -> NEW . MAP LPAREN iterable RPAREN
    (90) declararSet -> NEW . SET LPAREN setValues RPAREN

    ARRAY           shift and go to state 132
    MAP             shift and go to state 133
    SET             shift and go to state 134


state 90

    (82) param -> ID LBRACKET . RBRACKET

    RBRACKET        shift and go to state 135


state 91

    (78) callFunction -> ID LPAREN params RPAREN .

    $end            reduce using rule 78 (callFunction -> ID LPAREN params RPAREN .)
    RBLOCK          reduce using rule 78 (callFunction -> ID LPAREN params RPAREN .)
    RETURN          reduce using rule 78 (callFunction -> ID LPAREN params RPAREN .)


state 92

    (84) paramList -> param COMMA . paramList
    (83) paramList -> . param
    (84) paramList -> . param COMMA paramList
    (81) param -> . ID
    (82) param -> . ID LBRACKET RBRACKET

    ID              shift and go to state 57

    param                          shift and go to state 61
    paramList                      shift and go to state 136

state 93

    (64) methodArray -> PERIOD PUSH LPAREN . arrayValue RPAREN
    (58) arrayValue -> . LPAREN expression RPAREN
    (59) arrayValue -> . ID
    (60) arrayValue -> . NUM
    (61) arrayValue -> . STRING
    (62) arrayValue -> . boolean
    (63) arrayValue -> . empty
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE
    (41) empty -> .

    LPAREN          shift and go to state 126
    ID              shift and go to state 127
    NUM             shift and go to state 128
    STRING          shift and go to state 129
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    RPAREN          reduce using rule 41 (empty -> .)

    arrayValue                     shift and go to state 137
    boolean                        shift and go to state 130
    empty                          shift and go to state 131

state 94

    (65) methodArray -> PERIOD UNSHIFT LPAREN . arrayValue RPAREN
    (58) arrayValue -> . LPAREN expression RPAREN
    (59) arrayValue -> . ID
    (60) arrayValue -> . NUM
    (61) arrayValue -> . STRING
    (62) arrayValue -> . boolean
    (63) arrayValue -> . empty
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE
    (41) empty -> .

    LPAREN          shift and go to state 126
    ID              shift and go to state 127
    NUM             shift and go to state 128
    STRING          shift and go to state 129
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    RPAREN          reduce using rule 41 (empty -> .)

    arrayValue                     shift and go to state 138
    boolean                        shift and go to state 130
    empty                          shift and go to state 131

state 95

    (66) methodArray -> PERIOD POP LPAREN . empty RPAREN
    (41) empty -> .

    RPAREN          reduce using rule 41 (empty -> .)

    empty                          shift and go to state 139

state 96

    (99) methodSet -> PERIOD ADD LPAREN . setValue RPAREN
    (94) setValue -> . ID
    (95) setValue -> . NUM
    (96) setValue -> . STRING
    (97) setValue -> . boolean
    (98) setValue -> . empty
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE
    (41) empty -> .

    ID              shift and go to state 141
    NUM             shift and go to state 142
    STRING          shift and go to state 143
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    RPAREN          reduce using rule 41 (empty -> .)

    setValue                       shift and go to state 140
    boolean                        shift and go to state 144
    empty                          shift and go to state 145

state 97

    (100) methodSet -> PERIOD DELETE LPAREN . setValue RPAREN
    (94) setValue -> . ID
    (95) setValue -> . NUM
    (96) setValue -> . STRING
    (97) setValue -> . boolean
    (98) setValue -> . empty
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE
    (41) empty -> .

    ID              shift and go to state 141
    NUM             shift and go to state 142
    STRING          shift and go to state 143
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    RPAREN          reduce using rule 41 (empty -> .)

    setValue                       shift and go to state 146
    boolean                        shift and go to state 144
    empty                          shift and go to state 145

state 98

    (101) methodSet -> PERIOD CLEAR LPAREN . empty RPAREN
    (71) methodMap -> PERIOD CLEAR LPAREN . RPAREN
    (41) empty -> .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 148

  ! RPAREN          [ reduce using rule 41 (empty -> .) ]

    empty                          shift and go to state 147

state 99

    (72) methodMap -> PERIOD LENGTH LPAREN . RPAREN

    RPAREN          shift and go to state 149


state 100

    (35) impresion -> ALERT LPAREN expression RPAREN .

    $end            reduce using rule 35 (impresion -> ALERT LPAREN expression RPAREN .)
    RBLOCK          reduce using rule 35 (impresion -> ALERT LPAREN expression RPAREN .)
    RETURN          reduce using rule 35 (impresion -> ALERT LPAREN expression RPAREN .)


state 101

    (10) expression -> ID opConditional . ID
    (11) expression -> ID opConditional . NUM

    ID              shift and go to state 150
    NUM             shift and go to state 151


state 102

    (19) opConditional -> ISEQUAL .

    ID              reduce using rule 19 (opConditional -> ISEQUAL .)
    NUM             reduce using rule 19 (opConditional -> ISEQUAL .)


state 103

    (20) opConditional -> IS_NOT_IDENTICAL .

    ID              reduce using rule 20 (opConditional -> IS_NOT_IDENTICAL .)
    NUM             reduce using rule 20 (opConditional -> IS_NOT_IDENTICAL .)


state 104

    (21) opConditional -> IS_IDENTICAL .

    ID              reduce using rule 21 (opConditional -> IS_IDENTICAL .)
    NUM             reduce using rule 21 (opConditional -> IS_IDENTICAL .)


state 105

    (22) opConditional -> GREATER .

    ID              reduce using rule 22 (opConditional -> GREATER .)
    NUM             reduce using rule 22 (opConditional -> GREATER .)


state 106

    (23) opConditional -> GREATEREQUAL .

    ID              reduce using rule 23 (opConditional -> GREATEREQUAL .)
    NUM             reduce using rule 23 (opConditional -> GREATEREQUAL .)


state 107

    (24) opConditional -> LESS .

    ID              reduce using rule 24 (opConditional -> LESS .)
    NUM             reduce using rule 24 (opConditional -> LESS .)


state 108

    (25) opConditional -> LESSEQUAL .

    ID              reduce using rule 25 (opConditional -> LESSEQUAL .)
    NUM             reduce using rule 25 (opConditional -> LESSEQUAL .)


state 109

    (12) expression -> NUM opConditional . NUM

    NUM             shift and go to state 152


state 110

    (73) declareteFunction -> FUNCTION ID LPAREN params . RPAREN
    (74) declareteFunction -> FUNCTION ID LPAREN params . RPAREN sentencesCmpt

    RPAREN          shift and go to state 153


state 111

    (29) sentencias_if -> IF LPAREN expression operadorLogical . expression RPAREN LBLOCK sentencia RBLOCK
    (31) sentencias_if_else -> IF LPAREN expression operadorLogical . expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (10) expression -> . ID opConditional ID
    (11) expression -> . ID opConditional NUM
    (12) expression -> . NUM opConditional NUM
    (13) expression -> . operacionesMath
    (102) operacionesMath -> . sumas
    (103) operacionesMath -> . sumas operacionesMath
    (104) operacionesMath -> . restas
    (105) operacionesMath -> . restas operacionesMath
    (106) sumas -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (107) sumas -> . numOperadores PLUS NUM
    (115) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (116) restas -> . numOperadores MINUS NUM
    (108) numOperadores -> . enteros
    (109) numOperadores -> . decimales
    (110) enteros -> . NUM
    (111) enteros -> . numNegative
    (114) decimales -> . enteros PERIOD NUM
    (112) numNegative -> . MINUS NUM
    (113) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
    ID              shift and go to state 71
    NUM             shift and go to state 72
    MINUS           shift and go to state 32
    PERIOD          reduce using rule 113 (numNegative -> .)
    PLUS            reduce using rule 113 (numNegative -> .)

  ! MINUS           [ reduce using rule 113 (numNegative -> .) ]

    expression                     shift and go to state 154
    operacionesMath                shift and go to state 73
    sumas                          shift and go to state 24
    restas                         shift and go to state 25
    numOperadores                  shift and go to state 31
    enteros                        shift and go to state 33
    decimales                      shift and go to state 34
    numNegative                    shift and go to state 35

state 112

    (30) sentencias_if -> IF LPAREN expression RPAREN . LBLOCK sentencia RBLOCK
    (32) sentencias_if_else -> IF LPAREN expression RPAREN . LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK

    LBLOCK          shift and go to state 155


state 113

    (26) operadorLogical -> AND .

    ID              reduce using rule 26 (operadorLogical -> AND .)
    NUM             reduce using rule 26 (operadorLogical -> AND .)
    MINUS           reduce using rule 26 (operadorLogical -> AND .)
    PLUS            reduce using rule 26 (operadorLogical -> AND .)
    PERIOD          reduce using rule 26 (operadorLogical -> AND .)


state 114

    (27) operadorLogical -> OR .

    ID              reduce using rule 27 (operadorLogical -> OR .)
    NUM             reduce using rule 27 (operadorLogical -> OR .)
    MINUS           reduce using rule 27 (operadorLogical -> OR .)
    PLUS            reduce using rule 27 (operadorLogical -> OR .)
    PERIOD          reduce using rule 27 (operadorLogical -> OR .)


state 115

    (28) operadorLogical -> NOT .

    ID              reduce using rule 28 (operadorLogical -> NOT .)
    NUM             reduce using rule 28 (operadorLogical -> NOT .)
    MINUS           reduce using rule 28 (operadorLogical -> NOT .)
    PLUS            reduce using rule 28 (operadorLogical -> NOT .)
    PERIOD          reduce using rule 28 (operadorLogical -> NOT .)


state 116

    (33) sentencias_while -> WHILE LPAREN expression RPAREN . LBLOCK sentencia RBLOCK

    LBLOCK          shift and go to state 156


state 117

    (34) sentencias_while -> WHILE LPAREN expression operadorLogical . expression RPAREN LBLOCK sentencia RBLOCK
    (10) expression -> . ID opConditional ID
    (11) expression -> . ID opConditional NUM
    (12) expression -> . NUM opConditional NUM
    (13) expression -> . operacionesMath
    (102) operacionesMath -> . sumas
    (103) operacionesMath -> . sumas operacionesMath
    (104) operacionesMath -> . restas
    (105) operacionesMath -> . restas operacionesMath
    (106) sumas -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (107) sumas -> . numOperadores PLUS NUM
    (115) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (116) restas -> . numOperadores MINUS NUM
    (108) numOperadores -> . enteros
    (109) numOperadores -> . decimales
    (110) enteros -> . NUM
    (111) enteros -> . numNegative
    (114) decimales -> . enteros PERIOD NUM
    (112) numNegative -> . MINUS NUM
    (113) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
    ID              shift and go to state 71
    NUM             shift and go to state 72
    MINUS           shift and go to state 32
    PERIOD          reduce using rule 113 (numNegative -> .)
    PLUS            reduce using rule 113 (numNegative -> .)

  ! MINUS           [ reduce using rule 113 (numNegative -> .) ]

    expression                     shift and go to state 157
    operacionesMath                shift and go to state 73
    sumas                          shift and go to state 24
    restas                         shift and go to state 25
    numOperadores                  shift and go to state 31
    enteros                        shift and go to state 33
    decimales                      shift and go to state 34
    numNegative                    shift and go to state 35

state 118

    (106) sumas -> numOperadores PLUS LPAREN numOperadores . RPAREN

    RPAREN          shift and go to state 158


state 119

    (115) restas -> numOperadores MINUS LPAREN numOperadores . RPAREN

    RPAREN          shift and go to state 159


state 120

    (48) varDeclaration -> varType ID EQUAL arrayDeclare COLON .

    $end            reduce using rule 48 (varDeclaration -> varType ID EQUAL arrayDeclare COLON .)
    RBLOCK          reduce using rule 48 (varDeclaration -> varType ID EQUAL arrayDeclare COLON .)
    RETURN          reduce using rule 48 (varDeclaration -> varType ID EQUAL arrayDeclare COLON .)


state 121

    (49) varDeclaration -> varType ID EQUAL declareMap COLON .

    $end            reduce using rule 49 (varDeclaration -> varType ID EQUAL declareMap COLON .)
    RBLOCK          reduce using rule 49 (varDeclaration -> varType ID EQUAL declareMap COLON .)
    RETURN          reduce using rule 49 (varDeclaration -> varType ID EQUAL declareMap COLON .)


state 122

    (50) varDeclaration -> varType ID EQUAL declararSet COLON .

    $end            reduce using rule 50 (varDeclaration -> varType ID EQUAL declararSet COLON .)
    RBLOCK          reduce using rule 50 (varDeclaration -> varType ID EQUAL declararSet COLON .)
    RETURN          reduce using rule 50 (varDeclaration -> varType ID EQUAL declararSet COLON .)


state 123

    (75) declareteFunction -> varType ID EQUAL FUNCTION LPAREN . params RPAREN
    (79) params -> . paramList
    (80) params -> . empty
    (83) paramList -> . param
    (84) paramList -> . param COMMA paramList
    (41) empty -> .
    (81) param -> . ID
    (82) param -> . ID LBRACKET RBRACKET

    RPAREN          reduce using rule 41 (empty -> .)
    ID              shift and go to state 57

    params                         shift and go to state 160
    paramList                      shift and go to state 59
    empty                          shift and go to state 60
    param                          shift and go to state 61

state 124

    (54) arrayDeclare -> LBRACKET arrayValues . RBRACKET

    RBRACKET        shift and go to state 161


state 125

    (56) arrayValues -> arrayValue .
    (57) arrayValues -> arrayValue . COMMA arrayValue

    RBRACKET        reduce using rule 56 (arrayValues -> arrayValue .)
    RPAREN          reduce using rule 56 (arrayValues -> arrayValue .)
    COMMA           shift and go to state 162


state 126

    (58) arrayValue -> LPAREN . expression RPAREN
    (10) expression -> . ID opConditional ID
    (11) expression -> . ID opConditional NUM
    (12) expression -> . NUM opConditional NUM
    (13) expression -> . operacionesMath
    (102) operacionesMath -> . sumas
    (103) operacionesMath -> . sumas operacionesMath
    (104) operacionesMath -> . restas
    (105) operacionesMath -> . restas operacionesMath
    (106) sumas -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (107) sumas -> . numOperadores PLUS NUM
    (115) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (116) restas -> . numOperadores MINUS NUM
    (108) numOperadores -> . enteros
    (109) numOperadores -> . decimales
    (110) enteros -> . NUM
    (111) enteros -> . numNegative
    (114) decimales -> . enteros PERIOD NUM
    (112) numNegative -> . MINUS NUM
    (113) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
    ID              shift and go to state 71
    NUM             shift and go to state 72
    MINUS           shift and go to state 32
    PERIOD          reduce using rule 113 (numNegative -> .)
    PLUS            reduce using rule 113 (numNegative -> .)

  ! MINUS           [ reduce using rule 113 (numNegative -> .) ]

    expression                     shift and go to state 163
    operacionesMath                shift and go to state 73
    sumas                          shift and go to state 24
    restas                         shift and go to state 25
    numOperadores                  shift and go to state 31
    enteros                        shift and go to state 33
    decimales                      shift and go to state 34
    numNegative                    shift and go to state 35

state 127

    (59) arrayValue -> ID .

    COMMA           reduce using rule 59 (arrayValue -> ID .)
    RBRACKET        reduce using rule 59 (arrayValue -> ID .)
    RPAREN          reduce using rule 59 (arrayValue -> ID .)


state 128

    (60) arrayValue -> NUM .

    COMMA           reduce using rule 60 (arrayValue -> NUM .)
    RBRACKET        reduce using rule 60 (arrayValue -> NUM .)
    RPAREN          reduce using rule 60 (arrayValue -> NUM .)


state 129

    (61) arrayValue -> STRING .

    COMMA           reduce using rule 61 (arrayValue -> STRING .)
    RBRACKET        reduce using rule 61 (arrayValue -> STRING .)
    RPAREN          reduce using rule 61 (arrayValue -> STRING .)


state 130

    (62) arrayValue -> boolean .

    COMMA           reduce using rule 62 (arrayValue -> boolean .)
    RBRACKET        reduce using rule 62 (arrayValue -> boolean .)
    RPAREN          reduce using rule 62 (arrayValue -> boolean .)


state 131

    (63) arrayValue -> empty .

    COMMA           reduce using rule 63 (arrayValue -> empty .)
    RBRACKET        reduce using rule 63 (arrayValue -> empty .)
    RPAREN          reduce using rule 63 (arrayValue -> empty .)


state 132

    (55) arrayDeclare -> NEW ARRAY . LPAREN arrayValues RPAREN

    LPAREN          shift and go to state 164


state 133

    (67) declareMap -> NEW MAP . LPAREN iterable RPAREN

    LPAREN          shift and go to state 165


state 134

    (90) declararSet -> NEW SET . LPAREN setValues RPAREN

    LPAREN          shift and go to state 166


state 135

    (82) param -> ID LBRACKET RBRACKET .

    COMMA           reduce using rule 82 (param -> ID LBRACKET RBRACKET .)
    RPAREN          reduce using rule 82 (param -> ID LBRACKET RBRACKET .)


state 136

    (84) paramList -> param COMMA paramList .

    RPAREN          reduce using rule 84 (paramList -> param COMMA paramList .)


state 137

    (64) methodArray -> PERIOD PUSH LPAREN arrayValue . RPAREN

    RPAREN          shift and go to state 167


state 138

    (65) methodArray -> PERIOD UNSHIFT LPAREN arrayValue . RPAREN

    RPAREN          shift and go to state 168


state 139

    (66) methodArray -> PERIOD POP LPAREN empty . RPAREN

    RPAREN          shift and go to state 169


state 140

    (99) methodSet -> PERIOD ADD LPAREN setValue . RPAREN

    RPAREN          shift and go to state 170


state 141

    (94) setValue -> ID .

    RPAREN          reduce using rule 94 (setValue -> ID .)
    COMMA           reduce using rule 94 (setValue -> ID .)


state 142

    (95) setValue -> NUM .

    RPAREN          reduce using rule 95 (setValue -> NUM .)
    COMMA           reduce using rule 95 (setValue -> NUM .)


state 143

    (96) setValue -> STRING .

    RPAREN          reduce using rule 96 (setValue -> STRING .)
    COMMA           reduce using rule 96 (setValue -> STRING .)


state 144

    (97) setValue -> boolean .

    RPAREN          reduce using rule 97 (setValue -> boolean .)
    COMMA           reduce using rule 97 (setValue -> boolean .)


state 145

    (98) setValue -> empty .

    RPAREN          reduce using rule 98 (setValue -> empty .)
    COMMA           reduce using rule 98 (setValue -> empty .)


state 146

    (100) methodSet -> PERIOD DELETE LPAREN setValue . RPAREN

    RPAREN          shift and go to state 171


state 147

    (101) methodSet -> PERIOD CLEAR LPAREN empty . RPAREN

    RPAREN          shift and go to state 172


state 148

    (71) methodMap -> PERIOD CLEAR LPAREN RPAREN .

    COLON           reduce using rule 71 (methodMap -> PERIOD CLEAR LPAREN RPAREN .)


state 149

    (72) methodMap -> PERIOD LENGTH LPAREN RPAREN .

    COLON           reduce using rule 72 (methodMap -> PERIOD LENGTH LPAREN RPAREN .)


state 150

    (10) expression -> ID opConditional ID .

    RPAREN          reduce using rule 10 (expression -> ID opConditional ID .)
    AND             reduce using rule 10 (expression -> ID opConditional ID .)
    OR              reduce using rule 10 (expression -> ID opConditional ID .)
    NOT             reduce using rule 10 (expression -> ID opConditional ID .)


state 151

    (11) expression -> ID opConditional NUM .

    RPAREN          reduce using rule 11 (expression -> ID opConditional NUM .)
    AND             reduce using rule 11 (expression -> ID opConditional NUM .)
    OR              reduce using rule 11 (expression -> ID opConditional NUM .)
    NOT             reduce using rule 11 (expression -> ID opConditional NUM .)


state 152

    (12) expression -> NUM opConditional NUM .

    RPAREN          reduce using rule 12 (expression -> NUM opConditional NUM .)
    AND             reduce using rule 12 (expression -> NUM opConditional NUM .)
    OR              reduce using rule 12 (expression -> NUM opConditional NUM .)
    NOT             reduce using rule 12 (expression -> NUM opConditional NUM .)


state 153

    (73) declareteFunction -> FUNCTION ID LPAREN params RPAREN .
    (74) declareteFunction -> FUNCTION ID LPAREN params RPAREN . sentencesCmpt
    (76) sentencesCmpt -> . LBLOCK sentencia RBLOCK
    (77) sentencesCmpt -> . LBLOCK sentencia RETURN RBLOCK

    $end            reduce using rule 73 (declareteFunction -> FUNCTION ID LPAREN params RPAREN .)
    RBLOCK          reduce using rule 73 (declareteFunction -> FUNCTION ID LPAREN params RPAREN .)
    RETURN          reduce using rule 73 (declareteFunction -> FUNCTION ID LPAREN params RPAREN .)
    LBLOCK          shift and go to state 174

    sentencesCmpt                  shift and go to state 173

state 154

    (29) sentencias_if -> IF LPAREN expression operadorLogical expression . RPAREN LBLOCK sentencia RBLOCK
    (31) sentencias_if_else -> IF LPAREN expression operadorLogical expression . RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK

    RPAREN          shift and go to state 175


state 155

    (30) sentencias_if -> IF LPAREN expression RPAREN LBLOCK . sentencia RBLOCK
    (32) sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK . sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (1) sentencia -> . callMethods
    (2) sentencia -> . varType ID EQUAL callMethods
    (3) sentencia -> . callFunction
    (4) sentencia -> . javaScript_param
    (5) sentencia -> . varDeclaration
    (6) sentencia -> . controlExpression
    (7) sentencia -> . impresion
    (8) sentencia -> . operacionesMath
    (9) sentencia -> . declareteFunction
    (51) callMethods -> . ID methodArray COLON
    (52) callMethods -> . ID methodSet COLON
    (53) callMethods -> . ID methodMap COLON
    (44) varType -> . LET
    (45) varType -> . CONST
    (46) varType -> . VAR
    (47) varType -> . empty
    (78) callFunction -> . ID LPAREN params RPAREN
    (37) javaScript_param -> . STRING
    (38) javaScript_param -> . NUM
    (39) javaScript_param -> . boolean
    (40) javaScript_param -> . ID
    (48) varDeclaration -> . varType ID EQUAL arrayDeclare COLON
    (49) varDeclaration -> . varType ID EQUAL declareMap COLON
    (50) varDeclaration -> . varType ID EQUAL declararSet COLON
    (14) controlExpression -> . sentencias_if
    (15) controlExpression -> . sentencias_if_else
    (16) controlExpression -> . sentencias_while
    (17) controlExpression -> . impresion
    (18) controlExpression -> . impresion_vacio
    (35) impresion -> . ALERT LPAREN expression RPAREN
    (102) operacionesMath -> . sumas
    (103) operacionesMath -> . sumas operacionesMath
    (104) operacionesMath -> . restas
    (105) operacionesMath -> . restas operacionesMath
    (73) declareteFunction -> . FUNCTION ID LPAREN params RPAREN
    (74) declareteFunction -> . FUNCTION ID LPAREN params RPAREN sentencesCmpt
    (75) declareteFunction -> . varType ID EQUAL FUNCTION LPAREN params RPAREN
    (41) empty -> .
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE
    (29) sentencias_if -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (30) sentencias_if -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (31) sentencias_if_else -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (32) sentencias_if_else -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (33) sentencias_while -> . WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (34) sentencias_while -> . WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (36) impresion_vacio -> . ALERT LPAREN RPAREN
    (106) sumas -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (107) sumas -> . numOperadores PLUS NUM
    (115) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (116) restas -> . numOperadores MINUS NUM
    (108) numOperadores -> . enteros
    (109) numOperadores -> . decimales
    (110) enteros -> . NUM
    (111) enteros -> . numNegative
    (114) decimales -> . enteros PERIOD NUM
    (112) numNegative -> . MINUS NUM
    (113) numNegative -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    ID              shift and go to state 4
    LET             shift and go to state 12
    CONST           shift and go to state 13
    VAR             shift and go to state 14
    STRING          shift and go to state 16
    NUM             shift and go to state 17
    ALERT           shift and go to state 23
    FUNCTION        shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    IF              shift and go to state 29
    WHILE           shift and go to state 30
    MINUS           shift and go to state 32
    PERIOD          reduce using rule 113 (numNegative -> .)
    PLUS            reduce using rule 113 (numNegative -> .)

  ! ID              [ reduce using rule 41 (empty -> .) ]
  ! MINUS           [ reduce using rule 113 (numNegative -> .) ]

    sentencia                      shift and go to state 176
    callMethods                    shift and go to state 2
    varType                        shift and go to state 3
    callFunction                   shift and go to state 5
    javaScript_param               shift and go to state 6
    varDeclaration                 shift and go to state 7
    controlExpression              shift and go to state 8
    impresion                      shift and go to state 9
    operacionesMath                shift and go to state 10
    declareteFunction              shift and go to state 11
    empty                          shift and go to state 15
    boolean                        shift and go to state 18
    sentencias_if                  shift and go to state 19
    sentencias_if_else             shift and go to state 20
    sentencias_while               shift and go to state 21
    impresion_vacio                shift and go to state 22
    sumas                          shift and go to state 24
    restas                         shift and go to state 25
    numOperadores                  shift and go to state 31
    enteros                        shift and go to state 33
    decimales                      shift and go to state 34
    numNegative                    shift and go to state 35

state 156

    (33) sentencias_while -> WHILE LPAREN expression RPAREN LBLOCK . sentencia RBLOCK
    (1) sentencia -> . callMethods
    (2) sentencia -> . varType ID EQUAL callMethods
    (3) sentencia -> . callFunction
    (4) sentencia -> . javaScript_param
    (5) sentencia -> . varDeclaration
    (6) sentencia -> . controlExpression
    (7) sentencia -> . impresion
    (8) sentencia -> . operacionesMath
    (9) sentencia -> . declareteFunction
    (51) callMethods -> . ID methodArray COLON
    (52) callMethods -> . ID methodSet COLON
    (53) callMethods -> . ID methodMap COLON
    (44) varType -> . LET
    (45) varType -> . CONST
    (46) varType -> . VAR
    (47) varType -> . empty
    (78) callFunction -> . ID LPAREN params RPAREN
    (37) javaScript_param -> . STRING
    (38) javaScript_param -> . NUM
    (39) javaScript_param -> . boolean
    (40) javaScript_param -> . ID
    (48) varDeclaration -> . varType ID EQUAL arrayDeclare COLON
    (49) varDeclaration -> . varType ID EQUAL declareMap COLON
    (50) varDeclaration -> . varType ID EQUAL declararSet COLON
    (14) controlExpression -> . sentencias_if
    (15) controlExpression -> . sentencias_if_else
    (16) controlExpression -> . sentencias_while
    (17) controlExpression -> . impresion
    (18) controlExpression -> . impresion_vacio
    (35) impresion -> . ALERT LPAREN expression RPAREN
    (102) operacionesMath -> . sumas
    (103) operacionesMath -> . sumas operacionesMath
    (104) operacionesMath -> . restas
    (105) operacionesMath -> . restas operacionesMath
    (73) declareteFunction -> . FUNCTION ID LPAREN params RPAREN
    (74) declareteFunction -> . FUNCTION ID LPAREN params RPAREN sentencesCmpt
    (75) declareteFunction -> . varType ID EQUAL FUNCTION LPAREN params RPAREN
    (41) empty -> .
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE
    (29) sentencias_if -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (30) sentencias_if -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (31) sentencias_if_else -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (32) sentencias_if_else -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (33) sentencias_while -> . WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (34) sentencias_while -> . WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (36) impresion_vacio -> . ALERT LPAREN RPAREN
    (106) sumas -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (107) sumas -> . numOperadores PLUS NUM
    (115) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (116) restas -> . numOperadores MINUS NUM
    (108) numOperadores -> . enteros
    (109) numOperadores -> . decimales
    (110) enteros -> . NUM
    (111) enteros -> . numNegative
    (114) decimales -> . enteros PERIOD NUM
    (112) numNegative -> . MINUS NUM
    (113) numNegative -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    ID              shift and go to state 4
    LET             shift and go to state 12
    CONST           shift and go to state 13
    VAR             shift and go to state 14
    STRING          shift and go to state 16
    NUM             shift and go to state 17
    ALERT           shift and go to state 23
    FUNCTION        shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    IF              shift and go to state 29
    WHILE           shift and go to state 30
    MINUS           shift and go to state 32
    PERIOD          reduce using rule 113 (numNegative -> .)
    PLUS            reduce using rule 113 (numNegative -> .)

  ! ID              [ reduce using rule 41 (empty -> .) ]
  ! MINUS           [ reduce using rule 113 (numNegative -> .) ]

    sentencia                      shift and go to state 177
    callMethods                    shift and go to state 2
    varType                        shift and go to state 3
    callFunction                   shift and go to state 5
    javaScript_param               shift and go to state 6
    varDeclaration                 shift and go to state 7
    controlExpression              shift and go to state 8
    impresion                      shift and go to state 9
    operacionesMath                shift and go to state 10
    declareteFunction              shift and go to state 11
    empty                          shift and go to state 15
    boolean                        shift and go to state 18
    sentencias_if                  shift and go to state 19
    sentencias_if_else             shift and go to state 20
    sentencias_while               shift and go to state 21
    impresion_vacio                shift and go to state 22
    sumas                          shift and go to state 24
    restas                         shift and go to state 25
    numOperadores                  shift and go to state 31
    enteros                        shift and go to state 33
    decimales                      shift and go to state 34
    numNegative                    shift and go to state 35

state 157

    (34) sentencias_while -> WHILE LPAREN expression operadorLogical expression . RPAREN LBLOCK sentencia RBLOCK

    RPAREN          shift and go to state 178


state 158

    (106) sumas -> numOperadores PLUS LPAREN numOperadores RPAREN .

    NUM             reduce using rule 106 (sumas -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    MINUS           reduce using rule 106 (sumas -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    PLUS            reduce using rule 106 (sumas -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    PERIOD          reduce using rule 106 (sumas -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    $end            reduce using rule 106 (sumas -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    RPAREN          reduce using rule 106 (sumas -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    AND             reduce using rule 106 (sumas -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    OR              reduce using rule 106 (sumas -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    NOT             reduce using rule 106 (sumas -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    RBLOCK          reduce using rule 106 (sumas -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    RETURN          reduce using rule 106 (sumas -> numOperadores PLUS LPAREN numOperadores RPAREN .)


state 159

    (115) restas -> numOperadores MINUS LPAREN numOperadores RPAREN .

    NUM             reduce using rule 115 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    MINUS           reduce using rule 115 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    PLUS            reduce using rule 115 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    PERIOD          reduce using rule 115 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    $end            reduce using rule 115 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    RPAREN          reduce using rule 115 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    AND             reduce using rule 115 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    OR              reduce using rule 115 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    NOT             reduce using rule 115 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    RBLOCK          reduce using rule 115 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    RETURN          reduce using rule 115 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)


state 160

    (75) declareteFunction -> varType ID EQUAL FUNCTION LPAREN params . RPAREN

    RPAREN          shift and go to state 179


state 161

    (54) arrayDeclare -> LBRACKET arrayValues RBRACKET .

    COLON           reduce using rule 54 (arrayDeclare -> LBRACKET arrayValues RBRACKET .)
    RPAREN          reduce using rule 54 (arrayDeclare -> LBRACKET arrayValues RBRACKET .)


state 162

    (57) arrayValues -> arrayValue COMMA . arrayValue
    (58) arrayValue -> . LPAREN expression RPAREN
    (59) arrayValue -> . ID
    (60) arrayValue -> . NUM
    (61) arrayValue -> . STRING
    (62) arrayValue -> . boolean
    (63) arrayValue -> . empty
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE
    (41) empty -> .

    LPAREN          shift and go to state 126
    ID              shift and go to state 127
    NUM             shift and go to state 128
    STRING          shift and go to state 129
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    RBRACKET        reduce using rule 41 (empty -> .)
    RPAREN          reduce using rule 41 (empty -> .)

    arrayValue                     shift and go to state 180
    boolean                        shift and go to state 130
    empty                          shift and go to state 131

state 163

    (58) arrayValue -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 181


state 164

    (55) arrayDeclare -> NEW ARRAY LPAREN . arrayValues RPAREN
    (56) arrayValues -> . arrayValue
    (57) arrayValues -> . arrayValue COMMA arrayValue
    (58) arrayValue -> . LPAREN expression RPAREN
    (59) arrayValue -> . ID
    (60) arrayValue -> . NUM
    (61) arrayValue -> . STRING
    (62) arrayValue -> . boolean
    (63) arrayValue -> . empty
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE
    (41) empty -> .

    LPAREN          shift and go to state 126
    ID              shift and go to state 127
    NUM             shift and go to state 128
    STRING          shift and go to state 129
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    COMMA           reduce using rule 41 (empty -> .)
    RPAREN          reduce using rule 41 (empty -> .)

    arrayValues                    shift and go to state 182
    arrayValue                     shift and go to state 125
    boolean                        shift and go to state 130
    empty                          shift and go to state 131

state 165

    (67) declareMap -> NEW MAP LPAREN . iterable RPAREN
    (68) iterable -> . arrayDeclare
    (69) iterable -> . declararSet
    (70) iterable -> . empty
    (54) arrayDeclare -> . LBRACKET arrayValues RBRACKET
    (55) arrayDeclare -> . NEW ARRAY LPAREN arrayValues RPAREN
    (90) declararSet -> . NEW SET LPAREN setValues RPAREN
    (41) empty -> .

    LBRACKET        shift and go to state 88
    NEW             shift and go to state 183
    RPAREN          reduce using rule 41 (empty -> .)

    iterable                       shift and go to state 184
    arrayDeclare                   shift and go to state 185
    declararSet                    shift and go to state 186
    empty                          shift and go to state 187

state 166

    (90) declararSet -> NEW SET LPAREN . setValues RPAREN
    (92) setValues -> . setValue
    (93) setValues -> . setValue COMMA setValue
    (94) setValue -> . ID
    (95) setValue -> . NUM
    (96) setValue -> . STRING
    (97) setValue -> . boolean
    (98) setValue -> . empty
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE
    (41) empty -> .

    ID              shift and go to state 141
    NUM             shift and go to state 142
    STRING          shift and go to state 143
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    COMMA           reduce using rule 41 (empty -> .)
    RPAREN          reduce using rule 41 (empty -> .)

    setValues                      shift and go to state 188
    setValue                       shift and go to state 189
    boolean                        shift and go to state 144
    empty                          shift and go to state 145

state 167

    (64) methodArray -> PERIOD PUSH LPAREN arrayValue RPAREN .

    COLON           reduce using rule 64 (methodArray -> PERIOD PUSH LPAREN arrayValue RPAREN .)


state 168

    (65) methodArray -> PERIOD UNSHIFT LPAREN arrayValue RPAREN .

    COLON           reduce using rule 65 (methodArray -> PERIOD UNSHIFT LPAREN arrayValue RPAREN .)


state 169

    (66) methodArray -> PERIOD POP LPAREN empty RPAREN .

    COLON           reduce using rule 66 (methodArray -> PERIOD POP LPAREN empty RPAREN .)


state 170

    (99) methodSet -> PERIOD ADD LPAREN setValue RPAREN .

    COLON           reduce using rule 99 (methodSet -> PERIOD ADD LPAREN setValue RPAREN .)


state 171

    (100) methodSet -> PERIOD DELETE LPAREN setValue RPAREN .

    COLON           reduce using rule 100 (methodSet -> PERIOD DELETE LPAREN setValue RPAREN .)


state 172

    (101) methodSet -> PERIOD CLEAR LPAREN empty RPAREN .

    COLON           reduce using rule 101 (methodSet -> PERIOD CLEAR LPAREN empty RPAREN .)


state 173

    (74) declareteFunction -> FUNCTION ID LPAREN params RPAREN sentencesCmpt .

    $end            reduce using rule 74 (declareteFunction -> FUNCTION ID LPAREN params RPAREN sentencesCmpt .)
    RBLOCK          reduce using rule 74 (declareteFunction -> FUNCTION ID LPAREN params RPAREN sentencesCmpt .)
    RETURN          reduce using rule 74 (declareteFunction -> FUNCTION ID LPAREN params RPAREN sentencesCmpt .)


state 174

    (76) sentencesCmpt -> LBLOCK . sentencia RBLOCK
    (77) sentencesCmpt -> LBLOCK . sentencia RETURN RBLOCK
    (1) sentencia -> . callMethods
    (2) sentencia -> . varType ID EQUAL callMethods
    (3) sentencia -> . callFunction
    (4) sentencia -> . javaScript_param
    (5) sentencia -> . varDeclaration
    (6) sentencia -> . controlExpression
    (7) sentencia -> . impresion
    (8) sentencia -> . operacionesMath
    (9) sentencia -> . declareteFunction
    (51) callMethods -> . ID methodArray COLON
    (52) callMethods -> . ID methodSet COLON
    (53) callMethods -> . ID methodMap COLON
    (44) varType -> . LET
    (45) varType -> . CONST
    (46) varType -> . VAR
    (47) varType -> . empty
    (78) callFunction -> . ID LPAREN params RPAREN
    (37) javaScript_param -> . STRING
    (38) javaScript_param -> . NUM
    (39) javaScript_param -> . boolean
    (40) javaScript_param -> . ID
    (48) varDeclaration -> . varType ID EQUAL arrayDeclare COLON
    (49) varDeclaration -> . varType ID EQUAL declareMap COLON
    (50) varDeclaration -> . varType ID EQUAL declararSet COLON
    (14) controlExpression -> . sentencias_if
    (15) controlExpression -> . sentencias_if_else
    (16) controlExpression -> . sentencias_while
    (17) controlExpression -> . impresion
    (18) controlExpression -> . impresion_vacio
    (35) impresion -> . ALERT LPAREN expression RPAREN
    (102) operacionesMath -> . sumas
    (103) operacionesMath -> . sumas operacionesMath
    (104) operacionesMath -> . restas
    (105) operacionesMath -> . restas operacionesMath
    (73) declareteFunction -> . FUNCTION ID LPAREN params RPAREN
    (74) declareteFunction -> . FUNCTION ID LPAREN params RPAREN sentencesCmpt
    (75) declareteFunction -> . varType ID EQUAL FUNCTION LPAREN params RPAREN
    (41) empty -> .
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE
    (29) sentencias_if -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (30) sentencias_if -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (31) sentencias_if_else -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (32) sentencias_if_else -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (33) sentencias_while -> . WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (34) sentencias_while -> . WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (36) impresion_vacio -> . ALERT LPAREN RPAREN
    (106) sumas -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (107) sumas -> . numOperadores PLUS NUM
    (115) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (116) restas -> . numOperadores MINUS NUM
    (108) numOperadores -> . enteros
    (109) numOperadores -> . decimales
    (110) enteros -> . NUM
    (111) enteros -> . numNegative
    (114) decimales -> . enteros PERIOD NUM
    (112) numNegative -> . MINUS NUM
    (113) numNegative -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    ID              shift and go to state 4
    LET             shift and go to state 12
    CONST           shift and go to state 13
    VAR             shift and go to state 14
    STRING          shift and go to state 16
    NUM             shift and go to state 17
    ALERT           shift and go to state 23
    FUNCTION        shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    IF              shift and go to state 29
    WHILE           shift and go to state 30
    MINUS           shift and go to state 32
    PERIOD          reduce using rule 113 (numNegative -> .)
    PLUS            reduce using rule 113 (numNegative -> .)

  ! ID              [ reduce using rule 41 (empty -> .) ]
  ! MINUS           [ reduce using rule 113 (numNegative -> .) ]

    sentencia                      shift and go to state 190
    callMethods                    shift and go to state 2
    varType                        shift and go to state 3
    callFunction                   shift and go to state 5
    javaScript_param               shift and go to state 6
    varDeclaration                 shift and go to state 7
    controlExpression              shift and go to state 8
    impresion                      shift and go to state 9
    operacionesMath                shift and go to state 10
    declareteFunction              shift and go to state 11
    empty                          shift and go to state 15
    boolean                        shift and go to state 18
    sentencias_if                  shift and go to state 19
    sentencias_if_else             shift and go to state 20
    sentencias_while               shift and go to state 21
    impresion_vacio                shift and go to state 22
    sumas                          shift and go to state 24
    restas                         shift and go to state 25
    numOperadores                  shift and go to state 31
    enteros                        shift and go to state 33
    decimales                      shift and go to state 34
    numNegative                    shift and go to state 35

state 175

    (29) sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN . LBLOCK sentencia RBLOCK
    (31) sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN . LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK

    LBLOCK          shift and go to state 191


state 176

    (30) sentencias_if -> IF LPAREN expression RPAREN LBLOCK sentencia . RBLOCK
    (32) sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia . RBLOCK ELSE LBLOCK sentencia RBLOCK

    RBLOCK          shift and go to state 192


state 177

    (33) sentencias_while -> WHILE LPAREN expression RPAREN LBLOCK sentencia . RBLOCK

    RBLOCK          shift and go to state 193


state 178

    (34) sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN . LBLOCK sentencia RBLOCK

    LBLOCK          shift and go to state 194


state 179

    (75) declareteFunction -> varType ID EQUAL FUNCTION LPAREN params RPAREN .

    $end            reduce using rule 75 (declareteFunction -> varType ID EQUAL FUNCTION LPAREN params RPAREN .)
    RBLOCK          reduce using rule 75 (declareteFunction -> varType ID EQUAL FUNCTION LPAREN params RPAREN .)
    RETURN          reduce using rule 75 (declareteFunction -> varType ID EQUAL FUNCTION LPAREN params RPAREN .)


state 180

    (57) arrayValues -> arrayValue COMMA arrayValue .

    RBRACKET        reduce using rule 57 (arrayValues -> arrayValue COMMA arrayValue .)
    RPAREN          reduce using rule 57 (arrayValues -> arrayValue COMMA arrayValue .)


state 181

    (58) arrayValue -> LPAREN expression RPAREN .

    COMMA           reduce using rule 58 (arrayValue -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 58 (arrayValue -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 58 (arrayValue -> LPAREN expression RPAREN .)


state 182

    (55) arrayDeclare -> NEW ARRAY LPAREN arrayValues . RPAREN

    RPAREN          shift and go to state 195


state 183

    (55) arrayDeclare -> NEW . ARRAY LPAREN arrayValues RPAREN
    (90) declararSet -> NEW . SET LPAREN setValues RPAREN

    ARRAY           shift and go to state 132
    SET             shift and go to state 134


state 184

    (67) declareMap -> NEW MAP LPAREN iterable . RPAREN

    RPAREN          shift and go to state 196


state 185

    (68) iterable -> arrayDeclare .

    RPAREN          reduce using rule 68 (iterable -> arrayDeclare .)


state 186

    (69) iterable -> declararSet .

    RPAREN          reduce using rule 69 (iterable -> declararSet .)


state 187

    (70) iterable -> empty .

    RPAREN          reduce using rule 70 (iterable -> empty .)


state 188

    (90) declararSet -> NEW SET LPAREN setValues . RPAREN

    RPAREN          shift and go to state 197


state 189

    (92) setValues -> setValue .
    (93) setValues -> setValue . COMMA setValue

    RPAREN          reduce using rule 92 (setValues -> setValue .)
    COMMA           shift and go to state 198


state 190

    (76) sentencesCmpt -> LBLOCK sentencia . RBLOCK
    (77) sentencesCmpt -> LBLOCK sentencia . RETURN RBLOCK

    RBLOCK          shift and go to state 199
    RETURN          shift and go to state 200


state 191

    (29) sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK . sentencia RBLOCK
    (31) sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK . sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (1) sentencia -> . callMethods
    (2) sentencia -> . varType ID EQUAL callMethods
    (3) sentencia -> . callFunction
    (4) sentencia -> . javaScript_param
    (5) sentencia -> . varDeclaration
    (6) sentencia -> . controlExpression
    (7) sentencia -> . impresion
    (8) sentencia -> . operacionesMath
    (9) sentencia -> . declareteFunction
    (51) callMethods -> . ID methodArray COLON
    (52) callMethods -> . ID methodSet COLON
    (53) callMethods -> . ID methodMap COLON
    (44) varType -> . LET
    (45) varType -> . CONST
    (46) varType -> . VAR
    (47) varType -> . empty
    (78) callFunction -> . ID LPAREN params RPAREN
    (37) javaScript_param -> . STRING
    (38) javaScript_param -> . NUM
    (39) javaScript_param -> . boolean
    (40) javaScript_param -> . ID
    (48) varDeclaration -> . varType ID EQUAL arrayDeclare COLON
    (49) varDeclaration -> . varType ID EQUAL declareMap COLON
    (50) varDeclaration -> . varType ID EQUAL declararSet COLON
    (14) controlExpression -> . sentencias_if
    (15) controlExpression -> . sentencias_if_else
    (16) controlExpression -> . sentencias_while
    (17) controlExpression -> . impresion
    (18) controlExpression -> . impresion_vacio
    (35) impresion -> . ALERT LPAREN expression RPAREN
    (102) operacionesMath -> . sumas
    (103) operacionesMath -> . sumas operacionesMath
    (104) operacionesMath -> . restas
    (105) operacionesMath -> . restas operacionesMath
    (73) declareteFunction -> . FUNCTION ID LPAREN params RPAREN
    (74) declareteFunction -> . FUNCTION ID LPAREN params RPAREN sentencesCmpt
    (75) declareteFunction -> . varType ID EQUAL FUNCTION LPAREN params RPAREN
    (41) empty -> .
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE
    (29) sentencias_if -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (30) sentencias_if -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (31) sentencias_if_else -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (32) sentencias_if_else -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (33) sentencias_while -> . WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (34) sentencias_while -> . WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (36) impresion_vacio -> . ALERT LPAREN RPAREN
    (106) sumas -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (107) sumas -> . numOperadores PLUS NUM
    (115) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (116) restas -> . numOperadores MINUS NUM
    (108) numOperadores -> . enteros
    (109) numOperadores -> . decimales
    (110) enteros -> . NUM
    (111) enteros -> . numNegative
    (114) decimales -> . enteros PERIOD NUM
    (112) numNegative -> . MINUS NUM
    (113) numNegative -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    ID              shift and go to state 4
    LET             shift and go to state 12
    CONST           shift and go to state 13
    VAR             shift and go to state 14
    STRING          shift and go to state 16
    NUM             shift and go to state 17
    ALERT           shift and go to state 23
    FUNCTION        shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    IF              shift and go to state 29
    WHILE           shift and go to state 30
    MINUS           shift and go to state 32
    PERIOD          reduce using rule 113 (numNegative -> .)
    PLUS            reduce using rule 113 (numNegative -> .)

  ! ID              [ reduce using rule 41 (empty -> .) ]
  ! MINUS           [ reduce using rule 113 (numNegative -> .) ]

    sentencia                      shift and go to state 201
    callMethods                    shift and go to state 2
    varType                        shift and go to state 3
    callFunction                   shift and go to state 5
    javaScript_param               shift and go to state 6
    varDeclaration                 shift and go to state 7
    controlExpression              shift and go to state 8
    impresion                      shift and go to state 9
    operacionesMath                shift and go to state 10
    declareteFunction              shift and go to state 11
    empty                          shift and go to state 15
    boolean                        shift and go to state 18
    sentencias_if                  shift and go to state 19
    sentencias_if_else             shift and go to state 20
    sentencias_while               shift and go to state 21
    impresion_vacio                shift and go to state 22
    sumas                          shift and go to state 24
    restas                         shift and go to state 25
    numOperadores                  shift and go to state 31
    enteros                        shift and go to state 33
    decimales                      shift and go to state 34
    numNegative                    shift and go to state 35

state 192

    (30) sentencias_if -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK .
    (32) sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK . ELSE LBLOCK sentencia RBLOCK

    $end            reduce using rule 30 (sentencias_if -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK .)
    RBLOCK          reduce using rule 30 (sentencias_if -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK .)
    RETURN          reduce using rule 30 (sentencias_if -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK .)
    ELSE            shift and go to state 202


state 193

    (33) sentencias_while -> WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK .

    $end            reduce using rule 33 (sentencias_while -> WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK .)
    RBLOCK          reduce using rule 33 (sentencias_while -> WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK .)
    RETURN          reduce using rule 33 (sentencias_while -> WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK .)


state 194

    (34) sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK . sentencia RBLOCK
    (1) sentencia -> . callMethods
    (2) sentencia -> . varType ID EQUAL callMethods
    (3) sentencia -> . callFunction
    (4) sentencia -> . javaScript_param
    (5) sentencia -> . varDeclaration
    (6) sentencia -> . controlExpression
    (7) sentencia -> . impresion
    (8) sentencia -> . operacionesMath
    (9) sentencia -> . declareteFunction
    (51) callMethods -> . ID methodArray COLON
    (52) callMethods -> . ID methodSet COLON
    (53) callMethods -> . ID methodMap COLON
    (44) varType -> . LET
    (45) varType -> . CONST
    (46) varType -> . VAR
    (47) varType -> . empty
    (78) callFunction -> . ID LPAREN params RPAREN
    (37) javaScript_param -> . STRING
    (38) javaScript_param -> . NUM
    (39) javaScript_param -> . boolean
    (40) javaScript_param -> . ID
    (48) varDeclaration -> . varType ID EQUAL arrayDeclare COLON
    (49) varDeclaration -> . varType ID EQUAL declareMap COLON
    (50) varDeclaration -> . varType ID EQUAL declararSet COLON
    (14) controlExpression -> . sentencias_if
    (15) controlExpression -> . sentencias_if_else
    (16) controlExpression -> . sentencias_while
    (17) controlExpression -> . impresion
    (18) controlExpression -> . impresion_vacio
    (35) impresion -> . ALERT LPAREN expression RPAREN
    (102) operacionesMath -> . sumas
    (103) operacionesMath -> . sumas operacionesMath
    (104) operacionesMath -> . restas
    (105) operacionesMath -> . restas operacionesMath
    (73) declareteFunction -> . FUNCTION ID LPAREN params RPAREN
    (74) declareteFunction -> . FUNCTION ID LPAREN params RPAREN sentencesCmpt
    (75) declareteFunction -> . varType ID EQUAL FUNCTION LPAREN params RPAREN
    (41) empty -> .
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE
    (29) sentencias_if -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (30) sentencias_if -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (31) sentencias_if_else -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (32) sentencias_if_else -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (33) sentencias_while -> . WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (34) sentencias_while -> . WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (36) impresion_vacio -> . ALERT LPAREN RPAREN
    (106) sumas -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (107) sumas -> . numOperadores PLUS NUM
    (115) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (116) restas -> . numOperadores MINUS NUM
    (108) numOperadores -> . enteros
    (109) numOperadores -> . decimales
    (110) enteros -> . NUM
    (111) enteros -> . numNegative
    (114) decimales -> . enteros PERIOD NUM
    (112) numNegative -> . MINUS NUM
    (113) numNegative -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    ID              shift and go to state 4
    LET             shift and go to state 12
    CONST           shift and go to state 13
    VAR             shift and go to state 14
    STRING          shift and go to state 16
    NUM             shift and go to state 17
    ALERT           shift and go to state 23
    FUNCTION        shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    IF              shift and go to state 29
    WHILE           shift and go to state 30
    MINUS           shift and go to state 32
    PERIOD          reduce using rule 113 (numNegative -> .)
    PLUS            reduce using rule 113 (numNegative -> .)

  ! ID              [ reduce using rule 41 (empty -> .) ]
  ! MINUS           [ reduce using rule 113 (numNegative -> .) ]

    sentencia                      shift and go to state 203
    callMethods                    shift and go to state 2
    varType                        shift and go to state 3
    callFunction                   shift and go to state 5
    javaScript_param               shift and go to state 6
    varDeclaration                 shift and go to state 7
    controlExpression              shift and go to state 8
    impresion                      shift and go to state 9
    operacionesMath                shift and go to state 10
    declareteFunction              shift and go to state 11
    empty                          shift and go to state 15
    boolean                        shift and go to state 18
    sentencias_if                  shift and go to state 19
    sentencias_if_else             shift and go to state 20
    sentencias_while               shift and go to state 21
    impresion_vacio                shift and go to state 22
    sumas                          shift and go to state 24
    restas                         shift and go to state 25
    numOperadores                  shift and go to state 31
    enteros                        shift and go to state 33
    decimales                      shift and go to state 34
    numNegative                    shift and go to state 35

state 195

    (55) arrayDeclare -> NEW ARRAY LPAREN arrayValues RPAREN .

    COLON           reduce using rule 55 (arrayDeclare -> NEW ARRAY LPAREN arrayValues RPAREN .)
    RPAREN          reduce using rule 55 (arrayDeclare -> NEW ARRAY LPAREN arrayValues RPAREN .)


state 196

    (67) declareMap -> NEW MAP LPAREN iterable RPAREN .

    COLON           reduce using rule 67 (declareMap -> NEW MAP LPAREN iterable RPAREN .)


state 197

    (90) declararSet -> NEW SET LPAREN setValues RPAREN .

    COLON           reduce using rule 90 (declararSet -> NEW SET LPAREN setValues RPAREN .)
    RPAREN          reduce using rule 90 (declararSet -> NEW SET LPAREN setValues RPAREN .)


state 198

    (93) setValues -> setValue COMMA . setValue
    (94) setValue -> . ID
    (95) setValue -> . NUM
    (96) setValue -> . STRING
    (97) setValue -> . boolean
    (98) setValue -> . empty
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE
    (41) empty -> .

    ID              shift and go to state 141
    NUM             shift and go to state 142
    STRING          shift and go to state 143
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    RPAREN          reduce using rule 41 (empty -> .)

    setValue                       shift and go to state 204
    boolean                        shift and go to state 144
    empty                          shift and go to state 145

state 199

    (76) sentencesCmpt -> LBLOCK sentencia RBLOCK .

    $end            reduce using rule 76 (sentencesCmpt -> LBLOCK sentencia RBLOCK .)
    RBLOCK          reduce using rule 76 (sentencesCmpt -> LBLOCK sentencia RBLOCK .)
    RETURN          reduce using rule 76 (sentencesCmpt -> LBLOCK sentencia RBLOCK .)


state 200

    (77) sentencesCmpt -> LBLOCK sentencia RETURN . RBLOCK

    RBLOCK          shift and go to state 205


state 201

    (29) sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia . RBLOCK
    (31) sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia . RBLOCK ELSE LBLOCK sentencia RBLOCK

    RBLOCK          shift and go to state 206


state 202

    (32) sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE . LBLOCK sentencia RBLOCK

    LBLOCK          shift and go to state 207


state 203

    (34) sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia . RBLOCK

    RBLOCK          shift and go to state 208


state 204

    (93) setValues -> setValue COMMA setValue .

    RPAREN          reduce using rule 93 (setValues -> setValue COMMA setValue .)


state 205

    (77) sentencesCmpt -> LBLOCK sentencia RETURN RBLOCK .

    $end            reduce using rule 77 (sentencesCmpt -> LBLOCK sentencia RETURN RBLOCK .)
    RBLOCK          reduce using rule 77 (sentencesCmpt -> LBLOCK sentencia RETURN RBLOCK .)
    RETURN          reduce using rule 77 (sentencesCmpt -> LBLOCK sentencia RETURN RBLOCK .)


state 206

    (29) sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK .
    (31) sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK . ELSE LBLOCK sentencia RBLOCK

    $end            reduce using rule 29 (sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK .)
    RBLOCK          reduce using rule 29 (sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK .)
    RETURN          reduce using rule 29 (sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK .)
    ELSE            shift and go to state 209


state 207

    (32) sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK . sentencia RBLOCK
    (1) sentencia -> . callMethods
    (2) sentencia -> . varType ID EQUAL callMethods
    (3) sentencia -> . callFunction
    (4) sentencia -> . javaScript_param
    (5) sentencia -> . varDeclaration
    (6) sentencia -> . controlExpression
    (7) sentencia -> . impresion
    (8) sentencia -> . operacionesMath
    (9) sentencia -> . declareteFunction
    (51) callMethods -> . ID methodArray COLON
    (52) callMethods -> . ID methodSet COLON
    (53) callMethods -> . ID methodMap COLON
    (44) varType -> . LET
    (45) varType -> . CONST
    (46) varType -> . VAR
    (47) varType -> . empty
    (78) callFunction -> . ID LPAREN params RPAREN
    (37) javaScript_param -> . STRING
    (38) javaScript_param -> . NUM
    (39) javaScript_param -> . boolean
    (40) javaScript_param -> . ID
    (48) varDeclaration -> . varType ID EQUAL arrayDeclare COLON
    (49) varDeclaration -> . varType ID EQUAL declareMap COLON
    (50) varDeclaration -> . varType ID EQUAL declararSet COLON
    (14) controlExpression -> . sentencias_if
    (15) controlExpression -> . sentencias_if_else
    (16) controlExpression -> . sentencias_while
    (17) controlExpression -> . impresion
    (18) controlExpression -> . impresion_vacio
    (35) impresion -> . ALERT LPAREN expression RPAREN
    (102) operacionesMath -> . sumas
    (103) operacionesMath -> . sumas operacionesMath
    (104) operacionesMath -> . restas
    (105) operacionesMath -> . restas operacionesMath
    (73) declareteFunction -> . FUNCTION ID LPAREN params RPAREN
    (74) declareteFunction -> . FUNCTION ID LPAREN params RPAREN sentencesCmpt
    (75) declareteFunction -> . varType ID EQUAL FUNCTION LPAREN params RPAREN
    (41) empty -> .
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE
    (29) sentencias_if -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (30) sentencias_if -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (31) sentencias_if_else -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (32) sentencias_if_else -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (33) sentencias_while -> . WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (34) sentencias_while -> . WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (36) impresion_vacio -> . ALERT LPAREN RPAREN
    (106) sumas -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (107) sumas -> . numOperadores PLUS NUM
    (115) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (116) restas -> . numOperadores MINUS NUM
    (108) numOperadores -> . enteros
    (109) numOperadores -> . decimales
    (110) enteros -> . NUM
    (111) enteros -> . numNegative
    (114) decimales -> . enteros PERIOD NUM
    (112) numNegative -> . MINUS NUM
    (113) numNegative -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    ID              shift and go to state 4
    LET             shift and go to state 12
    CONST           shift and go to state 13
    VAR             shift and go to state 14
    STRING          shift and go to state 16
    NUM             shift and go to state 17
    ALERT           shift and go to state 23
    FUNCTION        shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    IF              shift and go to state 29
    WHILE           shift and go to state 30
    MINUS           shift and go to state 32
    PERIOD          reduce using rule 113 (numNegative -> .)
    PLUS            reduce using rule 113 (numNegative -> .)

  ! ID              [ reduce using rule 41 (empty -> .) ]
  ! MINUS           [ reduce using rule 113 (numNegative -> .) ]

    sentencia                      shift and go to state 210
    callMethods                    shift and go to state 2
    varType                        shift and go to state 3
    callFunction                   shift and go to state 5
    javaScript_param               shift and go to state 6
    varDeclaration                 shift and go to state 7
    controlExpression              shift and go to state 8
    impresion                      shift and go to state 9
    operacionesMath                shift and go to state 10
    declareteFunction              shift and go to state 11
    empty                          shift and go to state 15
    boolean                        shift and go to state 18
    sentencias_if                  shift and go to state 19
    sentencias_if_else             shift and go to state 20
    sentencias_while               shift and go to state 21
    impresion_vacio                shift and go to state 22
    sumas                          shift and go to state 24
    restas                         shift and go to state 25
    numOperadores                  shift and go to state 31
    enteros                        shift and go to state 33
    decimales                      shift and go to state 34
    numNegative                    shift and go to state 35

state 208

    (34) sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK .

    $end            reduce using rule 34 (sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK .)
    RBLOCK          reduce using rule 34 (sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK .)
    RETURN          reduce using rule 34 (sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK .)


state 209

    (31) sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE . LBLOCK sentencia RBLOCK

    LBLOCK          shift and go to state 211


state 210

    (32) sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia . RBLOCK

    RBLOCK          shift and go to state 212


state 211

    (31) sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK . sentencia RBLOCK
    (1) sentencia -> . callMethods
    (2) sentencia -> . varType ID EQUAL callMethods
    (3) sentencia -> . callFunction
    (4) sentencia -> . javaScript_param
    (5) sentencia -> . varDeclaration
    (6) sentencia -> . controlExpression
    (7) sentencia -> . impresion
    (8) sentencia -> . operacionesMath
    (9) sentencia -> . declareteFunction
    (51) callMethods -> . ID methodArray COLON
    (52) callMethods -> . ID methodSet COLON
    (53) callMethods -> . ID methodMap COLON
    (44) varType -> . LET
    (45) varType -> . CONST
    (46) varType -> . VAR
    (47) varType -> . empty
    (78) callFunction -> . ID LPAREN params RPAREN
    (37) javaScript_param -> . STRING
    (38) javaScript_param -> . NUM
    (39) javaScript_param -> . boolean
    (40) javaScript_param -> . ID
    (48) varDeclaration -> . varType ID EQUAL arrayDeclare COLON
    (49) varDeclaration -> . varType ID EQUAL declareMap COLON
    (50) varDeclaration -> . varType ID EQUAL declararSet COLON
    (14) controlExpression -> . sentencias_if
    (15) controlExpression -> . sentencias_if_else
    (16) controlExpression -> . sentencias_while
    (17) controlExpression -> . impresion
    (18) controlExpression -> . impresion_vacio
    (35) impresion -> . ALERT LPAREN expression RPAREN
    (102) operacionesMath -> . sumas
    (103) operacionesMath -> . sumas operacionesMath
    (104) operacionesMath -> . restas
    (105) operacionesMath -> . restas operacionesMath
    (73) declareteFunction -> . FUNCTION ID LPAREN params RPAREN
    (74) declareteFunction -> . FUNCTION ID LPAREN params RPAREN sentencesCmpt
    (75) declareteFunction -> . varType ID EQUAL FUNCTION LPAREN params RPAREN
    (41) empty -> .
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE
    (29) sentencias_if -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (30) sentencias_if -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (31) sentencias_if_else -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (32) sentencias_if_else -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (33) sentencias_while -> . WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (34) sentencias_while -> . WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (36) impresion_vacio -> . ALERT LPAREN RPAREN
    (106) sumas -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (107) sumas -> . numOperadores PLUS NUM
    (115) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (116) restas -> . numOperadores MINUS NUM
    (108) numOperadores -> . enteros
    (109) numOperadores -> . decimales
    (110) enteros -> . NUM
    (111) enteros -> . numNegative
    (114) decimales -> . enteros PERIOD NUM
    (112) numNegative -> . MINUS NUM
    (113) numNegative -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    ID              shift and go to state 4
    LET             shift and go to state 12
    CONST           shift and go to state 13
    VAR             shift and go to state 14
    STRING          shift and go to state 16
    NUM             shift and go to state 17
    ALERT           shift and go to state 23
    FUNCTION        shift and go to state 26
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    IF              shift and go to state 29
    WHILE           shift and go to state 30
    MINUS           shift and go to state 32
    PERIOD          reduce using rule 113 (numNegative -> .)
    PLUS            reduce using rule 113 (numNegative -> .)

  ! ID              [ reduce using rule 41 (empty -> .) ]
  ! MINUS           [ reduce using rule 113 (numNegative -> .) ]

    sentencia                      shift and go to state 213
    callMethods                    shift and go to state 2
    varType                        shift and go to state 3
    callFunction                   shift and go to state 5
    javaScript_param               shift and go to state 6
    varDeclaration                 shift and go to state 7
    controlExpression              shift and go to state 8
    impresion                      shift and go to state 9
    operacionesMath                shift and go to state 10
    declareteFunction              shift and go to state 11
    empty                          shift and go to state 15
    boolean                        shift and go to state 18
    sentencias_if                  shift and go to state 19
    sentencias_if_else             shift and go to state 20
    sentencias_while               shift and go to state 21
    impresion_vacio                shift and go to state 22
    sumas                          shift and go to state 24
    restas                         shift and go to state 25
    numOperadores                  shift and go to state 31
    enteros                        shift and go to state 33
    decimales                      shift and go to state 34
    numNegative                    shift and go to state 35

state 212

    (32) sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK .

    $end            reduce using rule 32 (sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK .)
    RBLOCK          reduce using rule 32 (sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK .)
    RETURN          reduce using rule 32 (sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK .)


state 213

    (31) sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia . RBLOCK

    RBLOCK          shift and go to state 214


state 214

    (31) sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK .

    $end            reduce using rule 31 (sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK .)
    RBLOCK          reduce using rule 31 (sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK .)
    RETURN          reduce using rule 31 (sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 0 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 0 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 24 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 25 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 42 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 47 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 48 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 98 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 111 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 117 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 126 resolved as shift
WARNING: shift/reduce conflict for ID in state 155 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 155 resolved as shift
WARNING: shift/reduce conflict for ID in state 156 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 156 resolved as shift
WARNING: shift/reduce conflict for ID in state 174 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 174 resolved as shift
WARNING: shift/reduce conflict for ID in state 191 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 191 resolved as shift
WARNING: shift/reduce conflict for ID in state 194 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 194 resolved as shift
WARNING: shift/reduce conflict for ID in state 207 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 207 resolved as shift
WARNING: shift/reduce conflict for ID in state 211 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 211 resolved as shift
WARNING: reduce/reduce conflict in state 9 resolved using rule (sentencia -> impresion)
WARNING: rejected rule (controlExpression -> impresion) in state 9
WARNING: Rule (controlExpression -> impresion) is never reduced
