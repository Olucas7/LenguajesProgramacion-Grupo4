Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BREAK
    CASE
    CATCH
    CLASS
    CONTINUE
    DEBUGGER
    DEFAULT
    DIV_EQUAL
    DO
    EXPORT
    EXTENDS
    FINALLY
    FOR
    IMPORT
    IN
    INSTANCEOF
    MINUS_EQUAL
    MOD
    MOD_EQUAL
    MUL_EQUAL
    PLUS_EQUAL
    PRINT
    SWITCH
    THIS
    THROW
    TRY
    TWOPOINTS
    TYPEOF
    WITH
    YIELD

Grammar

Rule 0     S' -> sentencia
Rule 1     sentencia -> callMethods
Rule 2     sentencia -> varType ID EQUAL callMethods
Rule 3     sentencia -> callFunction
Rule 4     sentencia -> javaScript_param
Rule 5     sentencia -> varDeclaration
Rule 6     sentencia -> controlExpression
Rule 7     sentencia -> impresion
Rule 8     sentencia -> declareteFunction
Rule 9     sentencia -> assingOperadores
Rule 10    expression -> conditionalEspecifico
Rule 11    expression -> inicializarOp
Rule 12    assingOperadores -> varType ID EQUAL inicializarOp
Rule 13    controlExpression -> sentencias_if
Rule 14    controlExpression -> sentencias_if_else
Rule 15    controlExpression -> sentencias_while
Rule 16    controlExpression -> impresion
Rule 17    controlExpression -> impresion_vacio
Rule 18    opConditional -> ISEQUAL
Rule 19    opConditional -> IS_NOT_IDENTICAL
Rule 20    opConditional -> IS_IDENTICAL
Rule 21    opConditional -> GREATER
Rule 22    opConditional -> GREATEREQUAL
Rule 23    opConditional -> LESS
Rule 24    opConditional -> LESSEQUAL
Rule 25    opConditional -> boolean
Rule 26    operadorLogical -> AND
Rule 27    operadorLogical -> OR
Rule 28    operadorLogical -> NOT
Rule 29    sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
Rule 30    sentencias_if -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK
Rule 31    sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
Rule 32    sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
Rule 33    sentencias_while -> WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK
Rule 34    sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
Rule 35    impresion -> ALERT LPAREN expression RPAREN
Rule 36    impresion_vacio -> ALERT LPAREN RPAREN
Rule 37    javaScript_param -> STRING
Rule 38    javaScript_param -> NUM
Rule 39    javaScript_param -> boolean
Rule 40    javaScript_param -> ID
Rule 41    empty -> <empty>
Rule 42    boolean -> TRUE
Rule 43    boolean -> FALSE
Rule 44    varType -> LET
Rule 45    varType -> CONST
Rule 46    varType -> VAR
Rule 47    varType -> empty
Rule 48    varDeclaration -> varType ID EQUAL arrayDeclare COLON
Rule 49    varDeclaration -> varType ID EQUAL declareMap COLON
Rule 50    varDeclaration -> varType ID EQUAL declararSet COLON
Rule 51    varDeclaration -> varType ID COLON
Rule 52    callMethods -> ID methodArray COLON
Rule 53    callMethods -> ID methodSet COLON
Rule 54    callMethods -> ID methodMap COLON
Rule 55    arrayDeclare -> LBRACKET arrayValues RBRACKET
Rule 56    arrayDeclare -> NEW ARRAY LPAREN arrayValues RPAREN
Rule 57    arrayValues -> arrayValue
Rule 58    arrayValues -> arrayValue COMMA arrayValue
Rule 59    arrayValue -> LPAREN expression RPAREN
Rule 60    arrayValue -> ID
Rule 61    arrayValue -> NUM
Rule 62    arrayValue -> STRING
Rule 63    arrayValue -> boolean
Rule 64    arrayValue -> empty
Rule 65    methodArray -> PERIOD PUSH LPAREN arrayValue RPAREN
Rule 66    methodArray -> PERIOD UNSHIFT LPAREN arrayValue RPAREN
Rule 67    methodArray -> PERIOD POP LPAREN empty RPAREN
Rule 68    declareMap -> NEW MAP LPAREN iterable RPAREN
Rule 69    iterable -> arrayDeclare
Rule 70    iterable -> declararSet
Rule 71    iterable -> empty
Rule 72    methodMap -> PERIOD CLEAR LPAREN RPAREN
Rule 73    methodMap -> PERIOD LENGTH LPAREN RPAREN
Rule 74    declareteFunction -> FUNCTION ID LPAREN params RPAREN
Rule 75    declareteFunction -> FUNCTION ID LPAREN params RPAREN sentencesCmpt
Rule 76    declareteFunction -> varType ID EQUAL FUNCTION LPAREN params RPAREN
Rule 77    sentencesCmpt -> LBLOCK sentencia RBLOCK
Rule 78    sentencesCmpt -> LBLOCK sentencia RETURN RBLOCK
Rule 79    callFunction -> ID LPAREN params RPAREN
Rule 80    params -> paramList
Rule 81    params -> empty
Rule 82    param -> ID
Rule 83    param -> ID LBRACKET RBRACKET
Rule 84    paramList -> param
Rule 85    paramList -> param COMMA paramList
Rule 86    args -> argslist
Rule 87    args -> empty
Rule 88    args -> javaScript_param
Rule 89    argslist -> args
Rule 90    argslist -> args COMMA argslist
Rule 91    declararSet -> NEW SET LPAREN setValues RPAREN
Rule 92    contiene -> ID PERIOD HAS LPAREN params RPAREN
Rule 93    setValues -> setValue
Rule 94    setValues -> setValue COMMA setValue
Rule 95    setValue -> ID
Rule 96    setValue -> NUM
Rule 97    setValue -> STRING
Rule 98    setValue -> boolean
Rule 99    setValue -> empty
Rule 100   methodSet -> PERIOD ADD LPAREN setValue RPAREN
Rule 101   methodSet -> PERIOD DELETE LPAREN setValue RPAREN
Rule 102   methodSet -> PERIOD CLEAR LPAREN empty RPAREN
Rule 103   inicializarOp -> PLUS operacionesMath
Rule 104   inicializarOp -> MINUS operacionesMath
Rule 105   inicializarOp -> empty operacionesMath
Rule 106   operacionesMath -> numOperadores PLUS suma
Rule 107   operacionesMath -> suma
Rule 108   operacionesMath -> suma operacionesMath
Rule 109   operacionesMath -> restas
Rule 110   operacionesMath -> numOperadores MINUS restas
Rule 111   operacionesMath -> restas operacionesMath
Rule 112   operacionesMath -> multiplicacion
Rule 113   operacionesMath -> numOperadores TIMES multiplicacion
Rule 114   operacionesMath -> multiplicacion operacionesMath
Rule 115   suma -> numOperadores PLUS LPAREN numOperadores RPAREN
Rule 116   suma -> numOperadores PLUS NUM
Rule 117   suma -> numOperadores
Rule 118   restas -> numOperadores MINUS LPAREN numOperadores RPAREN
Rule 119   restas -> numOperadores MINUS NUM
Rule 120   restas -> numOperadores
Rule 121   multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN
Rule 122   multiplicacion -> numOperadores TIMES NUM
Rule 123   multiplicacion -> numOperadores
Rule 124   divicion -> numOperadores DIVIDE LPAREN numOperadores RPAREN
Rule 125   divicion -> numOperadores DIVIDE NUM
Rule 126   divicion -> numOperadores
Rule 127   numOperadores -> enteros
Rule 128   numOperadores -> decimales
Rule 129   enteros -> NUM
Rule 130   enteros -> numNegative
Rule 131   numNegative -> MINUS NUM
Rule 132   numNegative -> <empty>
Rule 133   decimales -> enteros PERIOD NUM
Rule 134   conditionalEspecifico -> ID opConditional dataCondi
Rule 135   conditionalEspecifico -> NUM opConditional NUM
Rule 136   conditionalEspecifico -> STRING opConditional STRING
Rule 137   dataCondi -> STRING
Rule 138   dataCondi -> NUM

Terminals, with rules where they appear

ADD                  : 100
ALERT                : 35 36
AND                  : 26
ARRAY                : 56
BREAK                : 
CASE                 : 
CATCH                : 
CLASS                : 
CLEAR                : 72 102
COLON                : 48 49 50 51 52 53 54
COMMA                : 58 85 90 94
CONST                : 45
CONTINUE             : 
DEBUGGER             : 
DEFAULT              : 
DELETE               : 101
DIVIDE               : 124 125
DIV_EQUAL            : 
DO                   : 
ELSE                 : 31 32
EQUAL                : 2 12 48 49 50 76
EXPORT               : 
EXTENDS              : 
FALSE                : 43
FINALLY              : 
FOR                  : 
FUNCTION             : 74 75 76
GREATER              : 21
GREATEREQUAL         : 22
HAS                  : 92
ID                   : 2 12 40 48 49 50 51 52 53 54 60 74 75 76 79 82 83 92 95 134
IF                   : 29 30 31 32
IMPORT               : 
IN                   : 
INSTANCEOF           : 
ISEQUAL              : 18
IS_IDENTICAL         : 20
IS_NOT_IDENTICAL     : 19
LBLOCK               : 29 30 31 31 32 32 33 34 77 78
LBRACKET             : 55 83
LENGTH               : 73
LESS                 : 23
LESSEQUAL            : 24
LET                  : 44
LPAREN               : 29 30 31 32 33 34 35 36 56 59 65 66 67 68 72 73 74 75 76 79 91 92 100 101 102 115 118 121 124
MAP                  : 68
MINUS                : 104 110 118 119 131
MINUS_EQUAL          : 
MOD                  : 
MOD_EQUAL            : 
MUL_EQUAL            : 
NEW                  : 56 68 91
NOT                  : 28
NUM                  : 38 61 96 116 119 122 125 129 131 133 135 135 138
OR                   : 27
PERIOD               : 65 66 67 72 73 92 100 101 102 133
PLUS                 : 103 106 115 116
PLUS_EQUAL           : 
POP                  : 67
PRINT                : 
PUSH                 : 65
RBLOCK               : 29 30 31 31 32 32 33 34 77 78
RBRACKET             : 55 83
RETURN               : 78
RPAREN               : 29 30 31 32 33 34 35 36 56 59 65 66 67 68 72 73 74 75 76 79 91 92 100 101 102 115 118 121 124
SET                  : 91
STRING               : 37 62 97 136 136 137
SWITCH               : 
THIS                 : 
THROW                : 
TIMES                : 113 121 122
TRUE                 : 42
TRY                  : 
TWOPOINTS            : 
TYPEOF               : 
UNSHIFT              : 66
VAR                  : 46
WHILE                : 33 34
WITH                 : 
YIELD                : 
error                : 

Nonterminals, with rules where they appear

args                 : 89 90
argslist             : 86 90
arrayDeclare         : 48 69
arrayValue           : 57 58 58 65 66
arrayValues          : 55 56
assingOperadores     : 9
boolean              : 25 39 63 98
callFunction         : 3
callMethods          : 1 2
conditionalEspecifico : 10
contiene             : 
controlExpression    : 6
dataCondi            : 134
decimales            : 128
declararSet          : 50 70
declareMap           : 49
declareteFunction    : 8
divicion             : 
empty                : 47 64 67 71 81 87 99 102 105
enteros              : 127 133
expression           : 29 29 30 31 31 32 33 34 34 35 59
impresion            : 7 16
impresion_vacio      : 17
inicializarOp        : 11 12
iterable             : 68
javaScript_param     : 4 88
methodArray          : 52
methodMap            : 54
methodSet            : 53
multiplicacion       : 112 113 114
numNegative          : 130
numOperadores        : 106 110 113 115 115 116 117 118 118 119 120 121 121 122 123 124 124 125 126
opConditional        : 134 135 136
operacionesMath      : 103 104 105 108 111 114
operadorLogical      : 29 31 34
param                : 84 85
paramList            : 80 85
params               : 74 75 76 79 92
restas               : 109 110 111
sentencesCmpt        : 75
sentencia            : 29 30 31 31 32 32 33 34 77 78 0
sentencias_if        : 13
sentencias_if_else   : 14
sentencias_while     : 15
setValue             : 93 94 94 100 101
setValues            : 91
suma                 : 106 107 108
varDeclaration       : 5
varType              : 2 12 48 49 50 51 76

Parsing method: LALR

state 0

    (0) S' -> . sentencia
    (1) sentencia -> . callMethods
    (2) sentencia -> . varType ID EQUAL callMethods
    (3) sentencia -> . callFunction
    (4) sentencia -> . javaScript_param
    (5) sentencia -> . varDeclaration
    (6) sentencia -> . controlExpression
    (7) sentencia -> . impresion
    (8) sentencia -> . declareteFunction
    (9) sentencia -> . assingOperadores
    (52) callMethods -> . ID methodArray COLON
    (53) callMethods -> . ID methodSet COLON
    (54) callMethods -> . ID methodMap COLON
    (44) varType -> . LET
    (45) varType -> . CONST
    (46) varType -> . VAR
    (47) varType -> . empty
    (79) callFunction -> . ID LPAREN params RPAREN
    (37) javaScript_param -> . STRING
    (38) javaScript_param -> . NUM
    (39) javaScript_param -> . boolean
    (40) javaScript_param -> . ID
    (48) varDeclaration -> . varType ID EQUAL arrayDeclare COLON
    (49) varDeclaration -> . varType ID EQUAL declareMap COLON
    (50) varDeclaration -> . varType ID EQUAL declararSet COLON
    (51) varDeclaration -> . varType ID COLON
    (13) controlExpression -> . sentencias_if
    (14) controlExpression -> . sentencias_if_else
    (15) controlExpression -> . sentencias_while
    (16) controlExpression -> . impresion
    (17) controlExpression -> . impresion_vacio
    (35) impresion -> . ALERT LPAREN expression RPAREN
    (74) declareteFunction -> . FUNCTION ID LPAREN params RPAREN
    (75) declareteFunction -> . FUNCTION ID LPAREN params RPAREN sentencesCmpt
    (76) declareteFunction -> . varType ID EQUAL FUNCTION LPAREN params RPAREN
    (12) assingOperadores -> . varType ID EQUAL inicializarOp
    (41) empty -> .
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE
    (29) sentencias_if -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (30) sentencias_if -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (31) sentencias_if_else -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (32) sentencias_if_else -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (33) sentencias_while -> . WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (34) sentencias_while -> . WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (36) impresion_vacio -> . ALERT LPAREN RPAREN

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 4
    LET             shift and go to state 12
    CONST           shift and go to state 13
    VAR             shift and go to state 14
    STRING          shift and go to state 16
    NUM             shift and go to state 17
    ALERT           shift and go to state 23
    FUNCTION        shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28

  ! ID              [ reduce using rule 41 (empty -> .) ]

    sentencia                      shift and go to state 1
    callMethods                    shift and go to state 2
    varType                        shift and go to state 3
    callFunction                   shift and go to state 5
    javaScript_param               shift and go to state 6
    varDeclaration                 shift and go to state 7
    controlExpression              shift and go to state 8
    impresion                      shift and go to state 9
    declareteFunction              shift and go to state 10
    assingOperadores               shift and go to state 11
    empty                          shift and go to state 15
    boolean                        shift and go to state 18
    sentencias_if                  shift and go to state 19
    sentencias_if_else             shift and go to state 20
    sentencias_while               shift and go to state 21
    impresion_vacio                shift and go to state 22

state 1

    (0) S' -> sentencia .



state 2

    (1) sentencia -> callMethods .

    $end            reduce using rule 1 (sentencia -> callMethods .)
    RBLOCK          reduce using rule 1 (sentencia -> callMethods .)
    RETURN          reduce using rule 1 (sentencia -> callMethods .)


state 3

    (2) sentencia -> varType . ID EQUAL callMethods
    (48) varDeclaration -> varType . ID EQUAL arrayDeclare COLON
    (49) varDeclaration -> varType . ID EQUAL declareMap COLON
    (50) varDeclaration -> varType . ID EQUAL declararSet COLON
    (51) varDeclaration -> varType . ID COLON
    (76) declareteFunction -> varType . ID EQUAL FUNCTION LPAREN params RPAREN
    (12) assingOperadores -> varType . ID EQUAL inicializarOp

    ID              shift and go to state 29


state 4

    (52) callMethods -> ID . methodArray COLON
    (53) callMethods -> ID . methodSet COLON
    (54) callMethods -> ID . methodMap COLON
    (79) callFunction -> ID . LPAREN params RPAREN
    (40) javaScript_param -> ID .
    (65) methodArray -> . PERIOD PUSH LPAREN arrayValue RPAREN
    (66) methodArray -> . PERIOD UNSHIFT LPAREN arrayValue RPAREN
    (67) methodArray -> . PERIOD POP LPAREN empty RPAREN
    (100) methodSet -> . PERIOD ADD LPAREN setValue RPAREN
    (101) methodSet -> . PERIOD DELETE LPAREN setValue RPAREN
    (102) methodSet -> . PERIOD CLEAR LPAREN empty RPAREN
    (72) methodMap -> . PERIOD CLEAR LPAREN RPAREN
    (73) methodMap -> . PERIOD LENGTH LPAREN RPAREN

    LPAREN          shift and go to state 33
    $end            reduce using rule 40 (javaScript_param -> ID .)
    RBLOCK          reduce using rule 40 (javaScript_param -> ID .)
    RETURN          reduce using rule 40 (javaScript_param -> ID .)
    PERIOD          shift and go to state 34

    methodArray                    shift and go to state 30
    methodSet                      shift and go to state 31
    methodMap                      shift and go to state 32

state 5

    (3) sentencia -> callFunction .

    $end            reduce using rule 3 (sentencia -> callFunction .)
    RBLOCK          reduce using rule 3 (sentencia -> callFunction .)
    RETURN          reduce using rule 3 (sentencia -> callFunction .)


state 6

    (4) sentencia -> javaScript_param .

    $end            reduce using rule 4 (sentencia -> javaScript_param .)
    RBLOCK          reduce using rule 4 (sentencia -> javaScript_param .)
    RETURN          reduce using rule 4 (sentencia -> javaScript_param .)


state 7

    (5) sentencia -> varDeclaration .

    $end            reduce using rule 5 (sentencia -> varDeclaration .)
    RBLOCK          reduce using rule 5 (sentencia -> varDeclaration .)
    RETURN          reduce using rule 5 (sentencia -> varDeclaration .)


state 8

    (6) sentencia -> controlExpression .

    $end            reduce using rule 6 (sentencia -> controlExpression .)
    RBLOCK          reduce using rule 6 (sentencia -> controlExpression .)
    RETURN          reduce using rule 6 (sentencia -> controlExpression .)


state 9

    (7) sentencia -> impresion .
    (16) controlExpression -> impresion .

  ! reduce/reduce conflict for $end resolved using rule 7 (sentencia -> impresion .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 7 (sentencia -> impresion .)
  ! reduce/reduce conflict for RETURN resolved using rule 7 (sentencia -> impresion .)
    $end            reduce using rule 7 (sentencia -> impresion .)
    RBLOCK          reduce using rule 7 (sentencia -> impresion .)
    RETURN          reduce using rule 7 (sentencia -> impresion .)

  ! $end            [ reduce using rule 16 (controlExpression -> impresion .) ]
  ! RBLOCK          [ reduce using rule 16 (controlExpression -> impresion .) ]
  ! RETURN          [ reduce using rule 16 (controlExpression -> impresion .) ]


state 10

    (8) sentencia -> declareteFunction .

    $end            reduce using rule 8 (sentencia -> declareteFunction .)
    RBLOCK          reduce using rule 8 (sentencia -> declareteFunction .)
    RETURN          reduce using rule 8 (sentencia -> declareteFunction .)


state 11

    (9) sentencia -> assingOperadores .

    $end            reduce using rule 9 (sentencia -> assingOperadores .)
    RBLOCK          reduce using rule 9 (sentencia -> assingOperadores .)
    RETURN          reduce using rule 9 (sentencia -> assingOperadores .)


state 12

    (44) varType -> LET .

    ID              reduce using rule 44 (varType -> LET .)


state 13

    (45) varType -> CONST .

    ID              reduce using rule 45 (varType -> CONST .)


state 14

    (46) varType -> VAR .

    ID              reduce using rule 46 (varType -> VAR .)


state 15

    (47) varType -> empty .

    ID              reduce using rule 47 (varType -> empty .)


state 16

    (37) javaScript_param -> STRING .

    $end            reduce using rule 37 (javaScript_param -> STRING .)
    RBLOCK          reduce using rule 37 (javaScript_param -> STRING .)
    RETURN          reduce using rule 37 (javaScript_param -> STRING .)


state 17

    (38) javaScript_param -> NUM .

    $end            reduce using rule 38 (javaScript_param -> NUM .)
    RBLOCK          reduce using rule 38 (javaScript_param -> NUM .)
    RETURN          reduce using rule 38 (javaScript_param -> NUM .)


state 18

    (39) javaScript_param -> boolean .

    $end            reduce using rule 39 (javaScript_param -> boolean .)
    RBLOCK          reduce using rule 39 (javaScript_param -> boolean .)
    RETURN          reduce using rule 39 (javaScript_param -> boolean .)


state 19

    (13) controlExpression -> sentencias_if .

    $end            reduce using rule 13 (controlExpression -> sentencias_if .)
    RBLOCK          reduce using rule 13 (controlExpression -> sentencias_if .)
    RETURN          reduce using rule 13 (controlExpression -> sentencias_if .)


state 20

    (14) controlExpression -> sentencias_if_else .

    $end            reduce using rule 14 (controlExpression -> sentencias_if_else .)
    RBLOCK          reduce using rule 14 (controlExpression -> sentencias_if_else .)
    RETURN          reduce using rule 14 (controlExpression -> sentencias_if_else .)


state 21

    (15) controlExpression -> sentencias_while .

    $end            reduce using rule 15 (controlExpression -> sentencias_while .)
    RBLOCK          reduce using rule 15 (controlExpression -> sentencias_while .)
    RETURN          reduce using rule 15 (controlExpression -> sentencias_while .)


state 22

    (17) controlExpression -> impresion_vacio .

    $end            reduce using rule 17 (controlExpression -> impresion_vacio .)
    RBLOCK          reduce using rule 17 (controlExpression -> impresion_vacio .)
    RETURN          reduce using rule 17 (controlExpression -> impresion_vacio .)


state 23

    (35) impresion -> ALERT . LPAREN expression RPAREN
    (36) impresion_vacio -> ALERT . LPAREN RPAREN

    LPAREN          shift and go to state 35


state 24

    (74) declareteFunction -> FUNCTION . ID LPAREN params RPAREN
    (75) declareteFunction -> FUNCTION . ID LPAREN params RPAREN sentencesCmpt

    ID              shift and go to state 36


state 25

    (42) boolean -> TRUE .

    $end            reduce using rule 42 (boolean -> TRUE .)
    STRING          reduce using rule 42 (boolean -> TRUE .)
    NUM             reduce using rule 42 (boolean -> TRUE .)
    COMMA           reduce using rule 42 (boolean -> TRUE .)
    RBRACKET        reduce using rule 42 (boolean -> TRUE .)
    RPAREN          reduce using rule 42 (boolean -> TRUE .)
    RBLOCK          reduce using rule 42 (boolean -> TRUE .)
    RETURN          reduce using rule 42 (boolean -> TRUE .)


state 26

    (43) boolean -> FALSE .

    $end            reduce using rule 43 (boolean -> FALSE .)
    STRING          reduce using rule 43 (boolean -> FALSE .)
    NUM             reduce using rule 43 (boolean -> FALSE .)
    COMMA           reduce using rule 43 (boolean -> FALSE .)
    RBRACKET        reduce using rule 43 (boolean -> FALSE .)
    RPAREN          reduce using rule 43 (boolean -> FALSE .)
    RBLOCK          reduce using rule 43 (boolean -> FALSE .)
    RETURN          reduce using rule 43 (boolean -> FALSE .)


state 27

    (29) sentencias_if -> IF . LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (30) sentencias_if -> IF . LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (31) sentencias_if_else -> IF . LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (32) sentencias_if_else -> IF . LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK

    LPAREN          shift and go to state 37


state 28

    (33) sentencias_while -> WHILE . LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (34) sentencias_while -> WHILE . LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK

    LPAREN          shift and go to state 38


state 29

    (2) sentencia -> varType ID . EQUAL callMethods
    (48) varDeclaration -> varType ID . EQUAL arrayDeclare COLON
    (49) varDeclaration -> varType ID . EQUAL declareMap COLON
    (50) varDeclaration -> varType ID . EQUAL declararSet COLON
    (51) varDeclaration -> varType ID . COLON
    (76) declareteFunction -> varType ID . EQUAL FUNCTION LPAREN params RPAREN
    (12) assingOperadores -> varType ID . EQUAL inicializarOp

    EQUAL           shift and go to state 39
    COLON           shift and go to state 40


state 30

    (52) callMethods -> ID methodArray . COLON

    COLON           shift and go to state 41


state 31

    (53) callMethods -> ID methodSet . COLON

    COLON           shift and go to state 42


state 32

    (54) callMethods -> ID methodMap . COLON

    COLON           shift and go to state 43


state 33

    (79) callFunction -> ID LPAREN . params RPAREN
    (80) params -> . paramList
    (81) params -> . empty
    (84) paramList -> . param
    (85) paramList -> . param COMMA paramList
    (41) empty -> .
    (82) param -> . ID
    (83) param -> . ID LBRACKET RBRACKET

    RPAREN          reduce using rule 41 (empty -> .)
    ID              shift and go to state 44

    params                         shift and go to state 45
    paramList                      shift and go to state 46
    empty                          shift and go to state 47
    param                          shift and go to state 48

state 34

    (65) methodArray -> PERIOD . PUSH LPAREN arrayValue RPAREN
    (66) methodArray -> PERIOD . UNSHIFT LPAREN arrayValue RPAREN
    (67) methodArray -> PERIOD . POP LPAREN empty RPAREN
    (100) methodSet -> PERIOD . ADD LPAREN setValue RPAREN
    (101) methodSet -> PERIOD . DELETE LPAREN setValue RPAREN
    (102) methodSet -> PERIOD . CLEAR LPAREN empty RPAREN
    (72) methodMap -> PERIOD . CLEAR LPAREN RPAREN
    (73) methodMap -> PERIOD . LENGTH LPAREN RPAREN

    PUSH            shift and go to state 49
    UNSHIFT         shift and go to state 50
    POP             shift and go to state 51
    ADD             shift and go to state 52
    DELETE          shift and go to state 53
    CLEAR           shift and go to state 54
    LENGTH          shift and go to state 55


state 35

    (35) impresion -> ALERT LPAREN . expression RPAREN
    (36) impresion_vacio -> ALERT LPAREN . RPAREN
    (10) expression -> . conditionalEspecifico
    (11) expression -> . inicializarOp
    (134) conditionalEspecifico -> . ID opConditional dataCondi
    (135) conditionalEspecifico -> . NUM opConditional NUM
    (136) conditionalEspecifico -> . STRING opConditional STRING
    (103) inicializarOp -> . PLUS operacionesMath
    (104) inicializarOp -> . MINUS operacionesMath
    (105) inicializarOp -> . empty operacionesMath
    (41) empty -> .

  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 57
    ID              shift and go to state 60
    NUM             shift and go to state 61
    STRING          shift and go to state 62
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           reduce using rule 41 (empty -> .)
    PERIOD          reduce using rule 41 (empty -> .)

  ! NUM             [ reduce using rule 41 (empty -> .) ]
  ! MINUS           [ reduce using rule 41 (empty -> .) ]
  ! PLUS            [ reduce using rule 41 (empty -> .) ]
  ! RPAREN          [ reduce using rule 41 (empty -> .) ]

    expression                     shift and go to state 56
    conditionalEspecifico          shift and go to state 58
    inicializarOp                  shift and go to state 59
    empty                          shift and go to state 65

state 36

    (74) declareteFunction -> FUNCTION ID . LPAREN params RPAREN
    (75) declareteFunction -> FUNCTION ID . LPAREN params RPAREN sentencesCmpt

    LPAREN          shift and go to state 66


state 37

    (29) sentencias_if -> IF LPAREN . expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (30) sentencias_if -> IF LPAREN . expression RPAREN LBLOCK sentencia RBLOCK
    (31) sentencias_if_else -> IF LPAREN . expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (32) sentencias_if_else -> IF LPAREN . expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (10) expression -> . conditionalEspecifico
    (11) expression -> . inicializarOp
    (134) conditionalEspecifico -> . ID opConditional dataCondi
    (135) conditionalEspecifico -> . NUM opConditional NUM
    (136) conditionalEspecifico -> . STRING opConditional STRING
    (103) inicializarOp -> . PLUS operacionesMath
    (104) inicializarOp -> . MINUS operacionesMath
    (105) inicializarOp -> . empty operacionesMath
    (41) empty -> .

  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
    ID              shift and go to state 60
    NUM             shift and go to state 61
    STRING          shift and go to state 62
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           reduce using rule 41 (empty -> .)
    PERIOD          reduce using rule 41 (empty -> .)
    RPAREN          reduce using rule 41 (empty -> .)
    AND             reduce using rule 41 (empty -> .)
    OR              reduce using rule 41 (empty -> .)
    NOT             reduce using rule 41 (empty -> .)

  ! NUM             [ reduce using rule 41 (empty -> .) ]
  ! MINUS           [ reduce using rule 41 (empty -> .) ]
  ! PLUS            [ reduce using rule 41 (empty -> .) ]

    expression                     shift and go to state 67
    conditionalEspecifico          shift and go to state 58
    inicializarOp                  shift and go to state 59
    empty                          shift and go to state 65

state 38

    (33) sentencias_while -> WHILE LPAREN . expression RPAREN LBLOCK sentencia RBLOCK
    (34) sentencias_while -> WHILE LPAREN . expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (10) expression -> . conditionalEspecifico
    (11) expression -> . inicializarOp
    (134) conditionalEspecifico -> . ID opConditional dataCondi
    (135) conditionalEspecifico -> . NUM opConditional NUM
    (136) conditionalEspecifico -> . STRING opConditional STRING
    (103) inicializarOp -> . PLUS operacionesMath
    (104) inicializarOp -> . MINUS operacionesMath
    (105) inicializarOp -> . empty operacionesMath
    (41) empty -> .

  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
    ID              shift and go to state 60
    NUM             shift and go to state 61
    STRING          shift and go to state 62
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           reduce using rule 41 (empty -> .)
    PERIOD          reduce using rule 41 (empty -> .)
    RPAREN          reduce using rule 41 (empty -> .)
    AND             reduce using rule 41 (empty -> .)
    OR              reduce using rule 41 (empty -> .)
    NOT             reduce using rule 41 (empty -> .)

  ! NUM             [ reduce using rule 41 (empty -> .) ]
  ! MINUS           [ reduce using rule 41 (empty -> .) ]
  ! PLUS            [ reduce using rule 41 (empty -> .) ]

    expression                     shift and go to state 68
    conditionalEspecifico          shift and go to state 58
    inicializarOp                  shift and go to state 59
    empty                          shift and go to state 65

state 39

    (2) sentencia -> varType ID EQUAL . callMethods
    (48) varDeclaration -> varType ID EQUAL . arrayDeclare COLON
    (49) varDeclaration -> varType ID EQUAL . declareMap COLON
    (50) varDeclaration -> varType ID EQUAL . declararSet COLON
    (76) declareteFunction -> varType ID EQUAL . FUNCTION LPAREN params RPAREN
    (12) assingOperadores -> varType ID EQUAL . inicializarOp
    (52) callMethods -> . ID methodArray COLON
    (53) callMethods -> . ID methodSet COLON
    (54) callMethods -> . ID methodMap COLON
    (55) arrayDeclare -> . LBRACKET arrayValues RBRACKET
    (56) arrayDeclare -> . NEW ARRAY LPAREN arrayValues RPAREN
    (68) declareMap -> . NEW MAP LPAREN iterable RPAREN
    (91) declararSet -> . NEW SET LPAREN setValues RPAREN
    (103) inicializarOp -> . PLUS operacionesMath
    (104) inicializarOp -> . MINUS operacionesMath
    (105) inicializarOp -> . empty operacionesMath
    (41) empty -> .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
    FUNCTION        shift and go to state 74
    ID              shift and go to state 69
    LBRACKET        shift and go to state 76
    NEW             shift and go to state 77
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    NUM             reduce using rule 41 (empty -> .)
    TIMES           reduce using rule 41 (empty -> .)
    PERIOD          reduce using rule 41 (empty -> .)
    $end            reduce using rule 41 (empty -> .)
    RBLOCK          reduce using rule 41 (empty -> .)
    RETURN          reduce using rule 41 (empty -> .)

  ! MINUS           [ reduce using rule 41 (empty -> .) ]
  ! PLUS            [ reduce using rule 41 (empty -> .) ]

    callMethods                    shift and go to state 70
    arrayDeclare                   shift and go to state 71
    declareMap                     shift and go to state 72
    declararSet                    shift and go to state 73
    inicializarOp                  shift and go to state 75
    empty                          shift and go to state 65

state 40

    (51) varDeclaration -> varType ID COLON .

    $end            reduce using rule 51 (varDeclaration -> varType ID COLON .)
    RBLOCK          reduce using rule 51 (varDeclaration -> varType ID COLON .)
    RETURN          reduce using rule 51 (varDeclaration -> varType ID COLON .)


state 41

    (52) callMethods -> ID methodArray COLON .

    $end            reduce using rule 52 (callMethods -> ID methodArray COLON .)
    RBLOCK          reduce using rule 52 (callMethods -> ID methodArray COLON .)
    RETURN          reduce using rule 52 (callMethods -> ID methodArray COLON .)


state 42

    (53) callMethods -> ID methodSet COLON .

    $end            reduce using rule 53 (callMethods -> ID methodSet COLON .)
    RBLOCK          reduce using rule 53 (callMethods -> ID methodSet COLON .)
    RETURN          reduce using rule 53 (callMethods -> ID methodSet COLON .)


state 43

    (54) callMethods -> ID methodMap COLON .

    $end            reduce using rule 54 (callMethods -> ID methodMap COLON .)
    RBLOCK          reduce using rule 54 (callMethods -> ID methodMap COLON .)
    RETURN          reduce using rule 54 (callMethods -> ID methodMap COLON .)


state 44

    (82) param -> ID .
    (83) param -> ID . LBRACKET RBRACKET

    COMMA           reduce using rule 82 (param -> ID .)
    RPAREN          reduce using rule 82 (param -> ID .)
    LBRACKET        shift and go to state 78


state 45

    (79) callFunction -> ID LPAREN params . RPAREN

    RPAREN          shift and go to state 79


state 46

    (80) params -> paramList .

    RPAREN          reduce using rule 80 (params -> paramList .)


state 47

    (81) params -> empty .

    RPAREN          reduce using rule 81 (params -> empty .)


state 48

    (84) paramList -> param .
    (85) paramList -> param . COMMA paramList

    RPAREN          reduce using rule 84 (paramList -> param .)
    COMMA           shift and go to state 80


state 49

    (65) methodArray -> PERIOD PUSH . LPAREN arrayValue RPAREN

    LPAREN          shift and go to state 81


state 50

    (66) methodArray -> PERIOD UNSHIFT . LPAREN arrayValue RPAREN

    LPAREN          shift and go to state 82


state 51

    (67) methodArray -> PERIOD POP . LPAREN empty RPAREN

    LPAREN          shift and go to state 83


state 52

    (100) methodSet -> PERIOD ADD . LPAREN setValue RPAREN

    LPAREN          shift and go to state 84


state 53

    (101) methodSet -> PERIOD DELETE . LPAREN setValue RPAREN

    LPAREN          shift and go to state 85


state 54

    (102) methodSet -> PERIOD CLEAR . LPAREN empty RPAREN
    (72) methodMap -> PERIOD CLEAR . LPAREN RPAREN

    LPAREN          shift and go to state 86


state 55

    (73) methodMap -> PERIOD LENGTH . LPAREN RPAREN

    LPAREN          shift and go to state 87


state 56

    (35) impresion -> ALERT LPAREN expression . RPAREN

    RPAREN          shift and go to state 88


state 57

    (36) impresion_vacio -> ALERT LPAREN RPAREN .

    $end            reduce using rule 36 (impresion_vacio -> ALERT LPAREN RPAREN .)
    RBLOCK          reduce using rule 36 (impresion_vacio -> ALERT LPAREN RPAREN .)
    RETURN          reduce using rule 36 (impresion_vacio -> ALERT LPAREN RPAREN .)


state 58

    (10) expression -> conditionalEspecifico .

    RPAREN          reduce using rule 10 (expression -> conditionalEspecifico .)
    AND             reduce using rule 10 (expression -> conditionalEspecifico .)
    OR              reduce using rule 10 (expression -> conditionalEspecifico .)
    NOT             reduce using rule 10 (expression -> conditionalEspecifico .)


state 59

    (11) expression -> inicializarOp .

    RPAREN          reduce using rule 11 (expression -> inicializarOp .)
    AND             reduce using rule 11 (expression -> inicializarOp .)
    OR              reduce using rule 11 (expression -> inicializarOp .)
    NOT             reduce using rule 11 (expression -> inicializarOp .)


state 60

    (134) conditionalEspecifico -> ID . opConditional dataCondi
    (18) opConditional -> . ISEQUAL
    (19) opConditional -> . IS_NOT_IDENTICAL
    (20) opConditional -> . IS_IDENTICAL
    (21) opConditional -> . GREATER
    (22) opConditional -> . GREATEREQUAL
    (23) opConditional -> . LESS
    (24) opConditional -> . LESSEQUAL
    (25) opConditional -> . boolean
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE

    ISEQUAL         shift and go to state 90
    IS_NOT_IDENTICAL shift and go to state 91
    IS_IDENTICAL    shift and go to state 92
    GREATER         shift and go to state 93
    GREATEREQUAL    shift and go to state 94
    LESS            shift and go to state 95
    LESSEQUAL       shift and go to state 96
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    opConditional                  shift and go to state 89
    boolean                        shift and go to state 97

state 61

    (135) conditionalEspecifico -> NUM . opConditional NUM
    (18) opConditional -> . ISEQUAL
    (19) opConditional -> . IS_NOT_IDENTICAL
    (20) opConditional -> . IS_IDENTICAL
    (21) opConditional -> . GREATER
    (22) opConditional -> . GREATEREQUAL
    (23) opConditional -> . LESS
    (24) opConditional -> . LESSEQUAL
    (25) opConditional -> . boolean
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE

    ISEQUAL         shift and go to state 90
    IS_NOT_IDENTICAL shift and go to state 91
    IS_IDENTICAL    shift and go to state 92
    GREATER         shift and go to state 93
    GREATEREQUAL    shift and go to state 94
    LESS            shift and go to state 95
    LESSEQUAL       shift and go to state 96
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    opConditional                  shift and go to state 98
    boolean                        shift and go to state 97

state 62

    (136) conditionalEspecifico -> STRING . opConditional STRING
    (18) opConditional -> . ISEQUAL
    (19) opConditional -> . IS_NOT_IDENTICAL
    (20) opConditional -> . IS_IDENTICAL
    (21) opConditional -> . GREATER
    (22) opConditional -> . GREATEREQUAL
    (23) opConditional -> . LESS
    (24) opConditional -> . LESSEQUAL
    (25) opConditional -> . boolean
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE

    ISEQUAL         shift and go to state 90
    IS_NOT_IDENTICAL shift and go to state 91
    IS_IDENTICAL    shift and go to state 92
    GREATER         shift and go to state 93
    GREATEREQUAL    shift and go to state 94
    LESS            shift and go to state 95
    LESSEQUAL       shift and go to state 96
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    opConditional                  shift and go to state 99
    boolean                        shift and go to state 97

state 63

    (103) inicializarOp -> PLUS . operacionesMath
    (106) operacionesMath -> . numOperadores PLUS suma
    (107) operacionesMath -> . suma
    (108) operacionesMath -> . suma operacionesMath
    (109) operacionesMath -> . restas
    (110) operacionesMath -> . numOperadores MINUS restas
    (111) operacionesMath -> . restas operacionesMath
    (112) operacionesMath -> . multiplicacion
    (113) operacionesMath -> . numOperadores TIMES multiplicacion
    (114) operacionesMath -> . multiplicacion operacionesMath
    (127) numOperadores -> . enteros
    (128) numOperadores -> . decimales
    (115) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (116) suma -> . numOperadores PLUS NUM
    (117) suma -> . numOperadores
    (118) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (119) restas -> . numOperadores MINUS NUM
    (120) restas -> . numOperadores
    (121) multiplicacion -> . numOperadores TIMES LPAREN numOperadores RPAREN
    (122) multiplicacion -> . numOperadores TIMES NUM
    (123) multiplicacion -> . numOperadores
    (129) enteros -> . NUM
    (130) enteros -> . numNegative
    (133) decimales -> . enteros PERIOD NUM
    (131) numNegative -> . MINUS NUM
    (132) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
    NUM             shift and go to state 108
    MINUS           shift and go to state 104
    PERIOD          reduce using rule 132 (numNegative -> .)
    PLUS            reduce using rule 132 (numNegative -> .)
    TIMES           reduce using rule 132 (numNegative -> .)
    RPAREN          reduce using rule 132 (numNegative -> .)
    AND             reduce using rule 132 (numNegative -> .)
    OR              reduce using rule 132 (numNegative -> .)
    NOT             reduce using rule 132 (numNegative -> .)
    $end            reduce using rule 132 (numNegative -> .)
    RBLOCK          reduce using rule 132 (numNegative -> .)
    RETURN          reduce using rule 132 (numNegative -> .)

  ! MINUS           [ reduce using rule 132 (numNegative -> .) ]
  ! NUM             [ reduce using rule 132 (numNegative -> .) ]

    operacionesMath                shift and go to state 100
    numOperadores                  shift and go to state 101
    suma                           shift and go to state 102
    restas                         shift and go to state 103
    multiplicacion                 shift and go to state 105
    enteros                        shift and go to state 106
    decimales                      shift and go to state 107
    numNegative                    shift and go to state 109

state 64

    (104) inicializarOp -> MINUS . operacionesMath
    (106) operacionesMath -> . numOperadores PLUS suma
    (107) operacionesMath -> . suma
    (108) operacionesMath -> . suma operacionesMath
    (109) operacionesMath -> . restas
    (110) operacionesMath -> . numOperadores MINUS restas
    (111) operacionesMath -> . restas operacionesMath
    (112) operacionesMath -> . multiplicacion
    (113) operacionesMath -> . numOperadores TIMES multiplicacion
    (114) operacionesMath -> . multiplicacion operacionesMath
    (127) numOperadores -> . enteros
    (128) numOperadores -> . decimales
    (115) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (116) suma -> . numOperadores PLUS NUM
    (117) suma -> . numOperadores
    (118) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (119) restas -> . numOperadores MINUS NUM
    (120) restas -> . numOperadores
    (121) multiplicacion -> . numOperadores TIMES LPAREN numOperadores RPAREN
    (122) multiplicacion -> . numOperadores TIMES NUM
    (123) multiplicacion -> . numOperadores
    (129) enteros -> . NUM
    (130) enteros -> . numNegative
    (133) decimales -> . enteros PERIOD NUM
    (131) numNegative -> . MINUS NUM
    (132) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
    NUM             shift and go to state 108
    MINUS           shift and go to state 104
    PERIOD          reduce using rule 132 (numNegative -> .)
    PLUS            reduce using rule 132 (numNegative -> .)
    TIMES           reduce using rule 132 (numNegative -> .)
    RPAREN          reduce using rule 132 (numNegative -> .)
    AND             reduce using rule 132 (numNegative -> .)
    OR              reduce using rule 132 (numNegative -> .)
    NOT             reduce using rule 132 (numNegative -> .)
    $end            reduce using rule 132 (numNegative -> .)
    RBLOCK          reduce using rule 132 (numNegative -> .)
    RETURN          reduce using rule 132 (numNegative -> .)

  ! MINUS           [ reduce using rule 132 (numNegative -> .) ]
  ! NUM             [ reduce using rule 132 (numNegative -> .) ]

    operacionesMath                shift and go to state 110
    numOperadores                  shift and go to state 101
    suma                           shift and go to state 102
    restas                         shift and go to state 103
    multiplicacion                 shift and go to state 105
    enteros                        shift and go to state 106
    decimales                      shift and go to state 107
    numNegative                    shift and go to state 109

state 65

    (105) inicializarOp -> empty . operacionesMath
    (106) operacionesMath -> . numOperadores PLUS suma
    (107) operacionesMath -> . suma
    (108) operacionesMath -> . suma operacionesMath
    (109) operacionesMath -> . restas
    (110) operacionesMath -> . numOperadores MINUS restas
    (111) operacionesMath -> . restas operacionesMath
    (112) operacionesMath -> . multiplicacion
    (113) operacionesMath -> . numOperadores TIMES multiplicacion
    (114) operacionesMath -> . multiplicacion operacionesMath
    (127) numOperadores -> . enteros
    (128) numOperadores -> . decimales
    (115) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (116) suma -> . numOperadores PLUS NUM
    (117) suma -> . numOperadores
    (118) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (119) restas -> . numOperadores MINUS NUM
    (120) restas -> . numOperadores
    (121) multiplicacion -> . numOperadores TIMES LPAREN numOperadores RPAREN
    (122) multiplicacion -> . numOperadores TIMES NUM
    (123) multiplicacion -> . numOperadores
    (129) enteros -> . NUM
    (130) enteros -> . numNegative
    (133) decimales -> . enteros PERIOD NUM
    (131) numNegative -> . MINUS NUM
    (132) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
    NUM             shift and go to state 108
    MINUS           shift and go to state 104
    PERIOD          reduce using rule 132 (numNegative -> .)
    PLUS            reduce using rule 132 (numNegative -> .)
    TIMES           reduce using rule 132 (numNegative -> .)
    RPAREN          reduce using rule 132 (numNegative -> .)
    AND             reduce using rule 132 (numNegative -> .)
    OR              reduce using rule 132 (numNegative -> .)
    NOT             reduce using rule 132 (numNegative -> .)
    $end            reduce using rule 132 (numNegative -> .)
    RBLOCK          reduce using rule 132 (numNegative -> .)
    RETURN          reduce using rule 132 (numNegative -> .)

  ! MINUS           [ reduce using rule 132 (numNegative -> .) ]
  ! NUM             [ reduce using rule 132 (numNegative -> .) ]

    operacionesMath                shift and go to state 111
    numOperadores                  shift and go to state 101
    suma                           shift and go to state 102
    restas                         shift and go to state 103
    multiplicacion                 shift and go to state 105
    enteros                        shift and go to state 106
    decimales                      shift and go to state 107
    numNegative                    shift and go to state 109

state 66

    (74) declareteFunction -> FUNCTION ID LPAREN . params RPAREN
    (75) declareteFunction -> FUNCTION ID LPAREN . params RPAREN sentencesCmpt
    (80) params -> . paramList
    (81) params -> . empty
    (84) paramList -> . param
    (85) paramList -> . param COMMA paramList
    (41) empty -> .
    (82) param -> . ID
    (83) param -> . ID LBRACKET RBRACKET

    RPAREN          reduce using rule 41 (empty -> .)
    ID              shift and go to state 44

    params                         shift and go to state 112
    paramList                      shift and go to state 46
    empty                          shift and go to state 47
    param                          shift and go to state 48

state 67

    (29) sentencias_if -> IF LPAREN expression . operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (30) sentencias_if -> IF LPAREN expression . RPAREN LBLOCK sentencia RBLOCK
    (31) sentencias_if_else -> IF LPAREN expression . operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (32) sentencias_if_else -> IF LPAREN expression . RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (26) operadorLogical -> . AND
    (27) operadorLogical -> . OR
    (28) operadorLogical -> . NOT

    RPAREN          shift and go to state 114
    AND             shift and go to state 115
    OR              shift and go to state 116
    NOT             shift and go to state 117

    operadorLogical                shift and go to state 113

state 68

    (33) sentencias_while -> WHILE LPAREN expression . RPAREN LBLOCK sentencia RBLOCK
    (34) sentencias_while -> WHILE LPAREN expression . operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (26) operadorLogical -> . AND
    (27) operadorLogical -> . OR
    (28) operadorLogical -> . NOT

    RPAREN          shift and go to state 118
    AND             shift and go to state 115
    OR              shift and go to state 116
    NOT             shift and go to state 117

    operadorLogical                shift and go to state 119

state 69

    (52) callMethods -> ID . methodArray COLON
    (53) callMethods -> ID . methodSet COLON
    (54) callMethods -> ID . methodMap COLON
    (65) methodArray -> . PERIOD PUSH LPAREN arrayValue RPAREN
    (66) methodArray -> . PERIOD UNSHIFT LPAREN arrayValue RPAREN
    (67) methodArray -> . PERIOD POP LPAREN empty RPAREN
    (100) methodSet -> . PERIOD ADD LPAREN setValue RPAREN
    (101) methodSet -> . PERIOD DELETE LPAREN setValue RPAREN
    (102) methodSet -> . PERIOD CLEAR LPAREN empty RPAREN
    (72) methodMap -> . PERIOD CLEAR LPAREN RPAREN
    (73) methodMap -> . PERIOD LENGTH LPAREN RPAREN

    PERIOD          shift and go to state 34

    methodArray                    shift and go to state 30
    methodSet                      shift and go to state 31
    methodMap                      shift and go to state 32

state 70

    (2) sentencia -> varType ID EQUAL callMethods .

    $end            reduce using rule 2 (sentencia -> varType ID EQUAL callMethods .)
    RBLOCK          reduce using rule 2 (sentencia -> varType ID EQUAL callMethods .)
    RETURN          reduce using rule 2 (sentencia -> varType ID EQUAL callMethods .)


state 71

    (48) varDeclaration -> varType ID EQUAL arrayDeclare . COLON

    COLON           shift and go to state 120


state 72

    (49) varDeclaration -> varType ID EQUAL declareMap . COLON

    COLON           shift and go to state 121


state 73

    (50) varDeclaration -> varType ID EQUAL declararSet . COLON

    COLON           shift and go to state 122


state 74

    (76) declareteFunction -> varType ID EQUAL FUNCTION . LPAREN params RPAREN

    LPAREN          shift and go to state 123


state 75

    (12) assingOperadores -> varType ID EQUAL inicializarOp .

    $end            reduce using rule 12 (assingOperadores -> varType ID EQUAL inicializarOp .)
    RBLOCK          reduce using rule 12 (assingOperadores -> varType ID EQUAL inicializarOp .)
    RETURN          reduce using rule 12 (assingOperadores -> varType ID EQUAL inicializarOp .)


state 76

    (55) arrayDeclare -> LBRACKET . arrayValues RBRACKET
    (57) arrayValues -> . arrayValue
    (58) arrayValues -> . arrayValue COMMA arrayValue
    (59) arrayValue -> . LPAREN expression RPAREN
    (60) arrayValue -> . ID
    (61) arrayValue -> . NUM
    (62) arrayValue -> . STRING
    (63) arrayValue -> . boolean
    (64) arrayValue -> . empty
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE
    (41) empty -> .

    LPAREN          shift and go to state 126
    ID              shift and go to state 127
    NUM             shift and go to state 128
    STRING          shift and go to state 129
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    COMMA           reduce using rule 41 (empty -> .)
    RBRACKET        reduce using rule 41 (empty -> .)

    arrayValues                    shift and go to state 124
    arrayValue                     shift and go to state 125
    boolean                        shift and go to state 130
    empty                          shift and go to state 131

state 77

    (56) arrayDeclare -> NEW . ARRAY LPAREN arrayValues RPAREN
    (68) declareMap -> NEW . MAP LPAREN iterable RPAREN
    (91) declararSet -> NEW . SET LPAREN setValues RPAREN

    ARRAY           shift and go to state 132
    MAP             shift and go to state 133
    SET             shift and go to state 134


state 78

    (83) param -> ID LBRACKET . RBRACKET

    RBRACKET        shift and go to state 135


state 79

    (79) callFunction -> ID LPAREN params RPAREN .

    $end            reduce using rule 79 (callFunction -> ID LPAREN params RPAREN .)
    RBLOCK          reduce using rule 79 (callFunction -> ID LPAREN params RPAREN .)
    RETURN          reduce using rule 79 (callFunction -> ID LPAREN params RPAREN .)


state 80

    (85) paramList -> param COMMA . paramList
    (84) paramList -> . param
    (85) paramList -> . param COMMA paramList
    (82) param -> . ID
    (83) param -> . ID LBRACKET RBRACKET

    ID              shift and go to state 44

    param                          shift and go to state 48
    paramList                      shift and go to state 136

state 81

    (65) methodArray -> PERIOD PUSH LPAREN . arrayValue RPAREN
    (59) arrayValue -> . LPAREN expression RPAREN
    (60) arrayValue -> . ID
    (61) arrayValue -> . NUM
    (62) arrayValue -> . STRING
    (63) arrayValue -> . boolean
    (64) arrayValue -> . empty
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE
    (41) empty -> .

    LPAREN          shift and go to state 126
    ID              shift and go to state 127
    NUM             shift and go to state 128
    STRING          shift and go to state 129
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    RPAREN          reduce using rule 41 (empty -> .)

    arrayValue                     shift and go to state 137
    boolean                        shift and go to state 130
    empty                          shift and go to state 131

state 82

    (66) methodArray -> PERIOD UNSHIFT LPAREN . arrayValue RPAREN
    (59) arrayValue -> . LPAREN expression RPAREN
    (60) arrayValue -> . ID
    (61) arrayValue -> . NUM
    (62) arrayValue -> . STRING
    (63) arrayValue -> . boolean
    (64) arrayValue -> . empty
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE
    (41) empty -> .

    LPAREN          shift and go to state 126
    ID              shift and go to state 127
    NUM             shift and go to state 128
    STRING          shift and go to state 129
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    RPAREN          reduce using rule 41 (empty -> .)

    arrayValue                     shift and go to state 138
    boolean                        shift and go to state 130
    empty                          shift and go to state 131

state 83

    (67) methodArray -> PERIOD POP LPAREN . empty RPAREN
    (41) empty -> .

    RPAREN          reduce using rule 41 (empty -> .)

    empty                          shift and go to state 139

state 84

    (100) methodSet -> PERIOD ADD LPAREN . setValue RPAREN
    (95) setValue -> . ID
    (96) setValue -> . NUM
    (97) setValue -> . STRING
    (98) setValue -> . boolean
    (99) setValue -> . empty
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE
    (41) empty -> .

    ID              shift and go to state 141
    NUM             shift and go to state 142
    STRING          shift and go to state 143
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    RPAREN          reduce using rule 41 (empty -> .)

    setValue                       shift and go to state 140
    boolean                        shift and go to state 144
    empty                          shift and go to state 145

state 85

    (101) methodSet -> PERIOD DELETE LPAREN . setValue RPAREN
    (95) setValue -> . ID
    (96) setValue -> . NUM
    (97) setValue -> . STRING
    (98) setValue -> . boolean
    (99) setValue -> . empty
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE
    (41) empty -> .

    ID              shift and go to state 141
    NUM             shift and go to state 142
    STRING          shift and go to state 143
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    RPAREN          reduce using rule 41 (empty -> .)

    setValue                       shift and go to state 146
    boolean                        shift and go to state 144
    empty                          shift and go to state 145

state 86

    (102) methodSet -> PERIOD CLEAR LPAREN . empty RPAREN
    (72) methodMap -> PERIOD CLEAR LPAREN . RPAREN
    (41) empty -> .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 148

  ! RPAREN          [ reduce using rule 41 (empty -> .) ]

    empty                          shift and go to state 147

state 87

    (73) methodMap -> PERIOD LENGTH LPAREN . RPAREN

    RPAREN          shift and go to state 149


state 88

    (35) impresion -> ALERT LPAREN expression RPAREN .

    $end            reduce using rule 35 (impresion -> ALERT LPAREN expression RPAREN .)
    RBLOCK          reduce using rule 35 (impresion -> ALERT LPAREN expression RPAREN .)
    RETURN          reduce using rule 35 (impresion -> ALERT LPAREN expression RPAREN .)


state 89

    (134) conditionalEspecifico -> ID opConditional . dataCondi
    (137) dataCondi -> . STRING
    (138) dataCondi -> . NUM

    STRING          shift and go to state 151
    NUM             shift and go to state 152

    dataCondi                      shift and go to state 150

state 90

    (18) opConditional -> ISEQUAL .

    STRING          reduce using rule 18 (opConditional -> ISEQUAL .)
    NUM             reduce using rule 18 (opConditional -> ISEQUAL .)


state 91

    (19) opConditional -> IS_NOT_IDENTICAL .

    STRING          reduce using rule 19 (opConditional -> IS_NOT_IDENTICAL .)
    NUM             reduce using rule 19 (opConditional -> IS_NOT_IDENTICAL .)


state 92

    (20) opConditional -> IS_IDENTICAL .

    STRING          reduce using rule 20 (opConditional -> IS_IDENTICAL .)
    NUM             reduce using rule 20 (opConditional -> IS_IDENTICAL .)


state 93

    (21) opConditional -> GREATER .

    STRING          reduce using rule 21 (opConditional -> GREATER .)
    NUM             reduce using rule 21 (opConditional -> GREATER .)


state 94

    (22) opConditional -> GREATEREQUAL .

    STRING          reduce using rule 22 (opConditional -> GREATEREQUAL .)
    NUM             reduce using rule 22 (opConditional -> GREATEREQUAL .)


state 95

    (23) opConditional -> LESS .

    STRING          reduce using rule 23 (opConditional -> LESS .)
    NUM             reduce using rule 23 (opConditional -> LESS .)


state 96

    (24) opConditional -> LESSEQUAL .

    STRING          reduce using rule 24 (opConditional -> LESSEQUAL .)
    NUM             reduce using rule 24 (opConditional -> LESSEQUAL .)


state 97

    (25) opConditional -> boolean .

    STRING          reduce using rule 25 (opConditional -> boolean .)
    NUM             reduce using rule 25 (opConditional -> boolean .)


state 98

    (135) conditionalEspecifico -> NUM opConditional . NUM

    NUM             shift and go to state 153


state 99

    (136) conditionalEspecifico -> STRING opConditional . STRING

    STRING          shift and go to state 154


state 100

    (103) inicializarOp -> PLUS operacionesMath .

    RPAREN          reduce using rule 103 (inicializarOp -> PLUS operacionesMath .)
    AND             reduce using rule 103 (inicializarOp -> PLUS operacionesMath .)
    OR              reduce using rule 103 (inicializarOp -> PLUS operacionesMath .)
    NOT             reduce using rule 103 (inicializarOp -> PLUS operacionesMath .)
    $end            reduce using rule 103 (inicializarOp -> PLUS operacionesMath .)
    RBLOCK          reduce using rule 103 (inicializarOp -> PLUS operacionesMath .)
    RETURN          reduce using rule 103 (inicializarOp -> PLUS operacionesMath .)


state 101

    (106) operacionesMath -> numOperadores . PLUS suma
    (110) operacionesMath -> numOperadores . MINUS restas
    (113) operacionesMath -> numOperadores . TIMES multiplicacion
    (115) suma -> numOperadores . PLUS LPAREN numOperadores RPAREN
    (116) suma -> numOperadores . PLUS NUM
    (117) suma -> numOperadores .
    (118) restas -> numOperadores . MINUS LPAREN numOperadores RPAREN
    (119) restas -> numOperadores . MINUS NUM
    (120) restas -> numOperadores .
    (121) multiplicacion -> numOperadores . TIMES LPAREN numOperadores RPAREN
    (122) multiplicacion -> numOperadores . TIMES NUM
    (123) multiplicacion -> numOperadores .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! reduce/reduce conflict for NUM resolved using rule 117 (suma -> numOperadores .)
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! reduce/reduce conflict for PERIOD resolved using rule 117 (suma -> numOperadores .)
  ! reduce/reduce conflict for RPAREN resolved using rule 117 (suma -> numOperadores .)
  ! reduce/reduce conflict for AND resolved using rule 117 (suma -> numOperadores .)
  ! reduce/reduce conflict for OR resolved using rule 117 (suma -> numOperadores .)
  ! reduce/reduce conflict for NOT resolved using rule 117 (suma -> numOperadores .)
  ! reduce/reduce conflict for $end resolved using rule 117 (suma -> numOperadores .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 117 (suma -> numOperadores .)
  ! reduce/reduce conflict for RETURN resolved using rule 117 (suma -> numOperadores .)
  ! reduce/reduce conflict for NUM resolved using rule 117 (suma -> numOperadores .)
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! reduce/reduce conflict for PERIOD resolved using rule 117 (suma -> numOperadores .)
  ! reduce/reduce conflict for RPAREN resolved using rule 117 (suma -> numOperadores .)
  ! reduce/reduce conflict for AND resolved using rule 117 (suma -> numOperadores .)
  ! reduce/reduce conflict for OR resolved using rule 117 (suma -> numOperadores .)
  ! reduce/reduce conflict for NOT resolved using rule 117 (suma -> numOperadores .)
  ! reduce/reduce conflict for $end resolved using rule 117 (suma -> numOperadores .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 117 (suma -> numOperadores .)
  ! reduce/reduce conflict for RETURN resolved using rule 117 (suma -> numOperadores .)
    PLUS            shift and go to state 155
    MINUS           shift and go to state 156
    TIMES           shift and go to state 157
    NUM             reduce using rule 117 (suma -> numOperadores .)
    PERIOD          reduce using rule 117 (suma -> numOperadores .)
    RPAREN          reduce using rule 117 (suma -> numOperadores .)
    AND             reduce using rule 117 (suma -> numOperadores .)
    OR              reduce using rule 117 (suma -> numOperadores .)
    NOT             reduce using rule 117 (suma -> numOperadores .)
    $end            reduce using rule 117 (suma -> numOperadores .)
    RBLOCK          reduce using rule 117 (suma -> numOperadores .)
    RETURN          reduce using rule 117 (suma -> numOperadores .)

  ! MINUS           [ reduce using rule 117 (suma -> numOperadores .) ]
  ! PLUS            [ reduce using rule 117 (suma -> numOperadores .) ]
  ! TIMES           [ reduce using rule 117 (suma -> numOperadores .) ]
  ! NUM             [ reduce using rule 120 (restas -> numOperadores .) ]
  ! MINUS           [ reduce using rule 120 (restas -> numOperadores .) ]
  ! PLUS            [ reduce using rule 120 (restas -> numOperadores .) ]
  ! TIMES           [ reduce using rule 120 (restas -> numOperadores .) ]
  ! PERIOD          [ reduce using rule 120 (restas -> numOperadores .) ]
  ! RPAREN          [ reduce using rule 120 (restas -> numOperadores .) ]
  ! AND             [ reduce using rule 120 (restas -> numOperadores .) ]
  ! OR              [ reduce using rule 120 (restas -> numOperadores .) ]
  ! NOT             [ reduce using rule 120 (restas -> numOperadores .) ]
  ! $end            [ reduce using rule 120 (restas -> numOperadores .) ]
  ! RBLOCK          [ reduce using rule 120 (restas -> numOperadores .) ]
  ! RETURN          [ reduce using rule 120 (restas -> numOperadores .) ]
  ! NUM             [ reduce using rule 123 (multiplicacion -> numOperadores .) ]
  ! MINUS           [ reduce using rule 123 (multiplicacion -> numOperadores .) ]
  ! PLUS            [ reduce using rule 123 (multiplicacion -> numOperadores .) ]
  ! TIMES           [ reduce using rule 123 (multiplicacion -> numOperadores .) ]
  ! PERIOD          [ reduce using rule 123 (multiplicacion -> numOperadores .) ]
  ! RPAREN          [ reduce using rule 123 (multiplicacion -> numOperadores .) ]
  ! AND             [ reduce using rule 123 (multiplicacion -> numOperadores .) ]
  ! OR              [ reduce using rule 123 (multiplicacion -> numOperadores .) ]
  ! NOT             [ reduce using rule 123 (multiplicacion -> numOperadores .) ]
  ! $end            [ reduce using rule 123 (multiplicacion -> numOperadores .) ]
  ! RBLOCK          [ reduce using rule 123 (multiplicacion -> numOperadores .) ]
  ! RETURN          [ reduce using rule 123 (multiplicacion -> numOperadores .) ]


state 102

    (107) operacionesMath -> suma .
    (108) operacionesMath -> suma . operacionesMath
    (106) operacionesMath -> . numOperadores PLUS suma
    (107) operacionesMath -> . suma
    (108) operacionesMath -> . suma operacionesMath
    (109) operacionesMath -> . restas
    (110) operacionesMath -> . numOperadores MINUS restas
    (111) operacionesMath -> . restas operacionesMath
    (112) operacionesMath -> . multiplicacion
    (113) operacionesMath -> . numOperadores TIMES multiplicacion
    (114) operacionesMath -> . multiplicacion operacionesMath
    (127) numOperadores -> . enteros
    (128) numOperadores -> . decimales
    (115) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (116) suma -> . numOperadores PLUS NUM
    (117) suma -> . numOperadores
    (118) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (119) restas -> . numOperadores MINUS NUM
    (120) restas -> . numOperadores
    (121) multiplicacion -> . numOperadores TIMES LPAREN numOperadores RPAREN
    (122) multiplicacion -> . numOperadores TIMES NUM
    (123) multiplicacion -> . numOperadores
    (129) enteros -> . NUM
    (130) enteros -> . numNegative
    (133) decimales -> . enteros PERIOD NUM
    (131) numNegative -> . MINUS NUM
    (132) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! reduce/reduce conflict for RPAREN resolved using rule 107 (operacionesMath -> suma .)
  ! reduce/reduce conflict for AND resolved using rule 107 (operacionesMath -> suma .)
  ! reduce/reduce conflict for OR resolved using rule 107 (operacionesMath -> suma .)
  ! reduce/reduce conflict for NOT resolved using rule 107 (operacionesMath -> suma .)
  ! reduce/reduce conflict for $end resolved using rule 107 (operacionesMath -> suma .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 107 (operacionesMath -> suma .)
  ! reduce/reduce conflict for RETURN resolved using rule 107 (operacionesMath -> suma .)
    RPAREN          reduce using rule 107 (operacionesMath -> suma .)
    AND             reduce using rule 107 (operacionesMath -> suma .)
    OR              reduce using rule 107 (operacionesMath -> suma .)
    NOT             reduce using rule 107 (operacionesMath -> suma .)
    $end            reduce using rule 107 (operacionesMath -> suma .)
    RBLOCK          reduce using rule 107 (operacionesMath -> suma .)
    RETURN          reduce using rule 107 (operacionesMath -> suma .)
    NUM             shift and go to state 108
    MINUS           shift and go to state 104
    PERIOD          reduce using rule 132 (numNegative -> .)
    PLUS            reduce using rule 132 (numNegative -> .)
    TIMES           reduce using rule 132 (numNegative -> .)

  ! MINUS           [ reduce using rule 132 (numNegative -> .) ]
  ! NUM             [ reduce using rule 132 (numNegative -> .) ]
  ! RPAREN          [ reduce using rule 132 (numNegative -> .) ]
  ! AND             [ reduce using rule 132 (numNegative -> .) ]
  ! OR              [ reduce using rule 132 (numNegative -> .) ]
  ! NOT             [ reduce using rule 132 (numNegative -> .) ]
  ! $end            [ reduce using rule 132 (numNegative -> .) ]
  ! RBLOCK          [ reduce using rule 132 (numNegative -> .) ]
  ! RETURN          [ reduce using rule 132 (numNegative -> .) ]

    suma                           shift and go to state 102
    operacionesMath                shift and go to state 158
    numOperadores                  shift and go to state 101
    restas                         shift and go to state 103
    multiplicacion                 shift and go to state 105
    enteros                        shift and go to state 106
    decimales                      shift and go to state 107
    numNegative                    shift and go to state 109

state 103

    (109) operacionesMath -> restas .
    (111) operacionesMath -> restas . operacionesMath
    (106) operacionesMath -> . numOperadores PLUS suma
    (107) operacionesMath -> . suma
    (108) operacionesMath -> . suma operacionesMath
    (109) operacionesMath -> . restas
    (110) operacionesMath -> . numOperadores MINUS restas
    (111) operacionesMath -> . restas operacionesMath
    (112) operacionesMath -> . multiplicacion
    (113) operacionesMath -> . numOperadores TIMES multiplicacion
    (114) operacionesMath -> . multiplicacion operacionesMath
    (127) numOperadores -> . enteros
    (128) numOperadores -> . decimales
    (115) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (116) suma -> . numOperadores PLUS NUM
    (117) suma -> . numOperadores
    (118) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (119) restas -> . numOperadores MINUS NUM
    (120) restas -> . numOperadores
    (121) multiplicacion -> . numOperadores TIMES LPAREN numOperadores RPAREN
    (122) multiplicacion -> . numOperadores TIMES NUM
    (123) multiplicacion -> . numOperadores
    (129) enteros -> . NUM
    (130) enteros -> . numNegative
    (133) decimales -> . enteros PERIOD NUM
    (131) numNegative -> . MINUS NUM
    (132) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! reduce/reduce conflict for RPAREN resolved using rule 109 (operacionesMath -> restas .)
  ! reduce/reduce conflict for AND resolved using rule 109 (operacionesMath -> restas .)
  ! reduce/reduce conflict for OR resolved using rule 109 (operacionesMath -> restas .)
  ! reduce/reduce conflict for NOT resolved using rule 109 (operacionesMath -> restas .)
  ! reduce/reduce conflict for $end resolved using rule 109 (operacionesMath -> restas .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 109 (operacionesMath -> restas .)
  ! reduce/reduce conflict for RETURN resolved using rule 109 (operacionesMath -> restas .)
    RPAREN          reduce using rule 109 (operacionesMath -> restas .)
    AND             reduce using rule 109 (operacionesMath -> restas .)
    OR              reduce using rule 109 (operacionesMath -> restas .)
    NOT             reduce using rule 109 (operacionesMath -> restas .)
    $end            reduce using rule 109 (operacionesMath -> restas .)
    RBLOCK          reduce using rule 109 (operacionesMath -> restas .)
    RETURN          reduce using rule 109 (operacionesMath -> restas .)
    NUM             shift and go to state 108
    MINUS           shift and go to state 104
    PERIOD          reduce using rule 132 (numNegative -> .)
    PLUS            reduce using rule 132 (numNegative -> .)
    TIMES           reduce using rule 132 (numNegative -> .)

  ! MINUS           [ reduce using rule 132 (numNegative -> .) ]
  ! NUM             [ reduce using rule 132 (numNegative -> .) ]
  ! RPAREN          [ reduce using rule 132 (numNegative -> .) ]
  ! AND             [ reduce using rule 132 (numNegative -> .) ]
  ! OR              [ reduce using rule 132 (numNegative -> .) ]
  ! NOT             [ reduce using rule 132 (numNegative -> .) ]
  ! $end            [ reduce using rule 132 (numNegative -> .) ]
  ! RBLOCK          [ reduce using rule 132 (numNegative -> .) ]
  ! RETURN          [ reduce using rule 132 (numNegative -> .) ]

    restas                         shift and go to state 103
    operacionesMath                shift and go to state 159
    numOperadores                  shift and go to state 101
    suma                           shift and go to state 102
    multiplicacion                 shift and go to state 105
    enteros                        shift and go to state 106
    decimales                      shift and go to state 107
    numNegative                    shift and go to state 109

state 104

    (131) numNegative -> MINUS . NUM

    NUM             shift and go to state 160


state 105

    (112) operacionesMath -> multiplicacion .
    (114) operacionesMath -> multiplicacion . operacionesMath
    (106) operacionesMath -> . numOperadores PLUS suma
    (107) operacionesMath -> . suma
    (108) operacionesMath -> . suma operacionesMath
    (109) operacionesMath -> . restas
    (110) operacionesMath -> . numOperadores MINUS restas
    (111) operacionesMath -> . restas operacionesMath
    (112) operacionesMath -> . multiplicacion
    (113) operacionesMath -> . numOperadores TIMES multiplicacion
    (114) operacionesMath -> . multiplicacion operacionesMath
    (127) numOperadores -> . enteros
    (128) numOperadores -> . decimales
    (115) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (116) suma -> . numOperadores PLUS NUM
    (117) suma -> . numOperadores
    (118) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (119) restas -> . numOperadores MINUS NUM
    (120) restas -> . numOperadores
    (121) multiplicacion -> . numOperadores TIMES LPAREN numOperadores RPAREN
    (122) multiplicacion -> . numOperadores TIMES NUM
    (123) multiplicacion -> . numOperadores
    (129) enteros -> . NUM
    (130) enteros -> . numNegative
    (133) decimales -> . enteros PERIOD NUM
    (131) numNegative -> . MINUS NUM
    (132) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! reduce/reduce conflict for RPAREN resolved using rule 112 (operacionesMath -> multiplicacion .)
  ! reduce/reduce conflict for AND resolved using rule 112 (operacionesMath -> multiplicacion .)
  ! reduce/reduce conflict for OR resolved using rule 112 (operacionesMath -> multiplicacion .)
  ! reduce/reduce conflict for NOT resolved using rule 112 (operacionesMath -> multiplicacion .)
  ! reduce/reduce conflict for $end resolved using rule 112 (operacionesMath -> multiplicacion .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 112 (operacionesMath -> multiplicacion .)
  ! reduce/reduce conflict for RETURN resolved using rule 112 (operacionesMath -> multiplicacion .)
    RPAREN          reduce using rule 112 (operacionesMath -> multiplicacion .)
    AND             reduce using rule 112 (operacionesMath -> multiplicacion .)
    OR              reduce using rule 112 (operacionesMath -> multiplicacion .)
    NOT             reduce using rule 112 (operacionesMath -> multiplicacion .)
    $end            reduce using rule 112 (operacionesMath -> multiplicacion .)
    RBLOCK          reduce using rule 112 (operacionesMath -> multiplicacion .)
    RETURN          reduce using rule 112 (operacionesMath -> multiplicacion .)
    NUM             shift and go to state 108
    MINUS           shift and go to state 104
    PERIOD          reduce using rule 132 (numNegative -> .)
    PLUS            reduce using rule 132 (numNegative -> .)
    TIMES           reduce using rule 132 (numNegative -> .)

  ! MINUS           [ reduce using rule 132 (numNegative -> .) ]
  ! NUM             [ reduce using rule 132 (numNegative -> .) ]
  ! RPAREN          [ reduce using rule 132 (numNegative -> .) ]
  ! AND             [ reduce using rule 132 (numNegative -> .) ]
  ! OR              [ reduce using rule 132 (numNegative -> .) ]
  ! NOT             [ reduce using rule 132 (numNegative -> .) ]
  ! $end            [ reduce using rule 132 (numNegative -> .) ]
  ! RBLOCK          [ reduce using rule 132 (numNegative -> .) ]
  ! RETURN          [ reduce using rule 132 (numNegative -> .) ]

    multiplicacion                 shift and go to state 105
    operacionesMath                shift and go to state 161
    numOperadores                  shift and go to state 101
    suma                           shift and go to state 102
    restas                         shift and go to state 103
    enteros                        shift and go to state 106
    decimales                      shift and go to state 107
    numNegative                    shift and go to state 109

state 106

    (127) numOperadores -> enteros .
    (133) decimales -> enteros . PERIOD NUM

  ! shift/reduce conflict for PERIOD resolved as shift
    PLUS            reduce using rule 127 (numOperadores -> enteros .)
    MINUS           reduce using rule 127 (numOperadores -> enteros .)
    TIMES           reduce using rule 127 (numOperadores -> enteros .)
    NUM             reduce using rule 127 (numOperadores -> enteros .)
    RPAREN          reduce using rule 127 (numOperadores -> enteros .)
    AND             reduce using rule 127 (numOperadores -> enteros .)
    OR              reduce using rule 127 (numOperadores -> enteros .)
    NOT             reduce using rule 127 (numOperadores -> enteros .)
    $end            reduce using rule 127 (numOperadores -> enteros .)
    RBLOCK          reduce using rule 127 (numOperadores -> enteros .)
    RETURN          reduce using rule 127 (numOperadores -> enteros .)
    PERIOD          shift and go to state 162

  ! PERIOD          [ reduce using rule 127 (numOperadores -> enteros .) ]


state 107

    (128) numOperadores -> decimales .

    PLUS            reduce using rule 128 (numOperadores -> decimales .)
    MINUS           reduce using rule 128 (numOperadores -> decimales .)
    TIMES           reduce using rule 128 (numOperadores -> decimales .)
    NUM             reduce using rule 128 (numOperadores -> decimales .)
    PERIOD          reduce using rule 128 (numOperadores -> decimales .)
    RPAREN          reduce using rule 128 (numOperadores -> decimales .)
    AND             reduce using rule 128 (numOperadores -> decimales .)
    OR              reduce using rule 128 (numOperadores -> decimales .)
    NOT             reduce using rule 128 (numOperadores -> decimales .)
    $end            reduce using rule 128 (numOperadores -> decimales .)
    RBLOCK          reduce using rule 128 (numOperadores -> decimales .)
    RETURN          reduce using rule 128 (numOperadores -> decimales .)


state 108

    (129) enteros -> NUM .

    PERIOD          reduce using rule 129 (enteros -> NUM .)
    PLUS            reduce using rule 129 (enteros -> NUM .)
    MINUS           reduce using rule 129 (enteros -> NUM .)
    TIMES           reduce using rule 129 (enteros -> NUM .)
    NUM             reduce using rule 129 (enteros -> NUM .)
    RPAREN          reduce using rule 129 (enteros -> NUM .)
    AND             reduce using rule 129 (enteros -> NUM .)
    OR              reduce using rule 129 (enteros -> NUM .)
    NOT             reduce using rule 129 (enteros -> NUM .)
    $end            reduce using rule 129 (enteros -> NUM .)
    RBLOCK          reduce using rule 129 (enteros -> NUM .)
    RETURN          reduce using rule 129 (enteros -> NUM .)


state 109

    (130) enteros -> numNegative .

    PERIOD          reduce using rule 130 (enteros -> numNegative .)
    PLUS            reduce using rule 130 (enteros -> numNegative .)
    MINUS           reduce using rule 130 (enteros -> numNegative .)
    TIMES           reduce using rule 130 (enteros -> numNegative .)
    NUM             reduce using rule 130 (enteros -> numNegative .)
    RPAREN          reduce using rule 130 (enteros -> numNegative .)
    AND             reduce using rule 130 (enteros -> numNegative .)
    OR              reduce using rule 130 (enteros -> numNegative .)
    NOT             reduce using rule 130 (enteros -> numNegative .)
    $end            reduce using rule 130 (enteros -> numNegative .)
    RBLOCK          reduce using rule 130 (enteros -> numNegative .)
    RETURN          reduce using rule 130 (enteros -> numNegative .)


state 110

    (104) inicializarOp -> MINUS operacionesMath .

    RPAREN          reduce using rule 104 (inicializarOp -> MINUS operacionesMath .)
    AND             reduce using rule 104 (inicializarOp -> MINUS operacionesMath .)
    OR              reduce using rule 104 (inicializarOp -> MINUS operacionesMath .)
    NOT             reduce using rule 104 (inicializarOp -> MINUS operacionesMath .)
    $end            reduce using rule 104 (inicializarOp -> MINUS operacionesMath .)
    RBLOCK          reduce using rule 104 (inicializarOp -> MINUS operacionesMath .)
    RETURN          reduce using rule 104 (inicializarOp -> MINUS operacionesMath .)


state 111

    (105) inicializarOp -> empty operacionesMath .

    RPAREN          reduce using rule 105 (inicializarOp -> empty operacionesMath .)
    AND             reduce using rule 105 (inicializarOp -> empty operacionesMath .)
    OR              reduce using rule 105 (inicializarOp -> empty operacionesMath .)
    NOT             reduce using rule 105 (inicializarOp -> empty operacionesMath .)
    $end            reduce using rule 105 (inicializarOp -> empty operacionesMath .)
    RBLOCK          reduce using rule 105 (inicializarOp -> empty operacionesMath .)
    RETURN          reduce using rule 105 (inicializarOp -> empty operacionesMath .)


state 112

    (74) declareteFunction -> FUNCTION ID LPAREN params . RPAREN
    (75) declareteFunction -> FUNCTION ID LPAREN params . RPAREN sentencesCmpt

    RPAREN          shift and go to state 163


state 113

    (29) sentencias_if -> IF LPAREN expression operadorLogical . expression RPAREN LBLOCK sentencia RBLOCK
    (31) sentencias_if_else -> IF LPAREN expression operadorLogical . expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (10) expression -> . conditionalEspecifico
    (11) expression -> . inicializarOp
    (134) conditionalEspecifico -> . ID opConditional dataCondi
    (135) conditionalEspecifico -> . NUM opConditional NUM
    (136) conditionalEspecifico -> . STRING opConditional STRING
    (103) inicializarOp -> . PLUS operacionesMath
    (104) inicializarOp -> . MINUS operacionesMath
    (105) inicializarOp -> . empty operacionesMath
    (41) empty -> .

  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
    ID              shift and go to state 60
    NUM             shift and go to state 61
    STRING          shift and go to state 62
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           reduce using rule 41 (empty -> .)
    PERIOD          reduce using rule 41 (empty -> .)
    RPAREN          reduce using rule 41 (empty -> .)

  ! NUM             [ reduce using rule 41 (empty -> .) ]
  ! MINUS           [ reduce using rule 41 (empty -> .) ]
  ! PLUS            [ reduce using rule 41 (empty -> .) ]

    expression                     shift and go to state 164
    conditionalEspecifico          shift and go to state 58
    inicializarOp                  shift and go to state 59
    empty                          shift and go to state 65

state 114

    (30) sentencias_if -> IF LPAREN expression RPAREN . LBLOCK sentencia RBLOCK
    (32) sentencias_if_else -> IF LPAREN expression RPAREN . LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK

    LBLOCK          shift and go to state 165


state 115

    (26) operadorLogical -> AND .

    ID              reduce using rule 26 (operadorLogical -> AND .)
    NUM             reduce using rule 26 (operadorLogical -> AND .)
    STRING          reduce using rule 26 (operadorLogical -> AND .)
    PLUS            reduce using rule 26 (operadorLogical -> AND .)
    MINUS           reduce using rule 26 (operadorLogical -> AND .)
    RPAREN          reduce using rule 26 (operadorLogical -> AND .)
    TIMES           reduce using rule 26 (operadorLogical -> AND .)
    PERIOD          reduce using rule 26 (operadorLogical -> AND .)


state 116

    (27) operadorLogical -> OR .

    ID              reduce using rule 27 (operadorLogical -> OR .)
    NUM             reduce using rule 27 (operadorLogical -> OR .)
    STRING          reduce using rule 27 (operadorLogical -> OR .)
    PLUS            reduce using rule 27 (operadorLogical -> OR .)
    MINUS           reduce using rule 27 (operadorLogical -> OR .)
    RPAREN          reduce using rule 27 (operadorLogical -> OR .)
    TIMES           reduce using rule 27 (operadorLogical -> OR .)
    PERIOD          reduce using rule 27 (operadorLogical -> OR .)


state 117

    (28) operadorLogical -> NOT .

    ID              reduce using rule 28 (operadorLogical -> NOT .)
    NUM             reduce using rule 28 (operadorLogical -> NOT .)
    STRING          reduce using rule 28 (operadorLogical -> NOT .)
    PLUS            reduce using rule 28 (operadorLogical -> NOT .)
    MINUS           reduce using rule 28 (operadorLogical -> NOT .)
    RPAREN          reduce using rule 28 (operadorLogical -> NOT .)
    TIMES           reduce using rule 28 (operadorLogical -> NOT .)
    PERIOD          reduce using rule 28 (operadorLogical -> NOT .)


state 118

    (33) sentencias_while -> WHILE LPAREN expression RPAREN . LBLOCK sentencia RBLOCK

    LBLOCK          shift and go to state 166


state 119

    (34) sentencias_while -> WHILE LPAREN expression operadorLogical . expression RPAREN LBLOCK sentencia RBLOCK
    (10) expression -> . conditionalEspecifico
    (11) expression -> . inicializarOp
    (134) conditionalEspecifico -> . ID opConditional dataCondi
    (135) conditionalEspecifico -> . NUM opConditional NUM
    (136) conditionalEspecifico -> . STRING opConditional STRING
    (103) inicializarOp -> . PLUS operacionesMath
    (104) inicializarOp -> . MINUS operacionesMath
    (105) inicializarOp -> . empty operacionesMath
    (41) empty -> .

  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
    ID              shift and go to state 60
    NUM             shift and go to state 61
    STRING          shift and go to state 62
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           reduce using rule 41 (empty -> .)
    PERIOD          reduce using rule 41 (empty -> .)
    RPAREN          reduce using rule 41 (empty -> .)

  ! NUM             [ reduce using rule 41 (empty -> .) ]
  ! MINUS           [ reduce using rule 41 (empty -> .) ]
  ! PLUS            [ reduce using rule 41 (empty -> .) ]

    expression                     shift and go to state 167
    conditionalEspecifico          shift and go to state 58
    inicializarOp                  shift and go to state 59
    empty                          shift and go to state 65

state 120

    (48) varDeclaration -> varType ID EQUAL arrayDeclare COLON .

    $end            reduce using rule 48 (varDeclaration -> varType ID EQUAL arrayDeclare COLON .)
    RBLOCK          reduce using rule 48 (varDeclaration -> varType ID EQUAL arrayDeclare COLON .)
    RETURN          reduce using rule 48 (varDeclaration -> varType ID EQUAL arrayDeclare COLON .)


state 121

    (49) varDeclaration -> varType ID EQUAL declareMap COLON .

    $end            reduce using rule 49 (varDeclaration -> varType ID EQUAL declareMap COLON .)
    RBLOCK          reduce using rule 49 (varDeclaration -> varType ID EQUAL declareMap COLON .)
    RETURN          reduce using rule 49 (varDeclaration -> varType ID EQUAL declareMap COLON .)


state 122

    (50) varDeclaration -> varType ID EQUAL declararSet COLON .

    $end            reduce using rule 50 (varDeclaration -> varType ID EQUAL declararSet COLON .)
    RBLOCK          reduce using rule 50 (varDeclaration -> varType ID EQUAL declararSet COLON .)
    RETURN          reduce using rule 50 (varDeclaration -> varType ID EQUAL declararSet COLON .)


state 123

    (76) declareteFunction -> varType ID EQUAL FUNCTION LPAREN . params RPAREN
    (80) params -> . paramList
    (81) params -> . empty
    (84) paramList -> . param
    (85) paramList -> . param COMMA paramList
    (41) empty -> .
    (82) param -> . ID
    (83) param -> . ID LBRACKET RBRACKET

    RPAREN          reduce using rule 41 (empty -> .)
    ID              shift and go to state 44

    params                         shift and go to state 168
    paramList                      shift and go to state 46
    empty                          shift and go to state 47
    param                          shift and go to state 48

state 124

    (55) arrayDeclare -> LBRACKET arrayValues . RBRACKET

    RBRACKET        shift and go to state 169


state 125

    (57) arrayValues -> arrayValue .
    (58) arrayValues -> arrayValue . COMMA arrayValue

    RBRACKET        reduce using rule 57 (arrayValues -> arrayValue .)
    RPAREN          reduce using rule 57 (arrayValues -> arrayValue .)
    COMMA           shift and go to state 170


state 126

    (59) arrayValue -> LPAREN . expression RPAREN
    (10) expression -> . conditionalEspecifico
    (11) expression -> . inicializarOp
    (134) conditionalEspecifico -> . ID opConditional dataCondi
    (135) conditionalEspecifico -> . NUM opConditional NUM
    (136) conditionalEspecifico -> . STRING opConditional STRING
    (103) inicializarOp -> . PLUS operacionesMath
    (104) inicializarOp -> . MINUS operacionesMath
    (105) inicializarOp -> . empty operacionesMath
    (41) empty -> .

  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
    ID              shift and go to state 60
    NUM             shift and go to state 61
    STRING          shift and go to state 62
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           reduce using rule 41 (empty -> .)
    PERIOD          reduce using rule 41 (empty -> .)
    RPAREN          reduce using rule 41 (empty -> .)

  ! NUM             [ reduce using rule 41 (empty -> .) ]
  ! MINUS           [ reduce using rule 41 (empty -> .) ]
  ! PLUS            [ reduce using rule 41 (empty -> .) ]

    expression                     shift and go to state 171
    conditionalEspecifico          shift and go to state 58
    inicializarOp                  shift and go to state 59
    empty                          shift and go to state 65

state 127

    (60) arrayValue -> ID .

    COMMA           reduce using rule 60 (arrayValue -> ID .)
    RBRACKET        reduce using rule 60 (arrayValue -> ID .)
    RPAREN          reduce using rule 60 (arrayValue -> ID .)


state 128

    (61) arrayValue -> NUM .

    COMMA           reduce using rule 61 (arrayValue -> NUM .)
    RBRACKET        reduce using rule 61 (arrayValue -> NUM .)
    RPAREN          reduce using rule 61 (arrayValue -> NUM .)


state 129

    (62) arrayValue -> STRING .

    COMMA           reduce using rule 62 (arrayValue -> STRING .)
    RBRACKET        reduce using rule 62 (arrayValue -> STRING .)
    RPAREN          reduce using rule 62 (arrayValue -> STRING .)


state 130

    (63) arrayValue -> boolean .

    COMMA           reduce using rule 63 (arrayValue -> boolean .)
    RBRACKET        reduce using rule 63 (arrayValue -> boolean .)
    RPAREN          reduce using rule 63 (arrayValue -> boolean .)


state 131

    (64) arrayValue -> empty .

    COMMA           reduce using rule 64 (arrayValue -> empty .)
    RBRACKET        reduce using rule 64 (arrayValue -> empty .)
    RPAREN          reduce using rule 64 (arrayValue -> empty .)


state 132

    (56) arrayDeclare -> NEW ARRAY . LPAREN arrayValues RPAREN

    LPAREN          shift and go to state 172


state 133

    (68) declareMap -> NEW MAP . LPAREN iterable RPAREN

    LPAREN          shift and go to state 173


state 134

    (91) declararSet -> NEW SET . LPAREN setValues RPAREN

    LPAREN          shift and go to state 174


state 135

    (83) param -> ID LBRACKET RBRACKET .

    COMMA           reduce using rule 83 (param -> ID LBRACKET RBRACKET .)
    RPAREN          reduce using rule 83 (param -> ID LBRACKET RBRACKET .)


state 136

    (85) paramList -> param COMMA paramList .

    RPAREN          reduce using rule 85 (paramList -> param COMMA paramList .)


state 137

    (65) methodArray -> PERIOD PUSH LPAREN arrayValue . RPAREN

    RPAREN          shift and go to state 175


state 138

    (66) methodArray -> PERIOD UNSHIFT LPAREN arrayValue . RPAREN

    RPAREN          shift and go to state 176


state 139

    (67) methodArray -> PERIOD POP LPAREN empty . RPAREN

    RPAREN          shift and go to state 177


state 140

    (100) methodSet -> PERIOD ADD LPAREN setValue . RPAREN

    RPAREN          shift and go to state 178


state 141

    (95) setValue -> ID .

    RPAREN          reduce using rule 95 (setValue -> ID .)
    COMMA           reduce using rule 95 (setValue -> ID .)


state 142

    (96) setValue -> NUM .

    RPAREN          reduce using rule 96 (setValue -> NUM .)
    COMMA           reduce using rule 96 (setValue -> NUM .)


state 143

    (97) setValue -> STRING .

    RPAREN          reduce using rule 97 (setValue -> STRING .)
    COMMA           reduce using rule 97 (setValue -> STRING .)


state 144

    (98) setValue -> boolean .

    RPAREN          reduce using rule 98 (setValue -> boolean .)
    COMMA           reduce using rule 98 (setValue -> boolean .)


state 145

    (99) setValue -> empty .

    RPAREN          reduce using rule 99 (setValue -> empty .)
    COMMA           reduce using rule 99 (setValue -> empty .)


state 146

    (101) methodSet -> PERIOD DELETE LPAREN setValue . RPAREN

    RPAREN          shift and go to state 179


state 147

    (102) methodSet -> PERIOD CLEAR LPAREN empty . RPAREN

    RPAREN          shift and go to state 180


state 148

    (72) methodMap -> PERIOD CLEAR LPAREN RPAREN .

    COLON           reduce using rule 72 (methodMap -> PERIOD CLEAR LPAREN RPAREN .)


state 149

    (73) methodMap -> PERIOD LENGTH LPAREN RPAREN .

    COLON           reduce using rule 73 (methodMap -> PERIOD LENGTH LPAREN RPAREN .)


state 150

    (134) conditionalEspecifico -> ID opConditional dataCondi .

    RPAREN          reduce using rule 134 (conditionalEspecifico -> ID opConditional dataCondi .)
    AND             reduce using rule 134 (conditionalEspecifico -> ID opConditional dataCondi .)
    OR              reduce using rule 134 (conditionalEspecifico -> ID opConditional dataCondi .)
    NOT             reduce using rule 134 (conditionalEspecifico -> ID opConditional dataCondi .)


state 151

    (137) dataCondi -> STRING .

    RPAREN          reduce using rule 137 (dataCondi -> STRING .)
    AND             reduce using rule 137 (dataCondi -> STRING .)
    OR              reduce using rule 137 (dataCondi -> STRING .)
    NOT             reduce using rule 137 (dataCondi -> STRING .)


state 152

    (138) dataCondi -> NUM .

    RPAREN          reduce using rule 138 (dataCondi -> NUM .)
    AND             reduce using rule 138 (dataCondi -> NUM .)
    OR              reduce using rule 138 (dataCondi -> NUM .)
    NOT             reduce using rule 138 (dataCondi -> NUM .)


state 153

    (135) conditionalEspecifico -> NUM opConditional NUM .

    RPAREN          reduce using rule 135 (conditionalEspecifico -> NUM opConditional NUM .)
    AND             reduce using rule 135 (conditionalEspecifico -> NUM opConditional NUM .)
    OR              reduce using rule 135 (conditionalEspecifico -> NUM opConditional NUM .)
    NOT             reduce using rule 135 (conditionalEspecifico -> NUM opConditional NUM .)


state 154

    (136) conditionalEspecifico -> STRING opConditional STRING .

    RPAREN          reduce using rule 136 (conditionalEspecifico -> STRING opConditional STRING .)
    AND             reduce using rule 136 (conditionalEspecifico -> STRING opConditional STRING .)
    OR              reduce using rule 136 (conditionalEspecifico -> STRING opConditional STRING .)
    NOT             reduce using rule 136 (conditionalEspecifico -> STRING opConditional STRING .)


state 155

    (106) operacionesMath -> numOperadores PLUS . suma
    (115) suma -> numOperadores PLUS . LPAREN numOperadores RPAREN
    (116) suma -> numOperadores PLUS . NUM
    (115) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (116) suma -> . numOperadores PLUS NUM
    (117) suma -> . numOperadores
    (127) numOperadores -> . enteros
    (128) numOperadores -> . decimales
    (129) enteros -> . NUM
    (130) enteros -> . numNegative
    (133) decimales -> . enteros PERIOD NUM
    (131) numNegative -> . MINUS NUM
    (132) numNegative -> .

    LPAREN          shift and go to state 183
    NUM             shift and go to state 184
    MINUS           shift and go to state 104
    PERIOD          reduce using rule 132 (numNegative -> .)
    PLUS            reduce using rule 132 (numNegative -> .)
    RPAREN          reduce using rule 132 (numNegative -> .)
    AND             reduce using rule 132 (numNegative -> .)
    OR              reduce using rule 132 (numNegative -> .)
    NOT             reduce using rule 132 (numNegative -> .)
    $end            reduce using rule 132 (numNegative -> .)
    RBLOCK          reduce using rule 132 (numNegative -> .)
    RETURN          reduce using rule 132 (numNegative -> .)

    numOperadores                  shift and go to state 181
    suma                           shift and go to state 182
    enteros                        shift and go to state 106
    decimales                      shift and go to state 107
    numNegative                    shift and go to state 109

state 156

    (110) operacionesMath -> numOperadores MINUS . restas
    (118) restas -> numOperadores MINUS . LPAREN numOperadores RPAREN
    (119) restas -> numOperadores MINUS . NUM
    (118) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (119) restas -> . numOperadores MINUS NUM
    (120) restas -> . numOperadores
    (127) numOperadores -> . enteros
    (128) numOperadores -> . decimales
    (129) enteros -> . NUM
    (130) enteros -> . numNegative
    (133) decimales -> . enteros PERIOD NUM
    (131) numNegative -> . MINUS NUM
    (132) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
    LPAREN          shift and go to state 187
    NUM             shift and go to state 188
    MINUS           shift and go to state 104
    PERIOD          reduce using rule 132 (numNegative -> .)
    RPAREN          reduce using rule 132 (numNegative -> .)
    AND             reduce using rule 132 (numNegative -> .)
    OR              reduce using rule 132 (numNegative -> .)
    NOT             reduce using rule 132 (numNegative -> .)
    $end            reduce using rule 132 (numNegative -> .)
    RBLOCK          reduce using rule 132 (numNegative -> .)
    RETURN          reduce using rule 132 (numNegative -> .)

  ! MINUS           [ reduce using rule 132 (numNegative -> .) ]

    numOperadores                  shift and go to state 185
    restas                         shift and go to state 186
    enteros                        shift and go to state 106
    decimales                      shift and go to state 107
    numNegative                    shift and go to state 109

state 157

    (113) operacionesMath -> numOperadores TIMES . multiplicacion
    (121) multiplicacion -> numOperadores TIMES . LPAREN numOperadores RPAREN
    (122) multiplicacion -> numOperadores TIMES . NUM
    (121) multiplicacion -> . numOperadores TIMES LPAREN numOperadores RPAREN
    (122) multiplicacion -> . numOperadores TIMES NUM
    (123) multiplicacion -> . numOperadores
    (127) numOperadores -> . enteros
    (128) numOperadores -> . decimales
    (129) enteros -> . NUM
    (130) enteros -> . numNegative
    (133) decimales -> . enteros PERIOD NUM
    (131) numNegative -> . MINUS NUM
    (132) numNegative -> .

    LPAREN          shift and go to state 191
    NUM             shift and go to state 192
    MINUS           shift and go to state 104
    PERIOD          reduce using rule 132 (numNegative -> .)
    TIMES           reduce using rule 132 (numNegative -> .)
    RPAREN          reduce using rule 132 (numNegative -> .)
    AND             reduce using rule 132 (numNegative -> .)
    OR              reduce using rule 132 (numNegative -> .)
    NOT             reduce using rule 132 (numNegative -> .)
    $end            reduce using rule 132 (numNegative -> .)
    RBLOCK          reduce using rule 132 (numNegative -> .)
    RETURN          reduce using rule 132 (numNegative -> .)

    numOperadores                  shift and go to state 189
    multiplicacion                 shift and go to state 190
    enteros                        shift and go to state 106
    decimales                      shift and go to state 107
    numNegative                    shift and go to state 109

state 158

    (108) operacionesMath -> suma operacionesMath .

    RPAREN          reduce using rule 108 (operacionesMath -> suma operacionesMath .)
    AND             reduce using rule 108 (operacionesMath -> suma operacionesMath .)
    OR              reduce using rule 108 (operacionesMath -> suma operacionesMath .)
    NOT             reduce using rule 108 (operacionesMath -> suma operacionesMath .)
    $end            reduce using rule 108 (operacionesMath -> suma operacionesMath .)
    RBLOCK          reduce using rule 108 (operacionesMath -> suma operacionesMath .)
    RETURN          reduce using rule 108 (operacionesMath -> suma operacionesMath .)


state 159

    (111) operacionesMath -> restas operacionesMath .

    RPAREN          reduce using rule 111 (operacionesMath -> restas operacionesMath .)
    AND             reduce using rule 111 (operacionesMath -> restas operacionesMath .)
    OR              reduce using rule 111 (operacionesMath -> restas operacionesMath .)
    NOT             reduce using rule 111 (operacionesMath -> restas operacionesMath .)
    $end            reduce using rule 111 (operacionesMath -> restas operacionesMath .)
    RBLOCK          reduce using rule 111 (operacionesMath -> restas operacionesMath .)
    RETURN          reduce using rule 111 (operacionesMath -> restas operacionesMath .)


state 160

    (131) numNegative -> MINUS NUM .

    PERIOD          reduce using rule 131 (numNegative -> MINUS NUM .)
    PLUS            reduce using rule 131 (numNegative -> MINUS NUM .)
    MINUS           reduce using rule 131 (numNegative -> MINUS NUM .)
    TIMES           reduce using rule 131 (numNegative -> MINUS NUM .)
    NUM             reduce using rule 131 (numNegative -> MINUS NUM .)
    RPAREN          reduce using rule 131 (numNegative -> MINUS NUM .)
    AND             reduce using rule 131 (numNegative -> MINUS NUM .)
    OR              reduce using rule 131 (numNegative -> MINUS NUM .)
    NOT             reduce using rule 131 (numNegative -> MINUS NUM .)
    $end            reduce using rule 131 (numNegative -> MINUS NUM .)
    RBLOCK          reduce using rule 131 (numNegative -> MINUS NUM .)
    RETURN          reduce using rule 131 (numNegative -> MINUS NUM .)


state 161

    (114) operacionesMath -> multiplicacion operacionesMath .

    RPAREN          reduce using rule 114 (operacionesMath -> multiplicacion operacionesMath .)
    AND             reduce using rule 114 (operacionesMath -> multiplicacion operacionesMath .)
    OR              reduce using rule 114 (operacionesMath -> multiplicacion operacionesMath .)
    NOT             reduce using rule 114 (operacionesMath -> multiplicacion operacionesMath .)
    $end            reduce using rule 114 (operacionesMath -> multiplicacion operacionesMath .)
    RBLOCK          reduce using rule 114 (operacionesMath -> multiplicacion operacionesMath .)
    RETURN          reduce using rule 114 (operacionesMath -> multiplicacion operacionesMath .)


state 162

    (133) decimales -> enteros PERIOD . NUM

    NUM             shift and go to state 193


state 163

    (74) declareteFunction -> FUNCTION ID LPAREN params RPAREN .
    (75) declareteFunction -> FUNCTION ID LPAREN params RPAREN . sentencesCmpt
    (77) sentencesCmpt -> . LBLOCK sentencia RBLOCK
    (78) sentencesCmpt -> . LBLOCK sentencia RETURN RBLOCK

    $end            reduce using rule 74 (declareteFunction -> FUNCTION ID LPAREN params RPAREN .)
    RBLOCK          reduce using rule 74 (declareteFunction -> FUNCTION ID LPAREN params RPAREN .)
    RETURN          reduce using rule 74 (declareteFunction -> FUNCTION ID LPAREN params RPAREN .)
    LBLOCK          shift and go to state 195

    sentencesCmpt                  shift and go to state 194

state 164

    (29) sentencias_if -> IF LPAREN expression operadorLogical expression . RPAREN LBLOCK sentencia RBLOCK
    (31) sentencias_if_else -> IF LPAREN expression operadorLogical expression . RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK

    RPAREN          shift and go to state 196


state 165

    (30) sentencias_if -> IF LPAREN expression RPAREN LBLOCK . sentencia RBLOCK
    (32) sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK . sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (1) sentencia -> . callMethods
    (2) sentencia -> . varType ID EQUAL callMethods
    (3) sentencia -> . callFunction
    (4) sentencia -> . javaScript_param
    (5) sentencia -> . varDeclaration
    (6) sentencia -> . controlExpression
    (7) sentencia -> . impresion
    (8) sentencia -> . declareteFunction
    (9) sentencia -> . assingOperadores
    (52) callMethods -> . ID methodArray COLON
    (53) callMethods -> . ID methodSet COLON
    (54) callMethods -> . ID methodMap COLON
    (44) varType -> . LET
    (45) varType -> . CONST
    (46) varType -> . VAR
    (47) varType -> . empty
    (79) callFunction -> . ID LPAREN params RPAREN
    (37) javaScript_param -> . STRING
    (38) javaScript_param -> . NUM
    (39) javaScript_param -> . boolean
    (40) javaScript_param -> . ID
    (48) varDeclaration -> . varType ID EQUAL arrayDeclare COLON
    (49) varDeclaration -> . varType ID EQUAL declareMap COLON
    (50) varDeclaration -> . varType ID EQUAL declararSet COLON
    (51) varDeclaration -> . varType ID COLON
    (13) controlExpression -> . sentencias_if
    (14) controlExpression -> . sentencias_if_else
    (15) controlExpression -> . sentencias_while
    (16) controlExpression -> . impresion
    (17) controlExpression -> . impresion_vacio
    (35) impresion -> . ALERT LPAREN expression RPAREN
    (74) declareteFunction -> . FUNCTION ID LPAREN params RPAREN
    (75) declareteFunction -> . FUNCTION ID LPAREN params RPAREN sentencesCmpt
    (76) declareteFunction -> . varType ID EQUAL FUNCTION LPAREN params RPAREN
    (12) assingOperadores -> . varType ID EQUAL inicializarOp
    (41) empty -> .
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE
    (29) sentencias_if -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (30) sentencias_if -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (31) sentencias_if_else -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (32) sentencias_if_else -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (33) sentencias_while -> . WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (34) sentencias_while -> . WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (36) impresion_vacio -> . ALERT LPAREN RPAREN

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 4
    LET             shift and go to state 12
    CONST           shift and go to state 13
    VAR             shift and go to state 14
    STRING          shift and go to state 16
    NUM             shift and go to state 17
    ALERT           shift and go to state 23
    FUNCTION        shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28

  ! ID              [ reduce using rule 41 (empty -> .) ]

    sentencia                      shift and go to state 197
    callMethods                    shift and go to state 2
    varType                        shift and go to state 3
    callFunction                   shift and go to state 5
    javaScript_param               shift and go to state 6
    varDeclaration                 shift and go to state 7
    controlExpression              shift and go to state 8
    impresion                      shift and go to state 9
    declareteFunction              shift and go to state 10
    assingOperadores               shift and go to state 11
    empty                          shift and go to state 15
    boolean                        shift and go to state 18
    sentencias_if                  shift and go to state 19
    sentencias_if_else             shift and go to state 20
    sentencias_while               shift and go to state 21
    impresion_vacio                shift and go to state 22

state 166

    (33) sentencias_while -> WHILE LPAREN expression RPAREN LBLOCK . sentencia RBLOCK
    (1) sentencia -> . callMethods
    (2) sentencia -> . varType ID EQUAL callMethods
    (3) sentencia -> . callFunction
    (4) sentencia -> . javaScript_param
    (5) sentencia -> . varDeclaration
    (6) sentencia -> . controlExpression
    (7) sentencia -> . impresion
    (8) sentencia -> . declareteFunction
    (9) sentencia -> . assingOperadores
    (52) callMethods -> . ID methodArray COLON
    (53) callMethods -> . ID methodSet COLON
    (54) callMethods -> . ID methodMap COLON
    (44) varType -> . LET
    (45) varType -> . CONST
    (46) varType -> . VAR
    (47) varType -> . empty
    (79) callFunction -> . ID LPAREN params RPAREN
    (37) javaScript_param -> . STRING
    (38) javaScript_param -> . NUM
    (39) javaScript_param -> . boolean
    (40) javaScript_param -> . ID
    (48) varDeclaration -> . varType ID EQUAL arrayDeclare COLON
    (49) varDeclaration -> . varType ID EQUAL declareMap COLON
    (50) varDeclaration -> . varType ID EQUAL declararSet COLON
    (51) varDeclaration -> . varType ID COLON
    (13) controlExpression -> . sentencias_if
    (14) controlExpression -> . sentencias_if_else
    (15) controlExpression -> . sentencias_while
    (16) controlExpression -> . impresion
    (17) controlExpression -> . impresion_vacio
    (35) impresion -> . ALERT LPAREN expression RPAREN
    (74) declareteFunction -> . FUNCTION ID LPAREN params RPAREN
    (75) declareteFunction -> . FUNCTION ID LPAREN params RPAREN sentencesCmpt
    (76) declareteFunction -> . varType ID EQUAL FUNCTION LPAREN params RPAREN
    (12) assingOperadores -> . varType ID EQUAL inicializarOp
    (41) empty -> .
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE
    (29) sentencias_if -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (30) sentencias_if -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (31) sentencias_if_else -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (32) sentencias_if_else -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (33) sentencias_while -> . WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (34) sentencias_while -> . WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (36) impresion_vacio -> . ALERT LPAREN RPAREN

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 4
    LET             shift and go to state 12
    CONST           shift and go to state 13
    VAR             shift and go to state 14
    STRING          shift and go to state 16
    NUM             shift and go to state 17
    ALERT           shift and go to state 23
    FUNCTION        shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28

  ! ID              [ reduce using rule 41 (empty -> .) ]

    sentencia                      shift and go to state 198
    callMethods                    shift and go to state 2
    varType                        shift and go to state 3
    callFunction                   shift and go to state 5
    javaScript_param               shift and go to state 6
    varDeclaration                 shift and go to state 7
    controlExpression              shift and go to state 8
    impresion                      shift and go to state 9
    declareteFunction              shift and go to state 10
    assingOperadores               shift and go to state 11
    empty                          shift and go to state 15
    boolean                        shift and go to state 18
    sentencias_if                  shift and go to state 19
    sentencias_if_else             shift and go to state 20
    sentencias_while               shift and go to state 21
    impresion_vacio                shift and go to state 22

state 167

    (34) sentencias_while -> WHILE LPAREN expression operadorLogical expression . RPAREN LBLOCK sentencia RBLOCK

    RPAREN          shift and go to state 199


state 168

    (76) declareteFunction -> varType ID EQUAL FUNCTION LPAREN params . RPAREN

    RPAREN          shift and go to state 200


state 169

    (55) arrayDeclare -> LBRACKET arrayValues RBRACKET .

    COLON           reduce using rule 55 (arrayDeclare -> LBRACKET arrayValues RBRACKET .)
    RPAREN          reduce using rule 55 (arrayDeclare -> LBRACKET arrayValues RBRACKET .)


state 170

    (58) arrayValues -> arrayValue COMMA . arrayValue
    (59) arrayValue -> . LPAREN expression RPAREN
    (60) arrayValue -> . ID
    (61) arrayValue -> . NUM
    (62) arrayValue -> . STRING
    (63) arrayValue -> . boolean
    (64) arrayValue -> . empty
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE
    (41) empty -> .

    LPAREN          shift and go to state 126
    ID              shift and go to state 127
    NUM             shift and go to state 128
    STRING          shift and go to state 129
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    RBRACKET        reduce using rule 41 (empty -> .)
    RPAREN          reduce using rule 41 (empty -> .)

    arrayValue                     shift and go to state 201
    boolean                        shift and go to state 130
    empty                          shift and go to state 131

state 171

    (59) arrayValue -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 202


state 172

    (56) arrayDeclare -> NEW ARRAY LPAREN . arrayValues RPAREN
    (57) arrayValues -> . arrayValue
    (58) arrayValues -> . arrayValue COMMA arrayValue
    (59) arrayValue -> . LPAREN expression RPAREN
    (60) arrayValue -> . ID
    (61) arrayValue -> . NUM
    (62) arrayValue -> . STRING
    (63) arrayValue -> . boolean
    (64) arrayValue -> . empty
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE
    (41) empty -> .

    LPAREN          shift and go to state 126
    ID              shift and go to state 127
    NUM             shift and go to state 128
    STRING          shift and go to state 129
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    COMMA           reduce using rule 41 (empty -> .)
    RPAREN          reduce using rule 41 (empty -> .)

    arrayValues                    shift and go to state 203
    arrayValue                     shift and go to state 125
    boolean                        shift and go to state 130
    empty                          shift and go to state 131

state 173

    (68) declareMap -> NEW MAP LPAREN . iterable RPAREN
    (69) iterable -> . arrayDeclare
    (70) iterable -> . declararSet
    (71) iterable -> . empty
    (55) arrayDeclare -> . LBRACKET arrayValues RBRACKET
    (56) arrayDeclare -> . NEW ARRAY LPAREN arrayValues RPAREN
    (91) declararSet -> . NEW SET LPAREN setValues RPAREN
    (41) empty -> .

    LBRACKET        shift and go to state 76
    NEW             shift and go to state 204
    RPAREN          reduce using rule 41 (empty -> .)

    iterable                       shift and go to state 205
    arrayDeclare                   shift and go to state 206
    declararSet                    shift and go to state 207
    empty                          shift and go to state 208

state 174

    (91) declararSet -> NEW SET LPAREN . setValues RPAREN
    (93) setValues -> . setValue
    (94) setValues -> . setValue COMMA setValue
    (95) setValue -> . ID
    (96) setValue -> . NUM
    (97) setValue -> . STRING
    (98) setValue -> . boolean
    (99) setValue -> . empty
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE
    (41) empty -> .

    ID              shift and go to state 141
    NUM             shift and go to state 142
    STRING          shift and go to state 143
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    COMMA           reduce using rule 41 (empty -> .)
    RPAREN          reduce using rule 41 (empty -> .)

    setValues                      shift and go to state 209
    setValue                       shift and go to state 210
    boolean                        shift and go to state 144
    empty                          shift and go to state 145

state 175

    (65) methodArray -> PERIOD PUSH LPAREN arrayValue RPAREN .

    COLON           reduce using rule 65 (methodArray -> PERIOD PUSH LPAREN arrayValue RPAREN .)


state 176

    (66) methodArray -> PERIOD UNSHIFT LPAREN arrayValue RPAREN .

    COLON           reduce using rule 66 (methodArray -> PERIOD UNSHIFT LPAREN arrayValue RPAREN .)


state 177

    (67) methodArray -> PERIOD POP LPAREN empty RPAREN .

    COLON           reduce using rule 67 (methodArray -> PERIOD POP LPAREN empty RPAREN .)


state 178

    (100) methodSet -> PERIOD ADD LPAREN setValue RPAREN .

    COLON           reduce using rule 100 (methodSet -> PERIOD ADD LPAREN setValue RPAREN .)


state 179

    (101) methodSet -> PERIOD DELETE LPAREN setValue RPAREN .

    COLON           reduce using rule 101 (methodSet -> PERIOD DELETE LPAREN setValue RPAREN .)


state 180

    (102) methodSet -> PERIOD CLEAR LPAREN empty RPAREN .

    COLON           reduce using rule 102 (methodSet -> PERIOD CLEAR LPAREN empty RPAREN .)


state 181

    (115) suma -> numOperadores . PLUS LPAREN numOperadores RPAREN
    (116) suma -> numOperadores . PLUS NUM
    (117) suma -> numOperadores .

    PLUS            shift and go to state 211
    RPAREN          reduce using rule 117 (suma -> numOperadores .)
    AND             reduce using rule 117 (suma -> numOperadores .)
    OR              reduce using rule 117 (suma -> numOperadores .)
    NOT             reduce using rule 117 (suma -> numOperadores .)
    $end            reduce using rule 117 (suma -> numOperadores .)
    RBLOCK          reduce using rule 117 (suma -> numOperadores .)
    RETURN          reduce using rule 117 (suma -> numOperadores .)


state 182

    (106) operacionesMath -> numOperadores PLUS suma .

    RPAREN          reduce using rule 106 (operacionesMath -> numOperadores PLUS suma .)
    AND             reduce using rule 106 (operacionesMath -> numOperadores PLUS suma .)
    OR              reduce using rule 106 (operacionesMath -> numOperadores PLUS suma .)
    NOT             reduce using rule 106 (operacionesMath -> numOperadores PLUS suma .)
    $end            reduce using rule 106 (operacionesMath -> numOperadores PLUS suma .)
    RBLOCK          reduce using rule 106 (operacionesMath -> numOperadores PLUS suma .)
    RETURN          reduce using rule 106 (operacionesMath -> numOperadores PLUS suma .)


state 183

    (115) suma -> numOperadores PLUS LPAREN . numOperadores RPAREN
    (127) numOperadores -> . enteros
    (128) numOperadores -> . decimales
    (129) enteros -> . NUM
    (130) enteros -> . numNegative
    (133) decimales -> . enteros PERIOD NUM
    (131) numNegative -> . MINUS NUM
    (132) numNegative -> .

    NUM             shift and go to state 108
    MINUS           shift and go to state 104
    PERIOD          reduce using rule 132 (numNegative -> .)
    RPAREN          reduce using rule 132 (numNegative -> .)

    numOperadores                  shift and go to state 212
    enteros                        shift and go to state 106
    decimales                      shift and go to state 107
    numNegative                    shift and go to state 109

state 184

    (116) suma -> numOperadores PLUS NUM .
    (129) enteros -> NUM .

  ! reduce/reduce conflict for PERIOD resolved using rule 116 (suma -> numOperadores PLUS NUM .)
  ! reduce/reduce conflict for PLUS resolved using rule 116 (suma -> numOperadores PLUS NUM .)
  ! reduce/reduce conflict for RPAREN resolved using rule 116 (suma -> numOperadores PLUS NUM .)
  ! reduce/reduce conflict for AND resolved using rule 116 (suma -> numOperadores PLUS NUM .)
  ! reduce/reduce conflict for OR resolved using rule 116 (suma -> numOperadores PLUS NUM .)
  ! reduce/reduce conflict for NOT resolved using rule 116 (suma -> numOperadores PLUS NUM .)
  ! reduce/reduce conflict for $end resolved using rule 116 (suma -> numOperadores PLUS NUM .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 116 (suma -> numOperadores PLUS NUM .)
  ! reduce/reduce conflict for RETURN resolved using rule 116 (suma -> numOperadores PLUS NUM .)
    NUM             reduce using rule 116 (suma -> numOperadores PLUS NUM .)
    MINUS           reduce using rule 116 (suma -> numOperadores PLUS NUM .)
    PLUS            reduce using rule 116 (suma -> numOperadores PLUS NUM .)
    TIMES           reduce using rule 116 (suma -> numOperadores PLUS NUM .)
    PERIOD          reduce using rule 116 (suma -> numOperadores PLUS NUM .)
    RPAREN          reduce using rule 116 (suma -> numOperadores PLUS NUM .)
    AND             reduce using rule 116 (suma -> numOperadores PLUS NUM .)
    OR              reduce using rule 116 (suma -> numOperadores PLUS NUM .)
    NOT             reduce using rule 116 (suma -> numOperadores PLUS NUM .)
    $end            reduce using rule 116 (suma -> numOperadores PLUS NUM .)
    RBLOCK          reduce using rule 116 (suma -> numOperadores PLUS NUM .)
    RETURN          reduce using rule 116 (suma -> numOperadores PLUS NUM .)

  ! PERIOD          [ reduce using rule 129 (enteros -> NUM .) ]
  ! PLUS            [ reduce using rule 129 (enteros -> NUM .) ]
  ! RPAREN          [ reduce using rule 129 (enteros -> NUM .) ]
  ! AND             [ reduce using rule 129 (enteros -> NUM .) ]
  ! OR              [ reduce using rule 129 (enteros -> NUM .) ]
  ! NOT             [ reduce using rule 129 (enteros -> NUM .) ]
  ! $end            [ reduce using rule 129 (enteros -> NUM .) ]
  ! RBLOCK          [ reduce using rule 129 (enteros -> NUM .) ]
  ! RETURN          [ reduce using rule 129 (enteros -> NUM .) ]


state 185

    (118) restas -> numOperadores . MINUS LPAREN numOperadores RPAREN
    (119) restas -> numOperadores . MINUS NUM
    (120) restas -> numOperadores .

    MINUS           shift and go to state 213
    RPAREN          reduce using rule 120 (restas -> numOperadores .)
    AND             reduce using rule 120 (restas -> numOperadores .)
    OR              reduce using rule 120 (restas -> numOperadores .)
    NOT             reduce using rule 120 (restas -> numOperadores .)
    $end            reduce using rule 120 (restas -> numOperadores .)
    RBLOCK          reduce using rule 120 (restas -> numOperadores .)
    RETURN          reduce using rule 120 (restas -> numOperadores .)


state 186

    (110) operacionesMath -> numOperadores MINUS restas .

    RPAREN          reduce using rule 110 (operacionesMath -> numOperadores MINUS restas .)
    AND             reduce using rule 110 (operacionesMath -> numOperadores MINUS restas .)
    OR              reduce using rule 110 (operacionesMath -> numOperadores MINUS restas .)
    NOT             reduce using rule 110 (operacionesMath -> numOperadores MINUS restas .)
    $end            reduce using rule 110 (operacionesMath -> numOperadores MINUS restas .)
    RBLOCK          reduce using rule 110 (operacionesMath -> numOperadores MINUS restas .)
    RETURN          reduce using rule 110 (operacionesMath -> numOperadores MINUS restas .)


state 187

    (118) restas -> numOperadores MINUS LPAREN . numOperadores RPAREN
    (127) numOperadores -> . enteros
    (128) numOperadores -> . decimales
    (129) enteros -> . NUM
    (130) enteros -> . numNegative
    (133) decimales -> . enteros PERIOD NUM
    (131) numNegative -> . MINUS NUM
    (132) numNegative -> .

    NUM             shift and go to state 108
    MINUS           shift and go to state 104
    PERIOD          reduce using rule 132 (numNegative -> .)
    RPAREN          reduce using rule 132 (numNegative -> .)

    numOperadores                  shift and go to state 214
    enteros                        shift and go to state 106
    decimales                      shift and go to state 107
    numNegative                    shift and go to state 109

state 188

    (119) restas -> numOperadores MINUS NUM .
    (129) enteros -> NUM .

  ! reduce/reduce conflict for PERIOD resolved using rule 119 (restas -> numOperadores MINUS NUM .)
  ! reduce/reduce conflict for MINUS resolved using rule 119 (restas -> numOperadores MINUS NUM .)
  ! reduce/reduce conflict for RPAREN resolved using rule 119 (restas -> numOperadores MINUS NUM .)
  ! reduce/reduce conflict for AND resolved using rule 119 (restas -> numOperadores MINUS NUM .)
  ! reduce/reduce conflict for OR resolved using rule 119 (restas -> numOperadores MINUS NUM .)
  ! reduce/reduce conflict for NOT resolved using rule 119 (restas -> numOperadores MINUS NUM .)
  ! reduce/reduce conflict for $end resolved using rule 119 (restas -> numOperadores MINUS NUM .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 119 (restas -> numOperadores MINUS NUM .)
  ! reduce/reduce conflict for RETURN resolved using rule 119 (restas -> numOperadores MINUS NUM .)
    NUM             reduce using rule 119 (restas -> numOperadores MINUS NUM .)
    MINUS           reduce using rule 119 (restas -> numOperadores MINUS NUM .)
    PLUS            reduce using rule 119 (restas -> numOperadores MINUS NUM .)
    TIMES           reduce using rule 119 (restas -> numOperadores MINUS NUM .)
    PERIOD          reduce using rule 119 (restas -> numOperadores MINUS NUM .)
    RPAREN          reduce using rule 119 (restas -> numOperadores MINUS NUM .)
    AND             reduce using rule 119 (restas -> numOperadores MINUS NUM .)
    OR              reduce using rule 119 (restas -> numOperadores MINUS NUM .)
    NOT             reduce using rule 119 (restas -> numOperadores MINUS NUM .)
    $end            reduce using rule 119 (restas -> numOperadores MINUS NUM .)
    RBLOCK          reduce using rule 119 (restas -> numOperadores MINUS NUM .)
    RETURN          reduce using rule 119 (restas -> numOperadores MINUS NUM .)

  ! PERIOD          [ reduce using rule 129 (enteros -> NUM .) ]
  ! MINUS           [ reduce using rule 129 (enteros -> NUM .) ]
  ! RPAREN          [ reduce using rule 129 (enteros -> NUM .) ]
  ! AND             [ reduce using rule 129 (enteros -> NUM .) ]
  ! OR              [ reduce using rule 129 (enteros -> NUM .) ]
  ! NOT             [ reduce using rule 129 (enteros -> NUM .) ]
  ! $end            [ reduce using rule 129 (enteros -> NUM .) ]
  ! RBLOCK          [ reduce using rule 129 (enteros -> NUM .) ]
  ! RETURN          [ reduce using rule 129 (enteros -> NUM .) ]


state 189

    (121) multiplicacion -> numOperadores . TIMES LPAREN numOperadores RPAREN
    (122) multiplicacion -> numOperadores . TIMES NUM
    (123) multiplicacion -> numOperadores .

    TIMES           shift and go to state 215
    RPAREN          reduce using rule 123 (multiplicacion -> numOperadores .)
    AND             reduce using rule 123 (multiplicacion -> numOperadores .)
    OR              reduce using rule 123 (multiplicacion -> numOperadores .)
    NOT             reduce using rule 123 (multiplicacion -> numOperadores .)
    $end            reduce using rule 123 (multiplicacion -> numOperadores .)
    RBLOCK          reduce using rule 123 (multiplicacion -> numOperadores .)
    RETURN          reduce using rule 123 (multiplicacion -> numOperadores .)


state 190

    (113) operacionesMath -> numOperadores TIMES multiplicacion .

    RPAREN          reduce using rule 113 (operacionesMath -> numOperadores TIMES multiplicacion .)
    AND             reduce using rule 113 (operacionesMath -> numOperadores TIMES multiplicacion .)
    OR              reduce using rule 113 (operacionesMath -> numOperadores TIMES multiplicacion .)
    NOT             reduce using rule 113 (operacionesMath -> numOperadores TIMES multiplicacion .)
    $end            reduce using rule 113 (operacionesMath -> numOperadores TIMES multiplicacion .)
    RBLOCK          reduce using rule 113 (operacionesMath -> numOperadores TIMES multiplicacion .)
    RETURN          reduce using rule 113 (operacionesMath -> numOperadores TIMES multiplicacion .)


state 191

    (121) multiplicacion -> numOperadores TIMES LPAREN . numOperadores RPAREN
    (127) numOperadores -> . enteros
    (128) numOperadores -> . decimales
    (129) enteros -> . NUM
    (130) enteros -> . numNegative
    (133) decimales -> . enteros PERIOD NUM
    (131) numNegative -> . MINUS NUM
    (132) numNegative -> .

    NUM             shift and go to state 108
    MINUS           shift and go to state 104
    PERIOD          reduce using rule 132 (numNegative -> .)
    RPAREN          reduce using rule 132 (numNegative -> .)

    numOperadores                  shift and go to state 216
    enteros                        shift and go to state 106
    decimales                      shift and go to state 107
    numNegative                    shift and go to state 109

state 192

    (122) multiplicacion -> numOperadores TIMES NUM .
    (129) enteros -> NUM .

  ! reduce/reduce conflict for PERIOD resolved using rule 122 (multiplicacion -> numOperadores TIMES NUM .)
  ! reduce/reduce conflict for TIMES resolved using rule 122 (multiplicacion -> numOperadores TIMES NUM .)
  ! reduce/reduce conflict for RPAREN resolved using rule 122 (multiplicacion -> numOperadores TIMES NUM .)
  ! reduce/reduce conflict for AND resolved using rule 122 (multiplicacion -> numOperadores TIMES NUM .)
  ! reduce/reduce conflict for OR resolved using rule 122 (multiplicacion -> numOperadores TIMES NUM .)
  ! reduce/reduce conflict for NOT resolved using rule 122 (multiplicacion -> numOperadores TIMES NUM .)
  ! reduce/reduce conflict for $end resolved using rule 122 (multiplicacion -> numOperadores TIMES NUM .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 122 (multiplicacion -> numOperadores TIMES NUM .)
  ! reduce/reduce conflict for RETURN resolved using rule 122 (multiplicacion -> numOperadores TIMES NUM .)
    NUM             reduce using rule 122 (multiplicacion -> numOperadores TIMES NUM .)
    MINUS           reduce using rule 122 (multiplicacion -> numOperadores TIMES NUM .)
    PLUS            reduce using rule 122 (multiplicacion -> numOperadores TIMES NUM .)
    TIMES           reduce using rule 122 (multiplicacion -> numOperadores TIMES NUM .)
    PERIOD          reduce using rule 122 (multiplicacion -> numOperadores TIMES NUM .)
    RPAREN          reduce using rule 122 (multiplicacion -> numOperadores TIMES NUM .)
    AND             reduce using rule 122 (multiplicacion -> numOperadores TIMES NUM .)
    OR              reduce using rule 122 (multiplicacion -> numOperadores TIMES NUM .)
    NOT             reduce using rule 122 (multiplicacion -> numOperadores TIMES NUM .)
    $end            reduce using rule 122 (multiplicacion -> numOperadores TIMES NUM .)
    RBLOCK          reduce using rule 122 (multiplicacion -> numOperadores TIMES NUM .)
    RETURN          reduce using rule 122 (multiplicacion -> numOperadores TIMES NUM .)

  ! PERIOD          [ reduce using rule 129 (enteros -> NUM .) ]
  ! TIMES           [ reduce using rule 129 (enteros -> NUM .) ]
  ! RPAREN          [ reduce using rule 129 (enteros -> NUM .) ]
  ! AND             [ reduce using rule 129 (enteros -> NUM .) ]
  ! OR              [ reduce using rule 129 (enteros -> NUM .) ]
  ! NOT             [ reduce using rule 129 (enteros -> NUM .) ]
  ! $end            [ reduce using rule 129 (enteros -> NUM .) ]
  ! RBLOCK          [ reduce using rule 129 (enteros -> NUM .) ]
  ! RETURN          [ reduce using rule 129 (enteros -> NUM .) ]


state 193

    (133) decimales -> enteros PERIOD NUM .

    PLUS            reduce using rule 133 (decimales -> enteros PERIOD NUM .)
    MINUS           reduce using rule 133 (decimales -> enteros PERIOD NUM .)
    TIMES           reduce using rule 133 (decimales -> enteros PERIOD NUM .)
    NUM             reduce using rule 133 (decimales -> enteros PERIOD NUM .)
    PERIOD          reduce using rule 133 (decimales -> enteros PERIOD NUM .)
    RPAREN          reduce using rule 133 (decimales -> enteros PERIOD NUM .)
    AND             reduce using rule 133 (decimales -> enteros PERIOD NUM .)
    OR              reduce using rule 133 (decimales -> enteros PERIOD NUM .)
    NOT             reduce using rule 133 (decimales -> enteros PERIOD NUM .)
    $end            reduce using rule 133 (decimales -> enteros PERIOD NUM .)
    RBLOCK          reduce using rule 133 (decimales -> enteros PERIOD NUM .)
    RETURN          reduce using rule 133 (decimales -> enteros PERIOD NUM .)


state 194

    (75) declareteFunction -> FUNCTION ID LPAREN params RPAREN sentencesCmpt .

    $end            reduce using rule 75 (declareteFunction -> FUNCTION ID LPAREN params RPAREN sentencesCmpt .)
    RBLOCK          reduce using rule 75 (declareteFunction -> FUNCTION ID LPAREN params RPAREN sentencesCmpt .)
    RETURN          reduce using rule 75 (declareteFunction -> FUNCTION ID LPAREN params RPAREN sentencesCmpt .)


state 195

    (77) sentencesCmpt -> LBLOCK . sentencia RBLOCK
    (78) sentencesCmpt -> LBLOCK . sentencia RETURN RBLOCK
    (1) sentencia -> . callMethods
    (2) sentencia -> . varType ID EQUAL callMethods
    (3) sentencia -> . callFunction
    (4) sentencia -> . javaScript_param
    (5) sentencia -> . varDeclaration
    (6) sentencia -> . controlExpression
    (7) sentencia -> . impresion
    (8) sentencia -> . declareteFunction
    (9) sentencia -> . assingOperadores
    (52) callMethods -> . ID methodArray COLON
    (53) callMethods -> . ID methodSet COLON
    (54) callMethods -> . ID methodMap COLON
    (44) varType -> . LET
    (45) varType -> . CONST
    (46) varType -> . VAR
    (47) varType -> . empty
    (79) callFunction -> . ID LPAREN params RPAREN
    (37) javaScript_param -> . STRING
    (38) javaScript_param -> . NUM
    (39) javaScript_param -> . boolean
    (40) javaScript_param -> . ID
    (48) varDeclaration -> . varType ID EQUAL arrayDeclare COLON
    (49) varDeclaration -> . varType ID EQUAL declareMap COLON
    (50) varDeclaration -> . varType ID EQUAL declararSet COLON
    (51) varDeclaration -> . varType ID COLON
    (13) controlExpression -> . sentencias_if
    (14) controlExpression -> . sentencias_if_else
    (15) controlExpression -> . sentencias_while
    (16) controlExpression -> . impresion
    (17) controlExpression -> . impresion_vacio
    (35) impresion -> . ALERT LPAREN expression RPAREN
    (74) declareteFunction -> . FUNCTION ID LPAREN params RPAREN
    (75) declareteFunction -> . FUNCTION ID LPAREN params RPAREN sentencesCmpt
    (76) declareteFunction -> . varType ID EQUAL FUNCTION LPAREN params RPAREN
    (12) assingOperadores -> . varType ID EQUAL inicializarOp
    (41) empty -> .
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE
    (29) sentencias_if -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (30) sentencias_if -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (31) sentencias_if_else -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (32) sentencias_if_else -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (33) sentencias_while -> . WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (34) sentencias_while -> . WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (36) impresion_vacio -> . ALERT LPAREN RPAREN

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 4
    LET             shift and go to state 12
    CONST           shift and go to state 13
    VAR             shift and go to state 14
    STRING          shift and go to state 16
    NUM             shift and go to state 17
    ALERT           shift and go to state 23
    FUNCTION        shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28

  ! ID              [ reduce using rule 41 (empty -> .) ]

    sentencia                      shift and go to state 217
    callMethods                    shift and go to state 2
    varType                        shift and go to state 3
    callFunction                   shift and go to state 5
    javaScript_param               shift and go to state 6
    varDeclaration                 shift and go to state 7
    controlExpression              shift and go to state 8
    impresion                      shift and go to state 9
    declareteFunction              shift and go to state 10
    assingOperadores               shift and go to state 11
    empty                          shift and go to state 15
    boolean                        shift and go to state 18
    sentencias_if                  shift and go to state 19
    sentencias_if_else             shift and go to state 20
    sentencias_while               shift and go to state 21
    impresion_vacio                shift and go to state 22

state 196

    (29) sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN . LBLOCK sentencia RBLOCK
    (31) sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN . LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK

    LBLOCK          shift and go to state 218


state 197

    (30) sentencias_if -> IF LPAREN expression RPAREN LBLOCK sentencia . RBLOCK
    (32) sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia . RBLOCK ELSE LBLOCK sentencia RBLOCK

    RBLOCK          shift and go to state 219


state 198

    (33) sentencias_while -> WHILE LPAREN expression RPAREN LBLOCK sentencia . RBLOCK

    RBLOCK          shift and go to state 220


state 199

    (34) sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN . LBLOCK sentencia RBLOCK

    LBLOCK          shift and go to state 221


state 200

    (76) declareteFunction -> varType ID EQUAL FUNCTION LPAREN params RPAREN .

    $end            reduce using rule 76 (declareteFunction -> varType ID EQUAL FUNCTION LPAREN params RPAREN .)
    RBLOCK          reduce using rule 76 (declareteFunction -> varType ID EQUAL FUNCTION LPAREN params RPAREN .)
    RETURN          reduce using rule 76 (declareteFunction -> varType ID EQUAL FUNCTION LPAREN params RPAREN .)


state 201

    (58) arrayValues -> arrayValue COMMA arrayValue .

    RBRACKET        reduce using rule 58 (arrayValues -> arrayValue COMMA arrayValue .)
    RPAREN          reduce using rule 58 (arrayValues -> arrayValue COMMA arrayValue .)


state 202

    (59) arrayValue -> LPAREN expression RPAREN .

    COMMA           reduce using rule 59 (arrayValue -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 59 (arrayValue -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 59 (arrayValue -> LPAREN expression RPAREN .)


state 203

    (56) arrayDeclare -> NEW ARRAY LPAREN arrayValues . RPAREN

    RPAREN          shift and go to state 222


state 204

    (56) arrayDeclare -> NEW . ARRAY LPAREN arrayValues RPAREN
    (91) declararSet -> NEW . SET LPAREN setValues RPAREN

    ARRAY           shift and go to state 132
    SET             shift and go to state 134


state 205

    (68) declareMap -> NEW MAP LPAREN iterable . RPAREN

    RPAREN          shift and go to state 223


state 206

    (69) iterable -> arrayDeclare .

    RPAREN          reduce using rule 69 (iterable -> arrayDeclare .)


state 207

    (70) iterable -> declararSet .

    RPAREN          reduce using rule 70 (iterable -> declararSet .)


state 208

    (71) iterable -> empty .

    RPAREN          reduce using rule 71 (iterable -> empty .)


state 209

    (91) declararSet -> NEW SET LPAREN setValues . RPAREN

    RPAREN          shift and go to state 224


state 210

    (93) setValues -> setValue .
    (94) setValues -> setValue . COMMA setValue

    RPAREN          reduce using rule 93 (setValues -> setValue .)
    COMMA           shift and go to state 225


state 211

    (115) suma -> numOperadores PLUS . LPAREN numOperadores RPAREN
    (116) suma -> numOperadores PLUS . NUM

    LPAREN          shift and go to state 183
    NUM             shift and go to state 226


state 212

    (115) suma -> numOperadores PLUS LPAREN numOperadores . RPAREN

    RPAREN          shift and go to state 227


state 213

    (118) restas -> numOperadores MINUS . LPAREN numOperadores RPAREN
    (119) restas -> numOperadores MINUS . NUM

    LPAREN          shift and go to state 187
    NUM             shift and go to state 228


state 214

    (118) restas -> numOperadores MINUS LPAREN numOperadores . RPAREN

    RPAREN          shift and go to state 229


state 215

    (121) multiplicacion -> numOperadores TIMES . LPAREN numOperadores RPAREN
    (122) multiplicacion -> numOperadores TIMES . NUM

    LPAREN          shift and go to state 191
    NUM             shift and go to state 230


state 216

    (121) multiplicacion -> numOperadores TIMES LPAREN numOperadores . RPAREN

    RPAREN          shift and go to state 231


state 217

    (77) sentencesCmpt -> LBLOCK sentencia . RBLOCK
    (78) sentencesCmpt -> LBLOCK sentencia . RETURN RBLOCK

    RBLOCK          shift and go to state 232
    RETURN          shift and go to state 233


state 218

    (29) sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK . sentencia RBLOCK
    (31) sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK . sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (1) sentencia -> . callMethods
    (2) sentencia -> . varType ID EQUAL callMethods
    (3) sentencia -> . callFunction
    (4) sentencia -> . javaScript_param
    (5) sentencia -> . varDeclaration
    (6) sentencia -> . controlExpression
    (7) sentencia -> . impresion
    (8) sentencia -> . declareteFunction
    (9) sentencia -> . assingOperadores
    (52) callMethods -> . ID methodArray COLON
    (53) callMethods -> . ID methodSet COLON
    (54) callMethods -> . ID methodMap COLON
    (44) varType -> . LET
    (45) varType -> . CONST
    (46) varType -> . VAR
    (47) varType -> . empty
    (79) callFunction -> . ID LPAREN params RPAREN
    (37) javaScript_param -> . STRING
    (38) javaScript_param -> . NUM
    (39) javaScript_param -> . boolean
    (40) javaScript_param -> . ID
    (48) varDeclaration -> . varType ID EQUAL arrayDeclare COLON
    (49) varDeclaration -> . varType ID EQUAL declareMap COLON
    (50) varDeclaration -> . varType ID EQUAL declararSet COLON
    (51) varDeclaration -> . varType ID COLON
    (13) controlExpression -> . sentencias_if
    (14) controlExpression -> . sentencias_if_else
    (15) controlExpression -> . sentencias_while
    (16) controlExpression -> . impresion
    (17) controlExpression -> . impresion_vacio
    (35) impresion -> . ALERT LPAREN expression RPAREN
    (74) declareteFunction -> . FUNCTION ID LPAREN params RPAREN
    (75) declareteFunction -> . FUNCTION ID LPAREN params RPAREN sentencesCmpt
    (76) declareteFunction -> . varType ID EQUAL FUNCTION LPAREN params RPAREN
    (12) assingOperadores -> . varType ID EQUAL inicializarOp
    (41) empty -> .
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE
    (29) sentencias_if -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (30) sentencias_if -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (31) sentencias_if_else -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (32) sentencias_if_else -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (33) sentencias_while -> . WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (34) sentencias_while -> . WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (36) impresion_vacio -> . ALERT LPAREN RPAREN

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 4
    LET             shift and go to state 12
    CONST           shift and go to state 13
    VAR             shift and go to state 14
    STRING          shift and go to state 16
    NUM             shift and go to state 17
    ALERT           shift and go to state 23
    FUNCTION        shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28

  ! ID              [ reduce using rule 41 (empty -> .) ]

    sentencia                      shift and go to state 234
    callMethods                    shift and go to state 2
    varType                        shift and go to state 3
    callFunction                   shift and go to state 5
    javaScript_param               shift and go to state 6
    varDeclaration                 shift and go to state 7
    controlExpression              shift and go to state 8
    impresion                      shift and go to state 9
    declareteFunction              shift and go to state 10
    assingOperadores               shift and go to state 11
    empty                          shift and go to state 15
    boolean                        shift and go to state 18
    sentencias_if                  shift and go to state 19
    sentencias_if_else             shift and go to state 20
    sentencias_while               shift and go to state 21
    impresion_vacio                shift and go to state 22

state 219

    (30) sentencias_if -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK .
    (32) sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK . ELSE LBLOCK sentencia RBLOCK

    $end            reduce using rule 30 (sentencias_if -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK .)
    RBLOCK          reduce using rule 30 (sentencias_if -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK .)
    RETURN          reduce using rule 30 (sentencias_if -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK .)
    ELSE            shift and go to state 235


state 220

    (33) sentencias_while -> WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK .

    $end            reduce using rule 33 (sentencias_while -> WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK .)
    RBLOCK          reduce using rule 33 (sentencias_while -> WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK .)
    RETURN          reduce using rule 33 (sentencias_while -> WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK .)


state 221

    (34) sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK . sentencia RBLOCK
    (1) sentencia -> . callMethods
    (2) sentencia -> . varType ID EQUAL callMethods
    (3) sentencia -> . callFunction
    (4) sentencia -> . javaScript_param
    (5) sentencia -> . varDeclaration
    (6) sentencia -> . controlExpression
    (7) sentencia -> . impresion
    (8) sentencia -> . declareteFunction
    (9) sentencia -> . assingOperadores
    (52) callMethods -> . ID methodArray COLON
    (53) callMethods -> . ID methodSet COLON
    (54) callMethods -> . ID methodMap COLON
    (44) varType -> . LET
    (45) varType -> . CONST
    (46) varType -> . VAR
    (47) varType -> . empty
    (79) callFunction -> . ID LPAREN params RPAREN
    (37) javaScript_param -> . STRING
    (38) javaScript_param -> . NUM
    (39) javaScript_param -> . boolean
    (40) javaScript_param -> . ID
    (48) varDeclaration -> . varType ID EQUAL arrayDeclare COLON
    (49) varDeclaration -> . varType ID EQUAL declareMap COLON
    (50) varDeclaration -> . varType ID EQUAL declararSet COLON
    (51) varDeclaration -> . varType ID COLON
    (13) controlExpression -> . sentencias_if
    (14) controlExpression -> . sentencias_if_else
    (15) controlExpression -> . sentencias_while
    (16) controlExpression -> . impresion
    (17) controlExpression -> . impresion_vacio
    (35) impresion -> . ALERT LPAREN expression RPAREN
    (74) declareteFunction -> . FUNCTION ID LPAREN params RPAREN
    (75) declareteFunction -> . FUNCTION ID LPAREN params RPAREN sentencesCmpt
    (76) declareteFunction -> . varType ID EQUAL FUNCTION LPAREN params RPAREN
    (12) assingOperadores -> . varType ID EQUAL inicializarOp
    (41) empty -> .
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE
    (29) sentencias_if -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (30) sentencias_if -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (31) sentencias_if_else -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (32) sentencias_if_else -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (33) sentencias_while -> . WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (34) sentencias_while -> . WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (36) impresion_vacio -> . ALERT LPAREN RPAREN

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 4
    LET             shift and go to state 12
    CONST           shift and go to state 13
    VAR             shift and go to state 14
    STRING          shift and go to state 16
    NUM             shift and go to state 17
    ALERT           shift and go to state 23
    FUNCTION        shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28

  ! ID              [ reduce using rule 41 (empty -> .) ]

    sentencia                      shift and go to state 236
    callMethods                    shift and go to state 2
    varType                        shift and go to state 3
    callFunction                   shift and go to state 5
    javaScript_param               shift and go to state 6
    varDeclaration                 shift and go to state 7
    controlExpression              shift and go to state 8
    impresion                      shift and go to state 9
    declareteFunction              shift and go to state 10
    assingOperadores               shift and go to state 11
    empty                          shift and go to state 15
    boolean                        shift and go to state 18
    sentencias_if                  shift and go to state 19
    sentencias_if_else             shift and go to state 20
    sentencias_while               shift and go to state 21
    impresion_vacio                shift and go to state 22

state 222

    (56) arrayDeclare -> NEW ARRAY LPAREN arrayValues RPAREN .

    COLON           reduce using rule 56 (arrayDeclare -> NEW ARRAY LPAREN arrayValues RPAREN .)
    RPAREN          reduce using rule 56 (arrayDeclare -> NEW ARRAY LPAREN arrayValues RPAREN .)


state 223

    (68) declareMap -> NEW MAP LPAREN iterable RPAREN .

    COLON           reduce using rule 68 (declareMap -> NEW MAP LPAREN iterable RPAREN .)


state 224

    (91) declararSet -> NEW SET LPAREN setValues RPAREN .

    COLON           reduce using rule 91 (declararSet -> NEW SET LPAREN setValues RPAREN .)
    RPAREN          reduce using rule 91 (declararSet -> NEW SET LPAREN setValues RPAREN .)


state 225

    (94) setValues -> setValue COMMA . setValue
    (95) setValue -> . ID
    (96) setValue -> . NUM
    (97) setValue -> . STRING
    (98) setValue -> . boolean
    (99) setValue -> . empty
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE
    (41) empty -> .

    ID              shift and go to state 141
    NUM             shift and go to state 142
    STRING          shift and go to state 143
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    RPAREN          reduce using rule 41 (empty -> .)

    setValue                       shift and go to state 237
    boolean                        shift and go to state 144
    empty                          shift and go to state 145

state 226

    (116) suma -> numOperadores PLUS NUM .

    RPAREN          reduce using rule 116 (suma -> numOperadores PLUS NUM .)
    AND             reduce using rule 116 (suma -> numOperadores PLUS NUM .)
    OR              reduce using rule 116 (suma -> numOperadores PLUS NUM .)
    NOT             reduce using rule 116 (suma -> numOperadores PLUS NUM .)
    $end            reduce using rule 116 (suma -> numOperadores PLUS NUM .)
    RBLOCK          reduce using rule 116 (suma -> numOperadores PLUS NUM .)
    RETURN          reduce using rule 116 (suma -> numOperadores PLUS NUM .)


state 227

    (115) suma -> numOperadores PLUS LPAREN numOperadores RPAREN .

    NUM             reduce using rule 115 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    MINUS           reduce using rule 115 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    PLUS            reduce using rule 115 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    TIMES           reduce using rule 115 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    PERIOD          reduce using rule 115 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    RPAREN          reduce using rule 115 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    AND             reduce using rule 115 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    OR              reduce using rule 115 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    NOT             reduce using rule 115 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    $end            reduce using rule 115 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    RBLOCK          reduce using rule 115 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    RETURN          reduce using rule 115 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)


state 228

    (119) restas -> numOperadores MINUS NUM .

    RPAREN          reduce using rule 119 (restas -> numOperadores MINUS NUM .)
    AND             reduce using rule 119 (restas -> numOperadores MINUS NUM .)
    OR              reduce using rule 119 (restas -> numOperadores MINUS NUM .)
    NOT             reduce using rule 119 (restas -> numOperadores MINUS NUM .)
    $end            reduce using rule 119 (restas -> numOperadores MINUS NUM .)
    RBLOCK          reduce using rule 119 (restas -> numOperadores MINUS NUM .)
    RETURN          reduce using rule 119 (restas -> numOperadores MINUS NUM .)


state 229

    (118) restas -> numOperadores MINUS LPAREN numOperadores RPAREN .

    NUM             reduce using rule 118 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    MINUS           reduce using rule 118 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    PLUS            reduce using rule 118 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    TIMES           reduce using rule 118 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    PERIOD          reduce using rule 118 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    RPAREN          reduce using rule 118 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    AND             reduce using rule 118 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    OR              reduce using rule 118 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    NOT             reduce using rule 118 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    $end            reduce using rule 118 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    RBLOCK          reduce using rule 118 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    RETURN          reduce using rule 118 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)


state 230

    (122) multiplicacion -> numOperadores TIMES NUM .

    RPAREN          reduce using rule 122 (multiplicacion -> numOperadores TIMES NUM .)
    AND             reduce using rule 122 (multiplicacion -> numOperadores TIMES NUM .)
    OR              reduce using rule 122 (multiplicacion -> numOperadores TIMES NUM .)
    NOT             reduce using rule 122 (multiplicacion -> numOperadores TIMES NUM .)
    $end            reduce using rule 122 (multiplicacion -> numOperadores TIMES NUM .)
    RBLOCK          reduce using rule 122 (multiplicacion -> numOperadores TIMES NUM .)
    RETURN          reduce using rule 122 (multiplicacion -> numOperadores TIMES NUM .)


state 231

    (121) multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .

    NUM             reduce using rule 121 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    MINUS           reduce using rule 121 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    PLUS            reduce using rule 121 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    TIMES           reduce using rule 121 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    PERIOD          reduce using rule 121 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    RPAREN          reduce using rule 121 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    AND             reduce using rule 121 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    OR              reduce using rule 121 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    NOT             reduce using rule 121 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    $end            reduce using rule 121 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    RBLOCK          reduce using rule 121 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    RETURN          reduce using rule 121 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)


state 232

    (77) sentencesCmpt -> LBLOCK sentencia RBLOCK .

    $end            reduce using rule 77 (sentencesCmpt -> LBLOCK sentencia RBLOCK .)
    RBLOCK          reduce using rule 77 (sentencesCmpt -> LBLOCK sentencia RBLOCK .)
    RETURN          reduce using rule 77 (sentencesCmpt -> LBLOCK sentencia RBLOCK .)


state 233

    (78) sentencesCmpt -> LBLOCK sentencia RETURN . RBLOCK

    RBLOCK          shift and go to state 238


state 234

    (29) sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia . RBLOCK
    (31) sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia . RBLOCK ELSE LBLOCK sentencia RBLOCK

    RBLOCK          shift and go to state 239


state 235

    (32) sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE . LBLOCK sentencia RBLOCK

    LBLOCK          shift and go to state 240


state 236

    (34) sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia . RBLOCK

    RBLOCK          shift and go to state 241


state 237

    (94) setValues -> setValue COMMA setValue .

    RPAREN          reduce using rule 94 (setValues -> setValue COMMA setValue .)


state 238

    (78) sentencesCmpt -> LBLOCK sentencia RETURN RBLOCK .

    $end            reduce using rule 78 (sentencesCmpt -> LBLOCK sentencia RETURN RBLOCK .)
    RBLOCK          reduce using rule 78 (sentencesCmpt -> LBLOCK sentencia RETURN RBLOCK .)
    RETURN          reduce using rule 78 (sentencesCmpt -> LBLOCK sentencia RETURN RBLOCK .)


state 239

    (29) sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK .
    (31) sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK . ELSE LBLOCK sentencia RBLOCK

    $end            reduce using rule 29 (sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK .)
    RBLOCK          reduce using rule 29 (sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK .)
    RETURN          reduce using rule 29 (sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK .)
    ELSE            shift and go to state 242


state 240

    (32) sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK . sentencia RBLOCK
    (1) sentencia -> . callMethods
    (2) sentencia -> . varType ID EQUAL callMethods
    (3) sentencia -> . callFunction
    (4) sentencia -> . javaScript_param
    (5) sentencia -> . varDeclaration
    (6) sentencia -> . controlExpression
    (7) sentencia -> . impresion
    (8) sentencia -> . declareteFunction
    (9) sentencia -> . assingOperadores
    (52) callMethods -> . ID methodArray COLON
    (53) callMethods -> . ID methodSet COLON
    (54) callMethods -> . ID methodMap COLON
    (44) varType -> . LET
    (45) varType -> . CONST
    (46) varType -> . VAR
    (47) varType -> . empty
    (79) callFunction -> . ID LPAREN params RPAREN
    (37) javaScript_param -> . STRING
    (38) javaScript_param -> . NUM
    (39) javaScript_param -> . boolean
    (40) javaScript_param -> . ID
    (48) varDeclaration -> . varType ID EQUAL arrayDeclare COLON
    (49) varDeclaration -> . varType ID EQUAL declareMap COLON
    (50) varDeclaration -> . varType ID EQUAL declararSet COLON
    (51) varDeclaration -> . varType ID COLON
    (13) controlExpression -> . sentencias_if
    (14) controlExpression -> . sentencias_if_else
    (15) controlExpression -> . sentencias_while
    (16) controlExpression -> . impresion
    (17) controlExpression -> . impresion_vacio
    (35) impresion -> . ALERT LPAREN expression RPAREN
    (74) declareteFunction -> . FUNCTION ID LPAREN params RPAREN
    (75) declareteFunction -> . FUNCTION ID LPAREN params RPAREN sentencesCmpt
    (76) declareteFunction -> . varType ID EQUAL FUNCTION LPAREN params RPAREN
    (12) assingOperadores -> . varType ID EQUAL inicializarOp
    (41) empty -> .
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE
    (29) sentencias_if -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (30) sentencias_if -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (31) sentencias_if_else -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (32) sentencias_if_else -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (33) sentencias_while -> . WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (34) sentencias_while -> . WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (36) impresion_vacio -> . ALERT LPAREN RPAREN

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 4
    LET             shift and go to state 12
    CONST           shift and go to state 13
    VAR             shift and go to state 14
    STRING          shift and go to state 16
    NUM             shift and go to state 17
    ALERT           shift and go to state 23
    FUNCTION        shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28

  ! ID              [ reduce using rule 41 (empty -> .) ]

    sentencia                      shift and go to state 243
    callMethods                    shift and go to state 2
    varType                        shift and go to state 3
    callFunction                   shift and go to state 5
    javaScript_param               shift and go to state 6
    varDeclaration                 shift and go to state 7
    controlExpression              shift and go to state 8
    impresion                      shift and go to state 9
    declareteFunction              shift and go to state 10
    assingOperadores               shift and go to state 11
    empty                          shift and go to state 15
    boolean                        shift and go to state 18
    sentencias_if                  shift and go to state 19
    sentencias_if_else             shift and go to state 20
    sentencias_while               shift and go to state 21
    impresion_vacio                shift and go to state 22

state 241

    (34) sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK .

    $end            reduce using rule 34 (sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK .)
    RBLOCK          reduce using rule 34 (sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK .)
    RETURN          reduce using rule 34 (sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK .)


state 242

    (31) sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE . LBLOCK sentencia RBLOCK

    LBLOCK          shift and go to state 244


state 243

    (32) sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia . RBLOCK

    RBLOCK          shift and go to state 245


state 244

    (31) sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK . sentencia RBLOCK
    (1) sentencia -> . callMethods
    (2) sentencia -> . varType ID EQUAL callMethods
    (3) sentencia -> . callFunction
    (4) sentencia -> . javaScript_param
    (5) sentencia -> . varDeclaration
    (6) sentencia -> . controlExpression
    (7) sentencia -> . impresion
    (8) sentencia -> . declareteFunction
    (9) sentencia -> . assingOperadores
    (52) callMethods -> . ID methodArray COLON
    (53) callMethods -> . ID methodSet COLON
    (54) callMethods -> . ID methodMap COLON
    (44) varType -> . LET
    (45) varType -> . CONST
    (46) varType -> . VAR
    (47) varType -> . empty
    (79) callFunction -> . ID LPAREN params RPAREN
    (37) javaScript_param -> . STRING
    (38) javaScript_param -> . NUM
    (39) javaScript_param -> . boolean
    (40) javaScript_param -> . ID
    (48) varDeclaration -> . varType ID EQUAL arrayDeclare COLON
    (49) varDeclaration -> . varType ID EQUAL declareMap COLON
    (50) varDeclaration -> . varType ID EQUAL declararSet COLON
    (51) varDeclaration -> . varType ID COLON
    (13) controlExpression -> . sentencias_if
    (14) controlExpression -> . sentencias_if_else
    (15) controlExpression -> . sentencias_while
    (16) controlExpression -> . impresion
    (17) controlExpression -> . impresion_vacio
    (35) impresion -> . ALERT LPAREN expression RPAREN
    (74) declareteFunction -> . FUNCTION ID LPAREN params RPAREN
    (75) declareteFunction -> . FUNCTION ID LPAREN params RPAREN sentencesCmpt
    (76) declareteFunction -> . varType ID EQUAL FUNCTION LPAREN params RPAREN
    (12) assingOperadores -> . varType ID EQUAL inicializarOp
    (41) empty -> .
    (42) boolean -> . TRUE
    (43) boolean -> . FALSE
    (29) sentencias_if -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (30) sentencias_if -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (31) sentencias_if_else -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (32) sentencias_if_else -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (33) sentencias_while -> . WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (34) sentencias_while -> . WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (36) impresion_vacio -> . ALERT LPAREN RPAREN

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 4
    LET             shift and go to state 12
    CONST           shift and go to state 13
    VAR             shift and go to state 14
    STRING          shift and go to state 16
    NUM             shift and go to state 17
    ALERT           shift and go to state 23
    FUNCTION        shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28

  ! ID              [ reduce using rule 41 (empty -> .) ]

    sentencia                      shift and go to state 246
    callMethods                    shift and go to state 2
    varType                        shift and go to state 3
    callFunction                   shift and go to state 5
    javaScript_param               shift and go to state 6
    varDeclaration                 shift and go to state 7
    controlExpression              shift and go to state 8
    impresion                      shift and go to state 9
    declareteFunction              shift and go to state 10
    assingOperadores               shift and go to state 11
    empty                          shift and go to state 15
    boolean                        shift and go to state 18
    sentencias_if                  shift and go to state 19
    sentencias_if_else             shift and go to state 20
    sentencias_while               shift and go to state 21
    impresion_vacio                shift and go to state 22

state 245

    (32) sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK .

    $end            reduce using rule 32 (sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK .)
    RBLOCK          reduce using rule 32 (sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK .)
    RETURN          reduce using rule 32 (sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK .)


state 246

    (31) sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia . RBLOCK

    RBLOCK          shift and go to state 247


state 247

    (31) sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK .

    $end            reduce using rule 31 (sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK .)
    RBLOCK          reduce using rule 31 (sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK .)
    RETURN          reduce using rule 31 (sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 0 resolved as shift
WARNING: shift/reduce conflict for NUM in state 35 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 35 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 35 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 35 resolved as shift
WARNING: shift/reduce conflict for NUM in state 37 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 37 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 37 resolved as shift
WARNING: shift/reduce conflict for NUM in state 38 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 38 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 38 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 39 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 39 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 63 resolved as shift
WARNING: shift/reduce conflict for NUM in state 63 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 64 resolved as shift
WARNING: shift/reduce conflict for NUM in state 64 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 65 resolved as shift
WARNING: shift/reduce conflict for NUM in state 65 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 86 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 101 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 101 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 101 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 101 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 101 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 101 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 101 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 101 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 101 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 102 resolved as shift
WARNING: shift/reduce conflict for NUM in state 102 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 103 resolved as shift
WARNING: shift/reduce conflict for NUM in state 103 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 105 resolved as shift
WARNING: shift/reduce conflict for NUM in state 105 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 106 resolved as shift
WARNING: shift/reduce conflict for NUM in state 113 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 113 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 113 resolved as shift
WARNING: shift/reduce conflict for NUM in state 119 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 119 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 119 resolved as shift
WARNING: shift/reduce conflict for NUM in state 126 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 126 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 126 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 156 resolved as shift
WARNING: shift/reduce conflict for ID in state 165 resolved as shift
WARNING: shift/reduce conflict for ID in state 166 resolved as shift
WARNING: shift/reduce conflict for ID in state 195 resolved as shift
WARNING: shift/reduce conflict for ID in state 218 resolved as shift
WARNING: shift/reduce conflict for ID in state 221 resolved as shift
WARNING: shift/reduce conflict for ID in state 240 resolved as shift
WARNING: shift/reduce conflict for ID in state 244 resolved as shift
WARNING: reduce/reduce conflict in state 9 resolved using rule (sentencia -> impresion)
WARNING: rejected rule (controlExpression -> impresion) in state 9
WARNING: reduce/reduce conflict in state 101 resolved using rule (suma -> numOperadores)
WARNING: rejected rule (restas -> numOperadores) in state 101
WARNING: reduce/reduce conflict in state 101 resolved using rule (suma -> numOperadores)
WARNING: rejected rule (multiplicacion -> numOperadores) in state 101
WARNING: reduce/reduce conflict in state 102 resolved using rule (operacionesMath -> suma)
WARNING: rejected rule (numNegative -> <empty>) in state 102
WARNING: reduce/reduce conflict in state 103 resolved using rule (operacionesMath -> restas)
WARNING: rejected rule (numNegative -> <empty>) in state 103
WARNING: reduce/reduce conflict in state 105 resolved using rule (operacionesMath -> multiplicacion)
WARNING: rejected rule (numNegative -> <empty>) in state 105
WARNING: reduce/reduce conflict in state 184 resolved using rule (suma -> numOperadores PLUS NUM)
WARNING: rejected rule (enteros -> NUM) in state 184
WARNING: reduce/reduce conflict in state 188 resolved using rule (restas -> numOperadores MINUS NUM)
WARNING: rejected rule (enteros -> NUM) in state 188
WARNING: reduce/reduce conflict in state 192 resolved using rule (multiplicacion -> numOperadores TIMES NUM)
WARNING: rejected rule (enteros -> NUM) in state 192
WARNING: Rule (controlExpression -> impresion) is never reduced
