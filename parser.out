Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    AWAIT
    BREAK
    CASE
    CATCH
    CLASS
    COLON
    COMMA
    CONTINUE
    DEBUGGER
    DEFAULT
    DELETE
    DIV_EQUAL
    DO
    EXPORT
    EXTENDS
    FINALLY
    FOR
    FUNCTION
    GREATEREQUAL
    IMPORT
    IN
    INSTANCEOF
    LBRACKET
    LESSEQUAL
    MINUS
    MINUS_EQUAL
    MOD_EQUAL
    MUL_EQUAL
    NOT
    OR
    PERIOD
    PLUS_EQUAL
    RBRACKET
    RETURN
    SUPER
    SWITCH
    THIS
    THROW
    TRY
    TWOPOINTS
    TYPEOF
    VOID
    WITH
    YIELD

Grammar

Rule 0     S' -> sentencias
Rule 1     sentencias -> impresion
Rule 2     sentencias -> expression
Rule 3     sentencias -> IF LPAREN logical_expresion RPAREN
Rule 4     sentencias -> IF LPAREN logical_expresion RPAREN sentencias ELSE sentencias
Rule 5     sentencias -> WHILE LPAREN logical_expresion RPAREN block
Rule 6     impresion -> ALERT LPAREN expression RPAREN
Rule 7     impresion -> ALERT LPAREN RPAREN
Rule 8     expression -> expression PLUS term
Rule 9     expression -> expression TIMES term
Rule 10    expression -> expression DIVIDE term
Rule 11    expression -> expression MOD term
Rule 12    expression -> VAR ID
Rule 13    expression -> CONST ID
Rule 14    expression -> ID EQUAL NEW MAP LPAREN RPAREN
Rule 15    expression -> logical_expresion
Rule 16    logical_expresion -> expression GREATER term
Rule 17    logical_expresion -> expression LESS term
Rule 18    logical_expresion -> expression ISEQUAL term
Rule 19    logical_expresion -> expression IS_NOT_IDENTICAL term
Rule 20    logical_expresion -> expression IS_IDENTICAL term
Rule 21    expression -> block
Rule 22    block -> LBLOCK sentencias RBLOCK
Rule 23    expression -> term
Rule 24    term -> term TIMES factor
Rule 25    term -> term DIVIDE factor
Rule 26    term -> factor
Rule 27    factor -> NUMBER
Rule 28    factor -> ID
Rule 29    factor -> LPAREN expression RPAREN

Terminals, with rules where they appear

ALERT                : 6 7
AND                  : 
AWAIT                : 
BREAK                : 
CASE                 : 
CATCH                : 
CLASS                : 
COLON                : 
COMMA                : 
CONST                : 13
CONTINUE             : 
DEBUGGER             : 
DEFAULT              : 
DELETE               : 
DIVIDE               : 10 25
DIV_EQUAL            : 
DO                   : 
ELSE                 : 4
EQUAL                : 14
EXPORT               : 
EXTENDS              : 
FINALLY              : 
FOR                  : 
FUNCTION             : 
GREATER              : 16
GREATEREQUAL         : 
ID                   : 12 13 14 28
IF                   : 3 4
IMPORT               : 
IN                   : 
INSTANCEOF           : 
ISEQUAL              : 18
IS_IDENTICAL         : 20
IS_NOT_IDENTICAL     : 19
LBLOCK               : 22
LBRACKET             : 
LESS                 : 17
LESSEQUAL            : 
LPAREN               : 3 4 5 6 7 14 29
MAP                  : 14
MINUS                : 
MINUS_EQUAL          : 
MOD                  : 11
MOD_EQUAL            : 
MUL_EQUAL            : 
NEW                  : 14
NOT                  : 
NUMBER               : 27
OR                   : 
PERIOD               : 
PLUS                 : 8
PLUS_EQUAL           : 
RBLOCK               : 22
RBRACKET             : 
RETURN               : 
RPAREN               : 3 4 5 6 7 14 29
SUPER                : 
SWITCH               : 
THIS                 : 
THROW                : 
TIMES                : 9 24
TRY                  : 
TWOPOINTS            : 
TYPEOF               : 
VAR                  : 12
VOID                 : 
WHILE                : 5
WITH                 : 
YIELD                : 
error                : 

Nonterminals, with rules where they appear

block                : 5 21
expression           : 2 6 8 9 10 11 16 17 18 19 20 29
factor               : 24 25 26
impresion            : 1
logical_expresion    : 3 4 5 15
sentencias           : 4 4 22 0
term                 : 8 9 10 11 16 17 18 19 20 23 24 25

Parsing method: LALR

state 0

    (0) S' -> . sentencias
    (1) sentencias -> . impresion
    (2) sentencias -> . expression
    (3) sentencias -> . IF LPAREN logical_expresion RPAREN
    (4) sentencias -> . IF LPAREN logical_expresion RPAREN sentencias ELSE sentencias
    (5) sentencias -> . WHILE LPAREN logical_expresion RPAREN block
    (6) impresion -> . ALERT LPAREN expression RPAREN
    (7) impresion -> . ALERT LPAREN RPAREN
    (8) expression -> . expression PLUS term
    (9) expression -> . expression TIMES term
    (10) expression -> . expression DIVIDE term
    (11) expression -> . expression MOD term
    (12) expression -> . VAR ID
    (13) expression -> . CONST ID
    (14) expression -> . ID EQUAL NEW MAP LPAREN RPAREN
    (15) expression -> . logical_expresion
    (21) expression -> . block
    (23) expression -> . term
    (16) logical_expresion -> . expression GREATER term
    (17) logical_expresion -> . expression LESS term
    (18) logical_expresion -> . expression ISEQUAL term
    (19) logical_expresion -> . expression IS_NOT_IDENTICAL term
    (20) logical_expresion -> . expression IS_IDENTICAL term
    (22) block -> . LBLOCK sentencias RBLOCK
    (24) term -> . term TIMES factor
    (25) term -> . term DIVIDE factor
    (26) term -> . factor
    (27) factor -> . NUMBER
    (28) factor -> . ID
    (29) factor -> . LPAREN expression RPAREN

    IF              shift and go to state 4
    WHILE           shift and go to state 7
    ALERT           shift and go to state 9
    VAR             shift and go to state 11
    CONST           shift and go to state 13
    ID              shift and go to state 12
    LBLOCK          shift and go to state 14
    NUMBER          shift and go to state 16
    LPAREN          shift and go to state 5

    sentencias                     shift and go to state 1
    impresion                      shift and go to state 2
    expression                     shift and go to state 3
    logical_expresion              shift and go to state 6
    block                          shift and go to state 8
    term                           shift and go to state 10
    factor                         shift and go to state 15

state 1

    (0) S' -> sentencias .



state 2

    (1) sentencias -> impresion .

    $end            reduce using rule 1 (sentencias -> impresion .)
    RBLOCK          reduce using rule 1 (sentencias -> impresion .)
    ELSE            reduce using rule 1 (sentencias -> impresion .)


state 3

    (2) sentencias -> expression .
    (8) expression -> expression . PLUS term
    (9) expression -> expression . TIMES term
    (10) expression -> expression . DIVIDE term
    (11) expression -> expression . MOD term
    (16) logical_expresion -> expression . GREATER term
    (17) logical_expresion -> expression . LESS term
    (18) logical_expresion -> expression . ISEQUAL term
    (19) logical_expresion -> expression . IS_NOT_IDENTICAL term
    (20) logical_expresion -> expression . IS_IDENTICAL term

    $end            reduce using rule 2 (sentencias -> expression .)
    RBLOCK          reduce using rule 2 (sentencias -> expression .)
    ELSE            reduce using rule 2 (sentencias -> expression .)
    PLUS            shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19
    MOD             shift and go to state 20
    GREATER         shift and go to state 21
    LESS            shift and go to state 22
    ISEQUAL         shift and go to state 23
    IS_NOT_IDENTICAL shift and go to state 24
    IS_IDENTICAL    shift and go to state 25


state 4

    (3) sentencias -> IF . LPAREN logical_expresion RPAREN
    (4) sentencias -> IF . LPAREN logical_expresion RPAREN sentencias ELSE sentencias

    LPAREN          shift and go to state 26


state 5

    (29) factor -> LPAREN . expression RPAREN
    (8) expression -> . expression PLUS term
    (9) expression -> . expression TIMES term
    (10) expression -> . expression DIVIDE term
    (11) expression -> . expression MOD term
    (12) expression -> . VAR ID
    (13) expression -> . CONST ID
    (14) expression -> . ID EQUAL NEW MAP LPAREN RPAREN
    (15) expression -> . logical_expresion
    (21) expression -> . block
    (23) expression -> . term
    (16) logical_expresion -> . expression GREATER term
    (17) logical_expresion -> . expression LESS term
    (18) logical_expresion -> . expression ISEQUAL term
    (19) logical_expresion -> . expression IS_NOT_IDENTICAL term
    (20) logical_expresion -> . expression IS_IDENTICAL term
    (22) block -> . LBLOCK sentencias RBLOCK
    (24) term -> . term TIMES factor
    (25) term -> . term DIVIDE factor
    (26) term -> . factor
    (27) factor -> . NUMBER
    (28) factor -> . ID
    (29) factor -> . LPAREN expression RPAREN

    VAR             shift and go to state 11
    CONST           shift and go to state 13
    ID              shift and go to state 12
    LBLOCK          shift and go to state 14
    NUMBER          shift and go to state 16
    LPAREN          shift and go to state 5

    expression                     shift and go to state 27
    term                           shift and go to state 10
    logical_expresion              shift and go to state 6
    block                          shift and go to state 8
    factor                         shift and go to state 15

state 6

    (15) expression -> logical_expresion .

    PLUS            reduce using rule 15 (expression -> logical_expresion .)
    TIMES           reduce using rule 15 (expression -> logical_expresion .)
    DIVIDE          reduce using rule 15 (expression -> logical_expresion .)
    MOD             reduce using rule 15 (expression -> logical_expresion .)
    GREATER         reduce using rule 15 (expression -> logical_expresion .)
    LESS            reduce using rule 15 (expression -> logical_expresion .)
    ISEQUAL         reduce using rule 15 (expression -> logical_expresion .)
    IS_NOT_IDENTICAL reduce using rule 15 (expression -> logical_expresion .)
    IS_IDENTICAL    reduce using rule 15 (expression -> logical_expresion .)
    $end            reduce using rule 15 (expression -> logical_expresion .)
    RPAREN          reduce using rule 15 (expression -> logical_expresion .)
    RBLOCK          reduce using rule 15 (expression -> logical_expresion .)
    ELSE            reduce using rule 15 (expression -> logical_expresion .)


state 7

    (5) sentencias -> WHILE . LPAREN logical_expresion RPAREN block

    LPAREN          shift and go to state 28


state 8

    (21) expression -> block .

    PLUS            reduce using rule 21 (expression -> block .)
    TIMES           reduce using rule 21 (expression -> block .)
    DIVIDE          reduce using rule 21 (expression -> block .)
    MOD             reduce using rule 21 (expression -> block .)
    GREATER         reduce using rule 21 (expression -> block .)
    LESS            reduce using rule 21 (expression -> block .)
    ISEQUAL         reduce using rule 21 (expression -> block .)
    IS_NOT_IDENTICAL reduce using rule 21 (expression -> block .)
    IS_IDENTICAL    reduce using rule 21 (expression -> block .)
    $end            reduce using rule 21 (expression -> block .)
    RPAREN          reduce using rule 21 (expression -> block .)
    RBLOCK          reduce using rule 21 (expression -> block .)
    ELSE            reduce using rule 21 (expression -> block .)


state 9

    (6) impresion -> ALERT . LPAREN expression RPAREN
    (7) impresion -> ALERT . LPAREN RPAREN

    LPAREN          shift and go to state 29


state 10

    (23) expression -> term .
    (24) term -> term . TIMES factor
    (25) term -> term . DIVIDE factor

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    PLUS            reduce using rule 23 (expression -> term .)
    MOD             reduce using rule 23 (expression -> term .)
    GREATER         reduce using rule 23 (expression -> term .)
    LESS            reduce using rule 23 (expression -> term .)
    ISEQUAL         reduce using rule 23 (expression -> term .)
    IS_NOT_IDENTICAL reduce using rule 23 (expression -> term .)
    IS_IDENTICAL    reduce using rule 23 (expression -> term .)
    $end            reduce using rule 23 (expression -> term .)
    RPAREN          reduce using rule 23 (expression -> term .)
    RBLOCK          reduce using rule 23 (expression -> term .)
    ELSE            reduce using rule 23 (expression -> term .)
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31

  ! TIMES           [ reduce using rule 23 (expression -> term .) ]
  ! DIVIDE          [ reduce using rule 23 (expression -> term .) ]


state 11

    (12) expression -> VAR . ID

    ID              shift and go to state 32


state 12

    (14) expression -> ID . EQUAL NEW MAP LPAREN RPAREN
    (28) factor -> ID .

    EQUAL           shift and go to state 33
    TIMES           reduce using rule 28 (factor -> ID .)
    DIVIDE          reduce using rule 28 (factor -> ID .)
    PLUS            reduce using rule 28 (factor -> ID .)
    MOD             reduce using rule 28 (factor -> ID .)
    GREATER         reduce using rule 28 (factor -> ID .)
    LESS            reduce using rule 28 (factor -> ID .)
    ISEQUAL         reduce using rule 28 (factor -> ID .)
    IS_NOT_IDENTICAL reduce using rule 28 (factor -> ID .)
    IS_IDENTICAL    reduce using rule 28 (factor -> ID .)
    $end            reduce using rule 28 (factor -> ID .)
    RPAREN          reduce using rule 28 (factor -> ID .)
    RBLOCK          reduce using rule 28 (factor -> ID .)
    ELSE            reduce using rule 28 (factor -> ID .)


state 13

    (13) expression -> CONST . ID

    ID              shift and go to state 34


state 14

    (22) block -> LBLOCK . sentencias RBLOCK
    (1) sentencias -> . impresion
    (2) sentencias -> . expression
    (3) sentencias -> . IF LPAREN logical_expresion RPAREN
    (4) sentencias -> . IF LPAREN logical_expresion RPAREN sentencias ELSE sentencias
    (5) sentencias -> . WHILE LPAREN logical_expresion RPAREN block
    (6) impresion -> . ALERT LPAREN expression RPAREN
    (7) impresion -> . ALERT LPAREN RPAREN
    (8) expression -> . expression PLUS term
    (9) expression -> . expression TIMES term
    (10) expression -> . expression DIVIDE term
    (11) expression -> . expression MOD term
    (12) expression -> . VAR ID
    (13) expression -> . CONST ID
    (14) expression -> . ID EQUAL NEW MAP LPAREN RPAREN
    (15) expression -> . logical_expresion
    (21) expression -> . block
    (23) expression -> . term
    (16) logical_expresion -> . expression GREATER term
    (17) logical_expresion -> . expression LESS term
    (18) logical_expresion -> . expression ISEQUAL term
    (19) logical_expresion -> . expression IS_NOT_IDENTICAL term
    (20) logical_expresion -> . expression IS_IDENTICAL term
    (22) block -> . LBLOCK sentencias RBLOCK
    (24) term -> . term TIMES factor
    (25) term -> . term DIVIDE factor
    (26) term -> . factor
    (27) factor -> . NUMBER
    (28) factor -> . ID
    (29) factor -> . LPAREN expression RPAREN

    IF              shift and go to state 4
    WHILE           shift and go to state 7
    ALERT           shift and go to state 9
    VAR             shift and go to state 11
    CONST           shift and go to state 13
    ID              shift and go to state 12
    LBLOCK          shift and go to state 14
    NUMBER          shift and go to state 16
    LPAREN          shift and go to state 5

    sentencias                     shift and go to state 35
    impresion                      shift and go to state 2
    expression                     shift and go to state 3
    logical_expresion              shift and go to state 6
    block                          shift and go to state 8
    term                           shift and go to state 10
    factor                         shift and go to state 15

state 15

    (26) term -> factor .

    TIMES           reduce using rule 26 (term -> factor .)
    DIVIDE          reduce using rule 26 (term -> factor .)
    PLUS            reduce using rule 26 (term -> factor .)
    MOD             reduce using rule 26 (term -> factor .)
    GREATER         reduce using rule 26 (term -> factor .)
    LESS            reduce using rule 26 (term -> factor .)
    ISEQUAL         reduce using rule 26 (term -> factor .)
    IS_NOT_IDENTICAL reduce using rule 26 (term -> factor .)
    IS_IDENTICAL    reduce using rule 26 (term -> factor .)
    $end            reduce using rule 26 (term -> factor .)
    RPAREN          reduce using rule 26 (term -> factor .)
    RBLOCK          reduce using rule 26 (term -> factor .)
    ELSE            reduce using rule 26 (term -> factor .)


state 16

    (27) factor -> NUMBER .

    TIMES           reduce using rule 27 (factor -> NUMBER .)
    DIVIDE          reduce using rule 27 (factor -> NUMBER .)
    PLUS            reduce using rule 27 (factor -> NUMBER .)
    MOD             reduce using rule 27 (factor -> NUMBER .)
    GREATER         reduce using rule 27 (factor -> NUMBER .)
    LESS            reduce using rule 27 (factor -> NUMBER .)
    ISEQUAL         reduce using rule 27 (factor -> NUMBER .)
    IS_NOT_IDENTICAL reduce using rule 27 (factor -> NUMBER .)
    IS_IDENTICAL    reduce using rule 27 (factor -> NUMBER .)
    $end            reduce using rule 27 (factor -> NUMBER .)
    RPAREN          reduce using rule 27 (factor -> NUMBER .)
    RBLOCK          reduce using rule 27 (factor -> NUMBER .)
    ELSE            reduce using rule 27 (factor -> NUMBER .)


state 17

    (8) expression -> expression PLUS . term
    (24) term -> . term TIMES factor
    (25) term -> . term DIVIDE factor
    (26) term -> . factor
    (27) factor -> . NUMBER
    (28) factor -> . ID
    (29) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 16
    ID              shift and go to state 37
    LPAREN          shift and go to state 5

    term                           shift and go to state 36
    factor                         shift and go to state 15

state 18

    (9) expression -> expression TIMES . term
    (24) term -> . term TIMES factor
    (25) term -> . term DIVIDE factor
    (26) term -> . factor
    (27) factor -> . NUMBER
    (28) factor -> . ID
    (29) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 16
    ID              shift and go to state 37
    LPAREN          shift and go to state 5

    term                           shift and go to state 38
    factor                         shift and go to state 15

state 19

    (10) expression -> expression DIVIDE . term
    (24) term -> . term TIMES factor
    (25) term -> . term DIVIDE factor
    (26) term -> . factor
    (27) factor -> . NUMBER
    (28) factor -> . ID
    (29) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 16
    ID              shift and go to state 37
    LPAREN          shift and go to state 5

    term                           shift and go to state 39
    factor                         shift and go to state 15

state 20

    (11) expression -> expression MOD . term
    (24) term -> . term TIMES factor
    (25) term -> . term DIVIDE factor
    (26) term -> . factor
    (27) factor -> . NUMBER
    (28) factor -> . ID
    (29) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 16
    ID              shift and go to state 37
    LPAREN          shift and go to state 5

    term                           shift and go to state 40
    factor                         shift and go to state 15

state 21

    (16) logical_expresion -> expression GREATER . term
    (24) term -> . term TIMES factor
    (25) term -> . term DIVIDE factor
    (26) term -> . factor
    (27) factor -> . NUMBER
    (28) factor -> . ID
    (29) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 16
    ID              shift and go to state 37
    LPAREN          shift and go to state 5

    term                           shift and go to state 41
    factor                         shift and go to state 15

state 22

    (17) logical_expresion -> expression LESS . term
    (24) term -> . term TIMES factor
    (25) term -> . term DIVIDE factor
    (26) term -> . factor
    (27) factor -> . NUMBER
    (28) factor -> . ID
    (29) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 16
    ID              shift and go to state 37
    LPAREN          shift and go to state 5

    term                           shift and go to state 42
    factor                         shift and go to state 15

state 23

    (18) logical_expresion -> expression ISEQUAL . term
    (24) term -> . term TIMES factor
    (25) term -> . term DIVIDE factor
    (26) term -> . factor
    (27) factor -> . NUMBER
    (28) factor -> . ID
    (29) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 16
    ID              shift and go to state 37
    LPAREN          shift and go to state 5

    term                           shift and go to state 43
    factor                         shift and go to state 15

state 24

    (19) logical_expresion -> expression IS_NOT_IDENTICAL . term
    (24) term -> . term TIMES factor
    (25) term -> . term DIVIDE factor
    (26) term -> . factor
    (27) factor -> . NUMBER
    (28) factor -> . ID
    (29) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 16
    ID              shift and go to state 37
    LPAREN          shift and go to state 5

    term                           shift and go to state 44
    factor                         shift and go to state 15

state 25

    (20) logical_expresion -> expression IS_IDENTICAL . term
    (24) term -> . term TIMES factor
    (25) term -> . term DIVIDE factor
    (26) term -> . factor
    (27) factor -> . NUMBER
    (28) factor -> . ID
    (29) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 16
    ID              shift and go to state 37
    LPAREN          shift and go to state 5

    term                           shift and go to state 45
    factor                         shift and go to state 15

state 26

    (3) sentencias -> IF LPAREN . logical_expresion RPAREN
    (4) sentencias -> IF LPAREN . logical_expresion RPAREN sentencias ELSE sentencias
    (16) logical_expresion -> . expression GREATER term
    (17) logical_expresion -> . expression LESS term
    (18) logical_expresion -> . expression ISEQUAL term
    (19) logical_expresion -> . expression IS_NOT_IDENTICAL term
    (20) logical_expresion -> . expression IS_IDENTICAL term
    (8) expression -> . expression PLUS term
    (9) expression -> . expression TIMES term
    (10) expression -> . expression DIVIDE term
    (11) expression -> . expression MOD term
    (12) expression -> . VAR ID
    (13) expression -> . CONST ID
    (14) expression -> . ID EQUAL NEW MAP LPAREN RPAREN
    (15) expression -> . logical_expresion
    (21) expression -> . block
    (23) expression -> . term
    (22) block -> . LBLOCK sentencias RBLOCK
    (24) term -> . term TIMES factor
    (25) term -> . term DIVIDE factor
    (26) term -> . factor
    (27) factor -> . NUMBER
    (28) factor -> . ID
    (29) factor -> . LPAREN expression RPAREN

    VAR             shift and go to state 11
    CONST           shift and go to state 13
    ID              shift and go to state 12
    LBLOCK          shift and go to state 14
    NUMBER          shift and go to state 16
    LPAREN          shift and go to state 5

    logical_expresion              shift and go to state 46
    expression                     shift and go to state 47
    term                           shift and go to state 10
    block                          shift and go to state 8
    factor                         shift and go to state 15

state 27

    (29) factor -> LPAREN expression . RPAREN
    (8) expression -> expression . PLUS term
    (9) expression -> expression . TIMES term
    (10) expression -> expression . DIVIDE term
    (11) expression -> expression . MOD term
    (16) logical_expresion -> expression . GREATER term
    (17) logical_expresion -> expression . LESS term
    (18) logical_expresion -> expression . ISEQUAL term
    (19) logical_expresion -> expression . IS_NOT_IDENTICAL term
    (20) logical_expresion -> expression . IS_IDENTICAL term

    RPAREN          shift and go to state 48
    PLUS            shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19
    MOD             shift and go to state 20
    GREATER         shift and go to state 21
    LESS            shift and go to state 22
    ISEQUAL         shift and go to state 23
    IS_NOT_IDENTICAL shift and go to state 24
    IS_IDENTICAL    shift and go to state 25


state 28

    (5) sentencias -> WHILE LPAREN . logical_expresion RPAREN block
    (16) logical_expresion -> . expression GREATER term
    (17) logical_expresion -> . expression LESS term
    (18) logical_expresion -> . expression ISEQUAL term
    (19) logical_expresion -> . expression IS_NOT_IDENTICAL term
    (20) logical_expresion -> . expression IS_IDENTICAL term
    (8) expression -> . expression PLUS term
    (9) expression -> . expression TIMES term
    (10) expression -> . expression DIVIDE term
    (11) expression -> . expression MOD term
    (12) expression -> . VAR ID
    (13) expression -> . CONST ID
    (14) expression -> . ID EQUAL NEW MAP LPAREN RPAREN
    (15) expression -> . logical_expresion
    (21) expression -> . block
    (23) expression -> . term
    (22) block -> . LBLOCK sentencias RBLOCK
    (24) term -> . term TIMES factor
    (25) term -> . term DIVIDE factor
    (26) term -> . factor
    (27) factor -> . NUMBER
    (28) factor -> . ID
    (29) factor -> . LPAREN expression RPAREN

    VAR             shift and go to state 11
    CONST           shift and go to state 13
    ID              shift and go to state 12
    LBLOCK          shift and go to state 14
    NUMBER          shift and go to state 16
    LPAREN          shift and go to state 5

    logical_expresion              shift and go to state 49
    block                          shift and go to state 8
    expression                     shift and go to state 47
    term                           shift and go to state 10
    factor                         shift and go to state 15

state 29

    (6) impresion -> ALERT LPAREN . expression RPAREN
    (7) impresion -> ALERT LPAREN . RPAREN
    (8) expression -> . expression PLUS term
    (9) expression -> . expression TIMES term
    (10) expression -> . expression DIVIDE term
    (11) expression -> . expression MOD term
    (12) expression -> . VAR ID
    (13) expression -> . CONST ID
    (14) expression -> . ID EQUAL NEW MAP LPAREN RPAREN
    (15) expression -> . logical_expresion
    (21) expression -> . block
    (23) expression -> . term
    (16) logical_expresion -> . expression GREATER term
    (17) logical_expresion -> . expression LESS term
    (18) logical_expresion -> . expression ISEQUAL term
    (19) logical_expresion -> . expression IS_NOT_IDENTICAL term
    (20) logical_expresion -> . expression IS_IDENTICAL term
    (22) block -> . LBLOCK sentencias RBLOCK
    (24) term -> . term TIMES factor
    (25) term -> . term DIVIDE factor
    (26) term -> . factor
    (27) factor -> . NUMBER
    (28) factor -> . ID
    (29) factor -> . LPAREN expression RPAREN

    RPAREN          shift and go to state 51
    VAR             shift and go to state 11
    CONST           shift and go to state 13
    ID              shift and go to state 12
    LBLOCK          shift and go to state 14
    NUMBER          shift and go to state 16
    LPAREN          shift and go to state 5

    expression                     shift and go to state 50
    term                           shift and go to state 10
    logical_expresion              shift and go to state 6
    block                          shift and go to state 8
    factor                         shift and go to state 15

state 30

    (24) term -> term TIMES . factor
    (27) factor -> . NUMBER
    (28) factor -> . ID
    (29) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 16
    ID              shift and go to state 37
    LPAREN          shift and go to state 5

    factor                         shift and go to state 52

state 31

    (25) term -> term DIVIDE . factor
    (27) factor -> . NUMBER
    (28) factor -> . ID
    (29) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 16
    ID              shift and go to state 37
    LPAREN          shift and go to state 5

    factor                         shift and go to state 53

state 32

    (12) expression -> VAR ID .

    PLUS            reduce using rule 12 (expression -> VAR ID .)
    TIMES           reduce using rule 12 (expression -> VAR ID .)
    DIVIDE          reduce using rule 12 (expression -> VAR ID .)
    MOD             reduce using rule 12 (expression -> VAR ID .)
    GREATER         reduce using rule 12 (expression -> VAR ID .)
    LESS            reduce using rule 12 (expression -> VAR ID .)
    ISEQUAL         reduce using rule 12 (expression -> VAR ID .)
    IS_NOT_IDENTICAL reduce using rule 12 (expression -> VAR ID .)
    IS_IDENTICAL    reduce using rule 12 (expression -> VAR ID .)
    $end            reduce using rule 12 (expression -> VAR ID .)
    RPAREN          reduce using rule 12 (expression -> VAR ID .)
    RBLOCK          reduce using rule 12 (expression -> VAR ID .)
    ELSE            reduce using rule 12 (expression -> VAR ID .)


state 33

    (14) expression -> ID EQUAL . NEW MAP LPAREN RPAREN

    NEW             shift and go to state 54


state 34

    (13) expression -> CONST ID .

    PLUS            reduce using rule 13 (expression -> CONST ID .)
    TIMES           reduce using rule 13 (expression -> CONST ID .)
    DIVIDE          reduce using rule 13 (expression -> CONST ID .)
    MOD             reduce using rule 13 (expression -> CONST ID .)
    GREATER         reduce using rule 13 (expression -> CONST ID .)
    LESS            reduce using rule 13 (expression -> CONST ID .)
    ISEQUAL         reduce using rule 13 (expression -> CONST ID .)
    IS_NOT_IDENTICAL reduce using rule 13 (expression -> CONST ID .)
    IS_IDENTICAL    reduce using rule 13 (expression -> CONST ID .)
    $end            reduce using rule 13 (expression -> CONST ID .)
    RPAREN          reduce using rule 13 (expression -> CONST ID .)
    RBLOCK          reduce using rule 13 (expression -> CONST ID .)
    ELSE            reduce using rule 13 (expression -> CONST ID .)


state 35

    (22) block -> LBLOCK sentencias . RBLOCK

    RBLOCK          shift and go to state 55


state 36

    (8) expression -> expression PLUS term .
    (24) term -> term . TIMES factor
    (25) term -> term . DIVIDE factor

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    PLUS            reduce using rule 8 (expression -> expression PLUS term .)
    MOD             reduce using rule 8 (expression -> expression PLUS term .)
    GREATER         reduce using rule 8 (expression -> expression PLUS term .)
    LESS            reduce using rule 8 (expression -> expression PLUS term .)
    ISEQUAL         reduce using rule 8 (expression -> expression PLUS term .)
    IS_NOT_IDENTICAL reduce using rule 8 (expression -> expression PLUS term .)
    IS_IDENTICAL    reduce using rule 8 (expression -> expression PLUS term .)
    $end            reduce using rule 8 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 8 (expression -> expression PLUS term .)
    RBLOCK          reduce using rule 8 (expression -> expression PLUS term .)
    ELSE            reduce using rule 8 (expression -> expression PLUS term .)
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31

  ! TIMES           [ reduce using rule 8 (expression -> expression PLUS term .) ]
  ! DIVIDE          [ reduce using rule 8 (expression -> expression PLUS term .) ]


state 37

    (28) factor -> ID .

    TIMES           reduce using rule 28 (factor -> ID .)
    DIVIDE          reduce using rule 28 (factor -> ID .)
    PLUS            reduce using rule 28 (factor -> ID .)
    MOD             reduce using rule 28 (factor -> ID .)
    GREATER         reduce using rule 28 (factor -> ID .)
    LESS            reduce using rule 28 (factor -> ID .)
    ISEQUAL         reduce using rule 28 (factor -> ID .)
    IS_NOT_IDENTICAL reduce using rule 28 (factor -> ID .)
    IS_IDENTICAL    reduce using rule 28 (factor -> ID .)
    $end            reduce using rule 28 (factor -> ID .)
    RPAREN          reduce using rule 28 (factor -> ID .)
    RBLOCK          reduce using rule 28 (factor -> ID .)
    ELSE            reduce using rule 28 (factor -> ID .)


state 38

    (9) expression -> expression TIMES term .
    (24) term -> term . TIMES factor
    (25) term -> term . DIVIDE factor

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    PLUS            reduce using rule 9 (expression -> expression TIMES term .)
    MOD             reduce using rule 9 (expression -> expression TIMES term .)
    GREATER         reduce using rule 9 (expression -> expression TIMES term .)
    LESS            reduce using rule 9 (expression -> expression TIMES term .)
    ISEQUAL         reduce using rule 9 (expression -> expression TIMES term .)
    IS_NOT_IDENTICAL reduce using rule 9 (expression -> expression TIMES term .)
    IS_IDENTICAL    reduce using rule 9 (expression -> expression TIMES term .)
    $end            reduce using rule 9 (expression -> expression TIMES term .)
    RPAREN          reduce using rule 9 (expression -> expression TIMES term .)
    RBLOCK          reduce using rule 9 (expression -> expression TIMES term .)
    ELSE            reduce using rule 9 (expression -> expression TIMES term .)
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31

  ! TIMES           [ reduce using rule 9 (expression -> expression TIMES term .) ]
  ! DIVIDE          [ reduce using rule 9 (expression -> expression TIMES term .) ]


state 39

    (10) expression -> expression DIVIDE term .
    (24) term -> term . TIMES factor
    (25) term -> term . DIVIDE factor

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    PLUS            reduce using rule 10 (expression -> expression DIVIDE term .)
    MOD             reduce using rule 10 (expression -> expression DIVIDE term .)
    GREATER         reduce using rule 10 (expression -> expression DIVIDE term .)
    LESS            reduce using rule 10 (expression -> expression DIVIDE term .)
    ISEQUAL         reduce using rule 10 (expression -> expression DIVIDE term .)
    IS_NOT_IDENTICAL reduce using rule 10 (expression -> expression DIVIDE term .)
    IS_IDENTICAL    reduce using rule 10 (expression -> expression DIVIDE term .)
    $end            reduce using rule 10 (expression -> expression DIVIDE term .)
    RPAREN          reduce using rule 10 (expression -> expression DIVIDE term .)
    RBLOCK          reduce using rule 10 (expression -> expression DIVIDE term .)
    ELSE            reduce using rule 10 (expression -> expression DIVIDE term .)
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31

  ! TIMES           [ reduce using rule 10 (expression -> expression DIVIDE term .) ]
  ! DIVIDE          [ reduce using rule 10 (expression -> expression DIVIDE term .) ]


state 40

    (11) expression -> expression MOD term .
    (24) term -> term . TIMES factor
    (25) term -> term . DIVIDE factor

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    PLUS            reduce using rule 11 (expression -> expression MOD term .)
    MOD             reduce using rule 11 (expression -> expression MOD term .)
    GREATER         reduce using rule 11 (expression -> expression MOD term .)
    LESS            reduce using rule 11 (expression -> expression MOD term .)
    ISEQUAL         reduce using rule 11 (expression -> expression MOD term .)
    IS_NOT_IDENTICAL reduce using rule 11 (expression -> expression MOD term .)
    IS_IDENTICAL    reduce using rule 11 (expression -> expression MOD term .)
    $end            reduce using rule 11 (expression -> expression MOD term .)
    RPAREN          reduce using rule 11 (expression -> expression MOD term .)
    RBLOCK          reduce using rule 11 (expression -> expression MOD term .)
    ELSE            reduce using rule 11 (expression -> expression MOD term .)
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31

  ! TIMES           [ reduce using rule 11 (expression -> expression MOD term .) ]
  ! DIVIDE          [ reduce using rule 11 (expression -> expression MOD term .) ]


state 41

    (16) logical_expresion -> expression GREATER term .
    (24) term -> term . TIMES factor
    (25) term -> term . DIVIDE factor

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    PLUS            reduce using rule 16 (logical_expresion -> expression GREATER term .)
    MOD             reduce using rule 16 (logical_expresion -> expression GREATER term .)
    GREATER         reduce using rule 16 (logical_expresion -> expression GREATER term .)
    LESS            reduce using rule 16 (logical_expresion -> expression GREATER term .)
    ISEQUAL         reduce using rule 16 (logical_expresion -> expression GREATER term .)
    IS_NOT_IDENTICAL reduce using rule 16 (logical_expresion -> expression GREATER term .)
    IS_IDENTICAL    reduce using rule 16 (logical_expresion -> expression GREATER term .)
    $end            reduce using rule 16 (logical_expresion -> expression GREATER term .)
    RPAREN          reduce using rule 16 (logical_expresion -> expression GREATER term .)
    RBLOCK          reduce using rule 16 (logical_expresion -> expression GREATER term .)
    ELSE            reduce using rule 16 (logical_expresion -> expression GREATER term .)
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31

  ! TIMES           [ reduce using rule 16 (logical_expresion -> expression GREATER term .) ]
  ! DIVIDE          [ reduce using rule 16 (logical_expresion -> expression GREATER term .) ]


state 42

    (17) logical_expresion -> expression LESS term .
    (24) term -> term . TIMES factor
    (25) term -> term . DIVIDE factor

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    PLUS            reduce using rule 17 (logical_expresion -> expression LESS term .)
    MOD             reduce using rule 17 (logical_expresion -> expression LESS term .)
    GREATER         reduce using rule 17 (logical_expresion -> expression LESS term .)
    LESS            reduce using rule 17 (logical_expresion -> expression LESS term .)
    ISEQUAL         reduce using rule 17 (logical_expresion -> expression LESS term .)
    IS_NOT_IDENTICAL reduce using rule 17 (logical_expresion -> expression LESS term .)
    IS_IDENTICAL    reduce using rule 17 (logical_expresion -> expression LESS term .)
    $end            reduce using rule 17 (logical_expresion -> expression LESS term .)
    RPAREN          reduce using rule 17 (logical_expresion -> expression LESS term .)
    RBLOCK          reduce using rule 17 (logical_expresion -> expression LESS term .)
    ELSE            reduce using rule 17 (logical_expresion -> expression LESS term .)
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31

  ! TIMES           [ reduce using rule 17 (logical_expresion -> expression LESS term .) ]
  ! DIVIDE          [ reduce using rule 17 (logical_expresion -> expression LESS term .) ]


state 43

    (18) logical_expresion -> expression ISEQUAL term .
    (24) term -> term . TIMES factor
    (25) term -> term . DIVIDE factor

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    PLUS            reduce using rule 18 (logical_expresion -> expression ISEQUAL term .)
    MOD             reduce using rule 18 (logical_expresion -> expression ISEQUAL term .)
    GREATER         reduce using rule 18 (logical_expresion -> expression ISEQUAL term .)
    LESS            reduce using rule 18 (logical_expresion -> expression ISEQUAL term .)
    ISEQUAL         reduce using rule 18 (logical_expresion -> expression ISEQUAL term .)
    IS_NOT_IDENTICAL reduce using rule 18 (logical_expresion -> expression ISEQUAL term .)
    IS_IDENTICAL    reduce using rule 18 (logical_expresion -> expression ISEQUAL term .)
    $end            reduce using rule 18 (logical_expresion -> expression ISEQUAL term .)
    RPAREN          reduce using rule 18 (logical_expresion -> expression ISEQUAL term .)
    RBLOCK          reduce using rule 18 (logical_expresion -> expression ISEQUAL term .)
    ELSE            reduce using rule 18 (logical_expresion -> expression ISEQUAL term .)
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31

  ! TIMES           [ reduce using rule 18 (logical_expresion -> expression ISEQUAL term .) ]
  ! DIVIDE          [ reduce using rule 18 (logical_expresion -> expression ISEQUAL term .) ]


state 44

    (19) logical_expresion -> expression IS_NOT_IDENTICAL term .
    (24) term -> term . TIMES factor
    (25) term -> term . DIVIDE factor

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    PLUS            reduce using rule 19 (logical_expresion -> expression IS_NOT_IDENTICAL term .)
    MOD             reduce using rule 19 (logical_expresion -> expression IS_NOT_IDENTICAL term .)
    GREATER         reduce using rule 19 (logical_expresion -> expression IS_NOT_IDENTICAL term .)
    LESS            reduce using rule 19 (logical_expresion -> expression IS_NOT_IDENTICAL term .)
    ISEQUAL         reduce using rule 19 (logical_expresion -> expression IS_NOT_IDENTICAL term .)
    IS_NOT_IDENTICAL reduce using rule 19 (logical_expresion -> expression IS_NOT_IDENTICAL term .)
    IS_IDENTICAL    reduce using rule 19 (logical_expresion -> expression IS_NOT_IDENTICAL term .)
    $end            reduce using rule 19 (logical_expresion -> expression IS_NOT_IDENTICAL term .)
    RPAREN          reduce using rule 19 (logical_expresion -> expression IS_NOT_IDENTICAL term .)
    RBLOCK          reduce using rule 19 (logical_expresion -> expression IS_NOT_IDENTICAL term .)
    ELSE            reduce using rule 19 (logical_expresion -> expression IS_NOT_IDENTICAL term .)
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31

  ! TIMES           [ reduce using rule 19 (logical_expresion -> expression IS_NOT_IDENTICAL term .) ]
  ! DIVIDE          [ reduce using rule 19 (logical_expresion -> expression IS_NOT_IDENTICAL term .) ]


state 45

    (20) logical_expresion -> expression IS_IDENTICAL term .
    (24) term -> term . TIMES factor
    (25) term -> term . DIVIDE factor

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    PLUS            reduce using rule 20 (logical_expresion -> expression IS_IDENTICAL term .)
    MOD             reduce using rule 20 (logical_expresion -> expression IS_IDENTICAL term .)
    GREATER         reduce using rule 20 (logical_expresion -> expression IS_IDENTICAL term .)
    LESS            reduce using rule 20 (logical_expresion -> expression IS_IDENTICAL term .)
    ISEQUAL         reduce using rule 20 (logical_expresion -> expression IS_IDENTICAL term .)
    IS_NOT_IDENTICAL reduce using rule 20 (logical_expresion -> expression IS_IDENTICAL term .)
    IS_IDENTICAL    reduce using rule 20 (logical_expresion -> expression IS_IDENTICAL term .)
    $end            reduce using rule 20 (logical_expresion -> expression IS_IDENTICAL term .)
    RPAREN          reduce using rule 20 (logical_expresion -> expression IS_IDENTICAL term .)
    RBLOCK          reduce using rule 20 (logical_expresion -> expression IS_IDENTICAL term .)
    ELSE            reduce using rule 20 (logical_expresion -> expression IS_IDENTICAL term .)
    TIMES           shift and go to state 30
    DIVIDE          shift and go to state 31

  ! TIMES           [ reduce using rule 20 (logical_expresion -> expression IS_IDENTICAL term .) ]
  ! DIVIDE          [ reduce using rule 20 (logical_expresion -> expression IS_IDENTICAL term .) ]


state 46

    (3) sentencias -> IF LPAREN logical_expresion . RPAREN
    (4) sentencias -> IF LPAREN logical_expresion . RPAREN sentencias ELSE sentencias
    (15) expression -> logical_expresion .

    RPAREN          shift and go to state 56
    GREATER         reduce using rule 15 (expression -> logical_expresion .)
    LESS            reduce using rule 15 (expression -> logical_expresion .)
    ISEQUAL         reduce using rule 15 (expression -> logical_expresion .)
    IS_NOT_IDENTICAL reduce using rule 15 (expression -> logical_expresion .)
    IS_IDENTICAL    reduce using rule 15 (expression -> logical_expresion .)
    PLUS            reduce using rule 15 (expression -> logical_expresion .)
    TIMES           reduce using rule 15 (expression -> logical_expresion .)
    DIVIDE          reduce using rule 15 (expression -> logical_expresion .)
    MOD             reduce using rule 15 (expression -> logical_expresion .)


state 47

    (16) logical_expresion -> expression . GREATER term
    (17) logical_expresion -> expression . LESS term
    (18) logical_expresion -> expression . ISEQUAL term
    (19) logical_expresion -> expression . IS_NOT_IDENTICAL term
    (20) logical_expresion -> expression . IS_IDENTICAL term
    (8) expression -> expression . PLUS term
    (9) expression -> expression . TIMES term
    (10) expression -> expression . DIVIDE term
    (11) expression -> expression . MOD term

    GREATER         shift and go to state 21
    LESS            shift and go to state 22
    ISEQUAL         shift and go to state 23
    IS_NOT_IDENTICAL shift and go to state 24
    IS_IDENTICAL    shift and go to state 25
    PLUS            shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19
    MOD             shift and go to state 20


state 48

    (29) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 29 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 29 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 29 (factor -> LPAREN expression RPAREN .)
    MOD             reduce using rule 29 (factor -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 29 (factor -> LPAREN expression RPAREN .)
    LESS            reduce using rule 29 (factor -> LPAREN expression RPAREN .)
    ISEQUAL         reduce using rule 29 (factor -> LPAREN expression RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 29 (factor -> LPAREN expression RPAREN .)
    IS_IDENTICAL    reduce using rule 29 (factor -> LPAREN expression RPAREN .)
    $end            reduce using rule 29 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 29 (factor -> LPAREN expression RPAREN .)
    RBLOCK          reduce using rule 29 (factor -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 29 (factor -> LPAREN expression RPAREN .)


state 49

    (5) sentencias -> WHILE LPAREN logical_expresion . RPAREN block
    (15) expression -> logical_expresion .

    RPAREN          shift and go to state 57
    GREATER         reduce using rule 15 (expression -> logical_expresion .)
    LESS            reduce using rule 15 (expression -> logical_expresion .)
    ISEQUAL         reduce using rule 15 (expression -> logical_expresion .)
    IS_NOT_IDENTICAL reduce using rule 15 (expression -> logical_expresion .)
    IS_IDENTICAL    reduce using rule 15 (expression -> logical_expresion .)
    PLUS            reduce using rule 15 (expression -> logical_expresion .)
    TIMES           reduce using rule 15 (expression -> logical_expresion .)
    DIVIDE          reduce using rule 15 (expression -> logical_expresion .)
    MOD             reduce using rule 15 (expression -> logical_expresion .)


state 50

    (6) impresion -> ALERT LPAREN expression . RPAREN
    (8) expression -> expression . PLUS term
    (9) expression -> expression . TIMES term
    (10) expression -> expression . DIVIDE term
    (11) expression -> expression . MOD term
    (16) logical_expresion -> expression . GREATER term
    (17) logical_expresion -> expression . LESS term
    (18) logical_expresion -> expression . ISEQUAL term
    (19) logical_expresion -> expression . IS_NOT_IDENTICAL term
    (20) logical_expresion -> expression . IS_IDENTICAL term

    RPAREN          shift and go to state 58
    PLUS            shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19
    MOD             shift and go to state 20
    GREATER         shift and go to state 21
    LESS            shift and go to state 22
    ISEQUAL         shift and go to state 23
    IS_NOT_IDENTICAL shift and go to state 24
    IS_IDENTICAL    shift and go to state 25


state 51

    (7) impresion -> ALERT LPAREN RPAREN .

    $end            reduce using rule 7 (impresion -> ALERT LPAREN RPAREN .)
    RBLOCK          reduce using rule 7 (impresion -> ALERT LPAREN RPAREN .)
    ELSE            reduce using rule 7 (impresion -> ALERT LPAREN RPAREN .)


state 52

    (24) term -> term TIMES factor .

    TIMES           reduce using rule 24 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 24 (term -> term TIMES factor .)
    PLUS            reduce using rule 24 (term -> term TIMES factor .)
    MOD             reduce using rule 24 (term -> term TIMES factor .)
    GREATER         reduce using rule 24 (term -> term TIMES factor .)
    LESS            reduce using rule 24 (term -> term TIMES factor .)
    ISEQUAL         reduce using rule 24 (term -> term TIMES factor .)
    IS_NOT_IDENTICAL reduce using rule 24 (term -> term TIMES factor .)
    IS_IDENTICAL    reduce using rule 24 (term -> term TIMES factor .)
    $end            reduce using rule 24 (term -> term TIMES factor .)
    RPAREN          reduce using rule 24 (term -> term TIMES factor .)
    RBLOCK          reduce using rule 24 (term -> term TIMES factor .)
    ELSE            reduce using rule 24 (term -> term TIMES factor .)


state 53

    (25) term -> term DIVIDE factor .

    TIMES           reduce using rule 25 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 25 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 25 (term -> term DIVIDE factor .)
    MOD             reduce using rule 25 (term -> term DIVIDE factor .)
    GREATER         reduce using rule 25 (term -> term DIVIDE factor .)
    LESS            reduce using rule 25 (term -> term DIVIDE factor .)
    ISEQUAL         reduce using rule 25 (term -> term DIVIDE factor .)
    IS_NOT_IDENTICAL reduce using rule 25 (term -> term DIVIDE factor .)
    IS_IDENTICAL    reduce using rule 25 (term -> term DIVIDE factor .)
    $end            reduce using rule 25 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 25 (term -> term DIVIDE factor .)
    RBLOCK          reduce using rule 25 (term -> term DIVIDE factor .)
    ELSE            reduce using rule 25 (term -> term DIVIDE factor .)


state 54

    (14) expression -> ID EQUAL NEW . MAP LPAREN RPAREN

    MAP             shift and go to state 59


state 55

    (22) block -> LBLOCK sentencias RBLOCK .

    PLUS            reduce using rule 22 (block -> LBLOCK sentencias RBLOCK .)
    TIMES           reduce using rule 22 (block -> LBLOCK sentencias RBLOCK .)
    DIVIDE          reduce using rule 22 (block -> LBLOCK sentencias RBLOCK .)
    MOD             reduce using rule 22 (block -> LBLOCK sentencias RBLOCK .)
    GREATER         reduce using rule 22 (block -> LBLOCK sentencias RBLOCK .)
    LESS            reduce using rule 22 (block -> LBLOCK sentencias RBLOCK .)
    ISEQUAL         reduce using rule 22 (block -> LBLOCK sentencias RBLOCK .)
    IS_NOT_IDENTICAL reduce using rule 22 (block -> LBLOCK sentencias RBLOCK .)
    IS_IDENTICAL    reduce using rule 22 (block -> LBLOCK sentencias RBLOCK .)
    $end            reduce using rule 22 (block -> LBLOCK sentencias RBLOCK .)
    RPAREN          reduce using rule 22 (block -> LBLOCK sentencias RBLOCK .)
    RBLOCK          reduce using rule 22 (block -> LBLOCK sentencias RBLOCK .)
    ELSE            reduce using rule 22 (block -> LBLOCK sentencias RBLOCK .)


state 56

    (3) sentencias -> IF LPAREN logical_expresion RPAREN .
    (4) sentencias -> IF LPAREN logical_expresion RPAREN . sentencias ELSE sentencias
    (1) sentencias -> . impresion
    (2) sentencias -> . expression
    (3) sentencias -> . IF LPAREN logical_expresion RPAREN
    (4) sentencias -> . IF LPAREN logical_expresion RPAREN sentencias ELSE sentencias
    (5) sentencias -> . WHILE LPAREN logical_expresion RPAREN block
    (6) impresion -> . ALERT LPAREN expression RPAREN
    (7) impresion -> . ALERT LPAREN RPAREN
    (8) expression -> . expression PLUS term
    (9) expression -> . expression TIMES term
    (10) expression -> . expression DIVIDE term
    (11) expression -> . expression MOD term
    (12) expression -> . VAR ID
    (13) expression -> . CONST ID
    (14) expression -> . ID EQUAL NEW MAP LPAREN RPAREN
    (15) expression -> . logical_expresion
    (21) expression -> . block
    (23) expression -> . term
    (16) logical_expresion -> . expression GREATER term
    (17) logical_expresion -> . expression LESS term
    (18) logical_expresion -> . expression ISEQUAL term
    (19) logical_expresion -> . expression IS_NOT_IDENTICAL term
    (20) logical_expresion -> . expression IS_IDENTICAL term
    (22) block -> . LBLOCK sentencias RBLOCK
    (24) term -> . term TIMES factor
    (25) term -> . term DIVIDE factor
    (26) term -> . factor
    (27) factor -> . NUMBER
    (28) factor -> . ID
    (29) factor -> . LPAREN expression RPAREN

    $end            reduce using rule 3 (sentencias -> IF LPAREN logical_expresion RPAREN .)
    RBLOCK          reduce using rule 3 (sentencias -> IF LPAREN logical_expresion RPAREN .)
    ELSE            reduce using rule 3 (sentencias -> IF LPAREN logical_expresion RPAREN .)
    IF              shift and go to state 4
    WHILE           shift and go to state 7
    ALERT           shift and go to state 9
    VAR             shift and go to state 11
    CONST           shift and go to state 13
    ID              shift and go to state 12
    LBLOCK          shift and go to state 14
    NUMBER          shift and go to state 16
    LPAREN          shift and go to state 5

    logical_expresion              shift and go to state 6
    sentencias                     shift and go to state 60
    impresion                      shift and go to state 2
    expression                     shift and go to state 3
    block                          shift and go to state 8
    term                           shift and go to state 10
    factor                         shift and go to state 15

state 57

    (5) sentencias -> WHILE LPAREN logical_expresion RPAREN . block
    (22) block -> . LBLOCK sentencias RBLOCK

    LBLOCK          shift and go to state 14

    block                          shift and go to state 61

state 58

    (6) impresion -> ALERT LPAREN expression RPAREN .

    $end            reduce using rule 6 (impresion -> ALERT LPAREN expression RPAREN .)
    RBLOCK          reduce using rule 6 (impresion -> ALERT LPAREN expression RPAREN .)
    ELSE            reduce using rule 6 (impresion -> ALERT LPAREN expression RPAREN .)


state 59

    (14) expression -> ID EQUAL NEW MAP . LPAREN RPAREN

    LPAREN          shift and go to state 62


state 60

    (4) sentencias -> IF LPAREN logical_expresion RPAREN sentencias . ELSE sentencias

    ELSE            shift and go to state 63


state 61

    (5) sentencias -> WHILE LPAREN logical_expresion RPAREN block .

    $end            reduce using rule 5 (sentencias -> WHILE LPAREN logical_expresion RPAREN block .)
    RBLOCK          reduce using rule 5 (sentencias -> WHILE LPAREN logical_expresion RPAREN block .)
    ELSE            reduce using rule 5 (sentencias -> WHILE LPAREN logical_expresion RPAREN block .)


state 62

    (14) expression -> ID EQUAL NEW MAP LPAREN . RPAREN

    RPAREN          shift and go to state 64


state 63

    (4) sentencias -> IF LPAREN logical_expresion RPAREN sentencias ELSE . sentencias
    (1) sentencias -> . impresion
    (2) sentencias -> . expression
    (3) sentencias -> . IF LPAREN logical_expresion RPAREN
    (4) sentencias -> . IF LPAREN logical_expresion RPAREN sentencias ELSE sentencias
    (5) sentencias -> . WHILE LPAREN logical_expresion RPAREN block
    (6) impresion -> . ALERT LPAREN expression RPAREN
    (7) impresion -> . ALERT LPAREN RPAREN
    (8) expression -> . expression PLUS term
    (9) expression -> . expression TIMES term
    (10) expression -> . expression DIVIDE term
    (11) expression -> . expression MOD term
    (12) expression -> . VAR ID
    (13) expression -> . CONST ID
    (14) expression -> . ID EQUAL NEW MAP LPAREN RPAREN
    (15) expression -> . logical_expresion
    (21) expression -> . block
    (23) expression -> . term
    (16) logical_expresion -> . expression GREATER term
    (17) logical_expresion -> . expression LESS term
    (18) logical_expresion -> . expression ISEQUAL term
    (19) logical_expresion -> . expression IS_NOT_IDENTICAL term
    (20) logical_expresion -> . expression IS_IDENTICAL term
    (22) block -> . LBLOCK sentencias RBLOCK
    (24) term -> . term TIMES factor
    (25) term -> . term DIVIDE factor
    (26) term -> . factor
    (27) factor -> . NUMBER
    (28) factor -> . ID
    (29) factor -> . LPAREN expression RPAREN

    IF              shift and go to state 4
    WHILE           shift and go to state 7
    ALERT           shift and go to state 9
    VAR             shift and go to state 11
    CONST           shift and go to state 13
    ID              shift and go to state 12
    LBLOCK          shift and go to state 14
    NUMBER          shift and go to state 16
    LPAREN          shift and go to state 5

    logical_expresion              shift and go to state 6
    sentencias                     shift and go to state 65
    impresion                      shift and go to state 2
    expression                     shift and go to state 3
    block                          shift and go to state 8
    term                           shift and go to state 10
    factor                         shift and go to state 15

state 64

    (14) expression -> ID EQUAL NEW MAP LPAREN RPAREN .

    PLUS            reduce using rule 14 (expression -> ID EQUAL NEW MAP LPAREN RPAREN .)
    TIMES           reduce using rule 14 (expression -> ID EQUAL NEW MAP LPAREN RPAREN .)
    DIVIDE          reduce using rule 14 (expression -> ID EQUAL NEW MAP LPAREN RPAREN .)
    MOD             reduce using rule 14 (expression -> ID EQUAL NEW MAP LPAREN RPAREN .)
    GREATER         reduce using rule 14 (expression -> ID EQUAL NEW MAP LPAREN RPAREN .)
    LESS            reduce using rule 14 (expression -> ID EQUAL NEW MAP LPAREN RPAREN .)
    ISEQUAL         reduce using rule 14 (expression -> ID EQUAL NEW MAP LPAREN RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 14 (expression -> ID EQUAL NEW MAP LPAREN RPAREN .)
    IS_IDENTICAL    reduce using rule 14 (expression -> ID EQUAL NEW MAP LPAREN RPAREN .)
    $end            reduce using rule 14 (expression -> ID EQUAL NEW MAP LPAREN RPAREN .)
    RPAREN          reduce using rule 14 (expression -> ID EQUAL NEW MAP LPAREN RPAREN .)
    RBLOCK          reduce using rule 14 (expression -> ID EQUAL NEW MAP LPAREN RPAREN .)
    ELSE            reduce using rule 14 (expression -> ID EQUAL NEW MAP LPAREN RPAREN .)


state 65

    (4) sentencias -> IF LPAREN logical_expresion RPAREN sentencias ELSE sentencias .

    $end            reduce using rule 4 (sentencias -> IF LPAREN logical_expresion RPAREN sentencias ELSE sentencias .)
    RBLOCK          reduce using rule 4 (sentencias -> IF LPAREN logical_expresion RPAREN sentencias ELSE sentencias .)
    ELSE            reduce using rule 4 (sentencias -> IF LPAREN logical_expresion RPAREN sentencias ELSE sentencias .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for TIMES in state 10 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 10 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 36 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 36 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 38 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 38 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 39 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 39 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 40 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 40 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 41 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 41 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 42 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 42 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 43 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 43 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 44 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 44 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 45 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 45 resolved as shift
