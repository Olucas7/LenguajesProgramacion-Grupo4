Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BREAK
    CASE
    CATCH
    CLASS
    CONTINUE
    DEBUGGER
    DEFAULT
    DIVIDE
    DIV_EQUAL
    DO
    EXPORT
    EXTENDS
    FINALLY
    FOR
    IMPORT
    IN
    INSTANCEOF
    MINUS_EQUAL
    MOD
    MOD_EQUAL
    MUL_EQUAL
    PLUS_EQUAL
    PRINT
    SWITCH
    THIS
    THROW
    TRY
    TWOPOINTS
    TYPEOF
    WITH
    YIELD

Grammar

Rule 0     S' -> sentencia
Rule 1     sentencia -> callMethods
Rule 2     sentencia -> varType ID EQUAL callMethods
Rule 3     sentencia -> callFunction
Rule 4     sentencia -> javaScript_param
Rule 5     sentencia -> varDeclaration
Rule 6     sentencia -> controlExpression
Rule 7     sentencia -> impresion
Rule 8     sentencia -> declareteFunction
Rule 9     sentencia -> assingOperadores
Rule 10    expression -> ID opConditional ID
Rule 11    expression -> ID opConditional NUM
Rule 12    expression -> NUM opConditional NUM
Rule 13    expression -> inicializarOp
Rule 14    assingOperadores -> varType ID EQUAL inicializarOp
Rule 15    controlExpression -> sentencias_if
Rule 16    controlExpression -> sentencias_if_else
Rule 17    controlExpression -> sentencias_while
Rule 18    controlExpression -> impresion
Rule 19    controlExpression -> impresion_vacio
Rule 20    opConditional -> ISEQUAL
Rule 21    opConditional -> IS_NOT_IDENTICAL
Rule 22    opConditional -> IS_IDENTICAL
Rule 23    opConditional -> GREATER
Rule 24    opConditional -> GREATEREQUAL
Rule 25    opConditional -> LESS
Rule 26    opConditional -> LESSEQUAL
Rule 27    operadorLogical -> AND
Rule 28    operadorLogical -> OR
Rule 29    operadorLogical -> NOT
Rule 30    sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
Rule 31    sentencias_if -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK
Rule 32    sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
Rule 33    sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
Rule 34    sentencias_while -> WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK
Rule 35    sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
Rule 36    impresion -> ALERT LPAREN expression RPAREN
Rule 37    impresion_vacio -> ALERT LPAREN RPAREN
Rule 38    javaScript_param -> STRING
Rule 39    javaScript_param -> NUM
Rule 40    javaScript_param -> boolean
Rule 41    javaScript_param -> ID
Rule 42    empty -> <empty>
Rule 43    boolean -> TRUE
Rule 44    boolean -> FALSE
Rule 45    varType -> LET
Rule 46    varType -> CONST
Rule 47    varType -> VAR
Rule 48    varType -> empty
Rule 49    varDeclaration -> varType ID EQUAL arrayDeclare COLON
Rule 50    varDeclaration -> varType ID EQUAL declareMap COLON
Rule 51    varDeclaration -> varType ID EQUAL declararSet COLON
Rule 52    varDeclaration -> varType ID COLON
Rule 53    callMethods -> ID methodArray COLON
Rule 54    callMethods -> ID methodSet COLON
Rule 55    callMethods -> ID methodMap COLON
Rule 56    arrayDeclare -> LBRACKET arrayValues RBRACKET
Rule 57    arrayDeclare -> NEW ARRAY LPAREN arrayValues RPAREN
Rule 58    arrayValues -> arrayValue
Rule 59    arrayValues -> arrayValue COMMA arrayValue
Rule 60    arrayValue -> LPAREN expression RPAREN
Rule 61    arrayValue -> ID
Rule 62    arrayValue -> NUM
Rule 63    arrayValue -> STRING
Rule 64    arrayValue -> boolean
Rule 65    arrayValue -> empty
Rule 66    methodArray -> PERIOD PUSH LPAREN arrayValue RPAREN
Rule 67    methodArray -> PERIOD UNSHIFT LPAREN arrayValue RPAREN
Rule 68    methodArray -> PERIOD POP LPAREN empty RPAREN
Rule 69    declareMap -> NEW MAP LPAREN iterable RPAREN
Rule 70    iterable -> arrayDeclare
Rule 71    iterable -> declararSet
Rule 72    iterable -> empty
Rule 73    methodMap -> PERIOD CLEAR LPAREN RPAREN
Rule 74    methodMap -> PERIOD LENGTH LPAREN RPAREN
Rule 75    declareteFunction -> FUNCTION ID LPAREN params RPAREN
Rule 76    declareteFunction -> FUNCTION ID LPAREN params RPAREN sentencesCmpt
Rule 77    declareteFunction -> varType ID EQUAL FUNCTION LPAREN params RPAREN
Rule 78    sentencesCmpt -> LBLOCK sentencia RBLOCK
Rule 79    sentencesCmpt -> LBLOCK sentencia RETURN RBLOCK
Rule 80    callFunction -> ID LPAREN params RPAREN
Rule 81    params -> paramList
Rule 82    params -> empty
Rule 83    param -> ID
Rule 84    param -> ID LBRACKET RBRACKET
Rule 85    paramList -> param
Rule 86    paramList -> param COMMA paramList
Rule 87    args -> argslist
Rule 88    args -> empty
Rule 89    args -> javaScript_param
Rule 90    argslist -> args
Rule 91    argslist -> args COMMA argslist
Rule 92    declararSet -> NEW SET LPAREN setValues RPAREN
Rule 93    contiene -> ID PERIOD HAS LPAREN params RPAREN
Rule 94    setValues -> setValue
Rule 95    setValues -> setValue COMMA setValue
Rule 96    setValue -> ID
Rule 97    setValue -> NUM
Rule 98    setValue -> STRING
Rule 99    setValue -> boolean
Rule 100   setValue -> empty
Rule 101   methodSet -> PERIOD ADD LPAREN setValue RPAREN
Rule 102   methodSet -> PERIOD DELETE LPAREN setValue RPAREN
Rule 103   methodSet -> PERIOD CLEAR LPAREN empty RPAREN
Rule 104   inicializarOp -> PLUS operacionesMath
Rule 105   inicializarOp -> MINUS operacionesMath
Rule 106   inicializarOp -> empty operacionesMath
Rule 107   operacionesMath -> numOperadores PLUS suma
Rule 108   operacionesMath -> suma
Rule 109   operacionesMath -> suma operacionesMath
Rule 110   operacionesMath -> restas
Rule 111   operacionesMath -> numOperadores MINUS restas
Rule 112   operacionesMath -> restas operacionesMath
Rule 113   operacionesMath -> multiplicacion
Rule 114   operacionesMath -> numOperadores TIMES multiplicacion
Rule 115   operacionesMath -> multiplicacion operacionesMath
Rule 116   suma -> numOperadores PLUS LPAREN numOperadores RPAREN
Rule 117   suma -> numOperadores PLUS NUM
Rule 118   suma -> numOperadores
Rule 119   restas -> numOperadores MINUS LPAREN numOperadores RPAREN
Rule 120   restas -> numOperadores MINUS NUM
Rule 121   restas -> numOperadores
Rule 122   multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN
Rule 123   multiplicacion -> numOperadores TIMES NUM
Rule 124   multiplicacion -> numOperadores
Rule 125   numOperadores -> enteros
Rule 126   numOperadores -> decimales
Rule 127   enteros -> NUM
Rule 128   enteros -> numNegative
Rule 129   numNegative -> MINUS NUM
Rule 130   numNegative -> <empty>
Rule 131   decimales -> enteros PERIOD NUM

Terminals, with rules where they appear

ADD                  : 101
ALERT                : 36 37
AND                  : 27
ARRAY                : 57
BREAK                : 
CASE                 : 
CATCH                : 
CLASS                : 
CLEAR                : 73 103
COLON                : 49 50 51 52 53 54 55
COMMA                : 59 86 91 95
CONST                : 46
CONTINUE             : 
DEBUGGER             : 
DEFAULT              : 
DELETE               : 102
DIVIDE               : 
DIV_EQUAL            : 
DO                   : 
ELSE                 : 32 33
EQUAL                : 2 14 49 50 51 77
EXPORT               : 
EXTENDS              : 
FALSE                : 44
FINALLY              : 
FOR                  : 
FUNCTION             : 75 76 77
GREATER              : 23
GREATEREQUAL         : 24
HAS                  : 93
ID                   : 2 10 10 11 14 41 49 50 51 52 53 54 55 61 75 76 77 80 83 84 93 96
IF                   : 30 31 32 33
IMPORT               : 
IN                   : 
INSTANCEOF           : 
ISEQUAL              : 20
IS_IDENTICAL         : 22
IS_NOT_IDENTICAL     : 21
LBLOCK               : 30 31 32 32 33 33 34 35 78 79
LBRACKET             : 56 84
LENGTH               : 74
LESS                 : 25
LESSEQUAL            : 26
LET                  : 45
LPAREN               : 30 31 32 33 34 35 36 37 57 60 66 67 68 69 73 74 75 76 77 80 92 93 101 102 103 116 119 122
MAP                  : 69
MINUS                : 105 111 119 120 129
MINUS_EQUAL          : 
MOD                  : 
MOD_EQUAL            : 
MUL_EQUAL            : 
NEW                  : 57 69 92
NOT                  : 29
NUM                  : 11 12 12 39 62 97 117 120 123 127 129 131
OR                   : 28
PERIOD               : 66 67 68 73 74 93 101 102 103 131
PLUS                 : 104 107 116 117
PLUS_EQUAL           : 
POP                  : 68
PRINT                : 
PUSH                 : 66
RBLOCK               : 30 31 32 32 33 33 34 35 78 79
RBRACKET             : 56 84
RETURN               : 79
RPAREN               : 30 31 32 33 34 35 36 37 57 60 66 67 68 69 73 74 75 76 77 80 92 93 101 102 103 116 119 122
SET                  : 92
STRING               : 38 63 98
SWITCH               : 
THIS                 : 
THROW                : 
TIMES                : 114 122 123
TRUE                 : 43
TRY                  : 
TWOPOINTS            : 
TYPEOF               : 
UNSHIFT              : 67
VAR                  : 47
WHILE                : 34 35
WITH                 : 
YIELD                : 
error                : 

Nonterminals, with rules where they appear

args                 : 90 91
argslist             : 87 91
arrayDeclare         : 49 70
arrayValue           : 58 59 59 66 67
arrayValues          : 56 57
assingOperadores     : 9
boolean              : 40 64 99
callFunction         : 3
callMethods          : 1 2
contiene             : 
controlExpression    : 6
decimales            : 126
declararSet          : 51 71
declareMap           : 50
declareteFunction    : 8
empty                : 48 65 68 72 82 88 100 103 106
enteros              : 125 131
expression           : 30 30 31 32 32 33 34 35 35 36 60
impresion            : 7 18
impresion_vacio      : 19
inicializarOp        : 13 14
iterable             : 69
javaScript_param     : 4 89
methodArray          : 53
methodMap            : 55
methodSet            : 54
multiplicacion       : 113 114 115
numNegative          : 128
numOperadores        : 107 111 114 116 116 117 118 119 119 120 121 122 122 123 124
opConditional        : 10 11 12
operacionesMath      : 104 105 106 109 112 115
operadorLogical      : 30 32 35
param                : 85 86
paramList            : 81 86
params               : 75 76 77 80 93
restas               : 110 111 112
sentencesCmpt        : 76
sentencia            : 30 31 32 32 33 33 34 35 78 79 0
sentencias_if        : 15
sentencias_if_else   : 16
sentencias_while     : 17
setValue             : 94 95 95 101 102
setValues            : 92
suma                 : 107 108 109
varDeclaration       : 5
varType              : 2 14 49 50 51 52 77

Parsing method: LALR

state 0

    (0) S' -> . sentencia
    (1) sentencia -> . callMethods
    (2) sentencia -> . varType ID EQUAL callMethods
    (3) sentencia -> . callFunction
    (4) sentencia -> . javaScript_param
    (5) sentencia -> . varDeclaration
    (6) sentencia -> . controlExpression
    (7) sentencia -> . impresion
    (8) sentencia -> . declareteFunction
    (9) sentencia -> . assingOperadores
    (53) callMethods -> . ID methodArray COLON
    (54) callMethods -> . ID methodSet COLON
    (55) callMethods -> . ID methodMap COLON
    (45) varType -> . LET
    (46) varType -> . CONST
    (47) varType -> . VAR
    (48) varType -> . empty
    (80) callFunction -> . ID LPAREN params RPAREN
    (38) javaScript_param -> . STRING
    (39) javaScript_param -> . NUM
    (40) javaScript_param -> . boolean
    (41) javaScript_param -> . ID
    (49) varDeclaration -> . varType ID EQUAL arrayDeclare COLON
    (50) varDeclaration -> . varType ID EQUAL declareMap COLON
    (51) varDeclaration -> . varType ID EQUAL declararSet COLON
    (52) varDeclaration -> . varType ID COLON
    (15) controlExpression -> . sentencias_if
    (16) controlExpression -> . sentencias_if_else
    (17) controlExpression -> . sentencias_while
    (18) controlExpression -> . impresion
    (19) controlExpression -> . impresion_vacio
    (36) impresion -> . ALERT LPAREN expression RPAREN
    (75) declareteFunction -> . FUNCTION ID LPAREN params RPAREN
    (76) declareteFunction -> . FUNCTION ID LPAREN params RPAREN sentencesCmpt
    (77) declareteFunction -> . varType ID EQUAL FUNCTION LPAREN params RPAREN
    (14) assingOperadores -> . varType ID EQUAL inicializarOp
    (42) empty -> .
    (43) boolean -> . TRUE
    (44) boolean -> . FALSE
    (30) sentencias_if -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (31) sentencias_if -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (32) sentencias_if_else -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (33) sentencias_if_else -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (34) sentencias_while -> . WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (35) sentencias_while -> . WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (37) impresion_vacio -> . ALERT LPAREN RPAREN

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 4
    LET             shift and go to state 12
    CONST           shift and go to state 13
    VAR             shift and go to state 14
    STRING          shift and go to state 16
    NUM             shift and go to state 17
    ALERT           shift and go to state 23
    FUNCTION        shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28

  ! ID              [ reduce using rule 42 (empty -> .) ]

    sentencia                      shift and go to state 1
    callMethods                    shift and go to state 2
    varType                        shift and go to state 3
    callFunction                   shift and go to state 5
    javaScript_param               shift and go to state 6
    varDeclaration                 shift and go to state 7
    controlExpression              shift and go to state 8
    impresion                      shift and go to state 9
    declareteFunction              shift and go to state 10
    assingOperadores               shift and go to state 11
    empty                          shift and go to state 15
    boolean                        shift and go to state 18
    sentencias_if                  shift and go to state 19
    sentencias_if_else             shift and go to state 20
    sentencias_while               shift and go to state 21
    impresion_vacio                shift and go to state 22

state 1

    (0) S' -> sentencia .



state 2

    (1) sentencia -> callMethods .

    $end            reduce using rule 1 (sentencia -> callMethods .)
    RBLOCK          reduce using rule 1 (sentencia -> callMethods .)
    RETURN          reduce using rule 1 (sentencia -> callMethods .)


state 3

    (2) sentencia -> varType . ID EQUAL callMethods
    (49) varDeclaration -> varType . ID EQUAL arrayDeclare COLON
    (50) varDeclaration -> varType . ID EQUAL declareMap COLON
    (51) varDeclaration -> varType . ID EQUAL declararSet COLON
    (52) varDeclaration -> varType . ID COLON
    (77) declareteFunction -> varType . ID EQUAL FUNCTION LPAREN params RPAREN
    (14) assingOperadores -> varType . ID EQUAL inicializarOp

    ID              shift and go to state 29


state 4

    (53) callMethods -> ID . methodArray COLON
    (54) callMethods -> ID . methodSet COLON
    (55) callMethods -> ID . methodMap COLON
    (80) callFunction -> ID . LPAREN params RPAREN
    (41) javaScript_param -> ID .
    (66) methodArray -> . PERIOD PUSH LPAREN arrayValue RPAREN
    (67) methodArray -> . PERIOD UNSHIFT LPAREN arrayValue RPAREN
    (68) methodArray -> . PERIOD POP LPAREN empty RPAREN
    (101) methodSet -> . PERIOD ADD LPAREN setValue RPAREN
    (102) methodSet -> . PERIOD DELETE LPAREN setValue RPAREN
    (103) methodSet -> . PERIOD CLEAR LPAREN empty RPAREN
    (73) methodMap -> . PERIOD CLEAR LPAREN RPAREN
    (74) methodMap -> . PERIOD LENGTH LPAREN RPAREN

    LPAREN          shift and go to state 33
    $end            reduce using rule 41 (javaScript_param -> ID .)
    RBLOCK          reduce using rule 41 (javaScript_param -> ID .)
    RETURN          reduce using rule 41 (javaScript_param -> ID .)
    PERIOD          shift and go to state 34

    methodArray                    shift and go to state 30
    methodSet                      shift and go to state 31
    methodMap                      shift and go to state 32

state 5

    (3) sentencia -> callFunction .

    $end            reduce using rule 3 (sentencia -> callFunction .)
    RBLOCK          reduce using rule 3 (sentencia -> callFunction .)
    RETURN          reduce using rule 3 (sentencia -> callFunction .)


state 6

    (4) sentencia -> javaScript_param .

    $end            reduce using rule 4 (sentencia -> javaScript_param .)
    RBLOCK          reduce using rule 4 (sentencia -> javaScript_param .)
    RETURN          reduce using rule 4 (sentencia -> javaScript_param .)


state 7

    (5) sentencia -> varDeclaration .

    $end            reduce using rule 5 (sentencia -> varDeclaration .)
    RBLOCK          reduce using rule 5 (sentencia -> varDeclaration .)
    RETURN          reduce using rule 5 (sentencia -> varDeclaration .)


state 8

    (6) sentencia -> controlExpression .

    $end            reduce using rule 6 (sentencia -> controlExpression .)
    RBLOCK          reduce using rule 6 (sentencia -> controlExpression .)
    RETURN          reduce using rule 6 (sentencia -> controlExpression .)


state 9

    (7) sentencia -> impresion .
    (18) controlExpression -> impresion .

  ! reduce/reduce conflict for $end resolved using rule 7 (sentencia -> impresion .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 7 (sentencia -> impresion .)
  ! reduce/reduce conflict for RETURN resolved using rule 7 (sentencia -> impresion .)
    $end            reduce using rule 7 (sentencia -> impresion .)
    RBLOCK          reduce using rule 7 (sentencia -> impresion .)
    RETURN          reduce using rule 7 (sentencia -> impresion .)

  ! $end            [ reduce using rule 18 (controlExpression -> impresion .) ]
  ! RBLOCK          [ reduce using rule 18 (controlExpression -> impresion .) ]
  ! RETURN          [ reduce using rule 18 (controlExpression -> impresion .) ]


state 10

    (8) sentencia -> declareteFunction .

    $end            reduce using rule 8 (sentencia -> declareteFunction .)
    RBLOCK          reduce using rule 8 (sentencia -> declareteFunction .)
    RETURN          reduce using rule 8 (sentencia -> declareteFunction .)


state 11

    (9) sentencia -> assingOperadores .

    $end            reduce using rule 9 (sentencia -> assingOperadores .)
    RBLOCK          reduce using rule 9 (sentencia -> assingOperadores .)
    RETURN          reduce using rule 9 (sentencia -> assingOperadores .)


state 12

    (45) varType -> LET .

    ID              reduce using rule 45 (varType -> LET .)


state 13

    (46) varType -> CONST .

    ID              reduce using rule 46 (varType -> CONST .)


state 14

    (47) varType -> VAR .

    ID              reduce using rule 47 (varType -> VAR .)


state 15

    (48) varType -> empty .

    ID              reduce using rule 48 (varType -> empty .)


state 16

    (38) javaScript_param -> STRING .

    $end            reduce using rule 38 (javaScript_param -> STRING .)
    RBLOCK          reduce using rule 38 (javaScript_param -> STRING .)
    RETURN          reduce using rule 38 (javaScript_param -> STRING .)


state 17

    (39) javaScript_param -> NUM .

    $end            reduce using rule 39 (javaScript_param -> NUM .)
    RBLOCK          reduce using rule 39 (javaScript_param -> NUM .)
    RETURN          reduce using rule 39 (javaScript_param -> NUM .)


state 18

    (40) javaScript_param -> boolean .

    $end            reduce using rule 40 (javaScript_param -> boolean .)
    RBLOCK          reduce using rule 40 (javaScript_param -> boolean .)
    RETURN          reduce using rule 40 (javaScript_param -> boolean .)


state 19

    (15) controlExpression -> sentencias_if .

    $end            reduce using rule 15 (controlExpression -> sentencias_if .)
    RBLOCK          reduce using rule 15 (controlExpression -> sentencias_if .)
    RETURN          reduce using rule 15 (controlExpression -> sentencias_if .)


state 20

    (16) controlExpression -> sentencias_if_else .

    $end            reduce using rule 16 (controlExpression -> sentencias_if_else .)
    RBLOCK          reduce using rule 16 (controlExpression -> sentencias_if_else .)
    RETURN          reduce using rule 16 (controlExpression -> sentencias_if_else .)


state 21

    (17) controlExpression -> sentencias_while .

    $end            reduce using rule 17 (controlExpression -> sentencias_while .)
    RBLOCK          reduce using rule 17 (controlExpression -> sentencias_while .)
    RETURN          reduce using rule 17 (controlExpression -> sentencias_while .)


state 22

    (19) controlExpression -> impresion_vacio .

    $end            reduce using rule 19 (controlExpression -> impresion_vacio .)
    RBLOCK          reduce using rule 19 (controlExpression -> impresion_vacio .)
    RETURN          reduce using rule 19 (controlExpression -> impresion_vacio .)


state 23

    (36) impresion -> ALERT . LPAREN expression RPAREN
    (37) impresion_vacio -> ALERT . LPAREN RPAREN

    LPAREN          shift and go to state 35


state 24

    (75) declareteFunction -> FUNCTION . ID LPAREN params RPAREN
    (76) declareteFunction -> FUNCTION . ID LPAREN params RPAREN sentencesCmpt

    ID              shift and go to state 36


state 25

    (43) boolean -> TRUE .

    $end            reduce using rule 43 (boolean -> TRUE .)
    COMMA           reduce using rule 43 (boolean -> TRUE .)
    RBRACKET        reduce using rule 43 (boolean -> TRUE .)
    RPAREN          reduce using rule 43 (boolean -> TRUE .)
    RBLOCK          reduce using rule 43 (boolean -> TRUE .)
    RETURN          reduce using rule 43 (boolean -> TRUE .)


state 26

    (44) boolean -> FALSE .

    $end            reduce using rule 44 (boolean -> FALSE .)
    COMMA           reduce using rule 44 (boolean -> FALSE .)
    RBRACKET        reduce using rule 44 (boolean -> FALSE .)
    RPAREN          reduce using rule 44 (boolean -> FALSE .)
    RBLOCK          reduce using rule 44 (boolean -> FALSE .)
    RETURN          reduce using rule 44 (boolean -> FALSE .)


state 27

    (30) sentencias_if -> IF . LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (31) sentencias_if -> IF . LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (32) sentencias_if_else -> IF . LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (33) sentencias_if_else -> IF . LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK

    LPAREN          shift and go to state 37


state 28

    (34) sentencias_while -> WHILE . LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (35) sentencias_while -> WHILE . LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK

    LPAREN          shift and go to state 38


state 29

    (2) sentencia -> varType ID . EQUAL callMethods
    (49) varDeclaration -> varType ID . EQUAL arrayDeclare COLON
    (50) varDeclaration -> varType ID . EQUAL declareMap COLON
    (51) varDeclaration -> varType ID . EQUAL declararSet COLON
    (52) varDeclaration -> varType ID . COLON
    (77) declareteFunction -> varType ID . EQUAL FUNCTION LPAREN params RPAREN
    (14) assingOperadores -> varType ID . EQUAL inicializarOp

    EQUAL           shift and go to state 39
    COLON           shift and go to state 40


state 30

    (53) callMethods -> ID methodArray . COLON

    COLON           shift and go to state 41


state 31

    (54) callMethods -> ID methodSet . COLON

    COLON           shift and go to state 42


state 32

    (55) callMethods -> ID methodMap . COLON

    COLON           shift and go to state 43


state 33

    (80) callFunction -> ID LPAREN . params RPAREN
    (81) params -> . paramList
    (82) params -> . empty
    (85) paramList -> . param
    (86) paramList -> . param COMMA paramList
    (42) empty -> .
    (83) param -> . ID
    (84) param -> . ID LBRACKET RBRACKET

    RPAREN          reduce using rule 42 (empty -> .)
    ID              shift and go to state 44

    params                         shift and go to state 45
    paramList                      shift and go to state 46
    empty                          shift and go to state 47
    param                          shift and go to state 48

state 34

    (66) methodArray -> PERIOD . PUSH LPAREN arrayValue RPAREN
    (67) methodArray -> PERIOD . UNSHIFT LPAREN arrayValue RPAREN
    (68) methodArray -> PERIOD . POP LPAREN empty RPAREN
    (101) methodSet -> PERIOD . ADD LPAREN setValue RPAREN
    (102) methodSet -> PERIOD . DELETE LPAREN setValue RPAREN
    (103) methodSet -> PERIOD . CLEAR LPAREN empty RPAREN
    (73) methodMap -> PERIOD . CLEAR LPAREN RPAREN
    (74) methodMap -> PERIOD . LENGTH LPAREN RPAREN

    PUSH            shift and go to state 49
    UNSHIFT         shift and go to state 50
    POP             shift and go to state 51
    ADD             shift and go to state 52
    DELETE          shift and go to state 53
    CLEAR           shift and go to state 54
    LENGTH          shift and go to state 55


state 35

    (36) impresion -> ALERT LPAREN . expression RPAREN
    (37) impresion_vacio -> ALERT LPAREN . RPAREN
    (10) expression -> . ID opConditional ID
    (11) expression -> . ID opConditional NUM
    (12) expression -> . NUM opConditional NUM
    (13) expression -> . inicializarOp
    (104) inicializarOp -> . PLUS operacionesMath
    (105) inicializarOp -> . MINUS operacionesMath
    (106) inicializarOp -> . empty operacionesMath
    (42) empty -> .

  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 57
    ID              shift and go to state 58
    NUM             shift and go to state 59
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    TIMES           reduce using rule 42 (empty -> .)
    PERIOD          reduce using rule 42 (empty -> .)

  ! NUM             [ reduce using rule 42 (empty -> .) ]
  ! MINUS           [ reduce using rule 42 (empty -> .) ]
  ! PLUS            [ reduce using rule 42 (empty -> .) ]
  ! RPAREN          [ reduce using rule 42 (empty -> .) ]

    expression                     shift and go to state 56
    inicializarOp                  shift and go to state 60
    empty                          shift and go to state 63

state 36

    (75) declareteFunction -> FUNCTION ID . LPAREN params RPAREN
    (76) declareteFunction -> FUNCTION ID . LPAREN params RPAREN sentencesCmpt

    LPAREN          shift and go to state 64


state 37

    (30) sentencias_if -> IF LPAREN . expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (31) sentencias_if -> IF LPAREN . expression RPAREN LBLOCK sentencia RBLOCK
    (32) sentencias_if_else -> IF LPAREN . expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (33) sentencias_if_else -> IF LPAREN . expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (10) expression -> . ID opConditional ID
    (11) expression -> . ID opConditional NUM
    (12) expression -> . NUM opConditional NUM
    (13) expression -> . inicializarOp
    (104) inicializarOp -> . PLUS operacionesMath
    (105) inicializarOp -> . MINUS operacionesMath
    (106) inicializarOp -> . empty operacionesMath
    (42) empty -> .

  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
    ID              shift and go to state 58
    NUM             shift and go to state 59
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    TIMES           reduce using rule 42 (empty -> .)
    PERIOD          reduce using rule 42 (empty -> .)
    RPAREN          reduce using rule 42 (empty -> .)
    AND             reduce using rule 42 (empty -> .)
    OR              reduce using rule 42 (empty -> .)
    NOT             reduce using rule 42 (empty -> .)

  ! NUM             [ reduce using rule 42 (empty -> .) ]
  ! MINUS           [ reduce using rule 42 (empty -> .) ]
  ! PLUS            [ reduce using rule 42 (empty -> .) ]

    expression                     shift and go to state 65
    inicializarOp                  shift and go to state 60
    empty                          shift and go to state 63

state 38

    (34) sentencias_while -> WHILE LPAREN . expression RPAREN LBLOCK sentencia RBLOCK
    (35) sentencias_while -> WHILE LPAREN . expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (10) expression -> . ID opConditional ID
    (11) expression -> . ID opConditional NUM
    (12) expression -> . NUM opConditional NUM
    (13) expression -> . inicializarOp
    (104) inicializarOp -> . PLUS operacionesMath
    (105) inicializarOp -> . MINUS operacionesMath
    (106) inicializarOp -> . empty operacionesMath
    (42) empty -> .

  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
    ID              shift and go to state 58
    NUM             shift and go to state 59
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    TIMES           reduce using rule 42 (empty -> .)
    PERIOD          reduce using rule 42 (empty -> .)
    RPAREN          reduce using rule 42 (empty -> .)
    AND             reduce using rule 42 (empty -> .)
    OR              reduce using rule 42 (empty -> .)
    NOT             reduce using rule 42 (empty -> .)

  ! NUM             [ reduce using rule 42 (empty -> .) ]
  ! MINUS           [ reduce using rule 42 (empty -> .) ]
  ! PLUS            [ reduce using rule 42 (empty -> .) ]

    expression                     shift and go to state 66
    inicializarOp                  shift and go to state 60
    empty                          shift and go to state 63

state 39

    (2) sentencia -> varType ID EQUAL . callMethods
    (49) varDeclaration -> varType ID EQUAL . arrayDeclare COLON
    (50) varDeclaration -> varType ID EQUAL . declareMap COLON
    (51) varDeclaration -> varType ID EQUAL . declararSet COLON
    (77) declareteFunction -> varType ID EQUAL . FUNCTION LPAREN params RPAREN
    (14) assingOperadores -> varType ID EQUAL . inicializarOp
    (53) callMethods -> . ID methodArray COLON
    (54) callMethods -> . ID methodSet COLON
    (55) callMethods -> . ID methodMap COLON
    (56) arrayDeclare -> . LBRACKET arrayValues RBRACKET
    (57) arrayDeclare -> . NEW ARRAY LPAREN arrayValues RPAREN
    (69) declareMap -> . NEW MAP LPAREN iterable RPAREN
    (92) declararSet -> . NEW SET LPAREN setValues RPAREN
    (104) inicializarOp -> . PLUS operacionesMath
    (105) inicializarOp -> . MINUS operacionesMath
    (106) inicializarOp -> . empty operacionesMath
    (42) empty -> .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
    FUNCTION        shift and go to state 72
    ID              shift and go to state 67
    LBRACKET        shift and go to state 74
    NEW             shift and go to state 75
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    NUM             reduce using rule 42 (empty -> .)
    TIMES           reduce using rule 42 (empty -> .)
    PERIOD          reduce using rule 42 (empty -> .)
    $end            reduce using rule 42 (empty -> .)
    RBLOCK          reduce using rule 42 (empty -> .)
    RETURN          reduce using rule 42 (empty -> .)

  ! MINUS           [ reduce using rule 42 (empty -> .) ]
  ! PLUS            [ reduce using rule 42 (empty -> .) ]

    callMethods                    shift and go to state 68
    arrayDeclare                   shift and go to state 69
    declareMap                     shift and go to state 70
    declararSet                    shift and go to state 71
    inicializarOp                  shift and go to state 73
    empty                          shift and go to state 63

state 40

    (52) varDeclaration -> varType ID COLON .

    $end            reduce using rule 52 (varDeclaration -> varType ID COLON .)
    RBLOCK          reduce using rule 52 (varDeclaration -> varType ID COLON .)
    RETURN          reduce using rule 52 (varDeclaration -> varType ID COLON .)


state 41

    (53) callMethods -> ID methodArray COLON .

    $end            reduce using rule 53 (callMethods -> ID methodArray COLON .)
    RBLOCK          reduce using rule 53 (callMethods -> ID methodArray COLON .)
    RETURN          reduce using rule 53 (callMethods -> ID methodArray COLON .)


state 42

    (54) callMethods -> ID methodSet COLON .

    $end            reduce using rule 54 (callMethods -> ID methodSet COLON .)
    RBLOCK          reduce using rule 54 (callMethods -> ID methodSet COLON .)
    RETURN          reduce using rule 54 (callMethods -> ID methodSet COLON .)


state 43

    (55) callMethods -> ID methodMap COLON .

    $end            reduce using rule 55 (callMethods -> ID methodMap COLON .)
    RBLOCK          reduce using rule 55 (callMethods -> ID methodMap COLON .)
    RETURN          reduce using rule 55 (callMethods -> ID methodMap COLON .)


state 44

    (83) param -> ID .
    (84) param -> ID . LBRACKET RBRACKET

    COMMA           reduce using rule 83 (param -> ID .)
    RPAREN          reduce using rule 83 (param -> ID .)
    LBRACKET        shift and go to state 76


state 45

    (80) callFunction -> ID LPAREN params . RPAREN

    RPAREN          shift and go to state 77


state 46

    (81) params -> paramList .

    RPAREN          reduce using rule 81 (params -> paramList .)


state 47

    (82) params -> empty .

    RPAREN          reduce using rule 82 (params -> empty .)


state 48

    (85) paramList -> param .
    (86) paramList -> param . COMMA paramList

    RPAREN          reduce using rule 85 (paramList -> param .)
    COMMA           shift and go to state 78


state 49

    (66) methodArray -> PERIOD PUSH . LPAREN arrayValue RPAREN

    LPAREN          shift and go to state 79


state 50

    (67) methodArray -> PERIOD UNSHIFT . LPAREN arrayValue RPAREN

    LPAREN          shift and go to state 80


state 51

    (68) methodArray -> PERIOD POP . LPAREN empty RPAREN

    LPAREN          shift and go to state 81


state 52

    (101) methodSet -> PERIOD ADD . LPAREN setValue RPAREN

    LPAREN          shift and go to state 82


state 53

    (102) methodSet -> PERIOD DELETE . LPAREN setValue RPAREN

    LPAREN          shift and go to state 83


state 54

    (103) methodSet -> PERIOD CLEAR . LPAREN empty RPAREN
    (73) methodMap -> PERIOD CLEAR . LPAREN RPAREN

    LPAREN          shift and go to state 84


state 55

    (74) methodMap -> PERIOD LENGTH . LPAREN RPAREN

    LPAREN          shift and go to state 85


state 56

    (36) impresion -> ALERT LPAREN expression . RPAREN

    RPAREN          shift and go to state 86


state 57

    (37) impresion_vacio -> ALERT LPAREN RPAREN .

    $end            reduce using rule 37 (impresion_vacio -> ALERT LPAREN RPAREN .)
    RBLOCK          reduce using rule 37 (impresion_vacio -> ALERT LPAREN RPAREN .)
    RETURN          reduce using rule 37 (impresion_vacio -> ALERT LPAREN RPAREN .)


state 58

    (10) expression -> ID . opConditional ID
    (11) expression -> ID . opConditional NUM
    (20) opConditional -> . ISEQUAL
    (21) opConditional -> . IS_NOT_IDENTICAL
    (22) opConditional -> . IS_IDENTICAL
    (23) opConditional -> . GREATER
    (24) opConditional -> . GREATEREQUAL
    (25) opConditional -> . LESS
    (26) opConditional -> . LESSEQUAL

    ISEQUAL         shift and go to state 88
    IS_NOT_IDENTICAL shift and go to state 89
    IS_IDENTICAL    shift and go to state 90
    GREATER         shift and go to state 91
    GREATEREQUAL    shift and go to state 92
    LESS            shift and go to state 93
    LESSEQUAL       shift and go to state 94

    opConditional                  shift and go to state 87

state 59

    (12) expression -> NUM . opConditional NUM
    (20) opConditional -> . ISEQUAL
    (21) opConditional -> . IS_NOT_IDENTICAL
    (22) opConditional -> . IS_IDENTICAL
    (23) opConditional -> . GREATER
    (24) opConditional -> . GREATEREQUAL
    (25) opConditional -> . LESS
    (26) opConditional -> . LESSEQUAL

    ISEQUAL         shift and go to state 88
    IS_NOT_IDENTICAL shift and go to state 89
    IS_IDENTICAL    shift and go to state 90
    GREATER         shift and go to state 91
    GREATEREQUAL    shift and go to state 92
    LESS            shift and go to state 93
    LESSEQUAL       shift and go to state 94

    opConditional                  shift and go to state 95

state 60

    (13) expression -> inicializarOp .

    RPAREN          reduce using rule 13 (expression -> inicializarOp .)
    AND             reduce using rule 13 (expression -> inicializarOp .)
    OR              reduce using rule 13 (expression -> inicializarOp .)
    NOT             reduce using rule 13 (expression -> inicializarOp .)


state 61

    (104) inicializarOp -> PLUS . operacionesMath
    (107) operacionesMath -> . numOperadores PLUS suma
    (108) operacionesMath -> . suma
    (109) operacionesMath -> . suma operacionesMath
    (110) operacionesMath -> . restas
    (111) operacionesMath -> . numOperadores MINUS restas
    (112) operacionesMath -> . restas operacionesMath
    (113) operacionesMath -> . multiplicacion
    (114) operacionesMath -> . numOperadores TIMES multiplicacion
    (115) operacionesMath -> . multiplicacion operacionesMath
    (125) numOperadores -> . enteros
    (126) numOperadores -> . decimales
    (116) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (117) suma -> . numOperadores PLUS NUM
    (118) suma -> . numOperadores
    (119) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (120) restas -> . numOperadores MINUS NUM
    (121) restas -> . numOperadores
    (122) multiplicacion -> . numOperadores TIMES LPAREN numOperadores RPAREN
    (123) multiplicacion -> . numOperadores TIMES NUM
    (124) multiplicacion -> . numOperadores
    (127) enteros -> . NUM
    (128) enteros -> . numNegative
    (131) decimales -> . enteros PERIOD NUM
    (129) numNegative -> . MINUS NUM
    (130) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
    NUM             shift and go to state 104
    MINUS           shift and go to state 100
    PERIOD          reduce using rule 130 (numNegative -> .)
    PLUS            reduce using rule 130 (numNegative -> .)
    TIMES           reduce using rule 130 (numNegative -> .)
    RPAREN          reduce using rule 130 (numNegative -> .)
    AND             reduce using rule 130 (numNegative -> .)
    OR              reduce using rule 130 (numNegative -> .)
    NOT             reduce using rule 130 (numNegative -> .)
    $end            reduce using rule 130 (numNegative -> .)
    RBLOCK          reduce using rule 130 (numNegative -> .)
    RETURN          reduce using rule 130 (numNegative -> .)

  ! MINUS           [ reduce using rule 130 (numNegative -> .) ]
  ! NUM             [ reduce using rule 130 (numNegative -> .) ]

    operacionesMath                shift and go to state 96
    numOperadores                  shift and go to state 97
    suma                           shift and go to state 98
    restas                         shift and go to state 99
    multiplicacion                 shift and go to state 101
    enteros                        shift and go to state 102
    decimales                      shift and go to state 103
    numNegative                    shift and go to state 105

state 62

    (105) inicializarOp -> MINUS . operacionesMath
    (107) operacionesMath -> . numOperadores PLUS suma
    (108) operacionesMath -> . suma
    (109) operacionesMath -> . suma operacionesMath
    (110) operacionesMath -> . restas
    (111) operacionesMath -> . numOperadores MINUS restas
    (112) operacionesMath -> . restas operacionesMath
    (113) operacionesMath -> . multiplicacion
    (114) operacionesMath -> . numOperadores TIMES multiplicacion
    (115) operacionesMath -> . multiplicacion operacionesMath
    (125) numOperadores -> . enteros
    (126) numOperadores -> . decimales
    (116) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (117) suma -> . numOperadores PLUS NUM
    (118) suma -> . numOperadores
    (119) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (120) restas -> . numOperadores MINUS NUM
    (121) restas -> . numOperadores
    (122) multiplicacion -> . numOperadores TIMES LPAREN numOperadores RPAREN
    (123) multiplicacion -> . numOperadores TIMES NUM
    (124) multiplicacion -> . numOperadores
    (127) enteros -> . NUM
    (128) enteros -> . numNegative
    (131) decimales -> . enteros PERIOD NUM
    (129) numNegative -> . MINUS NUM
    (130) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
    NUM             shift and go to state 104
    MINUS           shift and go to state 100
    PERIOD          reduce using rule 130 (numNegative -> .)
    PLUS            reduce using rule 130 (numNegative -> .)
    TIMES           reduce using rule 130 (numNegative -> .)
    RPAREN          reduce using rule 130 (numNegative -> .)
    AND             reduce using rule 130 (numNegative -> .)
    OR              reduce using rule 130 (numNegative -> .)
    NOT             reduce using rule 130 (numNegative -> .)
    $end            reduce using rule 130 (numNegative -> .)
    RBLOCK          reduce using rule 130 (numNegative -> .)
    RETURN          reduce using rule 130 (numNegative -> .)

  ! MINUS           [ reduce using rule 130 (numNegative -> .) ]
  ! NUM             [ reduce using rule 130 (numNegative -> .) ]

    operacionesMath                shift and go to state 106
    numOperadores                  shift and go to state 97
    suma                           shift and go to state 98
    restas                         shift and go to state 99
    multiplicacion                 shift and go to state 101
    enteros                        shift and go to state 102
    decimales                      shift and go to state 103
    numNegative                    shift and go to state 105

state 63

    (106) inicializarOp -> empty . operacionesMath
    (107) operacionesMath -> . numOperadores PLUS suma
    (108) operacionesMath -> . suma
    (109) operacionesMath -> . suma operacionesMath
    (110) operacionesMath -> . restas
    (111) operacionesMath -> . numOperadores MINUS restas
    (112) operacionesMath -> . restas operacionesMath
    (113) operacionesMath -> . multiplicacion
    (114) operacionesMath -> . numOperadores TIMES multiplicacion
    (115) operacionesMath -> . multiplicacion operacionesMath
    (125) numOperadores -> . enteros
    (126) numOperadores -> . decimales
    (116) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (117) suma -> . numOperadores PLUS NUM
    (118) suma -> . numOperadores
    (119) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (120) restas -> . numOperadores MINUS NUM
    (121) restas -> . numOperadores
    (122) multiplicacion -> . numOperadores TIMES LPAREN numOperadores RPAREN
    (123) multiplicacion -> . numOperadores TIMES NUM
    (124) multiplicacion -> . numOperadores
    (127) enteros -> . NUM
    (128) enteros -> . numNegative
    (131) decimales -> . enteros PERIOD NUM
    (129) numNegative -> . MINUS NUM
    (130) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
    NUM             shift and go to state 104
    MINUS           shift and go to state 100
    PERIOD          reduce using rule 130 (numNegative -> .)
    PLUS            reduce using rule 130 (numNegative -> .)
    TIMES           reduce using rule 130 (numNegative -> .)
    RPAREN          reduce using rule 130 (numNegative -> .)
    AND             reduce using rule 130 (numNegative -> .)
    OR              reduce using rule 130 (numNegative -> .)
    NOT             reduce using rule 130 (numNegative -> .)
    $end            reduce using rule 130 (numNegative -> .)
    RBLOCK          reduce using rule 130 (numNegative -> .)
    RETURN          reduce using rule 130 (numNegative -> .)

  ! MINUS           [ reduce using rule 130 (numNegative -> .) ]
  ! NUM             [ reduce using rule 130 (numNegative -> .) ]

    operacionesMath                shift and go to state 107
    numOperadores                  shift and go to state 97
    suma                           shift and go to state 98
    restas                         shift and go to state 99
    multiplicacion                 shift and go to state 101
    enteros                        shift and go to state 102
    decimales                      shift and go to state 103
    numNegative                    shift and go to state 105

state 64

    (75) declareteFunction -> FUNCTION ID LPAREN . params RPAREN
    (76) declareteFunction -> FUNCTION ID LPAREN . params RPAREN sentencesCmpt
    (81) params -> . paramList
    (82) params -> . empty
    (85) paramList -> . param
    (86) paramList -> . param COMMA paramList
    (42) empty -> .
    (83) param -> . ID
    (84) param -> . ID LBRACKET RBRACKET

    RPAREN          reduce using rule 42 (empty -> .)
    ID              shift and go to state 44

    params                         shift and go to state 108
    paramList                      shift and go to state 46
    empty                          shift and go to state 47
    param                          shift and go to state 48

state 65

    (30) sentencias_if -> IF LPAREN expression . operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (31) sentencias_if -> IF LPAREN expression . RPAREN LBLOCK sentencia RBLOCK
    (32) sentencias_if_else -> IF LPAREN expression . operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (33) sentencias_if_else -> IF LPAREN expression . RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (27) operadorLogical -> . AND
    (28) operadorLogical -> . OR
    (29) operadorLogical -> . NOT

    RPAREN          shift and go to state 110
    AND             shift and go to state 111
    OR              shift and go to state 112
    NOT             shift and go to state 113

    operadorLogical                shift and go to state 109

state 66

    (34) sentencias_while -> WHILE LPAREN expression . RPAREN LBLOCK sentencia RBLOCK
    (35) sentencias_while -> WHILE LPAREN expression . operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (27) operadorLogical -> . AND
    (28) operadorLogical -> . OR
    (29) operadorLogical -> . NOT

    RPAREN          shift and go to state 114
    AND             shift and go to state 111
    OR              shift and go to state 112
    NOT             shift and go to state 113

    operadorLogical                shift and go to state 115

state 67

    (53) callMethods -> ID . methodArray COLON
    (54) callMethods -> ID . methodSet COLON
    (55) callMethods -> ID . methodMap COLON
    (66) methodArray -> . PERIOD PUSH LPAREN arrayValue RPAREN
    (67) methodArray -> . PERIOD UNSHIFT LPAREN arrayValue RPAREN
    (68) methodArray -> . PERIOD POP LPAREN empty RPAREN
    (101) methodSet -> . PERIOD ADD LPAREN setValue RPAREN
    (102) methodSet -> . PERIOD DELETE LPAREN setValue RPAREN
    (103) methodSet -> . PERIOD CLEAR LPAREN empty RPAREN
    (73) methodMap -> . PERIOD CLEAR LPAREN RPAREN
    (74) methodMap -> . PERIOD LENGTH LPAREN RPAREN

    PERIOD          shift and go to state 34

    methodArray                    shift and go to state 30
    methodSet                      shift and go to state 31
    methodMap                      shift and go to state 32

state 68

    (2) sentencia -> varType ID EQUAL callMethods .

    $end            reduce using rule 2 (sentencia -> varType ID EQUAL callMethods .)
    RBLOCK          reduce using rule 2 (sentencia -> varType ID EQUAL callMethods .)
    RETURN          reduce using rule 2 (sentencia -> varType ID EQUAL callMethods .)


state 69

    (49) varDeclaration -> varType ID EQUAL arrayDeclare . COLON

    COLON           shift and go to state 116


state 70

    (50) varDeclaration -> varType ID EQUAL declareMap . COLON

    COLON           shift and go to state 117


state 71

    (51) varDeclaration -> varType ID EQUAL declararSet . COLON

    COLON           shift and go to state 118


state 72

    (77) declareteFunction -> varType ID EQUAL FUNCTION . LPAREN params RPAREN

    LPAREN          shift and go to state 119


state 73

    (14) assingOperadores -> varType ID EQUAL inicializarOp .

    $end            reduce using rule 14 (assingOperadores -> varType ID EQUAL inicializarOp .)
    RBLOCK          reduce using rule 14 (assingOperadores -> varType ID EQUAL inicializarOp .)
    RETURN          reduce using rule 14 (assingOperadores -> varType ID EQUAL inicializarOp .)


state 74

    (56) arrayDeclare -> LBRACKET . arrayValues RBRACKET
    (58) arrayValues -> . arrayValue
    (59) arrayValues -> . arrayValue COMMA arrayValue
    (60) arrayValue -> . LPAREN expression RPAREN
    (61) arrayValue -> . ID
    (62) arrayValue -> . NUM
    (63) arrayValue -> . STRING
    (64) arrayValue -> . boolean
    (65) arrayValue -> . empty
    (43) boolean -> . TRUE
    (44) boolean -> . FALSE
    (42) empty -> .

    LPAREN          shift and go to state 122
    ID              shift and go to state 123
    NUM             shift and go to state 124
    STRING          shift and go to state 125
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    COMMA           reduce using rule 42 (empty -> .)
    RBRACKET        reduce using rule 42 (empty -> .)

    arrayValues                    shift and go to state 120
    arrayValue                     shift and go to state 121
    boolean                        shift and go to state 126
    empty                          shift and go to state 127

state 75

    (57) arrayDeclare -> NEW . ARRAY LPAREN arrayValues RPAREN
    (69) declareMap -> NEW . MAP LPAREN iterable RPAREN
    (92) declararSet -> NEW . SET LPAREN setValues RPAREN

    ARRAY           shift and go to state 128
    MAP             shift and go to state 129
    SET             shift and go to state 130


state 76

    (84) param -> ID LBRACKET . RBRACKET

    RBRACKET        shift and go to state 131


state 77

    (80) callFunction -> ID LPAREN params RPAREN .

    $end            reduce using rule 80 (callFunction -> ID LPAREN params RPAREN .)
    RBLOCK          reduce using rule 80 (callFunction -> ID LPAREN params RPAREN .)
    RETURN          reduce using rule 80 (callFunction -> ID LPAREN params RPAREN .)


state 78

    (86) paramList -> param COMMA . paramList
    (85) paramList -> . param
    (86) paramList -> . param COMMA paramList
    (83) param -> . ID
    (84) param -> . ID LBRACKET RBRACKET

    ID              shift and go to state 44

    param                          shift and go to state 48
    paramList                      shift and go to state 132

state 79

    (66) methodArray -> PERIOD PUSH LPAREN . arrayValue RPAREN
    (60) arrayValue -> . LPAREN expression RPAREN
    (61) arrayValue -> . ID
    (62) arrayValue -> . NUM
    (63) arrayValue -> . STRING
    (64) arrayValue -> . boolean
    (65) arrayValue -> . empty
    (43) boolean -> . TRUE
    (44) boolean -> . FALSE
    (42) empty -> .

    LPAREN          shift and go to state 122
    ID              shift and go to state 123
    NUM             shift and go to state 124
    STRING          shift and go to state 125
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    RPAREN          reduce using rule 42 (empty -> .)

    arrayValue                     shift and go to state 133
    boolean                        shift and go to state 126
    empty                          shift and go to state 127

state 80

    (67) methodArray -> PERIOD UNSHIFT LPAREN . arrayValue RPAREN
    (60) arrayValue -> . LPAREN expression RPAREN
    (61) arrayValue -> . ID
    (62) arrayValue -> . NUM
    (63) arrayValue -> . STRING
    (64) arrayValue -> . boolean
    (65) arrayValue -> . empty
    (43) boolean -> . TRUE
    (44) boolean -> . FALSE
    (42) empty -> .

    LPAREN          shift and go to state 122
    ID              shift and go to state 123
    NUM             shift and go to state 124
    STRING          shift and go to state 125
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    RPAREN          reduce using rule 42 (empty -> .)

    arrayValue                     shift and go to state 134
    boolean                        shift and go to state 126
    empty                          shift and go to state 127

state 81

    (68) methodArray -> PERIOD POP LPAREN . empty RPAREN
    (42) empty -> .

    RPAREN          reduce using rule 42 (empty -> .)

    empty                          shift and go to state 135

state 82

    (101) methodSet -> PERIOD ADD LPAREN . setValue RPAREN
    (96) setValue -> . ID
    (97) setValue -> . NUM
    (98) setValue -> . STRING
    (99) setValue -> . boolean
    (100) setValue -> . empty
    (43) boolean -> . TRUE
    (44) boolean -> . FALSE
    (42) empty -> .

    ID              shift and go to state 137
    NUM             shift and go to state 138
    STRING          shift and go to state 139
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    RPAREN          reduce using rule 42 (empty -> .)

    setValue                       shift and go to state 136
    boolean                        shift and go to state 140
    empty                          shift and go to state 141

state 83

    (102) methodSet -> PERIOD DELETE LPAREN . setValue RPAREN
    (96) setValue -> . ID
    (97) setValue -> . NUM
    (98) setValue -> . STRING
    (99) setValue -> . boolean
    (100) setValue -> . empty
    (43) boolean -> . TRUE
    (44) boolean -> . FALSE
    (42) empty -> .

    ID              shift and go to state 137
    NUM             shift and go to state 138
    STRING          shift and go to state 139
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    RPAREN          reduce using rule 42 (empty -> .)

    setValue                       shift and go to state 142
    boolean                        shift and go to state 140
    empty                          shift and go to state 141

state 84

    (103) methodSet -> PERIOD CLEAR LPAREN . empty RPAREN
    (73) methodMap -> PERIOD CLEAR LPAREN . RPAREN
    (42) empty -> .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 144

  ! RPAREN          [ reduce using rule 42 (empty -> .) ]

    empty                          shift and go to state 143

state 85

    (74) methodMap -> PERIOD LENGTH LPAREN . RPAREN

    RPAREN          shift and go to state 145


state 86

    (36) impresion -> ALERT LPAREN expression RPAREN .

    $end            reduce using rule 36 (impresion -> ALERT LPAREN expression RPAREN .)
    RBLOCK          reduce using rule 36 (impresion -> ALERT LPAREN expression RPAREN .)
    RETURN          reduce using rule 36 (impresion -> ALERT LPAREN expression RPAREN .)


state 87

    (10) expression -> ID opConditional . ID
    (11) expression -> ID opConditional . NUM

    ID              shift and go to state 146
    NUM             shift and go to state 147


state 88

    (20) opConditional -> ISEQUAL .

    ID              reduce using rule 20 (opConditional -> ISEQUAL .)
    NUM             reduce using rule 20 (opConditional -> ISEQUAL .)


state 89

    (21) opConditional -> IS_NOT_IDENTICAL .

    ID              reduce using rule 21 (opConditional -> IS_NOT_IDENTICAL .)
    NUM             reduce using rule 21 (opConditional -> IS_NOT_IDENTICAL .)


state 90

    (22) opConditional -> IS_IDENTICAL .

    ID              reduce using rule 22 (opConditional -> IS_IDENTICAL .)
    NUM             reduce using rule 22 (opConditional -> IS_IDENTICAL .)


state 91

    (23) opConditional -> GREATER .

    ID              reduce using rule 23 (opConditional -> GREATER .)
    NUM             reduce using rule 23 (opConditional -> GREATER .)


state 92

    (24) opConditional -> GREATEREQUAL .

    ID              reduce using rule 24 (opConditional -> GREATEREQUAL .)
    NUM             reduce using rule 24 (opConditional -> GREATEREQUAL .)


state 93

    (25) opConditional -> LESS .

    ID              reduce using rule 25 (opConditional -> LESS .)
    NUM             reduce using rule 25 (opConditional -> LESS .)


state 94

    (26) opConditional -> LESSEQUAL .

    ID              reduce using rule 26 (opConditional -> LESSEQUAL .)
    NUM             reduce using rule 26 (opConditional -> LESSEQUAL .)


state 95

    (12) expression -> NUM opConditional . NUM

    NUM             shift and go to state 148


state 96

    (104) inicializarOp -> PLUS operacionesMath .

    RPAREN          reduce using rule 104 (inicializarOp -> PLUS operacionesMath .)
    AND             reduce using rule 104 (inicializarOp -> PLUS operacionesMath .)
    OR              reduce using rule 104 (inicializarOp -> PLUS operacionesMath .)
    NOT             reduce using rule 104 (inicializarOp -> PLUS operacionesMath .)
    $end            reduce using rule 104 (inicializarOp -> PLUS operacionesMath .)
    RBLOCK          reduce using rule 104 (inicializarOp -> PLUS operacionesMath .)
    RETURN          reduce using rule 104 (inicializarOp -> PLUS operacionesMath .)


state 97

    (107) operacionesMath -> numOperadores . PLUS suma
    (111) operacionesMath -> numOperadores . MINUS restas
    (114) operacionesMath -> numOperadores . TIMES multiplicacion
    (116) suma -> numOperadores . PLUS LPAREN numOperadores RPAREN
    (117) suma -> numOperadores . PLUS NUM
    (118) suma -> numOperadores .
    (119) restas -> numOperadores . MINUS LPAREN numOperadores RPAREN
    (120) restas -> numOperadores . MINUS NUM
    (121) restas -> numOperadores .
    (122) multiplicacion -> numOperadores . TIMES LPAREN numOperadores RPAREN
    (123) multiplicacion -> numOperadores . TIMES NUM
    (124) multiplicacion -> numOperadores .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! reduce/reduce conflict for NUM resolved using rule 118 (suma -> numOperadores .)
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! reduce/reduce conflict for PERIOD resolved using rule 118 (suma -> numOperadores .)
  ! reduce/reduce conflict for RPAREN resolved using rule 118 (suma -> numOperadores .)
  ! reduce/reduce conflict for AND resolved using rule 118 (suma -> numOperadores .)
  ! reduce/reduce conflict for OR resolved using rule 118 (suma -> numOperadores .)
  ! reduce/reduce conflict for NOT resolved using rule 118 (suma -> numOperadores .)
  ! reduce/reduce conflict for $end resolved using rule 118 (suma -> numOperadores .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 118 (suma -> numOperadores .)
  ! reduce/reduce conflict for RETURN resolved using rule 118 (suma -> numOperadores .)
  ! reduce/reduce conflict for NUM resolved using rule 118 (suma -> numOperadores .)
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! reduce/reduce conflict for PERIOD resolved using rule 118 (suma -> numOperadores .)
  ! reduce/reduce conflict for RPAREN resolved using rule 118 (suma -> numOperadores .)
  ! reduce/reduce conflict for AND resolved using rule 118 (suma -> numOperadores .)
  ! reduce/reduce conflict for OR resolved using rule 118 (suma -> numOperadores .)
  ! reduce/reduce conflict for NOT resolved using rule 118 (suma -> numOperadores .)
  ! reduce/reduce conflict for $end resolved using rule 118 (suma -> numOperadores .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 118 (suma -> numOperadores .)
  ! reduce/reduce conflict for RETURN resolved using rule 118 (suma -> numOperadores .)
    PLUS            shift and go to state 149
    MINUS           shift and go to state 150
    TIMES           shift and go to state 151
    NUM             reduce using rule 118 (suma -> numOperadores .)
    PERIOD          reduce using rule 118 (suma -> numOperadores .)
    RPAREN          reduce using rule 118 (suma -> numOperadores .)
    AND             reduce using rule 118 (suma -> numOperadores .)
    OR              reduce using rule 118 (suma -> numOperadores .)
    NOT             reduce using rule 118 (suma -> numOperadores .)
    $end            reduce using rule 118 (suma -> numOperadores .)
    RBLOCK          reduce using rule 118 (suma -> numOperadores .)
    RETURN          reduce using rule 118 (suma -> numOperadores .)

  ! MINUS           [ reduce using rule 118 (suma -> numOperadores .) ]
  ! PLUS            [ reduce using rule 118 (suma -> numOperadores .) ]
  ! TIMES           [ reduce using rule 118 (suma -> numOperadores .) ]
  ! NUM             [ reduce using rule 121 (restas -> numOperadores .) ]
  ! MINUS           [ reduce using rule 121 (restas -> numOperadores .) ]
  ! PLUS            [ reduce using rule 121 (restas -> numOperadores .) ]
  ! TIMES           [ reduce using rule 121 (restas -> numOperadores .) ]
  ! PERIOD          [ reduce using rule 121 (restas -> numOperadores .) ]
  ! RPAREN          [ reduce using rule 121 (restas -> numOperadores .) ]
  ! AND             [ reduce using rule 121 (restas -> numOperadores .) ]
  ! OR              [ reduce using rule 121 (restas -> numOperadores .) ]
  ! NOT             [ reduce using rule 121 (restas -> numOperadores .) ]
  ! $end            [ reduce using rule 121 (restas -> numOperadores .) ]
  ! RBLOCK          [ reduce using rule 121 (restas -> numOperadores .) ]
  ! RETURN          [ reduce using rule 121 (restas -> numOperadores .) ]
  ! NUM             [ reduce using rule 124 (multiplicacion -> numOperadores .) ]
  ! MINUS           [ reduce using rule 124 (multiplicacion -> numOperadores .) ]
  ! PLUS            [ reduce using rule 124 (multiplicacion -> numOperadores .) ]
  ! TIMES           [ reduce using rule 124 (multiplicacion -> numOperadores .) ]
  ! PERIOD          [ reduce using rule 124 (multiplicacion -> numOperadores .) ]
  ! RPAREN          [ reduce using rule 124 (multiplicacion -> numOperadores .) ]
  ! AND             [ reduce using rule 124 (multiplicacion -> numOperadores .) ]
  ! OR              [ reduce using rule 124 (multiplicacion -> numOperadores .) ]
  ! NOT             [ reduce using rule 124 (multiplicacion -> numOperadores .) ]
  ! $end            [ reduce using rule 124 (multiplicacion -> numOperadores .) ]
  ! RBLOCK          [ reduce using rule 124 (multiplicacion -> numOperadores .) ]
  ! RETURN          [ reduce using rule 124 (multiplicacion -> numOperadores .) ]


state 98

    (108) operacionesMath -> suma .
    (109) operacionesMath -> suma . operacionesMath
    (107) operacionesMath -> . numOperadores PLUS suma
    (108) operacionesMath -> . suma
    (109) operacionesMath -> . suma operacionesMath
    (110) operacionesMath -> . restas
    (111) operacionesMath -> . numOperadores MINUS restas
    (112) operacionesMath -> . restas operacionesMath
    (113) operacionesMath -> . multiplicacion
    (114) operacionesMath -> . numOperadores TIMES multiplicacion
    (115) operacionesMath -> . multiplicacion operacionesMath
    (125) numOperadores -> . enteros
    (126) numOperadores -> . decimales
    (116) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (117) suma -> . numOperadores PLUS NUM
    (118) suma -> . numOperadores
    (119) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (120) restas -> . numOperadores MINUS NUM
    (121) restas -> . numOperadores
    (122) multiplicacion -> . numOperadores TIMES LPAREN numOperadores RPAREN
    (123) multiplicacion -> . numOperadores TIMES NUM
    (124) multiplicacion -> . numOperadores
    (127) enteros -> . NUM
    (128) enteros -> . numNegative
    (131) decimales -> . enteros PERIOD NUM
    (129) numNegative -> . MINUS NUM
    (130) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! reduce/reduce conflict for RPAREN resolved using rule 108 (operacionesMath -> suma .)
  ! reduce/reduce conflict for AND resolved using rule 108 (operacionesMath -> suma .)
  ! reduce/reduce conflict for OR resolved using rule 108 (operacionesMath -> suma .)
  ! reduce/reduce conflict for NOT resolved using rule 108 (operacionesMath -> suma .)
  ! reduce/reduce conflict for $end resolved using rule 108 (operacionesMath -> suma .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 108 (operacionesMath -> suma .)
  ! reduce/reduce conflict for RETURN resolved using rule 108 (operacionesMath -> suma .)
    RPAREN          reduce using rule 108 (operacionesMath -> suma .)
    AND             reduce using rule 108 (operacionesMath -> suma .)
    OR              reduce using rule 108 (operacionesMath -> suma .)
    NOT             reduce using rule 108 (operacionesMath -> suma .)
    $end            reduce using rule 108 (operacionesMath -> suma .)
    RBLOCK          reduce using rule 108 (operacionesMath -> suma .)
    RETURN          reduce using rule 108 (operacionesMath -> suma .)
    NUM             shift and go to state 104
    MINUS           shift and go to state 100
    PERIOD          reduce using rule 130 (numNegative -> .)
    PLUS            reduce using rule 130 (numNegative -> .)
    TIMES           reduce using rule 130 (numNegative -> .)

  ! MINUS           [ reduce using rule 130 (numNegative -> .) ]
  ! NUM             [ reduce using rule 130 (numNegative -> .) ]
  ! RPAREN          [ reduce using rule 130 (numNegative -> .) ]
  ! AND             [ reduce using rule 130 (numNegative -> .) ]
  ! OR              [ reduce using rule 130 (numNegative -> .) ]
  ! NOT             [ reduce using rule 130 (numNegative -> .) ]
  ! $end            [ reduce using rule 130 (numNegative -> .) ]
  ! RBLOCK          [ reduce using rule 130 (numNegative -> .) ]
  ! RETURN          [ reduce using rule 130 (numNegative -> .) ]

    suma                           shift and go to state 98
    operacionesMath                shift and go to state 152
    numOperadores                  shift and go to state 97
    restas                         shift and go to state 99
    multiplicacion                 shift and go to state 101
    enteros                        shift and go to state 102
    decimales                      shift and go to state 103
    numNegative                    shift and go to state 105

state 99

    (110) operacionesMath -> restas .
    (112) operacionesMath -> restas . operacionesMath
    (107) operacionesMath -> . numOperadores PLUS suma
    (108) operacionesMath -> . suma
    (109) operacionesMath -> . suma operacionesMath
    (110) operacionesMath -> . restas
    (111) operacionesMath -> . numOperadores MINUS restas
    (112) operacionesMath -> . restas operacionesMath
    (113) operacionesMath -> . multiplicacion
    (114) operacionesMath -> . numOperadores TIMES multiplicacion
    (115) operacionesMath -> . multiplicacion operacionesMath
    (125) numOperadores -> . enteros
    (126) numOperadores -> . decimales
    (116) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (117) suma -> . numOperadores PLUS NUM
    (118) suma -> . numOperadores
    (119) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (120) restas -> . numOperadores MINUS NUM
    (121) restas -> . numOperadores
    (122) multiplicacion -> . numOperadores TIMES LPAREN numOperadores RPAREN
    (123) multiplicacion -> . numOperadores TIMES NUM
    (124) multiplicacion -> . numOperadores
    (127) enteros -> . NUM
    (128) enteros -> . numNegative
    (131) decimales -> . enteros PERIOD NUM
    (129) numNegative -> . MINUS NUM
    (130) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! reduce/reduce conflict for RPAREN resolved using rule 110 (operacionesMath -> restas .)
  ! reduce/reduce conflict for AND resolved using rule 110 (operacionesMath -> restas .)
  ! reduce/reduce conflict for OR resolved using rule 110 (operacionesMath -> restas .)
  ! reduce/reduce conflict for NOT resolved using rule 110 (operacionesMath -> restas .)
  ! reduce/reduce conflict for $end resolved using rule 110 (operacionesMath -> restas .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 110 (operacionesMath -> restas .)
  ! reduce/reduce conflict for RETURN resolved using rule 110 (operacionesMath -> restas .)
    RPAREN          reduce using rule 110 (operacionesMath -> restas .)
    AND             reduce using rule 110 (operacionesMath -> restas .)
    OR              reduce using rule 110 (operacionesMath -> restas .)
    NOT             reduce using rule 110 (operacionesMath -> restas .)
    $end            reduce using rule 110 (operacionesMath -> restas .)
    RBLOCK          reduce using rule 110 (operacionesMath -> restas .)
    RETURN          reduce using rule 110 (operacionesMath -> restas .)
    NUM             shift and go to state 104
    MINUS           shift and go to state 100
    PERIOD          reduce using rule 130 (numNegative -> .)
    PLUS            reduce using rule 130 (numNegative -> .)
    TIMES           reduce using rule 130 (numNegative -> .)

  ! MINUS           [ reduce using rule 130 (numNegative -> .) ]
  ! NUM             [ reduce using rule 130 (numNegative -> .) ]
  ! RPAREN          [ reduce using rule 130 (numNegative -> .) ]
  ! AND             [ reduce using rule 130 (numNegative -> .) ]
  ! OR              [ reduce using rule 130 (numNegative -> .) ]
  ! NOT             [ reduce using rule 130 (numNegative -> .) ]
  ! $end            [ reduce using rule 130 (numNegative -> .) ]
  ! RBLOCK          [ reduce using rule 130 (numNegative -> .) ]
  ! RETURN          [ reduce using rule 130 (numNegative -> .) ]

    restas                         shift and go to state 99
    operacionesMath                shift and go to state 153
    numOperadores                  shift and go to state 97
    suma                           shift and go to state 98
    multiplicacion                 shift and go to state 101
    enteros                        shift and go to state 102
    decimales                      shift and go to state 103
    numNegative                    shift and go to state 105

state 100

    (129) numNegative -> MINUS . NUM

    NUM             shift and go to state 154


state 101

    (113) operacionesMath -> multiplicacion .
    (115) operacionesMath -> multiplicacion . operacionesMath
    (107) operacionesMath -> . numOperadores PLUS suma
    (108) operacionesMath -> . suma
    (109) operacionesMath -> . suma operacionesMath
    (110) operacionesMath -> . restas
    (111) operacionesMath -> . numOperadores MINUS restas
    (112) operacionesMath -> . restas operacionesMath
    (113) operacionesMath -> . multiplicacion
    (114) operacionesMath -> . numOperadores TIMES multiplicacion
    (115) operacionesMath -> . multiplicacion operacionesMath
    (125) numOperadores -> . enteros
    (126) numOperadores -> . decimales
    (116) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (117) suma -> . numOperadores PLUS NUM
    (118) suma -> . numOperadores
    (119) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (120) restas -> . numOperadores MINUS NUM
    (121) restas -> . numOperadores
    (122) multiplicacion -> . numOperadores TIMES LPAREN numOperadores RPAREN
    (123) multiplicacion -> . numOperadores TIMES NUM
    (124) multiplicacion -> . numOperadores
    (127) enteros -> . NUM
    (128) enteros -> . numNegative
    (131) decimales -> . enteros PERIOD NUM
    (129) numNegative -> . MINUS NUM
    (130) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! reduce/reduce conflict for RPAREN resolved using rule 113 (operacionesMath -> multiplicacion .)
  ! reduce/reduce conflict for AND resolved using rule 113 (operacionesMath -> multiplicacion .)
  ! reduce/reduce conflict for OR resolved using rule 113 (operacionesMath -> multiplicacion .)
  ! reduce/reduce conflict for NOT resolved using rule 113 (operacionesMath -> multiplicacion .)
  ! reduce/reduce conflict for $end resolved using rule 113 (operacionesMath -> multiplicacion .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 113 (operacionesMath -> multiplicacion .)
  ! reduce/reduce conflict for RETURN resolved using rule 113 (operacionesMath -> multiplicacion .)
    RPAREN          reduce using rule 113 (operacionesMath -> multiplicacion .)
    AND             reduce using rule 113 (operacionesMath -> multiplicacion .)
    OR              reduce using rule 113 (operacionesMath -> multiplicacion .)
    NOT             reduce using rule 113 (operacionesMath -> multiplicacion .)
    $end            reduce using rule 113 (operacionesMath -> multiplicacion .)
    RBLOCK          reduce using rule 113 (operacionesMath -> multiplicacion .)
    RETURN          reduce using rule 113 (operacionesMath -> multiplicacion .)
    NUM             shift and go to state 104
    MINUS           shift and go to state 100
    PERIOD          reduce using rule 130 (numNegative -> .)
    PLUS            reduce using rule 130 (numNegative -> .)
    TIMES           reduce using rule 130 (numNegative -> .)

  ! MINUS           [ reduce using rule 130 (numNegative -> .) ]
  ! NUM             [ reduce using rule 130 (numNegative -> .) ]
  ! RPAREN          [ reduce using rule 130 (numNegative -> .) ]
  ! AND             [ reduce using rule 130 (numNegative -> .) ]
  ! OR              [ reduce using rule 130 (numNegative -> .) ]
  ! NOT             [ reduce using rule 130 (numNegative -> .) ]
  ! $end            [ reduce using rule 130 (numNegative -> .) ]
  ! RBLOCK          [ reduce using rule 130 (numNegative -> .) ]
  ! RETURN          [ reduce using rule 130 (numNegative -> .) ]

    multiplicacion                 shift and go to state 101
    operacionesMath                shift and go to state 155
    numOperadores                  shift and go to state 97
    suma                           shift and go to state 98
    restas                         shift and go to state 99
    enteros                        shift and go to state 102
    decimales                      shift and go to state 103
    numNegative                    shift and go to state 105

state 102

    (125) numOperadores -> enteros .
    (131) decimales -> enteros . PERIOD NUM

  ! shift/reduce conflict for PERIOD resolved as shift
    PLUS            reduce using rule 125 (numOperadores -> enteros .)
    MINUS           reduce using rule 125 (numOperadores -> enteros .)
    TIMES           reduce using rule 125 (numOperadores -> enteros .)
    NUM             reduce using rule 125 (numOperadores -> enteros .)
    RPAREN          reduce using rule 125 (numOperadores -> enteros .)
    AND             reduce using rule 125 (numOperadores -> enteros .)
    OR              reduce using rule 125 (numOperadores -> enteros .)
    NOT             reduce using rule 125 (numOperadores -> enteros .)
    $end            reduce using rule 125 (numOperadores -> enteros .)
    RBLOCK          reduce using rule 125 (numOperadores -> enteros .)
    RETURN          reduce using rule 125 (numOperadores -> enteros .)
    PERIOD          shift and go to state 156

  ! PERIOD          [ reduce using rule 125 (numOperadores -> enteros .) ]


state 103

    (126) numOperadores -> decimales .

    PLUS            reduce using rule 126 (numOperadores -> decimales .)
    MINUS           reduce using rule 126 (numOperadores -> decimales .)
    TIMES           reduce using rule 126 (numOperadores -> decimales .)
    NUM             reduce using rule 126 (numOperadores -> decimales .)
    PERIOD          reduce using rule 126 (numOperadores -> decimales .)
    RPAREN          reduce using rule 126 (numOperadores -> decimales .)
    AND             reduce using rule 126 (numOperadores -> decimales .)
    OR              reduce using rule 126 (numOperadores -> decimales .)
    NOT             reduce using rule 126 (numOperadores -> decimales .)
    $end            reduce using rule 126 (numOperadores -> decimales .)
    RBLOCK          reduce using rule 126 (numOperadores -> decimales .)
    RETURN          reduce using rule 126 (numOperadores -> decimales .)


state 104

    (127) enteros -> NUM .

    PERIOD          reduce using rule 127 (enteros -> NUM .)
    PLUS            reduce using rule 127 (enteros -> NUM .)
    MINUS           reduce using rule 127 (enteros -> NUM .)
    TIMES           reduce using rule 127 (enteros -> NUM .)
    NUM             reduce using rule 127 (enteros -> NUM .)
    RPAREN          reduce using rule 127 (enteros -> NUM .)
    AND             reduce using rule 127 (enteros -> NUM .)
    OR              reduce using rule 127 (enteros -> NUM .)
    NOT             reduce using rule 127 (enteros -> NUM .)
    $end            reduce using rule 127 (enteros -> NUM .)
    RBLOCK          reduce using rule 127 (enteros -> NUM .)
    RETURN          reduce using rule 127 (enteros -> NUM .)


state 105

    (128) enteros -> numNegative .

    PERIOD          reduce using rule 128 (enteros -> numNegative .)
    PLUS            reduce using rule 128 (enteros -> numNegative .)
    MINUS           reduce using rule 128 (enteros -> numNegative .)
    TIMES           reduce using rule 128 (enteros -> numNegative .)
    NUM             reduce using rule 128 (enteros -> numNegative .)
    RPAREN          reduce using rule 128 (enteros -> numNegative .)
    AND             reduce using rule 128 (enteros -> numNegative .)
    OR              reduce using rule 128 (enteros -> numNegative .)
    NOT             reduce using rule 128 (enteros -> numNegative .)
    $end            reduce using rule 128 (enteros -> numNegative .)
    RBLOCK          reduce using rule 128 (enteros -> numNegative .)
    RETURN          reduce using rule 128 (enteros -> numNegative .)


state 106

    (105) inicializarOp -> MINUS operacionesMath .

    RPAREN          reduce using rule 105 (inicializarOp -> MINUS operacionesMath .)
    AND             reduce using rule 105 (inicializarOp -> MINUS operacionesMath .)
    OR              reduce using rule 105 (inicializarOp -> MINUS operacionesMath .)
    NOT             reduce using rule 105 (inicializarOp -> MINUS operacionesMath .)
    $end            reduce using rule 105 (inicializarOp -> MINUS operacionesMath .)
    RBLOCK          reduce using rule 105 (inicializarOp -> MINUS operacionesMath .)
    RETURN          reduce using rule 105 (inicializarOp -> MINUS operacionesMath .)


state 107

    (106) inicializarOp -> empty operacionesMath .

    RPAREN          reduce using rule 106 (inicializarOp -> empty operacionesMath .)
    AND             reduce using rule 106 (inicializarOp -> empty operacionesMath .)
    OR              reduce using rule 106 (inicializarOp -> empty operacionesMath .)
    NOT             reduce using rule 106 (inicializarOp -> empty operacionesMath .)
    $end            reduce using rule 106 (inicializarOp -> empty operacionesMath .)
    RBLOCK          reduce using rule 106 (inicializarOp -> empty operacionesMath .)
    RETURN          reduce using rule 106 (inicializarOp -> empty operacionesMath .)


state 108

    (75) declareteFunction -> FUNCTION ID LPAREN params . RPAREN
    (76) declareteFunction -> FUNCTION ID LPAREN params . RPAREN sentencesCmpt

    RPAREN          shift and go to state 157


state 109

    (30) sentencias_if -> IF LPAREN expression operadorLogical . expression RPAREN LBLOCK sentencia RBLOCK
    (32) sentencias_if_else -> IF LPAREN expression operadorLogical . expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (10) expression -> . ID opConditional ID
    (11) expression -> . ID opConditional NUM
    (12) expression -> . NUM opConditional NUM
    (13) expression -> . inicializarOp
    (104) inicializarOp -> . PLUS operacionesMath
    (105) inicializarOp -> . MINUS operacionesMath
    (106) inicializarOp -> . empty operacionesMath
    (42) empty -> .

  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
    ID              shift and go to state 58
    NUM             shift and go to state 59
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    TIMES           reduce using rule 42 (empty -> .)
    PERIOD          reduce using rule 42 (empty -> .)
    RPAREN          reduce using rule 42 (empty -> .)

  ! NUM             [ reduce using rule 42 (empty -> .) ]
  ! MINUS           [ reduce using rule 42 (empty -> .) ]
  ! PLUS            [ reduce using rule 42 (empty -> .) ]

    expression                     shift and go to state 158
    inicializarOp                  shift and go to state 60
    empty                          shift and go to state 63

state 110

    (31) sentencias_if -> IF LPAREN expression RPAREN . LBLOCK sentencia RBLOCK
    (33) sentencias_if_else -> IF LPAREN expression RPAREN . LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK

    LBLOCK          shift and go to state 159


state 111

    (27) operadorLogical -> AND .

    ID              reduce using rule 27 (operadorLogical -> AND .)
    NUM             reduce using rule 27 (operadorLogical -> AND .)
    PLUS            reduce using rule 27 (operadorLogical -> AND .)
    MINUS           reduce using rule 27 (operadorLogical -> AND .)
    RPAREN          reduce using rule 27 (operadorLogical -> AND .)
    TIMES           reduce using rule 27 (operadorLogical -> AND .)
    PERIOD          reduce using rule 27 (operadorLogical -> AND .)


state 112

    (28) operadorLogical -> OR .

    ID              reduce using rule 28 (operadorLogical -> OR .)
    NUM             reduce using rule 28 (operadorLogical -> OR .)
    PLUS            reduce using rule 28 (operadorLogical -> OR .)
    MINUS           reduce using rule 28 (operadorLogical -> OR .)
    RPAREN          reduce using rule 28 (operadorLogical -> OR .)
    TIMES           reduce using rule 28 (operadorLogical -> OR .)
    PERIOD          reduce using rule 28 (operadorLogical -> OR .)


state 113

    (29) operadorLogical -> NOT .

    ID              reduce using rule 29 (operadorLogical -> NOT .)
    NUM             reduce using rule 29 (operadorLogical -> NOT .)
    PLUS            reduce using rule 29 (operadorLogical -> NOT .)
    MINUS           reduce using rule 29 (operadorLogical -> NOT .)
    RPAREN          reduce using rule 29 (operadorLogical -> NOT .)
    TIMES           reduce using rule 29 (operadorLogical -> NOT .)
    PERIOD          reduce using rule 29 (operadorLogical -> NOT .)


state 114

    (34) sentencias_while -> WHILE LPAREN expression RPAREN . LBLOCK sentencia RBLOCK

    LBLOCK          shift and go to state 160


state 115

    (35) sentencias_while -> WHILE LPAREN expression operadorLogical . expression RPAREN LBLOCK sentencia RBLOCK
    (10) expression -> . ID opConditional ID
    (11) expression -> . ID opConditional NUM
    (12) expression -> . NUM opConditional NUM
    (13) expression -> . inicializarOp
    (104) inicializarOp -> . PLUS operacionesMath
    (105) inicializarOp -> . MINUS operacionesMath
    (106) inicializarOp -> . empty operacionesMath
    (42) empty -> .

  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
    ID              shift and go to state 58
    NUM             shift and go to state 59
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    TIMES           reduce using rule 42 (empty -> .)
    PERIOD          reduce using rule 42 (empty -> .)
    RPAREN          reduce using rule 42 (empty -> .)

  ! NUM             [ reduce using rule 42 (empty -> .) ]
  ! MINUS           [ reduce using rule 42 (empty -> .) ]
  ! PLUS            [ reduce using rule 42 (empty -> .) ]

    expression                     shift and go to state 161
    inicializarOp                  shift and go to state 60
    empty                          shift and go to state 63

state 116

    (49) varDeclaration -> varType ID EQUAL arrayDeclare COLON .

    $end            reduce using rule 49 (varDeclaration -> varType ID EQUAL arrayDeclare COLON .)
    RBLOCK          reduce using rule 49 (varDeclaration -> varType ID EQUAL arrayDeclare COLON .)
    RETURN          reduce using rule 49 (varDeclaration -> varType ID EQUAL arrayDeclare COLON .)


state 117

    (50) varDeclaration -> varType ID EQUAL declareMap COLON .

    $end            reduce using rule 50 (varDeclaration -> varType ID EQUAL declareMap COLON .)
    RBLOCK          reduce using rule 50 (varDeclaration -> varType ID EQUAL declareMap COLON .)
    RETURN          reduce using rule 50 (varDeclaration -> varType ID EQUAL declareMap COLON .)


state 118

    (51) varDeclaration -> varType ID EQUAL declararSet COLON .

    $end            reduce using rule 51 (varDeclaration -> varType ID EQUAL declararSet COLON .)
    RBLOCK          reduce using rule 51 (varDeclaration -> varType ID EQUAL declararSet COLON .)
    RETURN          reduce using rule 51 (varDeclaration -> varType ID EQUAL declararSet COLON .)


state 119

    (77) declareteFunction -> varType ID EQUAL FUNCTION LPAREN . params RPAREN
    (81) params -> . paramList
    (82) params -> . empty
    (85) paramList -> . param
    (86) paramList -> . param COMMA paramList
    (42) empty -> .
    (83) param -> . ID
    (84) param -> . ID LBRACKET RBRACKET

    RPAREN          reduce using rule 42 (empty -> .)
    ID              shift and go to state 44

    params                         shift and go to state 162
    paramList                      shift and go to state 46
    empty                          shift and go to state 47
    param                          shift and go to state 48

state 120

    (56) arrayDeclare -> LBRACKET arrayValues . RBRACKET

    RBRACKET        shift and go to state 163


state 121

    (58) arrayValues -> arrayValue .
    (59) arrayValues -> arrayValue . COMMA arrayValue

    RBRACKET        reduce using rule 58 (arrayValues -> arrayValue .)
    RPAREN          reduce using rule 58 (arrayValues -> arrayValue .)
    COMMA           shift and go to state 164


state 122

    (60) arrayValue -> LPAREN . expression RPAREN
    (10) expression -> . ID opConditional ID
    (11) expression -> . ID opConditional NUM
    (12) expression -> . NUM opConditional NUM
    (13) expression -> . inicializarOp
    (104) inicializarOp -> . PLUS operacionesMath
    (105) inicializarOp -> . MINUS operacionesMath
    (106) inicializarOp -> . empty operacionesMath
    (42) empty -> .

  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
    ID              shift and go to state 58
    NUM             shift and go to state 59
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    TIMES           reduce using rule 42 (empty -> .)
    PERIOD          reduce using rule 42 (empty -> .)
    RPAREN          reduce using rule 42 (empty -> .)

  ! NUM             [ reduce using rule 42 (empty -> .) ]
  ! MINUS           [ reduce using rule 42 (empty -> .) ]
  ! PLUS            [ reduce using rule 42 (empty -> .) ]

    expression                     shift and go to state 165
    inicializarOp                  shift and go to state 60
    empty                          shift and go to state 63

state 123

    (61) arrayValue -> ID .

    COMMA           reduce using rule 61 (arrayValue -> ID .)
    RBRACKET        reduce using rule 61 (arrayValue -> ID .)
    RPAREN          reduce using rule 61 (arrayValue -> ID .)


state 124

    (62) arrayValue -> NUM .

    COMMA           reduce using rule 62 (arrayValue -> NUM .)
    RBRACKET        reduce using rule 62 (arrayValue -> NUM .)
    RPAREN          reduce using rule 62 (arrayValue -> NUM .)


state 125

    (63) arrayValue -> STRING .

    COMMA           reduce using rule 63 (arrayValue -> STRING .)
    RBRACKET        reduce using rule 63 (arrayValue -> STRING .)
    RPAREN          reduce using rule 63 (arrayValue -> STRING .)


state 126

    (64) arrayValue -> boolean .

    COMMA           reduce using rule 64 (arrayValue -> boolean .)
    RBRACKET        reduce using rule 64 (arrayValue -> boolean .)
    RPAREN          reduce using rule 64 (arrayValue -> boolean .)


state 127

    (65) arrayValue -> empty .

    COMMA           reduce using rule 65 (arrayValue -> empty .)
    RBRACKET        reduce using rule 65 (arrayValue -> empty .)
    RPAREN          reduce using rule 65 (arrayValue -> empty .)


state 128

    (57) arrayDeclare -> NEW ARRAY . LPAREN arrayValues RPAREN

    LPAREN          shift and go to state 166


state 129

    (69) declareMap -> NEW MAP . LPAREN iterable RPAREN

    LPAREN          shift and go to state 167


state 130

    (92) declararSet -> NEW SET . LPAREN setValues RPAREN

    LPAREN          shift and go to state 168


state 131

    (84) param -> ID LBRACKET RBRACKET .

    COMMA           reduce using rule 84 (param -> ID LBRACKET RBRACKET .)
    RPAREN          reduce using rule 84 (param -> ID LBRACKET RBRACKET .)


state 132

    (86) paramList -> param COMMA paramList .

    RPAREN          reduce using rule 86 (paramList -> param COMMA paramList .)


state 133

    (66) methodArray -> PERIOD PUSH LPAREN arrayValue . RPAREN

    RPAREN          shift and go to state 169


state 134

    (67) methodArray -> PERIOD UNSHIFT LPAREN arrayValue . RPAREN

    RPAREN          shift and go to state 170


state 135

    (68) methodArray -> PERIOD POP LPAREN empty . RPAREN

    RPAREN          shift and go to state 171


state 136

    (101) methodSet -> PERIOD ADD LPAREN setValue . RPAREN

    RPAREN          shift and go to state 172


state 137

    (96) setValue -> ID .

    RPAREN          reduce using rule 96 (setValue -> ID .)
    COMMA           reduce using rule 96 (setValue -> ID .)


state 138

    (97) setValue -> NUM .

    RPAREN          reduce using rule 97 (setValue -> NUM .)
    COMMA           reduce using rule 97 (setValue -> NUM .)


state 139

    (98) setValue -> STRING .

    RPAREN          reduce using rule 98 (setValue -> STRING .)
    COMMA           reduce using rule 98 (setValue -> STRING .)


state 140

    (99) setValue -> boolean .

    RPAREN          reduce using rule 99 (setValue -> boolean .)
    COMMA           reduce using rule 99 (setValue -> boolean .)


state 141

    (100) setValue -> empty .

    RPAREN          reduce using rule 100 (setValue -> empty .)
    COMMA           reduce using rule 100 (setValue -> empty .)


state 142

    (102) methodSet -> PERIOD DELETE LPAREN setValue . RPAREN

    RPAREN          shift and go to state 173


state 143

    (103) methodSet -> PERIOD CLEAR LPAREN empty . RPAREN

    RPAREN          shift and go to state 174


state 144

    (73) methodMap -> PERIOD CLEAR LPAREN RPAREN .

    COLON           reduce using rule 73 (methodMap -> PERIOD CLEAR LPAREN RPAREN .)


state 145

    (74) methodMap -> PERIOD LENGTH LPAREN RPAREN .

    COLON           reduce using rule 74 (methodMap -> PERIOD LENGTH LPAREN RPAREN .)


state 146

    (10) expression -> ID opConditional ID .

    RPAREN          reduce using rule 10 (expression -> ID opConditional ID .)
    AND             reduce using rule 10 (expression -> ID opConditional ID .)
    OR              reduce using rule 10 (expression -> ID opConditional ID .)
    NOT             reduce using rule 10 (expression -> ID opConditional ID .)


state 147

    (11) expression -> ID opConditional NUM .

    RPAREN          reduce using rule 11 (expression -> ID opConditional NUM .)
    AND             reduce using rule 11 (expression -> ID opConditional NUM .)
    OR              reduce using rule 11 (expression -> ID opConditional NUM .)
    NOT             reduce using rule 11 (expression -> ID opConditional NUM .)


state 148

    (12) expression -> NUM opConditional NUM .

    RPAREN          reduce using rule 12 (expression -> NUM opConditional NUM .)
    AND             reduce using rule 12 (expression -> NUM opConditional NUM .)
    OR              reduce using rule 12 (expression -> NUM opConditional NUM .)
    NOT             reduce using rule 12 (expression -> NUM opConditional NUM .)


state 149

    (107) operacionesMath -> numOperadores PLUS . suma
    (116) suma -> numOperadores PLUS . LPAREN numOperadores RPAREN
    (117) suma -> numOperadores PLUS . NUM
    (116) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (117) suma -> . numOperadores PLUS NUM
    (118) suma -> . numOperadores
    (125) numOperadores -> . enteros
    (126) numOperadores -> . decimales
    (127) enteros -> . NUM
    (128) enteros -> . numNegative
    (131) decimales -> . enteros PERIOD NUM
    (129) numNegative -> . MINUS NUM
    (130) numNegative -> .

    LPAREN          shift and go to state 177
    NUM             shift and go to state 178
    MINUS           shift and go to state 100
    PERIOD          reduce using rule 130 (numNegative -> .)
    PLUS            reduce using rule 130 (numNegative -> .)
    RPAREN          reduce using rule 130 (numNegative -> .)
    AND             reduce using rule 130 (numNegative -> .)
    OR              reduce using rule 130 (numNegative -> .)
    NOT             reduce using rule 130 (numNegative -> .)
    $end            reduce using rule 130 (numNegative -> .)
    RBLOCK          reduce using rule 130 (numNegative -> .)
    RETURN          reduce using rule 130 (numNegative -> .)

    numOperadores                  shift and go to state 175
    suma                           shift and go to state 176
    enteros                        shift and go to state 102
    decimales                      shift and go to state 103
    numNegative                    shift and go to state 105

state 150

    (111) operacionesMath -> numOperadores MINUS . restas
    (119) restas -> numOperadores MINUS . LPAREN numOperadores RPAREN
    (120) restas -> numOperadores MINUS . NUM
    (119) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (120) restas -> . numOperadores MINUS NUM
    (121) restas -> . numOperadores
    (125) numOperadores -> . enteros
    (126) numOperadores -> . decimales
    (127) enteros -> . NUM
    (128) enteros -> . numNegative
    (131) decimales -> . enteros PERIOD NUM
    (129) numNegative -> . MINUS NUM
    (130) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
    LPAREN          shift and go to state 181
    NUM             shift and go to state 182
    MINUS           shift and go to state 100
    PERIOD          reduce using rule 130 (numNegative -> .)
    RPAREN          reduce using rule 130 (numNegative -> .)
    AND             reduce using rule 130 (numNegative -> .)
    OR              reduce using rule 130 (numNegative -> .)
    NOT             reduce using rule 130 (numNegative -> .)
    $end            reduce using rule 130 (numNegative -> .)
    RBLOCK          reduce using rule 130 (numNegative -> .)
    RETURN          reduce using rule 130 (numNegative -> .)

  ! MINUS           [ reduce using rule 130 (numNegative -> .) ]

    numOperadores                  shift and go to state 179
    restas                         shift and go to state 180
    enteros                        shift and go to state 102
    decimales                      shift and go to state 103
    numNegative                    shift and go to state 105

state 151

    (114) operacionesMath -> numOperadores TIMES . multiplicacion
    (122) multiplicacion -> numOperadores TIMES . LPAREN numOperadores RPAREN
    (123) multiplicacion -> numOperadores TIMES . NUM
    (122) multiplicacion -> . numOperadores TIMES LPAREN numOperadores RPAREN
    (123) multiplicacion -> . numOperadores TIMES NUM
    (124) multiplicacion -> . numOperadores
    (125) numOperadores -> . enteros
    (126) numOperadores -> . decimales
    (127) enteros -> . NUM
    (128) enteros -> . numNegative
    (131) decimales -> . enteros PERIOD NUM
    (129) numNegative -> . MINUS NUM
    (130) numNegative -> .

    LPAREN          shift and go to state 185
    NUM             shift and go to state 186
    MINUS           shift and go to state 100
    PERIOD          reduce using rule 130 (numNegative -> .)
    TIMES           reduce using rule 130 (numNegative -> .)
    RPAREN          reduce using rule 130 (numNegative -> .)
    AND             reduce using rule 130 (numNegative -> .)
    OR              reduce using rule 130 (numNegative -> .)
    NOT             reduce using rule 130 (numNegative -> .)
    $end            reduce using rule 130 (numNegative -> .)
    RBLOCK          reduce using rule 130 (numNegative -> .)
    RETURN          reduce using rule 130 (numNegative -> .)

    numOperadores                  shift and go to state 183
    multiplicacion                 shift and go to state 184
    enteros                        shift and go to state 102
    decimales                      shift and go to state 103
    numNegative                    shift and go to state 105

state 152

    (109) operacionesMath -> suma operacionesMath .

    RPAREN          reduce using rule 109 (operacionesMath -> suma operacionesMath .)
    AND             reduce using rule 109 (operacionesMath -> suma operacionesMath .)
    OR              reduce using rule 109 (operacionesMath -> suma operacionesMath .)
    NOT             reduce using rule 109 (operacionesMath -> suma operacionesMath .)
    $end            reduce using rule 109 (operacionesMath -> suma operacionesMath .)
    RBLOCK          reduce using rule 109 (operacionesMath -> suma operacionesMath .)
    RETURN          reduce using rule 109 (operacionesMath -> suma operacionesMath .)


state 153

    (112) operacionesMath -> restas operacionesMath .

    RPAREN          reduce using rule 112 (operacionesMath -> restas operacionesMath .)
    AND             reduce using rule 112 (operacionesMath -> restas operacionesMath .)
    OR              reduce using rule 112 (operacionesMath -> restas operacionesMath .)
    NOT             reduce using rule 112 (operacionesMath -> restas operacionesMath .)
    $end            reduce using rule 112 (operacionesMath -> restas operacionesMath .)
    RBLOCK          reduce using rule 112 (operacionesMath -> restas operacionesMath .)
    RETURN          reduce using rule 112 (operacionesMath -> restas operacionesMath .)


state 154

    (129) numNegative -> MINUS NUM .

    PERIOD          reduce using rule 129 (numNegative -> MINUS NUM .)
    PLUS            reduce using rule 129 (numNegative -> MINUS NUM .)
    MINUS           reduce using rule 129 (numNegative -> MINUS NUM .)
    TIMES           reduce using rule 129 (numNegative -> MINUS NUM .)
    NUM             reduce using rule 129 (numNegative -> MINUS NUM .)
    RPAREN          reduce using rule 129 (numNegative -> MINUS NUM .)
    AND             reduce using rule 129 (numNegative -> MINUS NUM .)
    OR              reduce using rule 129 (numNegative -> MINUS NUM .)
    NOT             reduce using rule 129 (numNegative -> MINUS NUM .)
    $end            reduce using rule 129 (numNegative -> MINUS NUM .)
    RBLOCK          reduce using rule 129 (numNegative -> MINUS NUM .)
    RETURN          reduce using rule 129 (numNegative -> MINUS NUM .)


state 155

    (115) operacionesMath -> multiplicacion operacionesMath .

    RPAREN          reduce using rule 115 (operacionesMath -> multiplicacion operacionesMath .)
    AND             reduce using rule 115 (operacionesMath -> multiplicacion operacionesMath .)
    OR              reduce using rule 115 (operacionesMath -> multiplicacion operacionesMath .)
    NOT             reduce using rule 115 (operacionesMath -> multiplicacion operacionesMath .)
    $end            reduce using rule 115 (operacionesMath -> multiplicacion operacionesMath .)
    RBLOCK          reduce using rule 115 (operacionesMath -> multiplicacion operacionesMath .)
    RETURN          reduce using rule 115 (operacionesMath -> multiplicacion operacionesMath .)


state 156

    (131) decimales -> enteros PERIOD . NUM

    NUM             shift and go to state 187


state 157

    (75) declareteFunction -> FUNCTION ID LPAREN params RPAREN .
    (76) declareteFunction -> FUNCTION ID LPAREN params RPAREN . sentencesCmpt
    (78) sentencesCmpt -> . LBLOCK sentencia RBLOCK
    (79) sentencesCmpt -> . LBLOCK sentencia RETURN RBLOCK

    $end            reduce using rule 75 (declareteFunction -> FUNCTION ID LPAREN params RPAREN .)
    RBLOCK          reduce using rule 75 (declareteFunction -> FUNCTION ID LPAREN params RPAREN .)
    RETURN          reduce using rule 75 (declareteFunction -> FUNCTION ID LPAREN params RPAREN .)
    LBLOCK          shift and go to state 189

    sentencesCmpt                  shift and go to state 188

state 158

    (30) sentencias_if -> IF LPAREN expression operadorLogical expression . RPAREN LBLOCK sentencia RBLOCK
    (32) sentencias_if_else -> IF LPAREN expression operadorLogical expression . RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK

    RPAREN          shift and go to state 190


state 159

    (31) sentencias_if -> IF LPAREN expression RPAREN LBLOCK . sentencia RBLOCK
    (33) sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK . sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (1) sentencia -> . callMethods
    (2) sentencia -> . varType ID EQUAL callMethods
    (3) sentencia -> . callFunction
    (4) sentencia -> . javaScript_param
    (5) sentencia -> . varDeclaration
    (6) sentencia -> . controlExpression
    (7) sentencia -> . impresion
    (8) sentencia -> . declareteFunction
    (9) sentencia -> . assingOperadores
    (53) callMethods -> . ID methodArray COLON
    (54) callMethods -> . ID methodSet COLON
    (55) callMethods -> . ID methodMap COLON
    (45) varType -> . LET
    (46) varType -> . CONST
    (47) varType -> . VAR
    (48) varType -> . empty
    (80) callFunction -> . ID LPAREN params RPAREN
    (38) javaScript_param -> . STRING
    (39) javaScript_param -> . NUM
    (40) javaScript_param -> . boolean
    (41) javaScript_param -> . ID
    (49) varDeclaration -> . varType ID EQUAL arrayDeclare COLON
    (50) varDeclaration -> . varType ID EQUAL declareMap COLON
    (51) varDeclaration -> . varType ID EQUAL declararSet COLON
    (52) varDeclaration -> . varType ID COLON
    (15) controlExpression -> . sentencias_if
    (16) controlExpression -> . sentencias_if_else
    (17) controlExpression -> . sentencias_while
    (18) controlExpression -> . impresion
    (19) controlExpression -> . impresion_vacio
    (36) impresion -> . ALERT LPAREN expression RPAREN
    (75) declareteFunction -> . FUNCTION ID LPAREN params RPAREN
    (76) declareteFunction -> . FUNCTION ID LPAREN params RPAREN sentencesCmpt
    (77) declareteFunction -> . varType ID EQUAL FUNCTION LPAREN params RPAREN
    (14) assingOperadores -> . varType ID EQUAL inicializarOp
    (42) empty -> .
    (43) boolean -> . TRUE
    (44) boolean -> . FALSE
    (30) sentencias_if -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (31) sentencias_if -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (32) sentencias_if_else -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (33) sentencias_if_else -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (34) sentencias_while -> . WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (35) sentencias_while -> . WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (37) impresion_vacio -> . ALERT LPAREN RPAREN

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 4
    LET             shift and go to state 12
    CONST           shift and go to state 13
    VAR             shift and go to state 14
    STRING          shift and go to state 16
    NUM             shift and go to state 17
    ALERT           shift and go to state 23
    FUNCTION        shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28

  ! ID              [ reduce using rule 42 (empty -> .) ]

    sentencia                      shift and go to state 191
    callMethods                    shift and go to state 2
    varType                        shift and go to state 3
    callFunction                   shift and go to state 5
    javaScript_param               shift and go to state 6
    varDeclaration                 shift and go to state 7
    controlExpression              shift and go to state 8
    impresion                      shift and go to state 9
    declareteFunction              shift and go to state 10
    assingOperadores               shift and go to state 11
    empty                          shift and go to state 15
    boolean                        shift and go to state 18
    sentencias_if                  shift and go to state 19
    sentencias_if_else             shift and go to state 20
    sentencias_while               shift and go to state 21
    impresion_vacio                shift and go to state 22

state 160

    (34) sentencias_while -> WHILE LPAREN expression RPAREN LBLOCK . sentencia RBLOCK
    (1) sentencia -> . callMethods
    (2) sentencia -> . varType ID EQUAL callMethods
    (3) sentencia -> . callFunction
    (4) sentencia -> . javaScript_param
    (5) sentencia -> . varDeclaration
    (6) sentencia -> . controlExpression
    (7) sentencia -> . impresion
    (8) sentencia -> . declareteFunction
    (9) sentencia -> . assingOperadores
    (53) callMethods -> . ID methodArray COLON
    (54) callMethods -> . ID methodSet COLON
    (55) callMethods -> . ID methodMap COLON
    (45) varType -> . LET
    (46) varType -> . CONST
    (47) varType -> . VAR
    (48) varType -> . empty
    (80) callFunction -> . ID LPAREN params RPAREN
    (38) javaScript_param -> . STRING
    (39) javaScript_param -> . NUM
    (40) javaScript_param -> . boolean
    (41) javaScript_param -> . ID
    (49) varDeclaration -> . varType ID EQUAL arrayDeclare COLON
    (50) varDeclaration -> . varType ID EQUAL declareMap COLON
    (51) varDeclaration -> . varType ID EQUAL declararSet COLON
    (52) varDeclaration -> . varType ID COLON
    (15) controlExpression -> . sentencias_if
    (16) controlExpression -> . sentencias_if_else
    (17) controlExpression -> . sentencias_while
    (18) controlExpression -> . impresion
    (19) controlExpression -> . impresion_vacio
    (36) impresion -> . ALERT LPAREN expression RPAREN
    (75) declareteFunction -> . FUNCTION ID LPAREN params RPAREN
    (76) declareteFunction -> . FUNCTION ID LPAREN params RPAREN sentencesCmpt
    (77) declareteFunction -> . varType ID EQUAL FUNCTION LPAREN params RPAREN
    (14) assingOperadores -> . varType ID EQUAL inicializarOp
    (42) empty -> .
    (43) boolean -> . TRUE
    (44) boolean -> . FALSE
    (30) sentencias_if -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (31) sentencias_if -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (32) sentencias_if_else -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (33) sentencias_if_else -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (34) sentencias_while -> . WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (35) sentencias_while -> . WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (37) impresion_vacio -> . ALERT LPAREN RPAREN

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 4
    LET             shift and go to state 12
    CONST           shift and go to state 13
    VAR             shift and go to state 14
    STRING          shift and go to state 16
    NUM             shift and go to state 17
    ALERT           shift and go to state 23
    FUNCTION        shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28

  ! ID              [ reduce using rule 42 (empty -> .) ]

    sentencia                      shift and go to state 192
    callMethods                    shift and go to state 2
    varType                        shift and go to state 3
    callFunction                   shift and go to state 5
    javaScript_param               shift and go to state 6
    varDeclaration                 shift and go to state 7
    controlExpression              shift and go to state 8
    impresion                      shift and go to state 9
    declareteFunction              shift and go to state 10
    assingOperadores               shift and go to state 11
    empty                          shift and go to state 15
    boolean                        shift and go to state 18
    sentencias_if                  shift and go to state 19
    sentencias_if_else             shift and go to state 20
    sentencias_while               shift and go to state 21
    impresion_vacio                shift and go to state 22

state 161

    (35) sentencias_while -> WHILE LPAREN expression operadorLogical expression . RPAREN LBLOCK sentencia RBLOCK

    RPAREN          shift and go to state 193


state 162

    (77) declareteFunction -> varType ID EQUAL FUNCTION LPAREN params . RPAREN

    RPAREN          shift and go to state 194


state 163

    (56) arrayDeclare -> LBRACKET arrayValues RBRACKET .

    COLON           reduce using rule 56 (arrayDeclare -> LBRACKET arrayValues RBRACKET .)
    RPAREN          reduce using rule 56 (arrayDeclare -> LBRACKET arrayValues RBRACKET .)


state 164

    (59) arrayValues -> arrayValue COMMA . arrayValue
    (60) arrayValue -> . LPAREN expression RPAREN
    (61) arrayValue -> . ID
    (62) arrayValue -> . NUM
    (63) arrayValue -> . STRING
    (64) arrayValue -> . boolean
    (65) arrayValue -> . empty
    (43) boolean -> . TRUE
    (44) boolean -> . FALSE
    (42) empty -> .

    LPAREN          shift and go to state 122
    ID              shift and go to state 123
    NUM             shift and go to state 124
    STRING          shift and go to state 125
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    RBRACKET        reduce using rule 42 (empty -> .)
    RPAREN          reduce using rule 42 (empty -> .)

    arrayValue                     shift and go to state 195
    boolean                        shift and go to state 126
    empty                          shift and go to state 127

state 165

    (60) arrayValue -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 196


state 166

    (57) arrayDeclare -> NEW ARRAY LPAREN . arrayValues RPAREN
    (58) arrayValues -> . arrayValue
    (59) arrayValues -> . arrayValue COMMA arrayValue
    (60) arrayValue -> . LPAREN expression RPAREN
    (61) arrayValue -> . ID
    (62) arrayValue -> . NUM
    (63) arrayValue -> . STRING
    (64) arrayValue -> . boolean
    (65) arrayValue -> . empty
    (43) boolean -> . TRUE
    (44) boolean -> . FALSE
    (42) empty -> .

    LPAREN          shift and go to state 122
    ID              shift and go to state 123
    NUM             shift and go to state 124
    STRING          shift and go to state 125
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    COMMA           reduce using rule 42 (empty -> .)
    RPAREN          reduce using rule 42 (empty -> .)

    arrayValues                    shift and go to state 197
    arrayValue                     shift and go to state 121
    boolean                        shift and go to state 126
    empty                          shift and go to state 127

state 167

    (69) declareMap -> NEW MAP LPAREN . iterable RPAREN
    (70) iterable -> . arrayDeclare
    (71) iterable -> . declararSet
    (72) iterable -> . empty
    (56) arrayDeclare -> . LBRACKET arrayValues RBRACKET
    (57) arrayDeclare -> . NEW ARRAY LPAREN arrayValues RPAREN
    (92) declararSet -> . NEW SET LPAREN setValues RPAREN
    (42) empty -> .

    LBRACKET        shift and go to state 74
    NEW             shift and go to state 198
    RPAREN          reduce using rule 42 (empty -> .)

    iterable                       shift and go to state 199
    arrayDeclare                   shift and go to state 200
    declararSet                    shift and go to state 201
    empty                          shift and go to state 202

state 168

    (92) declararSet -> NEW SET LPAREN . setValues RPAREN
    (94) setValues -> . setValue
    (95) setValues -> . setValue COMMA setValue
    (96) setValue -> . ID
    (97) setValue -> . NUM
    (98) setValue -> . STRING
    (99) setValue -> . boolean
    (100) setValue -> . empty
    (43) boolean -> . TRUE
    (44) boolean -> . FALSE
    (42) empty -> .

    ID              shift and go to state 137
    NUM             shift and go to state 138
    STRING          shift and go to state 139
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    COMMA           reduce using rule 42 (empty -> .)
    RPAREN          reduce using rule 42 (empty -> .)

    setValues                      shift and go to state 203
    setValue                       shift and go to state 204
    boolean                        shift and go to state 140
    empty                          shift and go to state 141

state 169

    (66) methodArray -> PERIOD PUSH LPAREN arrayValue RPAREN .

    COLON           reduce using rule 66 (methodArray -> PERIOD PUSH LPAREN arrayValue RPAREN .)


state 170

    (67) methodArray -> PERIOD UNSHIFT LPAREN arrayValue RPAREN .

    COLON           reduce using rule 67 (methodArray -> PERIOD UNSHIFT LPAREN arrayValue RPAREN .)


state 171

    (68) methodArray -> PERIOD POP LPAREN empty RPAREN .

    COLON           reduce using rule 68 (methodArray -> PERIOD POP LPAREN empty RPAREN .)


state 172

    (101) methodSet -> PERIOD ADD LPAREN setValue RPAREN .

    COLON           reduce using rule 101 (methodSet -> PERIOD ADD LPAREN setValue RPAREN .)


state 173

    (102) methodSet -> PERIOD DELETE LPAREN setValue RPAREN .

    COLON           reduce using rule 102 (methodSet -> PERIOD DELETE LPAREN setValue RPAREN .)


state 174

    (103) methodSet -> PERIOD CLEAR LPAREN empty RPAREN .

    COLON           reduce using rule 103 (methodSet -> PERIOD CLEAR LPAREN empty RPAREN .)


state 175

    (116) suma -> numOperadores . PLUS LPAREN numOperadores RPAREN
    (117) suma -> numOperadores . PLUS NUM
    (118) suma -> numOperadores .

    PLUS            shift and go to state 205
    RPAREN          reduce using rule 118 (suma -> numOperadores .)
    AND             reduce using rule 118 (suma -> numOperadores .)
    OR              reduce using rule 118 (suma -> numOperadores .)
    NOT             reduce using rule 118 (suma -> numOperadores .)
    $end            reduce using rule 118 (suma -> numOperadores .)
    RBLOCK          reduce using rule 118 (suma -> numOperadores .)
    RETURN          reduce using rule 118 (suma -> numOperadores .)


state 176

    (107) operacionesMath -> numOperadores PLUS suma .

    RPAREN          reduce using rule 107 (operacionesMath -> numOperadores PLUS suma .)
    AND             reduce using rule 107 (operacionesMath -> numOperadores PLUS suma .)
    OR              reduce using rule 107 (operacionesMath -> numOperadores PLUS suma .)
    NOT             reduce using rule 107 (operacionesMath -> numOperadores PLUS suma .)
    $end            reduce using rule 107 (operacionesMath -> numOperadores PLUS suma .)
    RBLOCK          reduce using rule 107 (operacionesMath -> numOperadores PLUS suma .)
    RETURN          reduce using rule 107 (operacionesMath -> numOperadores PLUS suma .)


state 177

    (116) suma -> numOperadores PLUS LPAREN . numOperadores RPAREN
    (125) numOperadores -> . enteros
    (126) numOperadores -> . decimales
    (127) enteros -> . NUM
    (128) enteros -> . numNegative
    (131) decimales -> . enteros PERIOD NUM
    (129) numNegative -> . MINUS NUM
    (130) numNegative -> .

    NUM             shift and go to state 104
    MINUS           shift and go to state 100
    PERIOD          reduce using rule 130 (numNegative -> .)
    RPAREN          reduce using rule 130 (numNegative -> .)

    numOperadores                  shift and go to state 206
    enteros                        shift and go to state 102
    decimales                      shift and go to state 103
    numNegative                    shift and go to state 105

state 178

    (117) suma -> numOperadores PLUS NUM .
    (127) enteros -> NUM .

  ! reduce/reduce conflict for PERIOD resolved using rule 117 (suma -> numOperadores PLUS NUM .)
  ! reduce/reduce conflict for PLUS resolved using rule 117 (suma -> numOperadores PLUS NUM .)
  ! reduce/reduce conflict for RPAREN resolved using rule 117 (suma -> numOperadores PLUS NUM .)
  ! reduce/reduce conflict for AND resolved using rule 117 (suma -> numOperadores PLUS NUM .)
  ! reduce/reduce conflict for OR resolved using rule 117 (suma -> numOperadores PLUS NUM .)
  ! reduce/reduce conflict for NOT resolved using rule 117 (suma -> numOperadores PLUS NUM .)
  ! reduce/reduce conflict for $end resolved using rule 117 (suma -> numOperadores PLUS NUM .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 117 (suma -> numOperadores PLUS NUM .)
  ! reduce/reduce conflict for RETURN resolved using rule 117 (suma -> numOperadores PLUS NUM .)
    NUM             reduce using rule 117 (suma -> numOperadores PLUS NUM .)
    MINUS           reduce using rule 117 (suma -> numOperadores PLUS NUM .)
    PLUS            reduce using rule 117 (suma -> numOperadores PLUS NUM .)
    TIMES           reduce using rule 117 (suma -> numOperadores PLUS NUM .)
    PERIOD          reduce using rule 117 (suma -> numOperadores PLUS NUM .)
    RPAREN          reduce using rule 117 (suma -> numOperadores PLUS NUM .)
    AND             reduce using rule 117 (suma -> numOperadores PLUS NUM .)
    OR              reduce using rule 117 (suma -> numOperadores PLUS NUM .)
    NOT             reduce using rule 117 (suma -> numOperadores PLUS NUM .)
    $end            reduce using rule 117 (suma -> numOperadores PLUS NUM .)
    RBLOCK          reduce using rule 117 (suma -> numOperadores PLUS NUM .)
    RETURN          reduce using rule 117 (suma -> numOperadores PLUS NUM .)

  ! PERIOD          [ reduce using rule 127 (enteros -> NUM .) ]
  ! PLUS            [ reduce using rule 127 (enteros -> NUM .) ]
  ! RPAREN          [ reduce using rule 127 (enteros -> NUM .) ]
  ! AND             [ reduce using rule 127 (enteros -> NUM .) ]
  ! OR              [ reduce using rule 127 (enteros -> NUM .) ]
  ! NOT             [ reduce using rule 127 (enteros -> NUM .) ]
  ! $end            [ reduce using rule 127 (enteros -> NUM .) ]
  ! RBLOCK          [ reduce using rule 127 (enteros -> NUM .) ]
  ! RETURN          [ reduce using rule 127 (enteros -> NUM .) ]


state 179

    (119) restas -> numOperadores . MINUS LPAREN numOperadores RPAREN
    (120) restas -> numOperadores . MINUS NUM
    (121) restas -> numOperadores .

    MINUS           shift and go to state 207
    RPAREN          reduce using rule 121 (restas -> numOperadores .)
    AND             reduce using rule 121 (restas -> numOperadores .)
    OR              reduce using rule 121 (restas -> numOperadores .)
    NOT             reduce using rule 121 (restas -> numOperadores .)
    $end            reduce using rule 121 (restas -> numOperadores .)
    RBLOCK          reduce using rule 121 (restas -> numOperadores .)
    RETURN          reduce using rule 121 (restas -> numOperadores .)


state 180

    (111) operacionesMath -> numOperadores MINUS restas .

    RPAREN          reduce using rule 111 (operacionesMath -> numOperadores MINUS restas .)
    AND             reduce using rule 111 (operacionesMath -> numOperadores MINUS restas .)
    OR              reduce using rule 111 (operacionesMath -> numOperadores MINUS restas .)
    NOT             reduce using rule 111 (operacionesMath -> numOperadores MINUS restas .)
    $end            reduce using rule 111 (operacionesMath -> numOperadores MINUS restas .)
    RBLOCK          reduce using rule 111 (operacionesMath -> numOperadores MINUS restas .)
    RETURN          reduce using rule 111 (operacionesMath -> numOperadores MINUS restas .)


state 181

    (119) restas -> numOperadores MINUS LPAREN . numOperadores RPAREN
    (125) numOperadores -> . enteros
    (126) numOperadores -> . decimales
    (127) enteros -> . NUM
    (128) enteros -> . numNegative
    (131) decimales -> . enteros PERIOD NUM
    (129) numNegative -> . MINUS NUM
    (130) numNegative -> .

    NUM             shift and go to state 104
    MINUS           shift and go to state 100
    PERIOD          reduce using rule 130 (numNegative -> .)
    RPAREN          reduce using rule 130 (numNegative -> .)

    numOperadores                  shift and go to state 208
    enteros                        shift and go to state 102
    decimales                      shift and go to state 103
    numNegative                    shift and go to state 105

state 182

    (120) restas -> numOperadores MINUS NUM .
    (127) enteros -> NUM .

  ! reduce/reduce conflict for PERIOD resolved using rule 120 (restas -> numOperadores MINUS NUM .)
  ! reduce/reduce conflict for MINUS resolved using rule 120 (restas -> numOperadores MINUS NUM .)
  ! reduce/reduce conflict for RPAREN resolved using rule 120 (restas -> numOperadores MINUS NUM .)
  ! reduce/reduce conflict for AND resolved using rule 120 (restas -> numOperadores MINUS NUM .)
  ! reduce/reduce conflict for OR resolved using rule 120 (restas -> numOperadores MINUS NUM .)
  ! reduce/reduce conflict for NOT resolved using rule 120 (restas -> numOperadores MINUS NUM .)
  ! reduce/reduce conflict for $end resolved using rule 120 (restas -> numOperadores MINUS NUM .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 120 (restas -> numOperadores MINUS NUM .)
  ! reduce/reduce conflict for RETURN resolved using rule 120 (restas -> numOperadores MINUS NUM .)
    NUM             reduce using rule 120 (restas -> numOperadores MINUS NUM .)
    MINUS           reduce using rule 120 (restas -> numOperadores MINUS NUM .)
    PLUS            reduce using rule 120 (restas -> numOperadores MINUS NUM .)
    TIMES           reduce using rule 120 (restas -> numOperadores MINUS NUM .)
    PERIOD          reduce using rule 120 (restas -> numOperadores MINUS NUM .)
    RPAREN          reduce using rule 120 (restas -> numOperadores MINUS NUM .)
    AND             reduce using rule 120 (restas -> numOperadores MINUS NUM .)
    OR              reduce using rule 120 (restas -> numOperadores MINUS NUM .)
    NOT             reduce using rule 120 (restas -> numOperadores MINUS NUM .)
    $end            reduce using rule 120 (restas -> numOperadores MINUS NUM .)
    RBLOCK          reduce using rule 120 (restas -> numOperadores MINUS NUM .)
    RETURN          reduce using rule 120 (restas -> numOperadores MINUS NUM .)

  ! PERIOD          [ reduce using rule 127 (enteros -> NUM .) ]
  ! MINUS           [ reduce using rule 127 (enteros -> NUM .) ]
  ! RPAREN          [ reduce using rule 127 (enteros -> NUM .) ]
  ! AND             [ reduce using rule 127 (enteros -> NUM .) ]
  ! OR              [ reduce using rule 127 (enteros -> NUM .) ]
  ! NOT             [ reduce using rule 127 (enteros -> NUM .) ]
  ! $end            [ reduce using rule 127 (enteros -> NUM .) ]
  ! RBLOCK          [ reduce using rule 127 (enteros -> NUM .) ]
  ! RETURN          [ reduce using rule 127 (enteros -> NUM .) ]


state 183

    (122) multiplicacion -> numOperadores . TIMES LPAREN numOperadores RPAREN
    (123) multiplicacion -> numOperadores . TIMES NUM
    (124) multiplicacion -> numOperadores .

    TIMES           shift and go to state 209
    RPAREN          reduce using rule 124 (multiplicacion -> numOperadores .)
    AND             reduce using rule 124 (multiplicacion -> numOperadores .)
    OR              reduce using rule 124 (multiplicacion -> numOperadores .)
    NOT             reduce using rule 124 (multiplicacion -> numOperadores .)
    $end            reduce using rule 124 (multiplicacion -> numOperadores .)
    RBLOCK          reduce using rule 124 (multiplicacion -> numOperadores .)
    RETURN          reduce using rule 124 (multiplicacion -> numOperadores .)


state 184

    (114) operacionesMath -> numOperadores TIMES multiplicacion .

    RPAREN          reduce using rule 114 (operacionesMath -> numOperadores TIMES multiplicacion .)
    AND             reduce using rule 114 (operacionesMath -> numOperadores TIMES multiplicacion .)
    OR              reduce using rule 114 (operacionesMath -> numOperadores TIMES multiplicacion .)
    NOT             reduce using rule 114 (operacionesMath -> numOperadores TIMES multiplicacion .)
    $end            reduce using rule 114 (operacionesMath -> numOperadores TIMES multiplicacion .)
    RBLOCK          reduce using rule 114 (operacionesMath -> numOperadores TIMES multiplicacion .)
    RETURN          reduce using rule 114 (operacionesMath -> numOperadores TIMES multiplicacion .)


state 185

    (122) multiplicacion -> numOperadores TIMES LPAREN . numOperadores RPAREN
    (125) numOperadores -> . enteros
    (126) numOperadores -> . decimales
    (127) enteros -> . NUM
    (128) enteros -> . numNegative
    (131) decimales -> . enteros PERIOD NUM
    (129) numNegative -> . MINUS NUM
    (130) numNegative -> .

    NUM             shift and go to state 104
    MINUS           shift and go to state 100
    PERIOD          reduce using rule 130 (numNegative -> .)
    RPAREN          reduce using rule 130 (numNegative -> .)

    numOperadores                  shift and go to state 210
    enteros                        shift and go to state 102
    decimales                      shift and go to state 103
    numNegative                    shift and go to state 105

state 186

    (123) multiplicacion -> numOperadores TIMES NUM .
    (127) enteros -> NUM .

  ! reduce/reduce conflict for PERIOD resolved using rule 123 (multiplicacion -> numOperadores TIMES NUM .)
  ! reduce/reduce conflict for TIMES resolved using rule 123 (multiplicacion -> numOperadores TIMES NUM .)
  ! reduce/reduce conflict for RPAREN resolved using rule 123 (multiplicacion -> numOperadores TIMES NUM .)
  ! reduce/reduce conflict for AND resolved using rule 123 (multiplicacion -> numOperadores TIMES NUM .)
  ! reduce/reduce conflict for OR resolved using rule 123 (multiplicacion -> numOperadores TIMES NUM .)
  ! reduce/reduce conflict for NOT resolved using rule 123 (multiplicacion -> numOperadores TIMES NUM .)
  ! reduce/reduce conflict for $end resolved using rule 123 (multiplicacion -> numOperadores TIMES NUM .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 123 (multiplicacion -> numOperadores TIMES NUM .)
  ! reduce/reduce conflict for RETURN resolved using rule 123 (multiplicacion -> numOperadores TIMES NUM .)
    NUM             reduce using rule 123 (multiplicacion -> numOperadores TIMES NUM .)
    MINUS           reduce using rule 123 (multiplicacion -> numOperadores TIMES NUM .)
    PLUS            reduce using rule 123 (multiplicacion -> numOperadores TIMES NUM .)
    TIMES           reduce using rule 123 (multiplicacion -> numOperadores TIMES NUM .)
    PERIOD          reduce using rule 123 (multiplicacion -> numOperadores TIMES NUM .)
    RPAREN          reduce using rule 123 (multiplicacion -> numOperadores TIMES NUM .)
    AND             reduce using rule 123 (multiplicacion -> numOperadores TIMES NUM .)
    OR              reduce using rule 123 (multiplicacion -> numOperadores TIMES NUM .)
    NOT             reduce using rule 123 (multiplicacion -> numOperadores TIMES NUM .)
    $end            reduce using rule 123 (multiplicacion -> numOperadores TIMES NUM .)
    RBLOCK          reduce using rule 123 (multiplicacion -> numOperadores TIMES NUM .)
    RETURN          reduce using rule 123 (multiplicacion -> numOperadores TIMES NUM .)

  ! PERIOD          [ reduce using rule 127 (enteros -> NUM .) ]
  ! TIMES           [ reduce using rule 127 (enteros -> NUM .) ]
  ! RPAREN          [ reduce using rule 127 (enteros -> NUM .) ]
  ! AND             [ reduce using rule 127 (enteros -> NUM .) ]
  ! OR              [ reduce using rule 127 (enteros -> NUM .) ]
  ! NOT             [ reduce using rule 127 (enteros -> NUM .) ]
  ! $end            [ reduce using rule 127 (enteros -> NUM .) ]
  ! RBLOCK          [ reduce using rule 127 (enteros -> NUM .) ]
  ! RETURN          [ reduce using rule 127 (enteros -> NUM .) ]


state 187

    (131) decimales -> enteros PERIOD NUM .

    PLUS            reduce using rule 131 (decimales -> enteros PERIOD NUM .)
    MINUS           reduce using rule 131 (decimales -> enteros PERIOD NUM .)
    TIMES           reduce using rule 131 (decimales -> enteros PERIOD NUM .)
    NUM             reduce using rule 131 (decimales -> enteros PERIOD NUM .)
    PERIOD          reduce using rule 131 (decimales -> enteros PERIOD NUM .)
    RPAREN          reduce using rule 131 (decimales -> enteros PERIOD NUM .)
    AND             reduce using rule 131 (decimales -> enteros PERIOD NUM .)
    OR              reduce using rule 131 (decimales -> enteros PERIOD NUM .)
    NOT             reduce using rule 131 (decimales -> enteros PERIOD NUM .)
    $end            reduce using rule 131 (decimales -> enteros PERIOD NUM .)
    RBLOCK          reduce using rule 131 (decimales -> enteros PERIOD NUM .)
    RETURN          reduce using rule 131 (decimales -> enteros PERIOD NUM .)


state 188

    (76) declareteFunction -> FUNCTION ID LPAREN params RPAREN sentencesCmpt .

    $end            reduce using rule 76 (declareteFunction -> FUNCTION ID LPAREN params RPAREN sentencesCmpt .)
    RBLOCK          reduce using rule 76 (declareteFunction -> FUNCTION ID LPAREN params RPAREN sentencesCmpt .)
    RETURN          reduce using rule 76 (declareteFunction -> FUNCTION ID LPAREN params RPAREN sentencesCmpt .)


state 189

    (78) sentencesCmpt -> LBLOCK . sentencia RBLOCK
    (79) sentencesCmpt -> LBLOCK . sentencia RETURN RBLOCK
    (1) sentencia -> . callMethods
    (2) sentencia -> . varType ID EQUAL callMethods
    (3) sentencia -> . callFunction
    (4) sentencia -> . javaScript_param
    (5) sentencia -> . varDeclaration
    (6) sentencia -> . controlExpression
    (7) sentencia -> . impresion
    (8) sentencia -> . declareteFunction
    (9) sentencia -> . assingOperadores
    (53) callMethods -> . ID methodArray COLON
    (54) callMethods -> . ID methodSet COLON
    (55) callMethods -> . ID methodMap COLON
    (45) varType -> . LET
    (46) varType -> . CONST
    (47) varType -> . VAR
    (48) varType -> . empty
    (80) callFunction -> . ID LPAREN params RPAREN
    (38) javaScript_param -> . STRING
    (39) javaScript_param -> . NUM
    (40) javaScript_param -> . boolean
    (41) javaScript_param -> . ID
    (49) varDeclaration -> . varType ID EQUAL arrayDeclare COLON
    (50) varDeclaration -> . varType ID EQUAL declareMap COLON
    (51) varDeclaration -> . varType ID EQUAL declararSet COLON
    (52) varDeclaration -> . varType ID COLON
    (15) controlExpression -> . sentencias_if
    (16) controlExpression -> . sentencias_if_else
    (17) controlExpression -> . sentencias_while
    (18) controlExpression -> . impresion
    (19) controlExpression -> . impresion_vacio
    (36) impresion -> . ALERT LPAREN expression RPAREN
    (75) declareteFunction -> . FUNCTION ID LPAREN params RPAREN
    (76) declareteFunction -> . FUNCTION ID LPAREN params RPAREN sentencesCmpt
    (77) declareteFunction -> . varType ID EQUAL FUNCTION LPAREN params RPAREN
    (14) assingOperadores -> . varType ID EQUAL inicializarOp
    (42) empty -> .
    (43) boolean -> . TRUE
    (44) boolean -> . FALSE
    (30) sentencias_if -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (31) sentencias_if -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (32) sentencias_if_else -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (33) sentencias_if_else -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (34) sentencias_while -> . WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (35) sentencias_while -> . WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (37) impresion_vacio -> . ALERT LPAREN RPAREN

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 4
    LET             shift and go to state 12
    CONST           shift and go to state 13
    VAR             shift and go to state 14
    STRING          shift and go to state 16
    NUM             shift and go to state 17
    ALERT           shift and go to state 23
    FUNCTION        shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28

  ! ID              [ reduce using rule 42 (empty -> .) ]

    sentencia                      shift and go to state 211
    callMethods                    shift and go to state 2
    varType                        shift and go to state 3
    callFunction                   shift and go to state 5
    javaScript_param               shift and go to state 6
    varDeclaration                 shift and go to state 7
    controlExpression              shift and go to state 8
    impresion                      shift and go to state 9
    declareteFunction              shift and go to state 10
    assingOperadores               shift and go to state 11
    empty                          shift and go to state 15
    boolean                        shift and go to state 18
    sentencias_if                  shift and go to state 19
    sentencias_if_else             shift and go to state 20
    sentencias_while               shift and go to state 21
    impresion_vacio                shift and go to state 22

state 190

    (30) sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN . LBLOCK sentencia RBLOCK
    (32) sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN . LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK

    LBLOCK          shift and go to state 212


state 191

    (31) sentencias_if -> IF LPAREN expression RPAREN LBLOCK sentencia . RBLOCK
    (33) sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia . RBLOCK ELSE LBLOCK sentencia RBLOCK

    RBLOCK          shift and go to state 213


state 192

    (34) sentencias_while -> WHILE LPAREN expression RPAREN LBLOCK sentencia . RBLOCK

    RBLOCK          shift and go to state 214


state 193

    (35) sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN . LBLOCK sentencia RBLOCK

    LBLOCK          shift and go to state 215


state 194

    (77) declareteFunction -> varType ID EQUAL FUNCTION LPAREN params RPAREN .

    $end            reduce using rule 77 (declareteFunction -> varType ID EQUAL FUNCTION LPAREN params RPAREN .)
    RBLOCK          reduce using rule 77 (declareteFunction -> varType ID EQUAL FUNCTION LPAREN params RPAREN .)
    RETURN          reduce using rule 77 (declareteFunction -> varType ID EQUAL FUNCTION LPAREN params RPAREN .)


state 195

    (59) arrayValues -> arrayValue COMMA arrayValue .

    RBRACKET        reduce using rule 59 (arrayValues -> arrayValue COMMA arrayValue .)
    RPAREN          reduce using rule 59 (arrayValues -> arrayValue COMMA arrayValue .)


state 196

    (60) arrayValue -> LPAREN expression RPAREN .

    COMMA           reduce using rule 60 (arrayValue -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 60 (arrayValue -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 60 (arrayValue -> LPAREN expression RPAREN .)


state 197

    (57) arrayDeclare -> NEW ARRAY LPAREN arrayValues . RPAREN

    RPAREN          shift and go to state 216


state 198

    (57) arrayDeclare -> NEW . ARRAY LPAREN arrayValues RPAREN
    (92) declararSet -> NEW . SET LPAREN setValues RPAREN

    ARRAY           shift and go to state 128
    SET             shift and go to state 130


state 199

    (69) declareMap -> NEW MAP LPAREN iterable . RPAREN

    RPAREN          shift and go to state 217


state 200

    (70) iterable -> arrayDeclare .

    RPAREN          reduce using rule 70 (iterable -> arrayDeclare .)


state 201

    (71) iterable -> declararSet .

    RPAREN          reduce using rule 71 (iterable -> declararSet .)


state 202

    (72) iterable -> empty .

    RPAREN          reduce using rule 72 (iterable -> empty .)


state 203

    (92) declararSet -> NEW SET LPAREN setValues . RPAREN

    RPAREN          shift and go to state 218


state 204

    (94) setValues -> setValue .
    (95) setValues -> setValue . COMMA setValue

    RPAREN          reduce using rule 94 (setValues -> setValue .)
    COMMA           shift and go to state 219


state 205

    (116) suma -> numOperadores PLUS . LPAREN numOperadores RPAREN
    (117) suma -> numOperadores PLUS . NUM

    LPAREN          shift and go to state 177
    NUM             shift and go to state 220


state 206

    (116) suma -> numOperadores PLUS LPAREN numOperadores . RPAREN

    RPAREN          shift and go to state 221


state 207

    (119) restas -> numOperadores MINUS . LPAREN numOperadores RPAREN
    (120) restas -> numOperadores MINUS . NUM

    LPAREN          shift and go to state 181
    NUM             shift and go to state 222


state 208

    (119) restas -> numOperadores MINUS LPAREN numOperadores . RPAREN

    RPAREN          shift and go to state 223


state 209

    (122) multiplicacion -> numOperadores TIMES . LPAREN numOperadores RPAREN
    (123) multiplicacion -> numOperadores TIMES . NUM

    LPAREN          shift and go to state 185
    NUM             shift and go to state 224


state 210

    (122) multiplicacion -> numOperadores TIMES LPAREN numOperadores . RPAREN

    RPAREN          shift and go to state 225


state 211

    (78) sentencesCmpt -> LBLOCK sentencia . RBLOCK
    (79) sentencesCmpt -> LBLOCK sentencia . RETURN RBLOCK

    RBLOCK          shift and go to state 226
    RETURN          shift and go to state 227


state 212

    (30) sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK . sentencia RBLOCK
    (32) sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK . sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (1) sentencia -> . callMethods
    (2) sentencia -> . varType ID EQUAL callMethods
    (3) sentencia -> . callFunction
    (4) sentencia -> . javaScript_param
    (5) sentencia -> . varDeclaration
    (6) sentencia -> . controlExpression
    (7) sentencia -> . impresion
    (8) sentencia -> . declareteFunction
    (9) sentencia -> . assingOperadores
    (53) callMethods -> . ID methodArray COLON
    (54) callMethods -> . ID methodSet COLON
    (55) callMethods -> . ID methodMap COLON
    (45) varType -> . LET
    (46) varType -> . CONST
    (47) varType -> . VAR
    (48) varType -> . empty
    (80) callFunction -> . ID LPAREN params RPAREN
    (38) javaScript_param -> . STRING
    (39) javaScript_param -> . NUM
    (40) javaScript_param -> . boolean
    (41) javaScript_param -> . ID
    (49) varDeclaration -> . varType ID EQUAL arrayDeclare COLON
    (50) varDeclaration -> . varType ID EQUAL declareMap COLON
    (51) varDeclaration -> . varType ID EQUAL declararSet COLON
    (52) varDeclaration -> . varType ID COLON
    (15) controlExpression -> . sentencias_if
    (16) controlExpression -> . sentencias_if_else
    (17) controlExpression -> . sentencias_while
    (18) controlExpression -> . impresion
    (19) controlExpression -> . impresion_vacio
    (36) impresion -> . ALERT LPAREN expression RPAREN
    (75) declareteFunction -> . FUNCTION ID LPAREN params RPAREN
    (76) declareteFunction -> . FUNCTION ID LPAREN params RPAREN sentencesCmpt
    (77) declareteFunction -> . varType ID EQUAL FUNCTION LPAREN params RPAREN
    (14) assingOperadores -> . varType ID EQUAL inicializarOp
    (42) empty -> .
    (43) boolean -> . TRUE
    (44) boolean -> . FALSE
    (30) sentencias_if -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (31) sentencias_if -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (32) sentencias_if_else -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (33) sentencias_if_else -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (34) sentencias_while -> . WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (35) sentencias_while -> . WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (37) impresion_vacio -> . ALERT LPAREN RPAREN

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 4
    LET             shift and go to state 12
    CONST           shift and go to state 13
    VAR             shift and go to state 14
    STRING          shift and go to state 16
    NUM             shift and go to state 17
    ALERT           shift and go to state 23
    FUNCTION        shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28

  ! ID              [ reduce using rule 42 (empty -> .) ]

    sentencia                      shift and go to state 228
    callMethods                    shift and go to state 2
    varType                        shift and go to state 3
    callFunction                   shift and go to state 5
    javaScript_param               shift and go to state 6
    varDeclaration                 shift and go to state 7
    controlExpression              shift and go to state 8
    impresion                      shift and go to state 9
    declareteFunction              shift and go to state 10
    assingOperadores               shift and go to state 11
    empty                          shift and go to state 15
    boolean                        shift and go to state 18
    sentencias_if                  shift and go to state 19
    sentencias_if_else             shift and go to state 20
    sentencias_while               shift and go to state 21
    impresion_vacio                shift and go to state 22

state 213

    (31) sentencias_if -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK .
    (33) sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK . ELSE LBLOCK sentencia RBLOCK

    $end            reduce using rule 31 (sentencias_if -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK .)
    RBLOCK          reduce using rule 31 (sentencias_if -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK .)
    RETURN          reduce using rule 31 (sentencias_if -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK .)
    ELSE            shift and go to state 229


state 214

    (34) sentencias_while -> WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK .

    $end            reduce using rule 34 (sentencias_while -> WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK .)
    RBLOCK          reduce using rule 34 (sentencias_while -> WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK .)
    RETURN          reduce using rule 34 (sentencias_while -> WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK .)


state 215

    (35) sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK . sentencia RBLOCK
    (1) sentencia -> . callMethods
    (2) sentencia -> . varType ID EQUAL callMethods
    (3) sentencia -> . callFunction
    (4) sentencia -> . javaScript_param
    (5) sentencia -> . varDeclaration
    (6) sentencia -> . controlExpression
    (7) sentencia -> . impresion
    (8) sentencia -> . declareteFunction
    (9) sentencia -> . assingOperadores
    (53) callMethods -> . ID methodArray COLON
    (54) callMethods -> . ID methodSet COLON
    (55) callMethods -> . ID methodMap COLON
    (45) varType -> . LET
    (46) varType -> . CONST
    (47) varType -> . VAR
    (48) varType -> . empty
    (80) callFunction -> . ID LPAREN params RPAREN
    (38) javaScript_param -> . STRING
    (39) javaScript_param -> . NUM
    (40) javaScript_param -> . boolean
    (41) javaScript_param -> . ID
    (49) varDeclaration -> . varType ID EQUAL arrayDeclare COLON
    (50) varDeclaration -> . varType ID EQUAL declareMap COLON
    (51) varDeclaration -> . varType ID EQUAL declararSet COLON
    (52) varDeclaration -> . varType ID COLON
    (15) controlExpression -> . sentencias_if
    (16) controlExpression -> . sentencias_if_else
    (17) controlExpression -> . sentencias_while
    (18) controlExpression -> . impresion
    (19) controlExpression -> . impresion_vacio
    (36) impresion -> . ALERT LPAREN expression RPAREN
    (75) declareteFunction -> . FUNCTION ID LPAREN params RPAREN
    (76) declareteFunction -> . FUNCTION ID LPAREN params RPAREN sentencesCmpt
    (77) declareteFunction -> . varType ID EQUAL FUNCTION LPAREN params RPAREN
    (14) assingOperadores -> . varType ID EQUAL inicializarOp
    (42) empty -> .
    (43) boolean -> . TRUE
    (44) boolean -> . FALSE
    (30) sentencias_if -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (31) sentencias_if -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (32) sentencias_if_else -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (33) sentencias_if_else -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (34) sentencias_while -> . WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (35) sentencias_while -> . WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (37) impresion_vacio -> . ALERT LPAREN RPAREN

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 4
    LET             shift and go to state 12
    CONST           shift and go to state 13
    VAR             shift and go to state 14
    STRING          shift and go to state 16
    NUM             shift and go to state 17
    ALERT           shift and go to state 23
    FUNCTION        shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28

  ! ID              [ reduce using rule 42 (empty -> .) ]

    sentencia                      shift and go to state 230
    callMethods                    shift and go to state 2
    varType                        shift and go to state 3
    callFunction                   shift and go to state 5
    javaScript_param               shift and go to state 6
    varDeclaration                 shift and go to state 7
    controlExpression              shift and go to state 8
    impresion                      shift and go to state 9
    declareteFunction              shift and go to state 10
    assingOperadores               shift and go to state 11
    empty                          shift and go to state 15
    boolean                        shift and go to state 18
    sentencias_if                  shift and go to state 19
    sentencias_if_else             shift and go to state 20
    sentencias_while               shift and go to state 21
    impresion_vacio                shift and go to state 22

state 216

    (57) arrayDeclare -> NEW ARRAY LPAREN arrayValues RPAREN .

    COLON           reduce using rule 57 (arrayDeclare -> NEW ARRAY LPAREN arrayValues RPAREN .)
    RPAREN          reduce using rule 57 (arrayDeclare -> NEW ARRAY LPAREN arrayValues RPAREN .)


state 217

    (69) declareMap -> NEW MAP LPAREN iterable RPAREN .

    COLON           reduce using rule 69 (declareMap -> NEW MAP LPAREN iterable RPAREN .)


state 218

    (92) declararSet -> NEW SET LPAREN setValues RPAREN .

    COLON           reduce using rule 92 (declararSet -> NEW SET LPAREN setValues RPAREN .)
    RPAREN          reduce using rule 92 (declararSet -> NEW SET LPAREN setValues RPAREN .)


state 219

    (95) setValues -> setValue COMMA . setValue
    (96) setValue -> . ID
    (97) setValue -> . NUM
    (98) setValue -> . STRING
    (99) setValue -> . boolean
    (100) setValue -> . empty
    (43) boolean -> . TRUE
    (44) boolean -> . FALSE
    (42) empty -> .

    ID              shift and go to state 137
    NUM             shift and go to state 138
    STRING          shift and go to state 139
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    RPAREN          reduce using rule 42 (empty -> .)

    setValue                       shift and go to state 231
    boolean                        shift and go to state 140
    empty                          shift and go to state 141

state 220

    (117) suma -> numOperadores PLUS NUM .

    RPAREN          reduce using rule 117 (suma -> numOperadores PLUS NUM .)
    AND             reduce using rule 117 (suma -> numOperadores PLUS NUM .)
    OR              reduce using rule 117 (suma -> numOperadores PLUS NUM .)
    NOT             reduce using rule 117 (suma -> numOperadores PLUS NUM .)
    $end            reduce using rule 117 (suma -> numOperadores PLUS NUM .)
    RBLOCK          reduce using rule 117 (suma -> numOperadores PLUS NUM .)
    RETURN          reduce using rule 117 (suma -> numOperadores PLUS NUM .)


state 221

    (116) suma -> numOperadores PLUS LPAREN numOperadores RPAREN .

    NUM             reduce using rule 116 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    MINUS           reduce using rule 116 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    PLUS            reduce using rule 116 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    TIMES           reduce using rule 116 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    PERIOD          reduce using rule 116 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    RPAREN          reduce using rule 116 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    AND             reduce using rule 116 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    OR              reduce using rule 116 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    NOT             reduce using rule 116 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    $end            reduce using rule 116 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    RBLOCK          reduce using rule 116 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    RETURN          reduce using rule 116 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)


state 222

    (120) restas -> numOperadores MINUS NUM .

    RPAREN          reduce using rule 120 (restas -> numOperadores MINUS NUM .)
    AND             reduce using rule 120 (restas -> numOperadores MINUS NUM .)
    OR              reduce using rule 120 (restas -> numOperadores MINUS NUM .)
    NOT             reduce using rule 120 (restas -> numOperadores MINUS NUM .)
    $end            reduce using rule 120 (restas -> numOperadores MINUS NUM .)
    RBLOCK          reduce using rule 120 (restas -> numOperadores MINUS NUM .)
    RETURN          reduce using rule 120 (restas -> numOperadores MINUS NUM .)


state 223

    (119) restas -> numOperadores MINUS LPAREN numOperadores RPAREN .

    NUM             reduce using rule 119 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    MINUS           reduce using rule 119 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    PLUS            reduce using rule 119 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    TIMES           reduce using rule 119 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    PERIOD          reduce using rule 119 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    RPAREN          reduce using rule 119 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    AND             reduce using rule 119 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    OR              reduce using rule 119 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    NOT             reduce using rule 119 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    $end            reduce using rule 119 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    RBLOCK          reduce using rule 119 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    RETURN          reduce using rule 119 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)


state 224

    (123) multiplicacion -> numOperadores TIMES NUM .

    RPAREN          reduce using rule 123 (multiplicacion -> numOperadores TIMES NUM .)
    AND             reduce using rule 123 (multiplicacion -> numOperadores TIMES NUM .)
    OR              reduce using rule 123 (multiplicacion -> numOperadores TIMES NUM .)
    NOT             reduce using rule 123 (multiplicacion -> numOperadores TIMES NUM .)
    $end            reduce using rule 123 (multiplicacion -> numOperadores TIMES NUM .)
    RBLOCK          reduce using rule 123 (multiplicacion -> numOperadores TIMES NUM .)
    RETURN          reduce using rule 123 (multiplicacion -> numOperadores TIMES NUM .)


state 225

    (122) multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .

    NUM             reduce using rule 122 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    MINUS           reduce using rule 122 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    PLUS            reduce using rule 122 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    TIMES           reduce using rule 122 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    PERIOD          reduce using rule 122 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    RPAREN          reduce using rule 122 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    AND             reduce using rule 122 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    OR              reduce using rule 122 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    NOT             reduce using rule 122 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    $end            reduce using rule 122 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    RBLOCK          reduce using rule 122 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    RETURN          reduce using rule 122 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)


state 226

    (78) sentencesCmpt -> LBLOCK sentencia RBLOCK .

    $end            reduce using rule 78 (sentencesCmpt -> LBLOCK sentencia RBLOCK .)
    RBLOCK          reduce using rule 78 (sentencesCmpt -> LBLOCK sentencia RBLOCK .)
    RETURN          reduce using rule 78 (sentencesCmpt -> LBLOCK sentencia RBLOCK .)


state 227

    (79) sentencesCmpt -> LBLOCK sentencia RETURN . RBLOCK

    RBLOCK          shift and go to state 232


state 228

    (30) sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia . RBLOCK
    (32) sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia . RBLOCK ELSE LBLOCK sentencia RBLOCK

    RBLOCK          shift and go to state 233


state 229

    (33) sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE . LBLOCK sentencia RBLOCK

    LBLOCK          shift and go to state 234


state 230

    (35) sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia . RBLOCK

    RBLOCK          shift and go to state 235


state 231

    (95) setValues -> setValue COMMA setValue .

    RPAREN          reduce using rule 95 (setValues -> setValue COMMA setValue .)


state 232

    (79) sentencesCmpt -> LBLOCK sentencia RETURN RBLOCK .

    $end            reduce using rule 79 (sentencesCmpt -> LBLOCK sentencia RETURN RBLOCK .)
    RBLOCK          reduce using rule 79 (sentencesCmpt -> LBLOCK sentencia RETURN RBLOCK .)
    RETURN          reduce using rule 79 (sentencesCmpt -> LBLOCK sentencia RETURN RBLOCK .)


state 233

    (30) sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK .
    (32) sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK . ELSE LBLOCK sentencia RBLOCK

    $end            reduce using rule 30 (sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK .)
    RBLOCK          reduce using rule 30 (sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK .)
    RETURN          reduce using rule 30 (sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK .)
    ELSE            shift and go to state 236


state 234

    (33) sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK . sentencia RBLOCK
    (1) sentencia -> . callMethods
    (2) sentencia -> . varType ID EQUAL callMethods
    (3) sentencia -> . callFunction
    (4) sentencia -> . javaScript_param
    (5) sentencia -> . varDeclaration
    (6) sentencia -> . controlExpression
    (7) sentencia -> . impresion
    (8) sentencia -> . declareteFunction
    (9) sentencia -> . assingOperadores
    (53) callMethods -> . ID methodArray COLON
    (54) callMethods -> . ID methodSet COLON
    (55) callMethods -> . ID methodMap COLON
    (45) varType -> . LET
    (46) varType -> . CONST
    (47) varType -> . VAR
    (48) varType -> . empty
    (80) callFunction -> . ID LPAREN params RPAREN
    (38) javaScript_param -> . STRING
    (39) javaScript_param -> . NUM
    (40) javaScript_param -> . boolean
    (41) javaScript_param -> . ID
    (49) varDeclaration -> . varType ID EQUAL arrayDeclare COLON
    (50) varDeclaration -> . varType ID EQUAL declareMap COLON
    (51) varDeclaration -> . varType ID EQUAL declararSet COLON
    (52) varDeclaration -> . varType ID COLON
    (15) controlExpression -> . sentencias_if
    (16) controlExpression -> . sentencias_if_else
    (17) controlExpression -> . sentencias_while
    (18) controlExpression -> . impresion
    (19) controlExpression -> . impresion_vacio
    (36) impresion -> . ALERT LPAREN expression RPAREN
    (75) declareteFunction -> . FUNCTION ID LPAREN params RPAREN
    (76) declareteFunction -> . FUNCTION ID LPAREN params RPAREN sentencesCmpt
    (77) declareteFunction -> . varType ID EQUAL FUNCTION LPAREN params RPAREN
    (14) assingOperadores -> . varType ID EQUAL inicializarOp
    (42) empty -> .
    (43) boolean -> . TRUE
    (44) boolean -> . FALSE
    (30) sentencias_if -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (31) sentencias_if -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (32) sentencias_if_else -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (33) sentencias_if_else -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (34) sentencias_while -> . WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (35) sentencias_while -> . WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (37) impresion_vacio -> . ALERT LPAREN RPAREN

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 4
    LET             shift and go to state 12
    CONST           shift and go to state 13
    VAR             shift and go to state 14
    STRING          shift and go to state 16
    NUM             shift and go to state 17
    ALERT           shift and go to state 23
    FUNCTION        shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28

  ! ID              [ reduce using rule 42 (empty -> .) ]

    sentencia                      shift and go to state 237
    callMethods                    shift and go to state 2
    varType                        shift and go to state 3
    callFunction                   shift and go to state 5
    javaScript_param               shift and go to state 6
    varDeclaration                 shift and go to state 7
    controlExpression              shift and go to state 8
    impresion                      shift and go to state 9
    declareteFunction              shift and go to state 10
    assingOperadores               shift and go to state 11
    empty                          shift and go to state 15
    boolean                        shift and go to state 18
    sentencias_if                  shift and go to state 19
    sentencias_if_else             shift and go to state 20
    sentencias_while               shift and go to state 21
    impresion_vacio                shift and go to state 22

state 235

    (35) sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK .

    $end            reduce using rule 35 (sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK .)
    RBLOCK          reduce using rule 35 (sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK .)
    RETURN          reduce using rule 35 (sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK .)


state 236

    (32) sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE . LBLOCK sentencia RBLOCK

    LBLOCK          shift and go to state 238


state 237

    (33) sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia . RBLOCK

    RBLOCK          shift and go to state 239


state 238

    (32) sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK . sentencia RBLOCK
    (1) sentencia -> . callMethods
    (2) sentencia -> . varType ID EQUAL callMethods
    (3) sentencia -> . callFunction
    (4) sentencia -> . javaScript_param
    (5) sentencia -> . varDeclaration
    (6) sentencia -> . controlExpression
    (7) sentencia -> . impresion
    (8) sentencia -> . declareteFunction
    (9) sentencia -> . assingOperadores
    (53) callMethods -> . ID methodArray COLON
    (54) callMethods -> . ID methodSet COLON
    (55) callMethods -> . ID methodMap COLON
    (45) varType -> . LET
    (46) varType -> . CONST
    (47) varType -> . VAR
    (48) varType -> . empty
    (80) callFunction -> . ID LPAREN params RPAREN
    (38) javaScript_param -> . STRING
    (39) javaScript_param -> . NUM
    (40) javaScript_param -> . boolean
    (41) javaScript_param -> . ID
    (49) varDeclaration -> . varType ID EQUAL arrayDeclare COLON
    (50) varDeclaration -> . varType ID EQUAL declareMap COLON
    (51) varDeclaration -> . varType ID EQUAL declararSet COLON
    (52) varDeclaration -> . varType ID COLON
    (15) controlExpression -> . sentencias_if
    (16) controlExpression -> . sentencias_if_else
    (17) controlExpression -> . sentencias_while
    (18) controlExpression -> . impresion
    (19) controlExpression -> . impresion_vacio
    (36) impresion -> . ALERT LPAREN expression RPAREN
    (75) declareteFunction -> . FUNCTION ID LPAREN params RPAREN
    (76) declareteFunction -> . FUNCTION ID LPAREN params RPAREN sentencesCmpt
    (77) declareteFunction -> . varType ID EQUAL FUNCTION LPAREN params RPAREN
    (14) assingOperadores -> . varType ID EQUAL inicializarOp
    (42) empty -> .
    (43) boolean -> . TRUE
    (44) boolean -> . FALSE
    (30) sentencias_if -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (31) sentencias_if -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (32) sentencias_if_else -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (33) sentencias_if_else -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (34) sentencias_while -> . WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (35) sentencias_while -> . WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (37) impresion_vacio -> . ALERT LPAREN RPAREN

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 4
    LET             shift and go to state 12
    CONST           shift and go to state 13
    VAR             shift and go to state 14
    STRING          shift and go to state 16
    NUM             shift and go to state 17
    ALERT           shift and go to state 23
    FUNCTION        shift and go to state 24
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    IF              shift and go to state 27
    WHILE           shift and go to state 28

  ! ID              [ reduce using rule 42 (empty -> .) ]

    sentencia                      shift and go to state 240
    callMethods                    shift and go to state 2
    varType                        shift and go to state 3
    callFunction                   shift and go to state 5
    javaScript_param               shift and go to state 6
    varDeclaration                 shift and go to state 7
    controlExpression              shift and go to state 8
    impresion                      shift and go to state 9
    declareteFunction              shift and go to state 10
    assingOperadores               shift and go to state 11
    empty                          shift and go to state 15
    boolean                        shift and go to state 18
    sentencias_if                  shift and go to state 19
    sentencias_if_else             shift and go to state 20
    sentencias_while               shift and go to state 21
    impresion_vacio                shift and go to state 22

state 239

    (33) sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK .

    $end            reduce using rule 33 (sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK .)
    RBLOCK          reduce using rule 33 (sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK .)
    RETURN          reduce using rule 33 (sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK .)


state 240

    (32) sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia . RBLOCK

    RBLOCK          shift and go to state 241


state 241

    (32) sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK .

    $end            reduce using rule 32 (sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK .)
    RBLOCK          reduce using rule 32 (sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK .)
    RETURN          reduce using rule 32 (sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 0 resolved as shift
WARNING: shift/reduce conflict for NUM in state 35 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 35 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 35 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 35 resolved as shift
WARNING: shift/reduce conflict for NUM in state 37 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 37 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 37 resolved as shift
WARNING: shift/reduce conflict for NUM in state 38 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 38 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 38 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 39 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 39 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 61 resolved as shift
WARNING: shift/reduce conflict for NUM in state 61 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 62 resolved as shift
WARNING: shift/reduce conflict for NUM in state 62 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 63 resolved as shift
WARNING: shift/reduce conflict for NUM in state 63 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 84 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 97 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 97 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 97 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 97 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 97 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 97 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 97 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 97 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 97 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 98 resolved as shift
WARNING: shift/reduce conflict for NUM in state 98 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 99 resolved as shift
WARNING: shift/reduce conflict for NUM in state 99 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 101 resolved as shift
WARNING: shift/reduce conflict for NUM in state 101 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 102 resolved as shift
WARNING: shift/reduce conflict for NUM in state 109 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 109 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 109 resolved as shift
WARNING: shift/reduce conflict for NUM in state 115 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 115 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 115 resolved as shift
WARNING: shift/reduce conflict for NUM in state 122 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 122 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 122 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 150 resolved as shift
WARNING: shift/reduce conflict for ID in state 159 resolved as shift
WARNING: shift/reduce conflict for ID in state 160 resolved as shift
WARNING: shift/reduce conflict for ID in state 189 resolved as shift
WARNING: shift/reduce conflict for ID in state 212 resolved as shift
WARNING: shift/reduce conflict for ID in state 215 resolved as shift
WARNING: shift/reduce conflict for ID in state 234 resolved as shift
WARNING: shift/reduce conflict for ID in state 238 resolved as shift
WARNING: reduce/reduce conflict in state 9 resolved using rule (sentencia -> impresion)
WARNING: rejected rule (controlExpression -> impresion) in state 9
WARNING: reduce/reduce conflict in state 97 resolved using rule (suma -> numOperadores)
WARNING: rejected rule (restas -> numOperadores) in state 97
WARNING: reduce/reduce conflict in state 97 resolved using rule (suma -> numOperadores)
WARNING: rejected rule (multiplicacion -> numOperadores) in state 97
WARNING: reduce/reduce conflict in state 98 resolved using rule (operacionesMath -> suma)
WARNING: rejected rule (numNegative -> <empty>) in state 98
WARNING: reduce/reduce conflict in state 99 resolved using rule (operacionesMath -> restas)
WARNING: rejected rule (numNegative -> <empty>) in state 99
WARNING: reduce/reduce conflict in state 101 resolved using rule (operacionesMath -> multiplicacion)
WARNING: rejected rule (numNegative -> <empty>) in state 101
WARNING: reduce/reduce conflict in state 178 resolved using rule (suma -> numOperadores PLUS NUM)
WARNING: rejected rule (enteros -> NUM) in state 178
WARNING: reduce/reduce conflict in state 182 resolved using rule (restas -> numOperadores MINUS NUM)
WARNING: rejected rule (enteros -> NUM) in state 182
WARNING: reduce/reduce conflict in state 186 resolved using rule (multiplicacion -> numOperadores TIMES NUM)
WARNING: rejected rule (enteros -> NUM) in state 186
WARNING: Rule (controlExpression -> impresion) is never reduced
