Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DIV_EQUAL
    HAS
    MINUS_EQUAL
    MOD
    MOD_EQUAL
    MUL_EQUAL
    PLUS_EQUAL
    TWOPOINTS
    WITH
    YIELD

Grammar

Rule 0     S' -> sentencia
Rule 1     sentencia -> callMethods
Rule 2     sentencia -> callFunction COLON
Rule 3     sentencia -> varDeclaration
Rule 4     sentencia -> controlExpression
Rule 5     sentencia -> impresion
Rule 6     sentencia -> declareteFunction
Rule 7     sentencia -> assingOperadores
Rule 8     expression -> conditionalEspecifico
Rule 9     expression -> inicializarOp
Rule 10    assingOperadores -> varType ID EQUAL inicializarOp
Rule 11    controlExpression -> sentencias_if
Rule 12    controlExpression -> sentencias_if_else
Rule 13    controlExpression -> sentencias_while
Rule 14    controlExpression -> impresion
Rule 15    controlExpression -> impresion_vacio
Rule 16    opConditional -> ISEQUAL
Rule 17    opConditional -> IS_NOT_IDENTICAL
Rule 18    opConditional -> IS_IDENTICAL
Rule 19    opConditional -> GREATER
Rule 20    opConditional -> GREATEREQUAL
Rule 21    opConditional -> LESS
Rule 22    opConditional -> LESSEQUAL
Rule 23    opConditional -> boolean
Rule 24    operadorLogical -> AND
Rule 25    operadorLogical -> OR
Rule 26    operadorLogical -> NOT
Rule 27    sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
Rule 28    sentencias_if -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK
Rule 29    sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
Rule 30    sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
Rule 31    sentencias_while -> WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK
Rule 32    sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
Rule 33    impresion -> ALERT LPAREN expression RPAREN
Rule 34    impresion_vacio -> ALERT LPAREN RPAREN
Rule 35    javaScript_param -> STRING
Rule 36    javaScript_param -> NUM
Rule 37    javaScript_param -> boolean
Rule 38    javaScript_param -> ID
Rule 39    boolean -> TRUE
Rule 40    boolean -> FALSE
Rule 41    varType -> LET
Rule 42    varType -> CONST
Rule 43    varType -> VAR
Rule 44    varDeclaration -> varType assign
Rule 45    varDeclaration -> assign
Rule 46    varDeclaration -> LET ID COLON
Rule 47    varDeclaration -> VAR ID COLON
Rule 48    assign -> ID EQUAL arrayDeclare COLON
Rule 49    assign -> ID EQUAL declareMap COLON
Rule 50    assign -> ID EQUAL declararSet COLON
Rule 51    assign -> ID EQUAL javaScript_param COLON
Rule 52    callMethods -> ID methodArray COLON
Rule 53    callMethods -> ID methodSet COLON
Rule 54    callMethods -> ID methodMap COLON
Rule 55    arrayDeclare -> LBRACKET javaScript_param COMMA javaScript_param RBRACKET
Rule 56    arrayDeclare -> NEW ARRAY LPAREN arrayValues RPAREN
Rule 57    arrayValues -> javaScript_param
Rule 58    arrayValues -> javaScript_param COMMA javaScript_param
Rule 59    methodArray -> PERIOD PUSH LPAREN javaScript_param RPAREN
Rule 60    methodArray -> PERIOD UNSHIFT LPAREN javaScript_param RPAREN
Rule 61    methodArray -> PERIOD POP LPAREN RPAREN
Rule 62    declareMap -> NEW MAP LPAREN LBRACKET iterable RBRACKET RPAREN
Rule 63    declareMap -> NEW MAP LPAREN RPAREN
Rule 64    iterableMap -> LBRACKET keyValue COMMA keyValue RBRACKET
Rule 65    iterableMap -> LBRACKET keyValue COMMA keyValue RBRACKET COMMA iterableMap
Rule 66    iterable -> iterableMap
Rule 67    iterable -> iterableArray
Rule 68    iterable -> iterableSet
Rule 69    keyValue -> javaScript_param
Rule 70    keyValue -> iterableMap
Rule 71    keyValue -> iterableArray
Rule 72    keyValue -> iterableSet
Rule 73    keyValue -> declareMap
Rule 74    keyValue -> arrayDeclare
Rule 75    iterableArray -> arrayDeclare
Rule 76    iterableArray -> arrayDeclare COMMA arrayDeclare
Rule 77    iterableSet -> declararSet
Rule 78    iterableSet -> declararSet COMMA declararSet
Rule 79    iterableSet -> <empty>
Rule 80    methodMap -> PERIOD CLEAR LPAREN RPAREN
Rule 81    methodMap -> PERIOD LENGTH LPAREN RPAREN
Rule 82    declareteFunction -> FUNCTION ID LPAREN params RPAREN
Rule 83    declareteFunction -> FUNCTION ID LPAREN params RPAREN sentencesCmpt
Rule 84    declareteFunction -> varType ID EQUAL FUNCTION LPAREN params RPAREN
Rule 85    sentencesCmpt -> LBLOCK sentencia RBLOCK
Rule 86    sentencesCmpt -> LBLOCK sentencia RETURN RBLOCK
Rule 87    callFunction -> ID LPAREN params RPAREN
Rule 88    params -> paramList
Rule 89    paramList -> javaScript_param
Rule 90    paramList -> javaScript_param COMMA paramList
Rule 91    args -> argslist
Rule 92    args -> javaScript_param
Rule 93    argslist -> args
Rule 94    argslist -> args COMMA argslist
Rule 95    declararSet -> NEW SET LPAREN LBRACKET iterable RBRACKET RPAREN
Rule 96    methodSet -> PERIOD ADD LPAREN javaScript_param RPAREN
Rule 97    methodSet -> PERIOD DELETE LPAREN javaScript_param RPAREN
Rule 98    methodSet -> PERIOD CLEAR LPAREN RPAREN
Rule 99    inicializarOp -> PLUS operacionesMath
Rule 100   inicializarOp -> MINUS operacionesMath
Rule 101   inicializarOp -> operacionesMath
Rule 102   operacionesMath -> numOperadores PLUS suma
Rule 103   operacionesMath -> suma
Rule 104   operacionesMath -> suma operacionesMath
Rule 105   operacionesMath -> restas
Rule 106   operacionesMath -> numOperadores MINUS restas
Rule 107   operacionesMath -> restas operacionesMath
Rule 108   operacionesMath -> multiplicacion
Rule 109   operacionesMath -> numOperadores TIMES multiplicacion
Rule 110   operacionesMath -> multiplicacion operacionesMath
Rule 111   operacionesMath -> divicion
Rule 112   operacionesMath -> numOperadores DIVIDE divicion
Rule 113   operacionesMath -> divicion operacionesMath
Rule 114   suma -> numOperadores PLUS LPAREN numOperadores RPAREN
Rule 115   suma -> numOperadores PLUS NUM
Rule 116   suma -> numOperadores
Rule 117   restas -> numOperadores MINUS LPAREN numOperadores RPAREN
Rule 118   restas -> numOperadores MINUS NUM
Rule 119   restas -> numOperadores
Rule 120   multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN
Rule 121   multiplicacion -> numOperadores TIMES NUM
Rule 122   multiplicacion -> numOperadores
Rule 123   divicion -> numOperadores DIVIDE LPAREN numOperadores RPAREN
Rule 124   divicion -> numOperadores DIVIDE NUM
Rule 125   divicion -> numOperadores
Rule 126   numOperadores -> enteros
Rule 127   numOperadores -> decimales
Rule 128   enteros -> NUM
Rule 129   enteros -> numNegative
Rule 130   numNegative -> MINUS NUM
Rule 131   numNegative -> <empty>
Rule 132   decimales -> enteros PERIOD NUM
Rule 133   conditionalEspecifico -> ID opConditional dataCondi
Rule 134   conditionalEspecifico -> NUM opConditional NUM
Rule 135   conditionalEspecifico -> STRING opConditional STRING
Rule 136   dataCondi -> STRING
Rule 137   dataCondi -> NUM
Rule 138   setMetodoAdd -> PERIOD ADD LPAREN javaScript_param RPAREN
Rule 139   setMetodoDelete -> PERIOD DELETE LPAREN javaScript_param RPAREN
Rule 140   setMetodoClear -> PERIOD CLEAR LPAREN RPAREN
Rule 141   ValueMapMethods -> ID
Rule 142   ValueMapMethods -> NUM
Rule 143   ValueMapMethods -> STRING
Rule 144   mapMetodoGet -> PERIOD GET LPAREN ValueMapMethods RPAREN
Rule 145   mapMetodoSet -> PERIOD GET LPAREN ValueMapMethods COMMA ValueMapMethods RPAREN

Terminals, with rules where they appear

ADD                  : 96 138
ALERT                : 33 34
AND                  : 24
ARRAY                : 56
CLEAR                : 80 98 140
COLON                : 2 46 47 48 49 50 51 52 53 54
COMMA                : 55 58 64 65 65 76 78 90 94 145
CONST                : 42
DELETE               : 97 139
DIVIDE               : 112 123 124
DIV_EQUAL            : 
ELSE                 : 29 30
EQUAL                : 10 48 49 50 51 84
FALSE                : 40
FUNCTION             : 82 83 84
GET                  : 144 145
GREATER              : 19
GREATEREQUAL         : 20
HAS                  : 
ID                   : 10 38 46 47 48 49 50 51 52 53 54 82 83 84 87 133 141
IF                   : 27 28 29 30
ISEQUAL              : 16
IS_IDENTICAL         : 18
IS_NOT_IDENTICAL     : 17
LBLOCK               : 27 28 29 29 30 30 31 32 85 86
LBRACKET             : 55 62 64 65 95
LENGTH               : 81
LESS                 : 21
LESSEQUAL            : 22
LET                  : 41 46
LPAREN               : 27 28 29 30 31 32 33 34 56 59 60 61 62 63 80 81 82 83 84 87 95 96 97 98 114 117 120 123 138 139 140 144 145
MAP                  : 62 63
MINUS                : 100 106 117 118 130
MINUS_EQUAL          : 
MOD                  : 
MOD_EQUAL            : 
MUL_EQUAL            : 
NEW                  : 56 62 63 95
NOT                  : 26
NUM                  : 36 115 118 121 124 128 130 132 134 134 137 142
OR                   : 25
PERIOD               : 59 60 61 80 81 96 97 98 132 138 139 140 144 145
PLUS                 : 99 102 114 115
PLUS_EQUAL           : 
POP                  : 61
PUSH                 : 59
RBLOCK               : 27 28 29 29 30 30 31 32 85 86
RBRACKET             : 55 62 64 65 95
RETURN               : 86
RPAREN               : 27 28 29 30 31 32 33 34 56 59 60 61 62 63 80 81 82 83 84 87 95 96 97 98 114 117 120 123 138 139 140 144 145
SET                  : 95
STRING               : 35 135 135 136 143
TIMES                : 109 120 121
TRUE                 : 39
TWOPOINTS            : 
UNSHIFT              : 60
VAR                  : 43 47
WHILE                : 31 32
WITH                 : 
YIELD                : 
error                : 

Nonterminals, with rules where they appear

ValueMapMethods      : 144 145 145
args                 : 93 94
argslist             : 91 94
arrayDeclare         : 48 74 75 76 76
arrayValues          : 56
assign               : 44 45
assingOperadores     : 7
boolean              : 23 37
callFunction         : 2
callMethods          : 1
conditionalEspecifico : 8
controlExpression    : 4
dataCondi            : 133
decimales            : 127
declararSet          : 50 77 78 78
declareMap           : 49 73
declareteFunction    : 6
divicion             : 111 112 113
enteros              : 126 132
expression           : 27 27 28 29 29 30 31 32 32 33
impresion            : 5 14
impresion_vacio      : 15
inicializarOp        : 9 10
iterable             : 62 95
iterableArray        : 67 71
iterableMap          : 65 66 70
iterableSet          : 68 72
javaScript_param     : 51 55 55 57 58 58 59 60 69 89 90 92 96 97 138 139
keyValue             : 64 64 65 65
mapMetodoGet         : 
mapMetodoSet         : 
methodArray          : 52
methodMap            : 54
methodSet            : 53
multiplicacion       : 108 109 110
numNegative          : 129
numOperadores        : 102 106 109 112 114 114 115 116 117 117 118 119 120 120 121 122 123 123 124 125
opConditional        : 133 134 135
operacionesMath      : 99 100 101 104 107 110 113
operadorLogical      : 27 29 32
paramList            : 88 90
params               : 82 83 84 87
restas               : 105 106 107
sentencesCmpt        : 83
sentencia            : 27 28 29 29 30 30 31 32 85 86 0
sentencias_if        : 11
sentencias_if_else   : 12
sentencias_while     : 13
setMetodoAdd         : 
setMetodoClear       : 
setMetodoDelete      : 
suma                 : 102 103 104
varDeclaration       : 3
varType              : 10 44 84

Parsing method: LALR

state 0

    (0) S' -> . sentencia
    (1) sentencia -> . callMethods
    (2) sentencia -> . callFunction COLON
    (3) sentencia -> . varDeclaration
    (4) sentencia -> . controlExpression
    (5) sentencia -> . impresion
    (6) sentencia -> . declareteFunction
    (7) sentencia -> . assingOperadores
    (52) callMethods -> . ID methodArray COLON
    (53) callMethods -> . ID methodSet COLON
    (54) callMethods -> . ID methodMap COLON
    (87) callFunction -> . ID LPAREN params RPAREN
    (44) varDeclaration -> . varType assign
    (45) varDeclaration -> . assign
    (46) varDeclaration -> . LET ID COLON
    (47) varDeclaration -> . VAR ID COLON
    (11) controlExpression -> . sentencias_if
    (12) controlExpression -> . sentencias_if_else
    (13) controlExpression -> . sentencias_while
    (14) controlExpression -> . impresion
    (15) controlExpression -> . impresion_vacio
    (33) impresion -> . ALERT LPAREN expression RPAREN
    (82) declareteFunction -> . FUNCTION ID LPAREN params RPAREN
    (83) declareteFunction -> . FUNCTION ID LPAREN params RPAREN sentencesCmpt
    (84) declareteFunction -> . varType ID EQUAL FUNCTION LPAREN params RPAREN
    (10) assingOperadores -> . varType ID EQUAL inicializarOp
    (41) varType -> . LET
    (42) varType -> . CONST
    (43) varType -> . VAR
    (48) assign -> . ID EQUAL arrayDeclare COLON
    (49) assign -> . ID EQUAL declareMap COLON
    (50) assign -> . ID EQUAL declararSet COLON
    (51) assign -> . ID EQUAL javaScript_param COLON
    (27) sentencias_if -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (28) sentencias_if -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (29) sentencias_if_else -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (30) sentencias_if_else -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (31) sentencias_while -> . WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (32) sentencias_while -> . WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (34) impresion_vacio -> . ALERT LPAREN RPAREN

    ID              shift and go to state 9
    LET             shift and go to state 12
    VAR             shift and go to state 13
    ALERT           shift and go to state 18
    FUNCTION        shift and go to state 19
    CONST           shift and go to state 20
    IF              shift and go to state 21
    WHILE           shift and go to state 22

    sentencia                      shift and go to state 1
    callMethods                    shift and go to state 2
    callFunction                   shift and go to state 3
    varDeclaration                 shift and go to state 4
    controlExpression              shift and go to state 5
    impresion                      shift and go to state 6
    declareteFunction              shift and go to state 7
    assingOperadores               shift and go to state 8
    varType                        shift and go to state 10
    assign                         shift and go to state 11
    sentencias_if                  shift and go to state 14
    sentencias_if_else             shift and go to state 15
    sentencias_while               shift and go to state 16
    impresion_vacio                shift and go to state 17

state 1

    (0) S' -> sentencia .



state 2

    (1) sentencia -> callMethods .

    $end            reduce using rule 1 (sentencia -> callMethods .)
    RBLOCK          reduce using rule 1 (sentencia -> callMethods .)
    RETURN          reduce using rule 1 (sentencia -> callMethods .)


state 3

    (2) sentencia -> callFunction . COLON

    COLON           shift and go to state 23


state 4

    (3) sentencia -> varDeclaration .

    $end            reduce using rule 3 (sentencia -> varDeclaration .)
    RBLOCK          reduce using rule 3 (sentencia -> varDeclaration .)
    RETURN          reduce using rule 3 (sentencia -> varDeclaration .)


state 5

    (4) sentencia -> controlExpression .

    $end            reduce using rule 4 (sentencia -> controlExpression .)
    RBLOCK          reduce using rule 4 (sentencia -> controlExpression .)
    RETURN          reduce using rule 4 (sentencia -> controlExpression .)


state 6

    (5) sentencia -> impresion .
    (14) controlExpression -> impresion .

  ! reduce/reduce conflict for $end resolved using rule 5 (sentencia -> impresion .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 5 (sentencia -> impresion .)
  ! reduce/reduce conflict for RETURN resolved using rule 5 (sentencia -> impresion .)
    $end            reduce using rule 5 (sentencia -> impresion .)
    RBLOCK          reduce using rule 5 (sentencia -> impresion .)
    RETURN          reduce using rule 5 (sentencia -> impresion .)

  ! $end            [ reduce using rule 14 (controlExpression -> impresion .) ]
  ! RBLOCK          [ reduce using rule 14 (controlExpression -> impresion .) ]
  ! RETURN          [ reduce using rule 14 (controlExpression -> impresion .) ]


state 7

    (6) sentencia -> declareteFunction .

    $end            reduce using rule 6 (sentencia -> declareteFunction .)
    RBLOCK          reduce using rule 6 (sentencia -> declareteFunction .)
    RETURN          reduce using rule 6 (sentencia -> declareteFunction .)


state 8

    (7) sentencia -> assingOperadores .

    $end            reduce using rule 7 (sentencia -> assingOperadores .)
    RBLOCK          reduce using rule 7 (sentencia -> assingOperadores .)
    RETURN          reduce using rule 7 (sentencia -> assingOperadores .)


state 9

    (52) callMethods -> ID . methodArray COLON
    (53) callMethods -> ID . methodSet COLON
    (54) callMethods -> ID . methodMap COLON
    (87) callFunction -> ID . LPAREN params RPAREN
    (48) assign -> ID . EQUAL arrayDeclare COLON
    (49) assign -> ID . EQUAL declareMap COLON
    (50) assign -> ID . EQUAL declararSet COLON
    (51) assign -> ID . EQUAL javaScript_param COLON
    (59) methodArray -> . PERIOD PUSH LPAREN javaScript_param RPAREN
    (60) methodArray -> . PERIOD UNSHIFT LPAREN javaScript_param RPAREN
    (61) methodArray -> . PERIOD POP LPAREN RPAREN
    (96) methodSet -> . PERIOD ADD LPAREN javaScript_param RPAREN
    (97) methodSet -> . PERIOD DELETE LPAREN javaScript_param RPAREN
    (98) methodSet -> . PERIOD CLEAR LPAREN RPAREN
    (80) methodMap -> . PERIOD CLEAR LPAREN RPAREN
    (81) methodMap -> . PERIOD LENGTH LPAREN RPAREN

    LPAREN          shift and go to state 27
    EQUAL           shift and go to state 28
    PERIOD          shift and go to state 29

    methodArray                    shift and go to state 24
    methodSet                      shift and go to state 25
    methodMap                      shift and go to state 26

state 10

    (44) varDeclaration -> varType . assign
    (84) declareteFunction -> varType . ID EQUAL FUNCTION LPAREN params RPAREN
    (10) assingOperadores -> varType . ID EQUAL inicializarOp
    (48) assign -> . ID EQUAL arrayDeclare COLON
    (49) assign -> . ID EQUAL declareMap COLON
    (50) assign -> . ID EQUAL declararSet COLON
    (51) assign -> . ID EQUAL javaScript_param COLON

    ID              shift and go to state 31

    assign                         shift and go to state 30

state 11

    (45) varDeclaration -> assign .

    $end            reduce using rule 45 (varDeclaration -> assign .)
    RBLOCK          reduce using rule 45 (varDeclaration -> assign .)
    RETURN          reduce using rule 45 (varDeclaration -> assign .)


state 12

    (46) varDeclaration -> LET . ID COLON
    (41) varType -> LET .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 32

  ! ID              [ reduce using rule 41 (varType -> LET .) ]


state 13

    (47) varDeclaration -> VAR . ID COLON
    (43) varType -> VAR .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 33

  ! ID              [ reduce using rule 43 (varType -> VAR .) ]


state 14

    (11) controlExpression -> sentencias_if .

    $end            reduce using rule 11 (controlExpression -> sentencias_if .)
    RBLOCK          reduce using rule 11 (controlExpression -> sentencias_if .)
    RETURN          reduce using rule 11 (controlExpression -> sentencias_if .)


state 15

    (12) controlExpression -> sentencias_if_else .

    $end            reduce using rule 12 (controlExpression -> sentencias_if_else .)
    RBLOCK          reduce using rule 12 (controlExpression -> sentencias_if_else .)
    RETURN          reduce using rule 12 (controlExpression -> sentencias_if_else .)


state 16

    (13) controlExpression -> sentencias_while .

    $end            reduce using rule 13 (controlExpression -> sentencias_while .)
    RBLOCK          reduce using rule 13 (controlExpression -> sentencias_while .)
    RETURN          reduce using rule 13 (controlExpression -> sentencias_while .)


state 17

    (15) controlExpression -> impresion_vacio .

    $end            reduce using rule 15 (controlExpression -> impresion_vacio .)
    RBLOCK          reduce using rule 15 (controlExpression -> impresion_vacio .)
    RETURN          reduce using rule 15 (controlExpression -> impresion_vacio .)


state 18

    (33) impresion -> ALERT . LPAREN expression RPAREN
    (34) impresion_vacio -> ALERT . LPAREN RPAREN

    LPAREN          shift and go to state 34


state 19

    (82) declareteFunction -> FUNCTION . ID LPAREN params RPAREN
    (83) declareteFunction -> FUNCTION . ID LPAREN params RPAREN sentencesCmpt

    ID              shift and go to state 35


state 20

    (42) varType -> CONST .

    ID              reduce using rule 42 (varType -> CONST .)


state 21

    (27) sentencias_if -> IF . LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (28) sentencias_if -> IF . LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (29) sentencias_if_else -> IF . LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (30) sentencias_if_else -> IF . LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK

    LPAREN          shift and go to state 36


state 22

    (31) sentencias_while -> WHILE . LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (32) sentencias_while -> WHILE . LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK

    LPAREN          shift and go to state 37


state 23

    (2) sentencia -> callFunction COLON .

    $end            reduce using rule 2 (sentencia -> callFunction COLON .)
    RBLOCK          reduce using rule 2 (sentencia -> callFunction COLON .)
    RETURN          reduce using rule 2 (sentencia -> callFunction COLON .)


state 24

    (52) callMethods -> ID methodArray . COLON

    COLON           shift and go to state 38


state 25

    (53) callMethods -> ID methodSet . COLON

    COLON           shift and go to state 39


state 26

    (54) callMethods -> ID methodMap . COLON

    COLON           shift and go to state 40


state 27

    (87) callFunction -> ID LPAREN . params RPAREN
    (88) params -> . paramList
    (89) paramList -> . javaScript_param
    (90) paramList -> . javaScript_param COMMA paramList
    (35) javaScript_param -> . STRING
    (36) javaScript_param -> . NUM
    (37) javaScript_param -> . boolean
    (38) javaScript_param -> . ID
    (39) boolean -> . TRUE
    (40) boolean -> . FALSE

    STRING          shift and go to state 45
    NUM             shift and go to state 46
    ID              shift and go to state 41
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    params                         shift and go to state 42
    paramList                      shift and go to state 43
    javaScript_param               shift and go to state 44
    boolean                        shift and go to state 47

state 28

    (48) assign -> ID EQUAL . arrayDeclare COLON
    (49) assign -> ID EQUAL . declareMap COLON
    (50) assign -> ID EQUAL . declararSet COLON
    (51) assign -> ID EQUAL . javaScript_param COLON
    (55) arrayDeclare -> . LBRACKET javaScript_param COMMA javaScript_param RBRACKET
    (56) arrayDeclare -> . NEW ARRAY LPAREN arrayValues RPAREN
    (62) declareMap -> . NEW MAP LPAREN LBRACKET iterable RBRACKET RPAREN
    (63) declareMap -> . NEW MAP LPAREN RPAREN
    (95) declararSet -> . NEW SET LPAREN LBRACKET iterable RBRACKET RPAREN
    (35) javaScript_param -> . STRING
    (36) javaScript_param -> . NUM
    (37) javaScript_param -> . boolean
    (38) javaScript_param -> . ID
    (39) boolean -> . TRUE
    (40) boolean -> . FALSE

    LBRACKET        shift and go to state 54
    NEW             shift and go to state 55
    STRING          shift and go to state 45
    NUM             shift and go to state 46
    ID              shift and go to state 41
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    arrayDeclare                   shift and go to state 50
    declareMap                     shift and go to state 51
    declararSet                    shift and go to state 52
    javaScript_param               shift and go to state 53
    boolean                        shift and go to state 47

state 29

    (59) methodArray -> PERIOD . PUSH LPAREN javaScript_param RPAREN
    (60) methodArray -> PERIOD . UNSHIFT LPAREN javaScript_param RPAREN
    (61) methodArray -> PERIOD . POP LPAREN RPAREN
    (96) methodSet -> PERIOD . ADD LPAREN javaScript_param RPAREN
    (97) methodSet -> PERIOD . DELETE LPAREN javaScript_param RPAREN
    (98) methodSet -> PERIOD . CLEAR LPAREN RPAREN
    (80) methodMap -> PERIOD . CLEAR LPAREN RPAREN
    (81) methodMap -> PERIOD . LENGTH LPAREN RPAREN

    PUSH            shift and go to state 56
    UNSHIFT         shift and go to state 57
    POP             shift and go to state 58
    ADD             shift and go to state 59
    DELETE          shift and go to state 60
    CLEAR           shift and go to state 61
    LENGTH          shift and go to state 62


state 30

    (44) varDeclaration -> varType assign .

    $end            reduce using rule 44 (varDeclaration -> varType assign .)
    RBLOCK          reduce using rule 44 (varDeclaration -> varType assign .)
    RETURN          reduce using rule 44 (varDeclaration -> varType assign .)


state 31

    (84) declareteFunction -> varType ID . EQUAL FUNCTION LPAREN params RPAREN
    (10) assingOperadores -> varType ID . EQUAL inicializarOp
    (48) assign -> ID . EQUAL arrayDeclare COLON
    (49) assign -> ID . EQUAL declareMap COLON
    (50) assign -> ID . EQUAL declararSet COLON
    (51) assign -> ID . EQUAL javaScript_param COLON

    EQUAL           shift and go to state 63


state 32

    (46) varDeclaration -> LET ID . COLON

    COLON           shift and go to state 64


state 33

    (47) varDeclaration -> VAR ID . COLON

    COLON           shift and go to state 65


state 34

    (33) impresion -> ALERT LPAREN . expression RPAREN
    (34) impresion_vacio -> ALERT LPAREN . RPAREN
    (8) expression -> . conditionalEspecifico
    (9) expression -> . inicializarOp
    (133) conditionalEspecifico -> . ID opConditional dataCondi
    (134) conditionalEspecifico -> . NUM opConditional NUM
    (135) conditionalEspecifico -> . STRING opConditional STRING
    (99) inicializarOp -> . PLUS operacionesMath
    (100) inicializarOp -> . MINUS operacionesMath
    (101) inicializarOp -> . operacionesMath
    (102) operacionesMath -> . numOperadores PLUS suma
    (103) operacionesMath -> . suma
    (104) operacionesMath -> . suma operacionesMath
    (105) operacionesMath -> . restas
    (106) operacionesMath -> . numOperadores MINUS restas
    (107) operacionesMath -> . restas operacionesMath
    (108) operacionesMath -> . multiplicacion
    (109) operacionesMath -> . numOperadores TIMES multiplicacion
    (110) operacionesMath -> . multiplicacion operacionesMath
    (111) operacionesMath -> . divicion
    (112) operacionesMath -> . numOperadores DIVIDE divicion
    (113) operacionesMath -> . divicion operacionesMath
    (126) numOperadores -> . enteros
    (127) numOperadores -> . decimales
    (114) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (115) suma -> . numOperadores PLUS NUM
    (116) suma -> . numOperadores
    (117) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (118) restas -> . numOperadores MINUS NUM
    (119) restas -> . numOperadores
    (120) multiplicacion -> . numOperadores TIMES LPAREN numOperadores RPAREN
    (121) multiplicacion -> . numOperadores TIMES NUM
    (122) multiplicacion -> . numOperadores
    (123) divicion -> . numOperadores DIVIDE LPAREN numOperadores RPAREN
    (124) divicion -> . numOperadores DIVIDE NUM
    (125) divicion -> . numOperadores
    (128) enteros -> . NUM
    (129) enteros -> . numNegative
    (132) decimales -> . enteros PERIOD NUM
    (130) numNegative -> . MINUS NUM
    (131) numNegative -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 67
    ID              shift and go to state 70
    NUM             shift and go to state 71
    STRING          shift and go to state 72
    PLUS            shift and go to state 73
    MINUS           shift and go to state 75
    PERIOD          reduce using rule 131 (numNegative -> .)
    TIMES           reduce using rule 131 (numNegative -> .)
    DIVIDE          reduce using rule 131 (numNegative -> .)

  ! PLUS            [ reduce using rule 131 (numNegative -> .) ]
  ! MINUS           [ reduce using rule 131 (numNegative -> .) ]
  ! NUM             [ reduce using rule 131 (numNegative -> .) ]
  ! RPAREN          [ reduce using rule 131 (numNegative -> .) ]

    expression                     shift and go to state 66
    conditionalEspecifico          shift and go to state 68
    inicializarOp                  shift and go to state 69
    operacionesMath                shift and go to state 74
    numOperadores                  shift and go to state 76
    suma                           shift and go to state 77
    restas                         shift and go to state 78
    multiplicacion                 shift and go to state 79
    divicion                       shift and go to state 80
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 35

    (82) declareteFunction -> FUNCTION ID . LPAREN params RPAREN
    (83) declareteFunction -> FUNCTION ID . LPAREN params RPAREN sentencesCmpt

    LPAREN          shift and go to state 84


state 36

    (27) sentencias_if -> IF LPAREN . expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (28) sentencias_if -> IF LPAREN . expression RPAREN LBLOCK sentencia RBLOCK
    (29) sentencias_if_else -> IF LPAREN . expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (30) sentencias_if_else -> IF LPAREN . expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (8) expression -> . conditionalEspecifico
    (9) expression -> . inicializarOp
    (133) conditionalEspecifico -> . ID opConditional dataCondi
    (134) conditionalEspecifico -> . NUM opConditional NUM
    (135) conditionalEspecifico -> . STRING opConditional STRING
    (99) inicializarOp -> . PLUS operacionesMath
    (100) inicializarOp -> . MINUS operacionesMath
    (101) inicializarOp -> . operacionesMath
    (102) operacionesMath -> . numOperadores PLUS suma
    (103) operacionesMath -> . suma
    (104) operacionesMath -> . suma operacionesMath
    (105) operacionesMath -> . restas
    (106) operacionesMath -> . numOperadores MINUS restas
    (107) operacionesMath -> . restas operacionesMath
    (108) operacionesMath -> . multiplicacion
    (109) operacionesMath -> . numOperadores TIMES multiplicacion
    (110) operacionesMath -> . multiplicacion operacionesMath
    (111) operacionesMath -> . divicion
    (112) operacionesMath -> . numOperadores DIVIDE divicion
    (113) operacionesMath -> . divicion operacionesMath
    (126) numOperadores -> . enteros
    (127) numOperadores -> . decimales
    (114) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (115) suma -> . numOperadores PLUS NUM
    (116) suma -> . numOperadores
    (117) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (118) restas -> . numOperadores MINUS NUM
    (119) restas -> . numOperadores
    (120) multiplicacion -> . numOperadores TIMES LPAREN numOperadores RPAREN
    (121) multiplicacion -> . numOperadores TIMES NUM
    (122) multiplicacion -> . numOperadores
    (123) divicion -> . numOperadores DIVIDE LPAREN numOperadores RPAREN
    (124) divicion -> . numOperadores DIVIDE NUM
    (125) divicion -> . numOperadores
    (128) enteros -> . NUM
    (129) enteros -> . numNegative
    (132) decimales -> . enteros PERIOD NUM
    (130) numNegative -> . MINUS NUM
    (131) numNegative -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
    ID              shift and go to state 70
    NUM             shift and go to state 71
    STRING          shift and go to state 72
    PLUS            shift and go to state 73
    MINUS           shift and go to state 75
    PERIOD          reduce using rule 131 (numNegative -> .)
    TIMES           reduce using rule 131 (numNegative -> .)
    DIVIDE          reduce using rule 131 (numNegative -> .)
    RPAREN          reduce using rule 131 (numNegative -> .)
    AND             reduce using rule 131 (numNegative -> .)
    OR              reduce using rule 131 (numNegative -> .)
    NOT             reduce using rule 131 (numNegative -> .)

  ! PLUS            [ reduce using rule 131 (numNegative -> .) ]
  ! MINUS           [ reduce using rule 131 (numNegative -> .) ]
  ! NUM             [ reduce using rule 131 (numNegative -> .) ]

    expression                     shift and go to state 85
    conditionalEspecifico          shift and go to state 68
    inicializarOp                  shift and go to state 69
    operacionesMath                shift and go to state 74
    numOperadores                  shift and go to state 76
    suma                           shift and go to state 77
    restas                         shift and go to state 78
    multiplicacion                 shift and go to state 79
    divicion                       shift and go to state 80
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 37

    (31) sentencias_while -> WHILE LPAREN . expression RPAREN LBLOCK sentencia RBLOCK
    (32) sentencias_while -> WHILE LPAREN . expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (8) expression -> . conditionalEspecifico
    (9) expression -> . inicializarOp
    (133) conditionalEspecifico -> . ID opConditional dataCondi
    (134) conditionalEspecifico -> . NUM opConditional NUM
    (135) conditionalEspecifico -> . STRING opConditional STRING
    (99) inicializarOp -> . PLUS operacionesMath
    (100) inicializarOp -> . MINUS operacionesMath
    (101) inicializarOp -> . operacionesMath
    (102) operacionesMath -> . numOperadores PLUS suma
    (103) operacionesMath -> . suma
    (104) operacionesMath -> . suma operacionesMath
    (105) operacionesMath -> . restas
    (106) operacionesMath -> . numOperadores MINUS restas
    (107) operacionesMath -> . restas operacionesMath
    (108) operacionesMath -> . multiplicacion
    (109) operacionesMath -> . numOperadores TIMES multiplicacion
    (110) operacionesMath -> . multiplicacion operacionesMath
    (111) operacionesMath -> . divicion
    (112) operacionesMath -> . numOperadores DIVIDE divicion
    (113) operacionesMath -> . divicion operacionesMath
    (126) numOperadores -> . enteros
    (127) numOperadores -> . decimales
    (114) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (115) suma -> . numOperadores PLUS NUM
    (116) suma -> . numOperadores
    (117) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (118) restas -> . numOperadores MINUS NUM
    (119) restas -> . numOperadores
    (120) multiplicacion -> . numOperadores TIMES LPAREN numOperadores RPAREN
    (121) multiplicacion -> . numOperadores TIMES NUM
    (122) multiplicacion -> . numOperadores
    (123) divicion -> . numOperadores DIVIDE LPAREN numOperadores RPAREN
    (124) divicion -> . numOperadores DIVIDE NUM
    (125) divicion -> . numOperadores
    (128) enteros -> . NUM
    (129) enteros -> . numNegative
    (132) decimales -> . enteros PERIOD NUM
    (130) numNegative -> . MINUS NUM
    (131) numNegative -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
    ID              shift and go to state 70
    NUM             shift and go to state 71
    STRING          shift and go to state 72
    PLUS            shift and go to state 73
    MINUS           shift and go to state 75
    PERIOD          reduce using rule 131 (numNegative -> .)
    TIMES           reduce using rule 131 (numNegative -> .)
    DIVIDE          reduce using rule 131 (numNegative -> .)
    RPAREN          reduce using rule 131 (numNegative -> .)
    AND             reduce using rule 131 (numNegative -> .)
    OR              reduce using rule 131 (numNegative -> .)
    NOT             reduce using rule 131 (numNegative -> .)

  ! PLUS            [ reduce using rule 131 (numNegative -> .) ]
  ! MINUS           [ reduce using rule 131 (numNegative -> .) ]
  ! NUM             [ reduce using rule 131 (numNegative -> .) ]

    expression                     shift and go to state 86
    conditionalEspecifico          shift and go to state 68
    inicializarOp                  shift and go to state 69
    operacionesMath                shift and go to state 74
    numOperadores                  shift and go to state 76
    suma                           shift and go to state 77
    restas                         shift and go to state 78
    multiplicacion                 shift and go to state 79
    divicion                       shift and go to state 80
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 38

    (52) callMethods -> ID methodArray COLON .

    $end            reduce using rule 52 (callMethods -> ID methodArray COLON .)
    RBLOCK          reduce using rule 52 (callMethods -> ID methodArray COLON .)
    RETURN          reduce using rule 52 (callMethods -> ID methodArray COLON .)


state 39

    (53) callMethods -> ID methodSet COLON .

    $end            reduce using rule 53 (callMethods -> ID methodSet COLON .)
    RBLOCK          reduce using rule 53 (callMethods -> ID methodSet COLON .)
    RETURN          reduce using rule 53 (callMethods -> ID methodSet COLON .)


state 40

    (54) callMethods -> ID methodMap COLON .

    $end            reduce using rule 54 (callMethods -> ID methodMap COLON .)
    RBLOCK          reduce using rule 54 (callMethods -> ID methodMap COLON .)
    RETURN          reduce using rule 54 (callMethods -> ID methodMap COLON .)


state 41

    (38) javaScript_param -> ID .

    COMMA           reduce using rule 38 (javaScript_param -> ID .)
    RPAREN          reduce using rule 38 (javaScript_param -> ID .)
    COLON           reduce using rule 38 (javaScript_param -> ID .)
    RBRACKET        reduce using rule 38 (javaScript_param -> ID .)


state 42

    (87) callFunction -> ID LPAREN params . RPAREN

    RPAREN          shift and go to state 87


state 43

    (88) params -> paramList .

    RPAREN          reduce using rule 88 (params -> paramList .)


state 44

    (89) paramList -> javaScript_param .
    (90) paramList -> javaScript_param . COMMA paramList

    RPAREN          reduce using rule 89 (paramList -> javaScript_param .)
    COMMA           shift and go to state 88


state 45

    (35) javaScript_param -> STRING .

    COMMA           reduce using rule 35 (javaScript_param -> STRING .)
    RPAREN          reduce using rule 35 (javaScript_param -> STRING .)
    COLON           reduce using rule 35 (javaScript_param -> STRING .)
    RBRACKET        reduce using rule 35 (javaScript_param -> STRING .)


state 46

    (36) javaScript_param -> NUM .

    COMMA           reduce using rule 36 (javaScript_param -> NUM .)
    RPAREN          reduce using rule 36 (javaScript_param -> NUM .)
    COLON           reduce using rule 36 (javaScript_param -> NUM .)
    RBRACKET        reduce using rule 36 (javaScript_param -> NUM .)


state 47

    (37) javaScript_param -> boolean .

    COMMA           reduce using rule 37 (javaScript_param -> boolean .)
    RPAREN          reduce using rule 37 (javaScript_param -> boolean .)
    COLON           reduce using rule 37 (javaScript_param -> boolean .)
    RBRACKET        reduce using rule 37 (javaScript_param -> boolean .)


state 48

    (39) boolean -> TRUE .

    COMMA           reduce using rule 39 (boolean -> TRUE .)
    RPAREN          reduce using rule 39 (boolean -> TRUE .)
    COLON           reduce using rule 39 (boolean -> TRUE .)
    STRING          reduce using rule 39 (boolean -> TRUE .)
    NUM             reduce using rule 39 (boolean -> TRUE .)
    RBRACKET        reduce using rule 39 (boolean -> TRUE .)


state 49

    (40) boolean -> FALSE .

    COMMA           reduce using rule 40 (boolean -> FALSE .)
    RPAREN          reduce using rule 40 (boolean -> FALSE .)
    COLON           reduce using rule 40 (boolean -> FALSE .)
    STRING          reduce using rule 40 (boolean -> FALSE .)
    NUM             reduce using rule 40 (boolean -> FALSE .)
    RBRACKET        reduce using rule 40 (boolean -> FALSE .)


state 50

    (48) assign -> ID EQUAL arrayDeclare . COLON

    COLON           shift and go to state 89


state 51

    (49) assign -> ID EQUAL declareMap . COLON

    COLON           shift and go to state 90


state 52

    (50) assign -> ID EQUAL declararSet . COLON

    COLON           shift and go to state 91


state 53

    (51) assign -> ID EQUAL javaScript_param . COLON

    COLON           shift and go to state 92


state 54

    (55) arrayDeclare -> LBRACKET . javaScript_param COMMA javaScript_param RBRACKET
    (35) javaScript_param -> . STRING
    (36) javaScript_param -> . NUM
    (37) javaScript_param -> . boolean
    (38) javaScript_param -> . ID
    (39) boolean -> . TRUE
    (40) boolean -> . FALSE

    STRING          shift and go to state 45
    NUM             shift and go to state 46
    ID              shift and go to state 41
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    javaScript_param               shift and go to state 93
    boolean                        shift and go to state 47

state 55

    (56) arrayDeclare -> NEW . ARRAY LPAREN arrayValues RPAREN
    (62) declareMap -> NEW . MAP LPAREN LBRACKET iterable RBRACKET RPAREN
    (63) declareMap -> NEW . MAP LPAREN RPAREN
    (95) declararSet -> NEW . SET LPAREN LBRACKET iterable RBRACKET RPAREN

    ARRAY           shift and go to state 94
    MAP             shift and go to state 95
    SET             shift and go to state 96


state 56

    (59) methodArray -> PERIOD PUSH . LPAREN javaScript_param RPAREN

    LPAREN          shift and go to state 97


state 57

    (60) methodArray -> PERIOD UNSHIFT . LPAREN javaScript_param RPAREN

    LPAREN          shift and go to state 98


state 58

    (61) methodArray -> PERIOD POP . LPAREN RPAREN

    LPAREN          shift and go to state 99


state 59

    (96) methodSet -> PERIOD ADD . LPAREN javaScript_param RPAREN

    LPAREN          shift and go to state 100


state 60

    (97) methodSet -> PERIOD DELETE . LPAREN javaScript_param RPAREN

    LPAREN          shift and go to state 101


state 61

    (98) methodSet -> PERIOD CLEAR . LPAREN RPAREN
    (80) methodMap -> PERIOD CLEAR . LPAREN RPAREN

    LPAREN          shift and go to state 102


state 62

    (81) methodMap -> PERIOD LENGTH . LPAREN RPAREN

    LPAREN          shift and go to state 103


state 63

    (84) declareteFunction -> varType ID EQUAL . FUNCTION LPAREN params RPAREN
    (10) assingOperadores -> varType ID EQUAL . inicializarOp
    (48) assign -> ID EQUAL . arrayDeclare COLON
    (49) assign -> ID EQUAL . declareMap COLON
    (50) assign -> ID EQUAL . declararSet COLON
    (51) assign -> ID EQUAL . javaScript_param COLON
    (99) inicializarOp -> . PLUS operacionesMath
    (100) inicializarOp -> . MINUS operacionesMath
    (101) inicializarOp -> . operacionesMath
    (55) arrayDeclare -> . LBRACKET javaScript_param COMMA javaScript_param RBRACKET
    (56) arrayDeclare -> . NEW ARRAY LPAREN arrayValues RPAREN
    (62) declareMap -> . NEW MAP LPAREN LBRACKET iterable RBRACKET RPAREN
    (63) declareMap -> . NEW MAP LPAREN RPAREN
    (95) declararSet -> . NEW SET LPAREN LBRACKET iterable RBRACKET RPAREN
    (35) javaScript_param -> . STRING
    (36) javaScript_param -> . NUM
    (37) javaScript_param -> . boolean
    (38) javaScript_param -> . ID
    (102) operacionesMath -> . numOperadores PLUS suma
    (103) operacionesMath -> . suma
    (104) operacionesMath -> . suma operacionesMath
    (105) operacionesMath -> . restas
    (106) operacionesMath -> . numOperadores MINUS restas
    (107) operacionesMath -> . restas operacionesMath
    (108) operacionesMath -> . multiplicacion
    (109) operacionesMath -> . numOperadores TIMES multiplicacion
    (110) operacionesMath -> . multiplicacion operacionesMath
    (111) operacionesMath -> . divicion
    (112) operacionesMath -> . numOperadores DIVIDE divicion
    (113) operacionesMath -> . divicion operacionesMath
    (39) boolean -> . TRUE
    (40) boolean -> . FALSE
    (126) numOperadores -> . enteros
    (127) numOperadores -> . decimales
    (114) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (115) suma -> . numOperadores PLUS NUM
    (116) suma -> . numOperadores
    (117) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (118) restas -> . numOperadores MINUS NUM
    (119) restas -> . numOperadores
    (120) multiplicacion -> . numOperadores TIMES LPAREN numOperadores RPAREN
    (121) multiplicacion -> . numOperadores TIMES NUM
    (122) multiplicacion -> . numOperadores
    (123) divicion -> . numOperadores DIVIDE LPAREN numOperadores RPAREN
    (124) divicion -> . numOperadores DIVIDE NUM
    (125) divicion -> . numOperadores
    (128) enteros -> . NUM
    (129) enteros -> . numNegative
    (132) decimales -> . enteros PERIOD NUM
    (130) numNegative -> . MINUS NUM
    (131) numNegative -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
    FUNCTION        shift and go to state 104
    PLUS            shift and go to state 73
    MINUS           shift and go to state 75
    LBRACKET        shift and go to state 54
    NEW             shift and go to state 55
    STRING          shift and go to state 45
    NUM             shift and go to state 106
    ID              shift and go to state 41
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49
    PERIOD          reduce using rule 131 (numNegative -> .)
    TIMES           reduce using rule 131 (numNegative -> .)
    DIVIDE          reduce using rule 131 (numNegative -> .)
    $end            reduce using rule 131 (numNegative -> .)
    RBLOCK          reduce using rule 131 (numNegative -> .)
    RETURN          reduce using rule 131 (numNegative -> .)

  ! PLUS            [ reduce using rule 131 (numNegative -> .) ]
  ! MINUS           [ reduce using rule 131 (numNegative -> .) ]
  ! NUM             [ reduce using rule 131 (numNegative -> .) ]

    inicializarOp                  shift and go to state 105
    arrayDeclare                   shift and go to state 50
    declareMap                     shift and go to state 51
    declararSet                    shift and go to state 52
    javaScript_param               shift and go to state 53
    operacionesMath                shift and go to state 74
    boolean                        shift and go to state 47
    numOperadores                  shift and go to state 76
    suma                           shift and go to state 77
    restas                         shift and go to state 78
    multiplicacion                 shift and go to state 79
    divicion                       shift and go to state 80
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 64

    (46) varDeclaration -> LET ID COLON .

    $end            reduce using rule 46 (varDeclaration -> LET ID COLON .)
    RBLOCK          reduce using rule 46 (varDeclaration -> LET ID COLON .)
    RETURN          reduce using rule 46 (varDeclaration -> LET ID COLON .)


state 65

    (47) varDeclaration -> VAR ID COLON .

    $end            reduce using rule 47 (varDeclaration -> VAR ID COLON .)
    RBLOCK          reduce using rule 47 (varDeclaration -> VAR ID COLON .)
    RETURN          reduce using rule 47 (varDeclaration -> VAR ID COLON .)


state 66

    (33) impresion -> ALERT LPAREN expression . RPAREN

    RPAREN          shift and go to state 107


state 67

    (34) impresion_vacio -> ALERT LPAREN RPAREN .

    $end            reduce using rule 34 (impresion_vacio -> ALERT LPAREN RPAREN .)
    RBLOCK          reduce using rule 34 (impresion_vacio -> ALERT LPAREN RPAREN .)
    RETURN          reduce using rule 34 (impresion_vacio -> ALERT LPAREN RPAREN .)


state 68

    (8) expression -> conditionalEspecifico .

    RPAREN          reduce using rule 8 (expression -> conditionalEspecifico .)
    AND             reduce using rule 8 (expression -> conditionalEspecifico .)
    OR              reduce using rule 8 (expression -> conditionalEspecifico .)
    NOT             reduce using rule 8 (expression -> conditionalEspecifico .)


state 69

    (9) expression -> inicializarOp .

    RPAREN          reduce using rule 9 (expression -> inicializarOp .)
    AND             reduce using rule 9 (expression -> inicializarOp .)
    OR              reduce using rule 9 (expression -> inicializarOp .)
    NOT             reduce using rule 9 (expression -> inicializarOp .)


state 70

    (133) conditionalEspecifico -> ID . opConditional dataCondi
    (16) opConditional -> . ISEQUAL
    (17) opConditional -> . IS_NOT_IDENTICAL
    (18) opConditional -> . IS_IDENTICAL
    (19) opConditional -> . GREATER
    (20) opConditional -> . GREATEREQUAL
    (21) opConditional -> . LESS
    (22) opConditional -> . LESSEQUAL
    (23) opConditional -> . boolean
    (39) boolean -> . TRUE
    (40) boolean -> . FALSE

    ISEQUAL         shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_IDENTICAL    shift and go to state 111
    GREATER         shift and go to state 112
    GREATEREQUAL    shift and go to state 113
    LESS            shift and go to state 114
    LESSEQUAL       shift and go to state 115
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    opConditional                  shift and go to state 108
    boolean                        shift and go to state 116

state 71

    (134) conditionalEspecifico -> NUM . opConditional NUM
    (128) enteros -> NUM .
    (16) opConditional -> . ISEQUAL
    (17) opConditional -> . IS_NOT_IDENTICAL
    (18) opConditional -> . IS_IDENTICAL
    (19) opConditional -> . GREATER
    (20) opConditional -> . GREATEREQUAL
    (21) opConditional -> . LESS
    (22) opConditional -> . LESSEQUAL
    (23) opConditional -> . boolean
    (39) boolean -> . TRUE
    (40) boolean -> . FALSE

    PERIOD          reduce using rule 128 (enteros -> NUM .)
    PLUS            reduce using rule 128 (enteros -> NUM .)
    MINUS           reduce using rule 128 (enteros -> NUM .)
    TIMES           reduce using rule 128 (enteros -> NUM .)
    DIVIDE          reduce using rule 128 (enteros -> NUM .)
    NUM             reduce using rule 128 (enteros -> NUM .)
    RPAREN          reduce using rule 128 (enteros -> NUM .)
    AND             reduce using rule 128 (enteros -> NUM .)
    OR              reduce using rule 128 (enteros -> NUM .)
    NOT             reduce using rule 128 (enteros -> NUM .)
    ISEQUAL         shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_IDENTICAL    shift and go to state 111
    GREATER         shift and go to state 112
    GREATEREQUAL    shift and go to state 113
    LESS            shift and go to state 114
    LESSEQUAL       shift and go to state 115
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    opConditional                  shift and go to state 117
    boolean                        shift and go to state 116

state 72

    (135) conditionalEspecifico -> STRING . opConditional STRING
    (16) opConditional -> . ISEQUAL
    (17) opConditional -> . IS_NOT_IDENTICAL
    (18) opConditional -> . IS_IDENTICAL
    (19) opConditional -> . GREATER
    (20) opConditional -> . GREATEREQUAL
    (21) opConditional -> . LESS
    (22) opConditional -> . LESSEQUAL
    (23) opConditional -> . boolean
    (39) boolean -> . TRUE
    (40) boolean -> . FALSE

    ISEQUAL         shift and go to state 109
    IS_NOT_IDENTICAL shift and go to state 110
    IS_IDENTICAL    shift and go to state 111
    GREATER         shift and go to state 112
    GREATEREQUAL    shift and go to state 113
    LESS            shift and go to state 114
    LESSEQUAL       shift and go to state 115
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    opConditional                  shift and go to state 118
    boolean                        shift and go to state 116

state 73

    (99) inicializarOp -> PLUS . operacionesMath
    (102) operacionesMath -> . numOperadores PLUS suma
    (103) operacionesMath -> . suma
    (104) operacionesMath -> . suma operacionesMath
    (105) operacionesMath -> . restas
    (106) operacionesMath -> . numOperadores MINUS restas
    (107) operacionesMath -> . restas operacionesMath
    (108) operacionesMath -> . multiplicacion
    (109) operacionesMath -> . numOperadores TIMES multiplicacion
    (110) operacionesMath -> . multiplicacion operacionesMath
    (111) operacionesMath -> . divicion
    (112) operacionesMath -> . numOperadores DIVIDE divicion
    (113) operacionesMath -> . divicion operacionesMath
    (126) numOperadores -> . enteros
    (127) numOperadores -> . decimales
    (114) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (115) suma -> . numOperadores PLUS NUM
    (116) suma -> . numOperadores
    (117) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (118) restas -> . numOperadores MINUS NUM
    (119) restas -> . numOperadores
    (120) multiplicacion -> . numOperadores TIMES LPAREN numOperadores RPAREN
    (121) multiplicacion -> . numOperadores TIMES NUM
    (122) multiplicacion -> . numOperadores
    (123) divicion -> . numOperadores DIVIDE LPAREN numOperadores RPAREN
    (124) divicion -> . numOperadores DIVIDE NUM
    (125) divicion -> . numOperadores
    (128) enteros -> . NUM
    (129) enteros -> . numNegative
    (132) decimales -> . enteros PERIOD NUM
    (130) numNegative -> . MINUS NUM
    (131) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
    NUM             shift and go to state 121
    MINUS           shift and go to state 120
    PERIOD          reduce using rule 131 (numNegative -> .)
    PLUS            reduce using rule 131 (numNegative -> .)
    TIMES           reduce using rule 131 (numNegative -> .)
    DIVIDE          reduce using rule 131 (numNegative -> .)
    RPAREN          reduce using rule 131 (numNegative -> .)
    AND             reduce using rule 131 (numNegative -> .)
    OR              reduce using rule 131 (numNegative -> .)
    NOT             reduce using rule 131 (numNegative -> .)
    $end            reduce using rule 131 (numNegative -> .)
    RBLOCK          reduce using rule 131 (numNegative -> .)
    RETURN          reduce using rule 131 (numNegative -> .)

  ! MINUS           [ reduce using rule 131 (numNegative -> .) ]
  ! NUM             [ reduce using rule 131 (numNegative -> .) ]

    operacionesMath                shift and go to state 119
    numOperadores                  shift and go to state 76
    suma                           shift and go to state 77
    restas                         shift and go to state 78
    multiplicacion                 shift and go to state 79
    divicion                       shift and go to state 80
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 74

    (101) inicializarOp -> operacionesMath .

    RPAREN          reduce using rule 101 (inicializarOp -> operacionesMath .)
    AND             reduce using rule 101 (inicializarOp -> operacionesMath .)
    OR              reduce using rule 101 (inicializarOp -> operacionesMath .)
    NOT             reduce using rule 101 (inicializarOp -> operacionesMath .)
    $end            reduce using rule 101 (inicializarOp -> operacionesMath .)
    RBLOCK          reduce using rule 101 (inicializarOp -> operacionesMath .)
    RETURN          reduce using rule 101 (inicializarOp -> operacionesMath .)


state 75

    (100) inicializarOp -> MINUS . operacionesMath
    (130) numNegative -> MINUS . NUM
    (102) operacionesMath -> . numOperadores PLUS suma
    (103) operacionesMath -> . suma
    (104) operacionesMath -> . suma operacionesMath
    (105) operacionesMath -> . restas
    (106) operacionesMath -> . numOperadores MINUS restas
    (107) operacionesMath -> . restas operacionesMath
    (108) operacionesMath -> . multiplicacion
    (109) operacionesMath -> . numOperadores TIMES multiplicacion
    (110) operacionesMath -> . multiplicacion operacionesMath
    (111) operacionesMath -> . divicion
    (112) operacionesMath -> . numOperadores DIVIDE divicion
    (113) operacionesMath -> . divicion operacionesMath
    (126) numOperadores -> . enteros
    (127) numOperadores -> . decimales
    (114) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (115) suma -> . numOperadores PLUS NUM
    (116) suma -> . numOperadores
    (117) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (118) restas -> . numOperadores MINUS NUM
    (119) restas -> . numOperadores
    (120) multiplicacion -> . numOperadores TIMES LPAREN numOperadores RPAREN
    (121) multiplicacion -> . numOperadores TIMES NUM
    (122) multiplicacion -> . numOperadores
    (123) divicion -> . numOperadores DIVIDE LPAREN numOperadores RPAREN
    (124) divicion -> . numOperadores DIVIDE NUM
    (125) divicion -> . numOperadores
    (128) enteros -> . NUM
    (129) enteros -> . numNegative
    (132) decimales -> . enteros PERIOD NUM
    (130) numNegative -> . MINUS NUM
    (131) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
    NUM             shift and go to state 123
    MINUS           shift and go to state 120
    PERIOD          reduce using rule 131 (numNegative -> .)
    PLUS            reduce using rule 131 (numNegative -> .)
    TIMES           reduce using rule 131 (numNegative -> .)
    DIVIDE          reduce using rule 131 (numNegative -> .)
    RPAREN          reduce using rule 131 (numNegative -> .)
    AND             reduce using rule 131 (numNegative -> .)
    OR              reduce using rule 131 (numNegative -> .)
    NOT             reduce using rule 131 (numNegative -> .)
    $end            reduce using rule 131 (numNegative -> .)
    RBLOCK          reduce using rule 131 (numNegative -> .)
    RETURN          reduce using rule 131 (numNegative -> .)

  ! MINUS           [ reduce using rule 131 (numNegative -> .) ]
  ! NUM             [ reduce using rule 131 (numNegative -> .) ]

    operacionesMath                shift and go to state 122
    numOperadores                  shift and go to state 76
    suma                           shift and go to state 77
    restas                         shift and go to state 78
    multiplicacion                 shift and go to state 79
    divicion                       shift and go to state 80
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 76

    (102) operacionesMath -> numOperadores . PLUS suma
    (106) operacionesMath -> numOperadores . MINUS restas
    (109) operacionesMath -> numOperadores . TIMES multiplicacion
    (112) operacionesMath -> numOperadores . DIVIDE divicion
    (114) suma -> numOperadores . PLUS LPAREN numOperadores RPAREN
    (115) suma -> numOperadores . PLUS NUM
    (116) suma -> numOperadores .
    (117) restas -> numOperadores . MINUS LPAREN numOperadores RPAREN
    (118) restas -> numOperadores . MINUS NUM
    (119) restas -> numOperadores .
    (120) multiplicacion -> numOperadores . TIMES LPAREN numOperadores RPAREN
    (121) multiplicacion -> numOperadores . TIMES NUM
    (122) multiplicacion -> numOperadores .
    (123) divicion -> numOperadores . DIVIDE LPAREN numOperadores RPAREN
    (124) divicion -> numOperadores . DIVIDE NUM
    (125) divicion -> numOperadores .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! reduce/reduce conflict for NUM resolved using rule 116 (suma -> numOperadores .)
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! reduce/reduce conflict for PERIOD resolved using rule 116 (suma -> numOperadores .)
  ! reduce/reduce conflict for RPAREN resolved using rule 116 (suma -> numOperadores .)
  ! reduce/reduce conflict for AND resolved using rule 116 (suma -> numOperadores .)
  ! reduce/reduce conflict for OR resolved using rule 116 (suma -> numOperadores .)
  ! reduce/reduce conflict for NOT resolved using rule 116 (suma -> numOperadores .)
  ! reduce/reduce conflict for $end resolved using rule 116 (suma -> numOperadores .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 116 (suma -> numOperadores .)
  ! reduce/reduce conflict for RETURN resolved using rule 116 (suma -> numOperadores .)
  ! reduce/reduce conflict for NUM resolved using rule 116 (suma -> numOperadores .)
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! reduce/reduce conflict for PERIOD resolved using rule 116 (suma -> numOperadores .)
  ! reduce/reduce conflict for RPAREN resolved using rule 116 (suma -> numOperadores .)
  ! reduce/reduce conflict for AND resolved using rule 116 (suma -> numOperadores .)
  ! reduce/reduce conflict for OR resolved using rule 116 (suma -> numOperadores .)
  ! reduce/reduce conflict for NOT resolved using rule 116 (suma -> numOperadores .)
  ! reduce/reduce conflict for $end resolved using rule 116 (suma -> numOperadores .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 116 (suma -> numOperadores .)
  ! reduce/reduce conflict for RETURN resolved using rule 116 (suma -> numOperadores .)
  ! reduce/reduce conflict for NUM resolved using rule 116 (suma -> numOperadores .)
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! reduce/reduce conflict for PERIOD resolved using rule 116 (suma -> numOperadores .)
  ! reduce/reduce conflict for RPAREN resolved using rule 116 (suma -> numOperadores .)
  ! reduce/reduce conflict for AND resolved using rule 116 (suma -> numOperadores .)
  ! reduce/reduce conflict for OR resolved using rule 116 (suma -> numOperadores .)
  ! reduce/reduce conflict for NOT resolved using rule 116 (suma -> numOperadores .)
  ! reduce/reduce conflict for $end resolved using rule 116 (suma -> numOperadores .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 116 (suma -> numOperadores .)
  ! reduce/reduce conflict for RETURN resolved using rule 116 (suma -> numOperadores .)
    PLUS            shift and go to state 124
    MINUS           shift and go to state 125
    TIMES           shift and go to state 126
    DIVIDE          shift and go to state 127
    NUM             reduce using rule 116 (suma -> numOperadores .)
    PERIOD          reduce using rule 116 (suma -> numOperadores .)
    RPAREN          reduce using rule 116 (suma -> numOperadores .)
    AND             reduce using rule 116 (suma -> numOperadores .)
    OR              reduce using rule 116 (suma -> numOperadores .)
    NOT             reduce using rule 116 (suma -> numOperadores .)
    $end            reduce using rule 116 (suma -> numOperadores .)
    RBLOCK          reduce using rule 116 (suma -> numOperadores .)
    RETURN          reduce using rule 116 (suma -> numOperadores .)

  ! MINUS           [ reduce using rule 116 (suma -> numOperadores .) ]
  ! PLUS            [ reduce using rule 116 (suma -> numOperadores .) ]
  ! TIMES           [ reduce using rule 116 (suma -> numOperadores .) ]
  ! DIVIDE          [ reduce using rule 116 (suma -> numOperadores .) ]
  ! NUM             [ reduce using rule 119 (restas -> numOperadores .) ]
  ! MINUS           [ reduce using rule 119 (restas -> numOperadores .) ]
  ! PLUS            [ reduce using rule 119 (restas -> numOperadores .) ]
  ! TIMES           [ reduce using rule 119 (restas -> numOperadores .) ]
  ! DIVIDE          [ reduce using rule 119 (restas -> numOperadores .) ]
  ! PERIOD          [ reduce using rule 119 (restas -> numOperadores .) ]
  ! RPAREN          [ reduce using rule 119 (restas -> numOperadores .) ]
  ! AND             [ reduce using rule 119 (restas -> numOperadores .) ]
  ! OR              [ reduce using rule 119 (restas -> numOperadores .) ]
  ! NOT             [ reduce using rule 119 (restas -> numOperadores .) ]
  ! $end            [ reduce using rule 119 (restas -> numOperadores .) ]
  ! RBLOCK          [ reduce using rule 119 (restas -> numOperadores .) ]
  ! RETURN          [ reduce using rule 119 (restas -> numOperadores .) ]
  ! NUM             [ reduce using rule 122 (multiplicacion -> numOperadores .) ]
  ! MINUS           [ reduce using rule 122 (multiplicacion -> numOperadores .) ]
  ! PLUS            [ reduce using rule 122 (multiplicacion -> numOperadores .) ]
  ! TIMES           [ reduce using rule 122 (multiplicacion -> numOperadores .) ]
  ! DIVIDE          [ reduce using rule 122 (multiplicacion -> numOperadores .) ]
  ! PERIOD          [ reduce using rule 122 (multiplicacion -> numOperadores .) ]
  ! RPAREN          [ reduce using rule 122 (multiplicacion -> numOperadores .) ]
  ! AND             [ reduce using rule 122 (multiplicacion -> numOperadores .) ]
  ! OR              [ reduce using rule 122 (multiplicacion -> numOperadores .) ]
  ! NOT             [ reduce using rule 122 (multiplicacion -> numOperadores .) ]
  ! $end            [ reduce using rule 122 (multiplicacion -> numOperadores .) ]
  ! RBLOCK          [ reduce using rule 122 (multiplicacion -> numOperadores .) ]
  ! RETURN          [ reduce using rule 122 (multiplicacion -> numOperadores .) ]
  ! NUM             [ reduce using rule 125 (divicion -> numOperadores .) ]
  ! MINUS           [ reduce using rule 125 (divicion -> numOperadores .) ]
  ! PLUS            [ reduce using rule 125 (divicion -> numOperadores .) ]
  ! TIMES           [ reduce using rule 125 (divicion -> numOperadores .) ]
  ! DIVIDE          [ reduce using rule 125 (divicion -> numOperadores .) ]
  ! PERIOD          [ reduce using rule 125 (divicion -> numOperadores .) ]
  ! RPAREN          [ reduce using rule 125 (divicion -> numOperadores .) ]
  ! AND             [ reduce using rule 125 (divicion -> numOperadores .) ]
  ! OR              [ reduce using rule 125 (divicion -> numOperadores .) ]
  ! NOT             [ reduce using rule 125 (divicion -> numOperadores .) ]
  ! $end            [ reduce using rule 125 (divicion -> numOperadores .) ]
  ! RBLOCK          [ reduce using rule 125 (divicion -> numOperadores .) ]
  ! RETURN          [ reduce using rule 125 (divicion -> numOperadores .) ]


state 77

    (103) operacionesMath -> suma .
    (104) operacionesMath -> suma . operacionesMath
    (102) operacionesMath -> . numOperadores PLUS suma
    (103) operacionesMath -> . suma
    (104) operacionesMath -> . suma operacionesMath
    (105) operacionesMath -> . restas
    (106) operacionesMath -> . numOperadores MINUS restas
    (107) operacionesMath -> . restas operacionesMath
    (108) operacionesMath -> . multiplicacion
    (109) operacionesMath -> . numOperadores TIMES multiplicacion
    (110) operacionesMath -> . multiplicacion operacionesMath
    (111) operacionesMath -> . divicion
    (112) operacionesMath -> . numOperadores DIVIDE divicion
    (113) operacionesMath -> . divicion operacionesMath
    (126) numOperadores -> . enteros
    (127) numOperadores -> . decimales
    (114) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (115) suma -> . numOperadores PLUS NUM
    (116) suma -> . numOperadores
    (117) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (118) restas -> . numOperadores MINUS NUM
    (119) restas -> . numOperadores
    (120) multiplicacion -> . numOperadores TIMES LPAREN numOperadores RPAREN
    (121) multiplicacion -> . numOperadores TIMES NUM
    (122) multiplicacion -> . numOperadores
    (123) divicion -> . numOperadores DIVIDE LPAREN numOperadores RPAREN
    (124) divicion -> . numOperadores DIVIDE NUM
    (125) divicion -> . numOperadores
    (128) enteros -> . NUM
    (129) enteros -> . numNegative
    (132) decimales -> . enteros PERIOD NUM
    (130) numNegative -> . MINUS NUM
    (131) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! reduce/reduce conflict for RPAREN resolved using rule 103 (operacionesMath -> suma .)
  ! reduce/reduce conflict for AND resolved using rule 103 (operacionesMath -> suma .)
  ! reduce/reduce conflict for OR resolved using rule 103 (operacionesMath -> suma .)
  ! reduce/reduce conflict for NOT resolved using rule 103 (operacionesMath -> suma .)
  ! reduce/reduce conflict for $end resolved using rule 103 (operacionesMath -> suma .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 103 (operacionesMath -> suma .)
  ! reduce/reduce conflict for RETURN resolved using rule 103 (operacionesMath -> suma .)
    RPAREN          reduce using rule 103 (operacionesMath -> suma .)
    AND             reduce using rule 103 (operacionesMath -> suma .)
    OR              reduce using rule 103 (operacionesMath -> suma .)
    NOT             reduce using rule 103 (operacionesMath -> suma .)
    $end            reduce using rule 103 (operacionesMath -> suma .)
    RBLOCK          reduce using rule 103 (operacionesMath -> suma .)
    RETURN          reduce using rule 103 (operacionesMath -> suma .)
    NUM             shift and go to state 121
    MINUS           shift and go to state 120
    PERIOD          reduce using rule 131 (numNegative -> .)
    PLUS            reduce using rule 131 (numNegative -> .)
    TIMES           reduce using rule 131 (numNegative -> .)
    DIVIDE          reduce using rule 131 (numNegative -> .)

  ! MINUS           [ reduce using rule 131 (numNegative -> .) ]
  ! NUM             [ reduce using rule 131 (numNegative -> .) ]
  ! RPAREN          [ reduce using rule 131 (numNegative -> .) ]
  ! AND             [ reduce using rule 131 (numNegative -> .) ]
  ! OR              [ reduce using rule 131 (numNegative -> .) ]
  ! NOT             [ reduce using rule 131 (numNegative -> .) ]
  ! $end            [ reduce using rule 131 (numNegative -> .) ]
  ! RBLOCK          [ reduce using rule 131 (numNegative -> .) ]
  ! RETURN          [ reduce using rule 131 (numNegative -> .) ]

    suma                           shift and go to state 77
    operacionesMath                shift and go to state 128
    numOperadores                  shift and go to state 76
    restas                         shift and go to state 78
    multiplicacion                 shift and go to state 79
    divicion                       shift and go to state 80
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 78

    (105) operacionesMath -> restas .
    (107) operacionesMath -> restas . operacionesMath
    (102) operacionesMath -> . numOperadores PLUS suma
    (103) operacionesMath -> . suma
    (104) operacionesMath -> . suma operacionesMath
    (105) operacionesMath -> . restas
    (106) operacionesMath -> . numOperadores MINUS restas
    (107) operacionesMath -> . restas operacionesMath
    (108) operacionesMath -> . multiplicacion
    (109) operacionesMath -> . numOperadores TIMES multiplicacion
    (110) operacionesMath -> . multiplicacion operacionesMath
    (111) operacionesMath -> . divicion
    (112) operacionesMath -> . numOperadores DIVIDE divicion
    (113) operacionesMath -> . divicion operacionesMath
    (126) numOperadores -> . enteros
    (127) numOperadores -> . decimales
    (114) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (115) suma -> . numOperadores PLUS NUM
    (116) suma -> . numOperadores
    (117) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (118) restas -> . numOperadores MINUS NUM
    (119) restas -> . numOperadores
    (120) multiplicacion -> . numOperadores TIMES LPAREN numOperadores RPAREN
    (121) multiplicacion -> . numOperadores TIMES NUM
    (122) multiplicacion -> . numOperadores
    (123) divicion -> . numOperadores DIVIDE LPAREN numOperadores RPAREN
    (124) divicion -> . numOperadores DIVIDE NUM
    (125) divicion -> . numOperadores
    (128) enteros -> . NUM
    (129) enteros -> . numNegative
    (132) decimales -> . enteros PERIOD NUM
    (130) numNegative -> . MINUS NUM
    (131) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! reduce/reduce conflict for RPAREN resolved using rule 105 (operacionesMath -> restas .)
  ! reduce/reduce conflict for AND resolved using rule 105 (operacionesMath -> restas .)
  ! reduce/reduce conflict for OR resolved using rule 105 (operacionesMath -> restas .)
  ! reduce/reduce conflict for NOT resolved using rule 105 (operacionesMath -> restas .)
  ! reduce/reduce conflict for $end resolved using rule 105 (operacionesMath -> restas .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 105 (operacionesMath -> restas .)
  ! reduce/reduce conflict for RETURN resolved using rule 105 (operacionesMath -> restas .)
    RPAREN          reduce using rule 105 (operacionesMath -> restas .)
    AND             reduce using rule 105 (operacionesMath -> restas .)
    OR              reduce using rule 105 (operacionesMath -> restas .)
    NOT             reduce using rule 105 (operacionesMath -> restas .)
    $end            reduce using rule 105 (operacionesMath -> restas .)
    RBLOCK          reduce using rule 105 (operacionesMath -> restas .)
    RETURN          reduce using rule 105 (operacionesMath -> restas .)
    NUM             shift and go to state 121
    MINUS           shift and go to state 120
    PERIOD          reduce using rule 131 (numNegative -> .)
    PLUS            reduce using rule 131 (numNegative -> .)
    TIMES           reduce using rule 131 (numNegative -> .)
    DIVIDE          reduce using rule 131 (numNegative -> .)

  ! MINUS           [ reduce using rule 131 (numNegative -> .) ]
  ! NUM             [ reduce using rule 131 (numNegative -> .) ]
  ! RPAREN          [ reduce using rule 131 (numNegative -> .) ]
  ! AND             [ reduce using rule 131 (numNegative -> .) ]
  ! OR              [ reduce using rule 131 (numNegative -> .) ]
  ! NOT             [ reduce using rule 131 (numNegative -> .) ]
  ! $end            [ reduce using rule 131 (numNegative -> .) ]
  ! RBLOCK          [ reduce using rule 131 (numNegative -> .) ]
  ! RETURN          [ reduce using rule 131 (numNegative -> .) ]

    restas                         shift and go to state 78
    operacionesMath                shift and go to state 129
    numOperadores                  shift and go to state 76
    suma                           shift and go to state 77
    multiplicacion                 shift and go to state 79
    divicion                       shift and go to state 80
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 79

    (108) operacionesMath -> multiplicacion .
    (110) operacionesMath -> multiplicacion . operacionesMath
    (102) operacionesMath -> . numOperadores PLUS suma
    (103) operacionesMath -> . suma
    (104) operacionesMath -> . suma operacionesMath
    (105) operacionesMath -> . restas
    (106) operacionesMath -> . numOperadores MINUS restas
    (107) operacionesMath -> . restas operacionesMath
    (108) operacionesMath -> . multiplicacion
    (109) operacionesMath -> . numOperadores TIMES multiplicacion
    (110) operacionesMath -> . multiplicacion operacionesMath
    (111) operacionesMath -> . divicion
    (112) operacionesMath -> . numOperadores DIVIDE divicion
    (113) operacionesMath -> . divicion operacionesMath
    (126) numOperadores -> . enteros
    (127) numOperadores -> . decimales
    (114) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (115) suma -> . numOperadores PLUS NUM
    (116) suma -> . numOperadores
    (117) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (118) restas -> . numOperadores MINUS NUM
    (119) restas -> . numOperadores
    (120) multiplicacion -> . numOperadores TIMES LPAREN numOperadores RPAREN
    (121) multiplicacion -> . numOperadores TIMES NUM
    (122) multiplicacion -> . numOperadores
    (123) divicion -> . numOperadores DIVIDE LPAREN numOperadores RPAREN
    (124) divicion -> . numOperadores DIVIDE NUM
    (125) divicion -> . numOperadores
    (128) enteros -> . NUM
    (129) enteros -> . numNegative
    (132) decimales -> . enteros PERIOD NUM
    (130) numNegative -> . MINUS NUM
    (131) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! reduce/reduce conflict for RPAREN resolved using rule 108 (operacionesMath -> multiplicacion .)
  ! reduce/reduce conflict for AND resolved using rule 108 (operacionesMath -> multiplicacion .)
  ! reduce/reduce conflict for OR resolved using rule 108 (operacionesMath -> multiplicacion .)
  ! reduce/reduce conflict for NOT resolved using rule 108 (operacionesMath -> multiplicacion .)
  ! reduce/reduce conflict for $end resolved using rule 108 (operacionesMath -> multiplicacion .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 108 (operacionesMath -> multiplicacion .)
  ! reduce/reduce conflict for RETURN resolved using rule 108 (operacionesMath -> multiplicacion .)
    RPAREN          reduce using rule 108 (operacionesMath -> multiplicacion .)
    AND             reduce using rule 108 (operacionesMath -> multiplicacion .)
    OR              reduce using rule 108 (operacionesMath -> multiplicacion .)
    NOT             reduce using rule 108 (operacionesMath -> multiplicacion .)
    $end            reduce using rule 108 (operacionesMath -> multiplicacion .)
    RBLOCK          reduce using rule 108 (operacionesMath -> multiplicacion .)
    RETURN          reduce using rule 108 (operacionesMath -> multiplicacion .)
    NUM             shift and go to state 121
    MINUS           shift and go to state 120
    PERIOD          reduce using rule 131 (numNegative -> .)
    PLUS            reduce using rule 131 (numNegative -> .)
    TIMES           reduce using rule 131 (numNegative -> .)
    DIVIDE          reduce using rule 131 (numNegative -> .)

  ! MINUS           [ reduce using rule 131 (numNegative -> .) ]
  ! NUM             [ reduce using rule 131 (numNegative -> .) ]
  ! RPAREN          [ reduce using rule 131 (numNegative -> .) ]
  ! AND             [ reduce using rule 131 (numNegative -> .) ]
  ! OR              [ reduce using rule 131 (numNegative -> .) ]
  ! NOT             [ reduce using rule 131 (numNegative -> .) ]
  ! $end            [ reduce using rule 131 (numNegative -> .) ]
  ! RBLOCK          [ reduce using rule 131 (numNegative -> .) ]
  ! RETURN          [ reduce using rule 131 (numNegative -> .) ]

    multiplicacion                 shift and go to state 79
    operacionesMath                shift and go to state 130
    numOperadores                  shift and go to state 76
    suma                           shift and go to state 77
    restas                         shift and go to state 78
    divicion                       shift and go to state 80
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 80

    (111) operacionesMath -> divicion .
    (113) operacionesMath -> divicion . operacionesMath
    (102) operacionesMath -> . numOperadores PLUS suma
    (103) operacionesMath -> . suma
    (104) operacionesMath -> . suma operacionesMath
    (105) operacionesMath -> . restas
    (106) operacionesMath -> . numOperadores MINUS restas
    (107) operacionesMath -> . restas operacionesMath
    (108) operacionesMath -> . multiplicacion
    (109) operacionesMath -> . numOperadores TIMES multiplicacion
    (110) operacionesMath -> . multiplicacion operacionesMath
    (111) operacionesMath -> . divicion
    (112) operacionesMath -> . numOperadores DIVIDE divicion
    (113) operacionesMath -> . divicion operacionesMath
    (126) numOperadores -> . enteros
    (127) numOperadores -> . decimales
    (114) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (115) suma -> . numOperadores PLUS NUM
    (116) suma -> . numOperadores
    (117) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (118) restas -> . numOperadores MINUS NUM
    (119) restas -> . numOperadores
    (120) multiplicacion -> . numOperadores TIMES LPAREN numOperadores RPAREN
    (121) multiplicacion -> . numOperadores TIMES NUM
    (122) multiplicacion -> . numOperadores
    (123) divicion -> . numOperadores DIVIDE LPAREN numOperadores RPAREN
    (124) divicion -> . numOperadores DIVIDE NUM
    (125) divicion -> . numOperadores
    (128) enteros -> . NUM
    (129) enteros -> . numNegative
    (132) decimales -> . enteros PERIOD NUM
    (130) numNegative -> . MINUS NUM
    (131) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! reduce/reduce conflict for RPAREN resolved using rule 111 (operacionesMath -> divicion .)
  ! reduce/reduce conflict for AND resolved using rule 111 (operacionesMath -> divicion .)
  ! reduce/reduce conflict for OR resolved using rule 111 (operacionesMath -> divicion .)
  ! reduce/reduce conflict for NOT resolved using rule 111 (operacionesMath -> divicion .)
  ! reduce/reduce conflict for $end resolved using rule 111 (operacionesMath -> divicion .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 111 (operacionesMath -> divicion .)
  ! reduce/reduce conflict for RETURN resolved using rule 111 (operacionesMath -> divicion .)
    RPAREN          reduce using rule 111 (operacionesMath -> divicion .)
    AND             reduce using rule 111 (operacionesMath -> divicion .)
    OR              reduce using rule 111 (operacionesMath -> divicion .)
    NOT             reduce using rule 111 (operacionesMath -> divicion .)
    $end            reduce using rule 111 (operacionesMath -> divicion .)
    RBLOCK          reduce using rule 111 (operacionesMath -> divicion .)
    RETURN          reduce using rule 111 (operacionesMath -> divicion .)
    NUM             shift and go to state 121
    MINUS           shift and go to state 120
    PERIOD          reduce using rule 131 (numNegative -> .)
    PLUS            reduce using rule 131 (numNegative -> .)
    TIMES           reduce using rule 131 (numNegative -> .)
    DIVIDE          reduce using rule 131 (numNegative -> .)

  ! MINUS           [ reduce using rule 131 (numNegative -> .) ]
  ! NUM             [ reduce using rule 131 (numNegative -> .) ]
  ! RPAREN          [ reduce using rule 131 (numNegative -> .) ]
  ! AND             [ reduce using rule 131 (numNegative -> .) ]
  ! OR              [ reduce using rule 131 (numNegative -> .) ]
  ! NOT             [ reduce using rule 131 (numNegative -> .) ]
  ! $end            [ reduce using rule 131 (numNegative -> .) ]
  ! RBLOCK          [ reduce using rule 131 (numNegative -> .) ]
  ! RETURN          [ reduce using rule 131 (numNegative -> .) ]

    divicion                       shift and go to state 80
    operacionesMath                shift and go to state 131
    numOperadores                  shift and go to state 76
    suma                           shift and go to state 77
    restas                         shift and go to state 78
    multiplicacion                 shift and go to state 79
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 81

    (126) numOperadores -> enteros .
    (132) decimales -> enteros . PERIOD NUM

  ! shift/reduce conflict for PERIOD resolved as shift
    PLUS            reduce using rule 126 (numOperadores -> enteros .)
    MINUS           reduce using rule 126 (numOperadores -> enteros .)
    TIMES           reduce using rule 126 (numOperadores -> enteros .)
    DIVIDE          reduce using rule 126 (numOperadores -> enteros .)
    NUM             reduce using rule 126 (numOperadores -> enteros .)
    RPAREN          reduce using rule 126 (numOperadores -> enteros .)
    AND             reduce using rule 126 (numOperadores -> enteros .)
    OR              reduce using rule 126 (numOperadores -> enteros .)
    NOT             reduce using rule 126 (numOperadores -> enteros .)
    $end            reduce using rule 126 (numOperadores -> enteros .)
    RBLOCK          reduce using rule 126 (numOperadores -> enteros .)
    RETURN          reduce using rule 126 (numOperadores -> enteros .)
    PERIOD          shift and go to state 132

  ! PERIOD          [ reduce using rule 126 (numOperadores -> enteros .) ]


state 82

    (127) numOperadores -> decimales .

    PLUS            reduce using rule 127 (numOperadores -> decimales .)
    MINUS           reduce using rule 127 (numOperadores -> decimales .)
    TIMES           reduce using rule 127 (numOperadores -> decimales .)
    DIVIDE          reduce using rule 127 (numOperadores -> decimales .)
    NUM             reduce using rule 127 (numOperadores -> decimales .)
    PERIOD          reduce using rule 127 (numOperadores -> decimales .)
    RPAREN          reduce using rule 127 (numOperadores -> decimales .)
    AND             reduce using rule 127 (numOperadores -> decimales .)
    OR              reduce using rule 127 (numOperadores -> decimales .)
    NOT             reduce using rule 127 (numOperadores -> decimales .)
    $end            reduce using rule 127 (numOperadores -> decimales .)
    RBLOCK          reduce using rule 127 (numOperadores -> decimales .)
    RETURN          reduce using rule 127 (numOperadores -> decimales .)


state 83

    (129) enteros -> numNegative .

    PERIOD          reduce using rule 129 (enteros -> numNegative .)
    PLUS            reduce using rule 129 (enteros -> numNegative .)
    MINUS           reduce using rule 129 (enteros -> numNegative .)
    TIMES           reduce using rule 129 (enteros -> numNegative .)
    DIVIDE          reduce using rule 129 (enteros -> numNegative .)
    NUM             reduce using rule 129 (enteros -> numNegative .)
    RPAREN          reduce using rule 129 (enteros -> numNegative .)
    AND             reduce using rule 129 (enteros -> numNegative .)
    OR              reduce using rule 129 (enteros -> numNegative .)
    NOT             reduce using rule 129 (enteros -> numNegative .)
    $end            reduce using rule 129 (enteros -> numNegative .)
    RBLOCK          reduce using rule 129 (enteros -> numNegative .)
    RETURN          reduce using rule 129 (enteros -> numNegative .)


state 84

    (82) declareteFunction -> FUNCTION ID LPAREN . params RPAREN
    (83) declareteFunction -> FUNCTION ID LPAREN . params RPAREN sentencesCmpt
    (88) params -> . paramList
    (89) paramList -> . javaScript_param
    (90) paramList -> . javaScript_param COMMA paramList
    (35) javaScript_param -> . STRING
    (36) javaScript_param -> . NUM
    (37) javaScript_param -> . boolean
    (38) javaScript_param -> . ID
    (39) boolean -> . TRUE
    (40) boolean -> . FALSE

    STRING          shift and go to state 45
    NUM             shift and go to state 46
    ID              shift and go to state 41
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    params                         shift and go to state 133
    paramList                      shift and go to state 43
    javaScript_param               shift and go to state 44
    boolean                        shift and go to state 47

state 85

    (27) sentencias_if -> IF LPAREN expression . operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (28) sentencias_if -> IF LPAREN expression . RPAREN LBLOCK sentencia RBLOCK
    (29) sentencias_if_else -> IF LPAREN expression . operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (30) sentencias_if_else -> IF LPAREN expression . RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (24) operadorLogical -> . AND
    (25) operadorLogical -> . OR
    (26) operadorLogical -> . NOT

    RPAREN          shift and go to state 135
    AND             shift and go to state 136
    OR              shift and go to state 137
    NOT             shift and go to state 138

    operadorLogical                shift and go to state 134

state 86

    (31) sentencias_while -> WHILE LPAREN expression . RPAREN LBLOCK sentencia RBLOCK
    (32) sentencias_while -> WHILE LPAREN expression . operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (24) operadorLogical -> . AND
    (25) operadorLogical -> . OR
    (26) operadorLogical -> . NOT

    RPAREN          shift and go to state 139
    AND             shift and go to state 136
    OR              shift and go to state 137
    NOT             shift and go to state 138

    operadorLogical                shift and go to state 140

state 87

    (87) callFunction -> ID LPAREN params RPAREN .

    COLON           reduce using rule 87 (callFunction -> ID LPAREN params RPAREN .)


state 88

    (90) paramList -> javaScript_param COMMA . paramList
    (89) paramList -> . javaScript_param
    (90) paramList -> . javaScript_param COMMA paramList
    (35) javaScript_param -> . STRING
    (36) javaScript_param -> . NUM
    (37) javaScript_param -> . boolean
    (38) javaScript_param -> . ID
    (39) boolean -> . TRUE
    (40) boolean -> . FALSE

    STRING          shift and go to state 45
    NUM             shift and go to state 46
    ID              shift and go to state 41
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    javaScript_param               shift and go to state 44
    paramList                      shift and go to state 141
    boolean                        shift and go to state 47

state 89

    (48) assign -> ID EQUAL arrayDeclare COLON .

    $end            reduce using rule 48 (assign -> ID EQUAL arrayDeclare COLON .)
    RBLOCK          reduce using rule 48 (assign -> ID EQUAL arrayDeclare COLON .)
    RETURN          reduce using rule 48 (assign -> ID EQUAL arrayDeclare COLON .)


state 90

    (49) assign -> ID EQUAL declareMap COLON .

    $end            reduce using rule 49 (assign -> ID EQUAL declareMap COLON .)
    RBLOCK          reduce using rule 49 (assign -> ID EQUAL declareMap COLON .)
    RETURN          reduce using rule 49 (assign -> ID EQUAL declareMap COLON .)


state 91

    (50) assign -> ID EQUAL declararSet COLON .

    $end            reduce using rule 50 (assign -> ID EQUAL declararSet COLON .)
    RBLOCK          reduce using rule 50 (assign -> ID EQUAL declararSet COLON .)
    RETURN          reduce using rule 50 (assign -> ID EQUAL declararSet COLON .)


state 92

    (51) assign -> ID EQUAL javaScript_param COLON .

    $end            reduce using rule 51 (assign -> ID EQUAL javaScript_param COLON .)
    RBLOCK          reduce using rule 51 (assign -> ID EQUAL javaScript_param COLON .)
    RETURN          reduce using rule 51 (assign -> ID EQUAL javaScript_param COLON .)


state 93

    (55) arrayDeclare -> LBRACKET javaScript_param . COMMA javaScript_param RBRACKET

    COMMA           shift and go to state 142


state 94

    (56) arrayDeclare -> NEW ARRAY . LPAREN arrayValues RPAREN

    LPAREN          shift and go to state 143


state 95

    (62) declareMap -> NEW MAP . LPAREN LBRACKET iterable RBRACKET RPAREN
    (63) declareMap -> NEW MAP . LPAREN RPAREN

    LPAREN          shift and go to state 144


state 96

    (95) declararSet -> NEW SET . LPAREN LBRACKET iterable RBRACKET RPAREN

    LPAREN          shift and go to state 145


state 97

    (59) methodArray -> PERIOD PUSH LPAREN . javaScript_param RPAREN
    (35) javaScript_param -> . STRING
    (36) javaScript_param -> . NUM
    (37) javaScript_param -> . boolean
    (38) javaScript_param -> . ID
    (39) boolean -> . TRUE
    (40) boolean -> . FALSE

    STRING          shift and go to state 45
    NUM             shift and go to state 46
    ID              shift and go to state 41
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    javaScript_param               shift and go to state 146
    boolean                        shift and go to state 47

state 98

    (60) methodArray -> PERIOD UNSHIFT LPAREN . javaScript_param RPAREN
    (35) javaScript_param -> . STRING
    (36) javaScript_param -> . NUM
    (37) javaScript_param -> . boolean
    (38) javaScript_param -> . ID
    (39) boolean -> . TRUE
    (40) boolean -> . FALSE

    STRING          shift and go to state 45
    NUM             shift and go to state 46
    ID              shift and go to state 41
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    javaScript_param               shift and go to state 147
    boolean                        shift and go to state 47

state 99

    (61) methodArray -> PERIOD POP LPAREN . RPAREN

    RPAREN          shift and go to state 148


state 100

    (96) methodSet -> PERIOD ADD LPAREN . javaScript_param RPAREN
    (35) javaScript_param -> . STRING
    (36) javaScript_param -> . NUM
    (37) javaScript_param -> . boolean
    (38) javaScript_param -> . ID
    (39) boolean -> . TRUE
    (40) boolean -> . FALSE

    STRING          shift and go to state 45
    NUM             shift and go to state 46
    ID              shift and go to state 41
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    javaScript_param               shift and go to state 149
    boolean                        shift and go to state 47

state 101

    (97) methodSet -> PERIOD DELETE LPAREN . javaScript_param RPAREN
    (35) javaScript_param -> . STRING
    (36) javaScript_param -> . NUM
    (37) javaScript_param -> . boolean
    (38) javaScript_param -> . ID
    (39) boolean -> . TRUE
    (40) boolean -> . FALSE

    STRING          shift and go to state 45
    NUM             shift and go to state 46
    ID              shift and go to state 41
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    javaScript_param               shift and go to state 150
    boolean                        shift and go to state 47

state 102

    (98) methodSet -> PERIOD CLEAR LPAREN . RPAREN
    (80) methodMap -> PERIOD CLEAR LPAREN . RPAREN

    RPAREN          shift and go to state 151


state 103

    (81) methodMap -> PERIOD LENGTH LPAREN . RPAREN

    RPAREN          shift and go to state 152


state 104

    (84) declareteFunction -> varType ID EQUAL FUNCTION . LPAREN params RPAREN

    LPAREN          shift and go to state 153


state 105

    (10) assingOperadores -> varType ID EQUAL inicializarOp .

    $end            reduce using rule 10 (assingOperadores -> varType ID EQUAL inicializarOp .)
    RBLOCK          reduce using rule 10 (assingOperadores -> varType ID EQUAL inicializarOp .)
    RETURN          reduce using rule 10 (assingOperadores -> varType ID EQUAL inicializarOp .)


state 106

    (36) javaScript_param -> NUM .
    (128) enteros -> NUM .

    COLON           reduce using rule 36 (javaScript_param -> NUM .)
    PERIOD          reduce using rule 128 (enteros -> NUM .)
    PLUS            reduce using rule 128 (enteros -> NUM .)
    MINUS           reduce using rule 128 (enteros -> NUM .)
    TIMES           reduce using rule 128 (enteros -> NUM .)
    DIVIDE          reduce using rule 128 (enteros -> NUM .)
    NUM             reduce using rule 128 (enteros -> NUM .)
    $end            reduce using rule 128 (enteros -> NUM .)
    RBLOCK          reduce using rule 128 (enteros -> NUM .)
    RETURN          reduce using rule 128 (enteros -> NUM .)


state 107

    (33) impresion -> ALERT LPAREN expression RPAREN .

    $end            reduce using rule 33 (impresion -> ALERT LPAREN expression RPAREN .)
    RBLOCK          reduce using rule 33 (impresion -> ALERT LPAREN expression RPAREN .)
    RETURN          reduce using rule 33 (impresion -> ALERT LPAREN expression RPAREN .)


state 108

    (133) conditionalEspecifico -> ID opConditional . dataCondi
    (136) dataCondi -> . STRING
    (137) dataCondi -> . NUM

    STRING          shift and go to state 155
    NUM             shift and go to state 156

    dataCondi                      shift and go to state 154

state 109

    (16) opConditional -> ISEQUAL .

    STRING          reduce using rule 16 (opConditional -> ISEQUAL .)
    NUM             reduce using rule 16 (opConditional -> ISEQUAL .)


state 110

    (17) opConditional -> IS_NOT_IDENTICAL .

    STRING          reduce using rule 17 (opConditional -> IS_NOT_IDENTICAL .)
    NUM             reduce using rule 17 (opConditional -> IS_NOT_IDENTICAL .)


state 111

    (18) opConditional -> IS_IDENTICAL .

    STRING          reduce using rule 18 (opConditional -> IS_IDENTICAL .)
    NUM             reduce using rule 18 (opConditional -> IS_IDENTICAL .)


state 112

    (19) opConditional -> GREATER .

    STRING          reduce using rule 19 (opConditional -> GREATER .)
    NUM             reduce using rule 19 (opConditional -> GREATER .)


state 113

    (20) opConditional -> GREATEREQUAL .

    STRING          reduce using rule 20 (opConditional -> GREATEREQUAL .)
    NUM             reduce using rule 20 (opConditional -> GREATEREQUAL .)


state 114

    (21) opConditional -> LESS .

    STRING          reduce using rule 21 (opConditional -> LESS .)
    NUM             reduce using rule 21 (opConditional -> LESS .)


state 115

    (22) opConditional -> LESSEQUAL .

    STRING          reduce using rule 22 (opConditional -> LESSEQUAL .)
    NUM             reduce using rule 22 (opConditional -> LESSEQUAL .)


state 116

    (23) opConditional -> boolean .

    STRING          reduce using rule 23 (opConditional -> boolean .)
    NUM             reduce using rule 23 (opConditional -> boolean .)


state 117

    (134) conditionalEspecifico -> NUM opConditional . NUM

    NUM             shift and go to state 157


state 118

    (135) conditionalEspecifico -> STRING opConditional . STRING

    STRING          shift and go to state 158


state 119

    (99) inicializarOp -> PLUS operacionesMath .

    RPAREN          reduce using rule 99 (inicializarOp -> PLUS operacionesMath .)
    AND             reduce using rule 99 (inicializarOp -> PLUS operacionesMath .)
    OR              reduce using rule 99 (inicializarOp -> PLUS operacionesMath .)
    NOT             reduce using rule 99 (inicializarOp -> PLUS operacionesMath .)
    $end            reduce using rule 99 (inicializarOp -> PLUS operacionesMath .)
    RBLOCK          reduce using rule 99 (inicializarOp -> PLUS operacionesMath .)
    RETURN          reduce using rule 99 (inicializarOp -> PLUS operacionesMath .)


state 120

    (130) numNegative -> MINUS . NUM

    NUM             shift and go to state 159


state 121

    (128) enteros -> NUM .

    PERIOD          reduce using rule 128 (enteros -> NUM .)
    PLUS            reduce using rule 128 (enteros -> NUM .)
    MINUS           reduce using rule 128 (enteros -> NUM .)
    TIMES           reduce using rule 128 (enteros -> NUM .)
    DIVIDE          reduce using rule 128 (enteros -> NUM .)
    NUM             reduce using rule 128 (enteros -> NUM .)
    RPAREN          reduce using rule 128 (enteros -> NUM .)
    AND             reduce using rule 128 (enteros -> NUM .)
    OR              reduce using rule 128 (enteros -> NUM .)
    NOT             reduce using rule 128 (enteros -> NUM .)
    $end            reduce using rule 128 (enteros -> NUM .)
    RBLOCK          reduce using rule 128 (enteros -> NUM .)
    RETURN          reduce using rule 128 (enteros -> NUM .)


state 122

    (100) inicializarOp -> MINUS operacionesMath .

    RPAREN          reduce using rule 100 (inicializarOp -> MINUS operacionesMath .)
    AND             reduce using rule 100 (inicializarOp -> MINUS operacionesMath .)
    OR              reduce using rule 100 (inicializarOp -> MINUS operacionesMath .)
    NOT             reduce using rule 100 (inicializarOp -> MINUS operacionesMath .)
    $end            reduce using rule 100 (inicializarOp -> MINUS operacionesMath .)
    RBLOCK          reduce using rule 100 (inicializarOp -> MINUS operacionesMath .)
    RETURN          reduce using rule 100 (inicializarOp -> MINUS operacionesMath .)


state 123

    (130) numNegative -> MINUS NUM .
    (128) enteros -> NUM .

  ! reduce/reduce conflict for PERIOD resolved using rule 128 (enteros -> NUM .)
  ! reduce/reduce conflict for PLUS resolved using rule 128 (enteros -> NUM .)
  ! reduce/reduce conflict for MINUS resolved using rule 128 (enteros -> NUM .)
  ! reduce/reduce conflict for TIMES resolved using rule 128 (enteros -> NUM .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 128 (enteros -> NUM .)
  ! reduce/reduce conflict for NUM resolved using rule 128 (enteros -> NUM .)
  ! reduce/reduce conflict for RPAREN resolved using rule 128 (enteros -> NUM .)
  ! reduce/reduce conflict for AND resolved using rule 128 (enteros -> NUM .)
  ! reduce/reduce conflict for OR resolved using rule 128 (enteros -> NUM .)
  ! reduce/reduce conflict for NOT resolved using rule 128 (enteros -> NUM .)
  ! reduce/reduce conflict for $end resolved using rule 128 (enteros -> NUM .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 128 (enteros -> NUM .)
  ! reduce/reduce conflict for RETURN resolved using rule 128 (enteros -> NUM .)
    PERIOD          reduce using rule 128 (enteros -> NUM .)
    PLUS            reduce using rule 128 (enteros -> NUM .)
    MINUS           reduce using rule 128 (enteros -> NUM .)
    TIMES           reduce using rule 128 (enteros -> NUM .)
    DIVIDE          reduce using rule 128 (enteros -> NUM .)
    NUM             reduce using rule 128 (enteros -> NUM .)
    RPAREN          reduce using rule 128 (enteros -> NUM .)
    AND             reduce using rule 128 (enteros -> NUM .)
    OR              reduce using rule 128 (enteros -> NUM .)
    NOT             reduce using rule 128 (enteros -> NUM .)
    $end            reduce using rule 128 (enteros -> NUM .)
    RBLOCK          reduce using rule 128 (enteros -> NUM .)
    RETURN          reduce using rule 128 (enteros -> NUM .)

  ! PERIOD          [ reduce using rule 130 (numNegative -> MINUS NUM .) ]
  ! PLUS            [ reduce using rule 130 (numNegative -> MINUS NUM .) ]
  ! MINUS           [ reduce using rule 130 (numNegative -> MINUS NUM .) ]
  ! TIMES           [ reduce using rule 130 (numNegative -> MINUS NUM .) ]
  ! DIVIDE          [ reduce using rule 130 (numNegative -> MINUS NUM .) ]
  ! NUM             [ reduce using rule 130 (numNegative -> MINUS NUM .) ]
  ! RPAREN          [ reduce using rule 130 (numNegative -> MINUS NUM .) ]
  ! AND             [ reduce using rule 130 (numNegative -> MINUS NUM .) ]
  ! OR              [ reduce using rule 130 (numNegative -> MINUS NUM .) ]
  ! NOT             [ reduce using rule 130 (numNegative -> MINUS NUM .) ]
  ! $end            [ reduce using rule 130 (numNegative -> MINUS NUM .) ]
  ! RBLOCK          [ reduce using rule 130 (numNegative -> MINUS NUM .) ]
  ! RETURN          [ reduce using rule 130 (numNegative -> MINUS NUM .) ]


state 124

    (102) operacionesMath -> numOperadores PLUS . suma
    (114) suma -> numOperadores PLUS . LPAREN numOperadores RPAREN
    (115) suma -> numOperadores PLUS . NUM
    (114) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (115) suma -> . numOperadores PLUS NUM
    (116) suma -> . numOperadores
    (126) numOperadores -> . enteros
    (127) numOperadores -> . decimales
    (128) enteros -> . NUM
    (129) enteros -> . numNegative
    (132) decimales -> . enteros PERIOD NUM
    (130) numNegative -> . MINUS NUM
    (131) numNegative -> .

    LPAREN          shift and go to state 162
    NUM             shift and go to state 163
    MINUS           shift and go to state 120
    PERIOD          reduce using rule 131 (numNegative -> .)
    PLUS            reduce using rule 131 (numNegative -> .)
    RPAREN          reduce using rule 131 (numNegative -> .)
    AND             reduce using rule 131 (numNegative -> .)
    OR              reduce using rule 131 (numNegative -> .)
    NOT             reduce using rule 131 (numNegative -> .)
    $end            reduce using rule 131 (numNegative -> .)
    RBLOCK          reduce using rule 131 (numNegative -> .)
    RETURN          reduce using rule 131 (numNegative -> .)

    numOperadores                  shift and go to state 160
    suma                           shift and go to state 161
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 125

    (106) operacionesMath -> numOperadores MINUS . restas
    (117) restas -> numOperadores MINUS . LPAREN numOperadores RPAREN
    (118) restas -> numOperadores MINUS . NUM
    (117) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (118) restas -> . numOperadores MINUS NUM
    (119) restas -> . numOperadores
    (126) numOperadores -> . enteros
    (127) numOperadores -> . decimales
    (128) enteros -> . NUM
    (129) enteros -> . numNegative
    (132) decimales -> . enteros PERIOD NUM
    (130) numNegative -> . MINUS NUM
    (131) numNegative -> .

  ! shift/reduce conflict for MINUS resolved as shift
    LPAREN          shift and go to state 166
    NUM             shift and go to state 167
    MINUS           shift and go to state 120
    PERIOD          reduce using rule 131 (numNegative -> .)
    RPAREN          reduce using rule 131 (numNegative -> .)
    AND             reduce using rule 131 (numNegative -> .)
    OR              reduce using rule 131 (numNegative -> .)
    NOT             reduce using rule 131 (numNegative -> .)
    $end            reduce using rule 131 (numNegative -> .)
    RBLOCK          reduce using rule 131 (numNegative -> .)
    RETURN          reduce using rule 131 (numNegative -> .)

  ! MINUS           [ reduce using rule 131 (numNegative -> .) ]

    numOperadores                  shift and go to state 164
    restas                         shift and go to state 165
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 126

    (109) operacionesMath -> numOperadores TIMES . multiplicacion
    (120) multiplicacion -> numOperadores TIMES . LPAREN numOperadores RPAREN
    (121) multiplicacion -> numOperadores TIMES . NUM
    (120) multiplicacion -> . numOperadores TIMES LPAREN numOperadores RPAREN
    (121) multiplicacion -> . numOperadores TIMES NUM
    (122) multiplicacion -> . numOperadores
    (126) numOperadores -> . enteros
    (127) numOperadores -> . decimales
    (128) enteros -> . NUM
    (129) enteros -> . numNegative
    (132) decimales -> . enteros PERIOD NUM
    (130) numNegative -> . MINUS NUM
    (131) numNegative -> .

    LPAREN          shift and go to state 170
    NUM             shift and go to state 171
    MINUS           shift and go to state 120
    PERIOD          reduce using rule 131 (numNegative -> .)
    TIMES           reduce using rule 131 (numNegative -> .)
    RPAREN          reduce using rule 131 (numNegative -> .)
    AND             reduce using rule 131 (numNegative -> .)
    OR              reduce using rule 131 (numNegative -> .)
    NOT             reduce using rule 131 (numNegative -> .)
    $end            reduce using rule 131 (numNegative -> .)
    RBLOCK          reduce using rule 131 (numNegative -> .)
    RETURN          reduce using rule 131 (numNegative -> .)

    numOperadores                  shift and go to state 168
    multiplicacion                 shift and go to state 169
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 127

    (112) operacionesMath -> numOperadores DIVIDE . divicion
    (123) divicion -> numOperadores DIVIDE . LPAREN numOperadores RPAREN
    (124) divicion -> numOperadores DIVIDE . NUM
    (123) divicion -> . numOperadores DIVIDE LPAREN numOperadores RPAREN
    (124) divicion -> . numOperadores DIVIDE NUM
    (125) divicion -> . numOperadores
    (126) numOperadores -> . enteros
    (127) numOperadores -> . decimales
    (128) enteros -> . NUM
    (129) enteros -> . numNegative
    (132) decimales -> . enteros PERIOD NUM
    (130) numNegative -> . MINUS NUM
    (131) numNegative -> .

    LPAREN          shift and go to state 174
    NUM             shift and go to state 175
    MINUS           shift and go to state 120
    PERIOD          reduce using rule 131 (numNegative -> .)
    DIVIDE          reduce using rule 131 (numNegative -> .)
    RPAREN          reduce using rule 131 (numNegative -> .)
    AND             reduce using rule 131 (numNegative -> .)
    OR              reduce using rule 131 (numNegative -> .)
    NOT             reduce using rule 131 (numNegative -> .)
    $end            reduce using rule 131 (numNegative -> .)
    RBLOCK          reduce using rule 131 (numNegative -> .)
    RETURN          reduce using rule 131 (numNegative -> .)

    numOperadores                  shift and go to state 172
    divicion                       shift and go to state 173
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 128

    (104) operacionesMath -> suma operacionesMath .

    RPAREN          reduce using rule 104 (operacionesMath -> suma operacionesMath .)
    AND             reduce using rule 104 (operacionesMath -> suma operacionesMath .)
    OR              reduce using rule 104 (operacionesMath -> suma operacionesMath .)
    NOT             reduce using rule 104 (operacionesMath -> suma operacionesMath .)
    $end            reduce using rule 104 (operacionesMath -> suma operacionesMath .)
    RBLOCK          reduce using rule 104 (operacionesMath -> suma operacionesMath .)
    RETURN          reduce using rule 104 (operacionesMath -> suma operacionesMath .)


state 129

    (107) operacionesMath -> restas operacionesMath .

    RPAREN          reduce using rule 107 (operacionesMath -> restas operacionesMath .)
    AND             reduce using rule 107 (operacionesMath -> restas operacionesMath .)
    OR              reduce using rule 107 (operacionesMath -> restas operacionesMath .)
    NOT             reduce using rule 107 (operacionesMath -> restas operacionesMath .)
    $end            reduce using rule 107 (operacionesMath -> restas operacionesMath .)
    RBLOCK          reduce using rule 107 (operacionesMath -> restas operacionesMath .)
    RETURN          reduce using rule 107 (operacionesMath -> restas operacionesMath .)


state 130

    (110) operacionesMath -> multiplicacion operacionesMath .

    RPAREN          reduce using rule 110 (operacionesMath -> multiplicacion operacionesMath .)
    AND             reduce using rule 110 (operacionesMath -> multiplicacion operacionesMath .)
    OR              reduce using rule 110 (operacionesMath -> multiplicacion operacionesMath .)
    NOT             reduce using rule 110 (operacionesMath -> multiplicacion operacionesMath .)
    $end            reduce using rule 110 (operacionesMath -> multiplicacion operacionesMath .)
    RBLOCK          reduce using rule 110 (operacionesMath -> multiplicacion operacionesMath .)
    RETURN          reduce using rule 110 (operacionesMath -> multiplicacion operacionesMath .)


state 131

    (113) operacionesMath -> divicion operacionesMath .

    RPAREN          reduce using rule 113 (operacionesMath -> divicion operacionesMath .)
    AND             reduce using rule 113 (operacionesMath -> divicion operacionesMath .)
    OR              reduce using rule 113 (operacionesMath -> divicion operacionesMath .)
    NOT             reduce using rule 113 (operacionesMath -> divicion operacionesMath .)
    $end            reduce using rule 113 (operacionesMath -> divicion operacionesMath .)
    RBLOCK          reduce using rule 113 (operacionesMath -> divicion operacionesMath .)
    RETURN          reduce using rule 113 (operacionesMath -> divicion operacionesMath .)


state 132

    (132) decimales -> enteros PERIOD . NUM

    NUM             shift and go to state 176


state 133

    (82) declareteFunction -> FUNCTION ID LPAREN params . RPAREN
    (83) declareteFunction -> FUNCTION ID LPAREN params . RPAREN sentencesCmpt

    RPAREN          shift and go to state 177


state 134

    (27) sentencias_if -> IF LPAREN expression operadorLogical . expression RPAREN LBLOCK sentencia RBLOCK
    (29) sentencias_if_else -> IF LPAREN expression operadorLogical . expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (8) expression -> . conditionalEspecifico
    (9) expression -> . inicializarOp
    (133) conditionalEspecifico -> . ID opConditional dataCondi
    (134) conditionalEspecifico -> . NUM opConditional NUM
    (135) conditionalEspecifico -> . STRING opConditional STRING
    (99) inicializarOp -> . PLUS operacionesMath
    (100) inicializarOp -> . MINUS operacionesMath
    (101) inicializarOp -> . operacionesMath
    (102) operacionesMath -> . numOperadores PLUS suma
    (103) operacionesMath -> . suma
    (104) operacionesMath -> . suma operacionesMath
    (105) operacionesMath -> . restas
    (106) operacionesMath -> . numOperadores MINUS restas
    (107) operacionesMath -> . restas operacionesMath
    (108) operacionesMath -> . multiplicacion
    (109) operacionesMath -> . numOperadores TIMES multiplicacion
    (110) operacionesMath -> . multiplicacion operacionesMath
    (111) operacionesMath -> . divicion
    (112) operacionesMath -> . numOperadores DIVIDE divicion
    (113) operacionesMath -> . divicion operacionesMath
    (126) numOperadores -> . enteros
    (127) numOperadores -> . decimales
    (114) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (115) suma -> . numOperadores PLUS NUM
    (116) suma -> . numOperadores
    (117) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (118) restas -> . numOperadores MINUS NUM
    (119) restas -> . numOperadores
    (120) multiplicacion -> . numOperadores TIMES LPAREN numOperadores RPAREN
    (121) multiplicacion -> . numOperadores TIMES NUM
    (122) multiplicacion -> . numOperadores
    (123) divicion -> . numOperadores DIVIDE LPAREN numOperadores RPAREN
    (124) divicion -> . numOperadores DIVIDE NUM
    (125) divicion -> . numOperadores
    (128) enteros -> . NUM
    (129) enteros -> . numNegative
    (132) decimales -> . enteros PERIOD NUM
    (130) numNegative -> . MINUS NUM
    (131) numNegative -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
    ID              shift and go to state 70
    NUM             shift and go to state 71
    STRING          shift and go to state 72
    PLUS            shift and go to state 73
    MINUS           shift and go to state 75
    PERIOD          reduce using rule 131 (numNegative -> .)
    TIMES           reduce using rule 131 (numNegative -> .)
    DIVIDE          reduce using rule 131 (numNegative -> .)
    RPAREN          reduce using rule 131 (numNegative -> .)

  ! PLUS            [ reduce using rule 131 (numNegative -> .) ]
  ! MINUS           [ reduce using rule 131 (numNegative -> .) ]
  ! NUM             [ reduce using rule 131 (numNegative -> .) ]

    expression                     shift and go to state 178
    conditionalEspecifico          shift and go to state 68
    inicializarOp                  shift and go to state 69
    operacionesMath                shift and go to state 74
    numOperadores                  shift and go to state 76
    suma                           shift and go to state 77
    restas                         shift and go to state 78
    multiplicacion                 shift and go to state 79
    divicion                       shift and go to state 80
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 135

    (28) sentencias_if -> IF LPAREN expression RPAREN . LBLOCK sentencia RBLOCK
    (30) sentencias_if_else -> IF LPAREN expression RPAREN . LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK

    LBLOCK          shift and go to state 179


state 136

    (24) operadorLogical -> AND .

    ID              reduce using rule 24 (operadorLogical -> AND .)
    NUM             reduce using rule 24 (operadorLogical -> AND .)
    STRING          reduce using rule 24 (operadorLogical -> AND .)
    PLUS            reduce using rule 24 (operadorLogical -> AND .)
    MINUS           reduce using rule 24 (operadorLogical -> AND .)
    RPAREN          reduce using rule 24 (operadorLogical -> AND .)
    TIMES           reduce using rule 24 (operadorLogical -> AND .)
    DIVIDE          reduce using rule 24 (operadorLogical -> AND .)
    PERIOD          reduce using rule 24 (operadorLogical -> AND .)


state 137

    (25) operadorLogical -> OR .

    ID              reduce using rule 25 (operadorLogical -> OR .)
    NUM             reduce using rule 25 (operadorLogical -> OR .)
    STRING          reduce using rule 25 (operadorLogical -> OR .)
    PLUS            reduce using rule 25 (operadorLogical -> OR .)
    MINUS           reduce using rule 25 (operadorLogical -> OR .)
    RPAREN          reduce using rule 25 (operadorLogical -> OR .)
    TIMES           reduce using rule 25 (operadorLogical -> OR .)
    DIVIDE          reduce using rule 25 (operadorLogical -> OR .)
    PERIOD          reduce using rule 25 (operadorLogical -> OR .)


state 138

    (26) operadorLogical -> NOT .

    ID              reduce using rule 26 (operadorLogical -> NOT .)
    NUM             reduce using rule 26 (operadorLogical -> NOT .)
    STRING          reduce using rule 26 (operadorLogical -> NOT .)
    PLUS            reduce using rule 26 (operadorLogical -> NOT .)
    MINUS           reduce using rule 26 (operadorLogical -> NOT .)
    RPAREN          reduce using rule 26 (operadorLogical -> NOT .)
    TIMES           reduce using rule 26 (operadorLogical -> NOT .)
    DIVIDE          reduce using rule 26 (operadorLogical -> NOT .)
    PERIOD          reduce using rule 26 (operadorLogical -> NOT .)


state 139

    (31) sentencias_while -> WHILE LPAREN expression RPAREN . LBLOCK sentencia RBLOCK

    LBLOCK          shift and go to state 180


state 140

    (32) sentencias_while -> WHILE LPAREN expression operadorLogical . expression RPAREN LBLOCK sentencia RBLOCK
    (8) expression -> . conditionalEspecifico
    (9) expression -> . inicializarOp
    (133) conditionalEspecifico -> . ID opConditional dataCondi
    (134) conditionalEspecifico -> . NUM opConditional NUM
    (135) conditionalEspecifico -> . STRING opConditional STRING
    (99) inicializarOp -> . PLUS operacionesMath
    (100) inicializarOp -> . MINUS operacionesMath
    (101) inicializarOp -> . operacionesMath
    (102) operacionesMath -> . numOperadores PLUS suma
    (103) operacionesMath -> . suma
    (104) operacionesMath -> . suma operacionesMath
    (105) operacionesMath -> . restas
    (106) operacionesMath -> . numOperadores MINUS restas
    (107) operacionesMath -> . restas operacionesMath
    (108) operacionesMath -> . multiplicacion
    (109) operacionesMath -> . numOperadores TIMES multiplicacion
    (110) operacionesMath -> . multiplicacion operacionesMath
    (111) operacionesMath -> . divicion
    (112) operacionesMath -> . numOperadores DIVIDE divicion
    (113) operacionesMath -> . divicion operacionesMath
    (126) numOperadores -> . enteros
    (127) numOperadores -> . decimales
    (114) suma -> . numOperadores PLUS LPAREN numOperadores RPAREN
    (115) suma -> . numOperadores PLUS NUM
    (116) suma -> . numOperadores
    (117) restas -> . numOperadores MINUS LPAREN numOperadores RPAREN
    (118) restas -> . numOperadores MINUS NUM
    (119) restas -> . numOperadores
    (120) multiplicacion -> . numOperadores TIMES LPAREN numOperadores RPAREN
    (121) multiplicacion -> . numOperadores TIMES NUM
    (122) multiplicacion -> . numOperadores
    (123) divicion -> . numOperadores DIVIDE LPAREN numOperadores RPAREN
    (124) divicion -> . numOperadores DIVIDE NUM
    (125) divicion -> . numOperadores
    (128) enteros -> . NUM
    (129) enteros -> . numNegative
    (132) decimales -> . enteros PERIOD NUM
    (130) numNegative -> . MINUS NUM
    (131) numNegative -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
    ID              shift and go to state 70
    NUM             shift and go to state 71
    STRING          shift and go to state 72
    PLUS            shift and go to state 73
    MINUS           shift and go to state 75
    PERIOD          reduce using rule 131 (numNegative -> .)
    TIMES           reduce using rule 131 (numNegative -> .)
    DIVIDE          reduce using rule 131 (numNegative -> .)
    RPAREN          reduce using rule 131 (numNegative -> .)

  ! PLUS            [ reduce using rule 131 (numNegative -> .) ]
  ! MINUS           [ reduce using rule 131 (numNegative -> .) ]
  ! NUM             [ reduce using rule 131 (numNegative -> .) ]

    expression                     shift and go to state 181
    conditionalEspecifico          shift and go to state 68
    inicializarOp                  shift and go to state 69
    operacionesMath                shift and go to state 74
    numOperadores                  shift and go to state 76
    suma                           shift and go to state 77
    restas                         shift and go to state 78
    multiplicacion                 shift and go to state 79
    divicion                       shift and go to state 80
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 141

    (90) paramList -> javaScript_param COMMA paramList .

    RPAREN          reduce using rule 90 (paramList -> javaScript_param COMMA paramList .)


state 142

    (55) arrayDeclare -> LBRACKET javaScript_param COMMA . javaScript_param RBRACKET
    (35) javaScript_param -> . STRING
    (36) javaScript_param -> . NUM
    (37) javaScript_param -> . boolean
    (38) javaScript_param -> . ID
    (39) boolean -> . TRUE
    (40) boolean -> . FALSE

    STRING          shift and go to state 45
    NUM             shift and go to state 46
    ID              shift and go to state 41
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    javaScript_param               shift and go to state 182
    boolean                        shift and go to state 47

state 143

    (56) arrayDeclare -> NEW ARRAY LPAREN . arrayValues RPAREN
    (57) arrayValues -> . javaScript_param
    (58) arrayValues -> . javaScript_param COMMA javaScript_param
    (35) javaScript_param -> . STRING
    (36) javaScript_param -> . NUM
    (37) javaScript_param -> . boolean
    (38) javaScript_param -> . ID
    (39) boolean -> . TRUE
    (40) boolean -> . FALSE

    STRING          shift and go to state 45
    NUM             shift and go to state 46
    ID              shift and go to state 41
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    arrayValues                    shift and go to state 183
    javaScript_param               shift and go to state 184
    boolean                        shift and go to state 47

state 144

    (62) declareMap -> NEW MAP LPAREN . LBRACKET iterable RBRACKET RPAREN
    (63) declareMap -> NEW MAP LPAREN . RPAREN

    LBRACKET        shift and go to state 185
    RPAREN          shift and go to state 186


state 145

    (95) declararSet -> NEW SET LPAREN . LBRACKET iterable RBRACKET RPAREN

    LBRACKET        shift and go to state 187


state 146

    (59) methodArray -> PERIOD PUSH LPAREN javaScript_param . RPAREN

    RPAREN          shift and go to state 188


state 147

    (60) methodArray -> PERIOD UNSHIFT LPAREN javaScript_param . RPAREN

    RPAREN          shift and go to state 189


state 148

    (61) methodArray -> PERIOD POP LPAREN RPAREN .

    COLON           reduce using rule 61 (methodArray -> PERIOD POP LPAREN RPAREN .)


state 149

    (96) methodSet -> PERIOD ADD LPAREN javaScript_param . RPAREN

    RPAREN          shift and go to state 190


state 150

    (97) methodSet -> PERIOD DELETE LPAREN javaScript_param . RPAREN

    RPAREN          shift and go to state 191


state 151

    (98) methodSet -> PERIOD CLEAR LPAREN RPAREN .
    (80) methodMap -> PERIOD CLEAR LPAREN RPAREN .

  ! reduce/reduce conflict for COLON resolved using rule 80 (methodMap -> PERIOD CLEAR LPAREN RPAREN .)
    COLON           reduce using rule 80 (methodMap -> PERIOD CLEAR LPAREN RPAREN .)

  ! COLON           [ reduce using rule 98 (methodSet -> PERIOD CLEAR LPAREN RPAREN .) ]


state 152

    (81) methodMap -> PERIOD LENGTH LPAREN RPAREN .

    COLON           reduce using rule 81 (methodMap -> PERIOD LENGTH LPAREN RPAREN .)


state 153

    (84) declareteFunction -> varType ID EQUAL FUNCTION LPAREN . params RPAREN
    (88) params -> . paramList
    (89) paramList -> . javaScript_param
    (90) paramList -> . javaScript_param COMMA paramList
    (35) javaScript_param -> . STRING
    (36) javaScript_param -> . NUM
    (37) javaScript_param -> . boolean
    (38) javaScript_param -> . ID
    (39) boolean -> . TRUE
    (40) boolean -> . FALSE

    STRING          shift and go to state 45
    NUM             shift and go to state 46
    ID              shift and go to state 41
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    params                         shift and go to state 192
    paramList                      shift and go to state 43
    javaScript_param               shift and go to state 44
    boolean                        shift and go to state 47

state 154

    (133) conditionalEspecifico -> ID opConditional dataCondi .

    RPAREN          reduce using rule 133 (conditionalEspecifico -> ID opConditional dataCondi .)
    AND             reduce using rule 133 (conditionalEspecifico -> ID opConditional dataCondi .)
    OR              reduce using rule 133 (conditionalEspecifico -> ID opConditional dataCondi .)
    NOT             reduce using rule 133 (conditionalEspecifico -> ID opConditional dataCondi .)


state 155

    (136) dataCondi -> STRING .

    RPAREN          reduce using rule 136 (dataCondi -> STRING .)
    AND             reduce using rule 136 (dataCondi -> STRING .)
    OR              reduce using rule 136 (dataCondi -> STRING .)
    NOT             reduce using rule 136 (dataCondi -> STRING .)


state 156

    (137) dataCondi -> NUM .

    RPAREN          reduce using rule 137 (dataCondi -> NUM .)
    AND             reduce using rule 137 (dataCondi -> NUM .)
    OR              reduce using rule 137 (dataCondi -> NUM .)
    NOT             reduce using rule 137 (dataCondi -> NUM .)


state 157

    (134) conditionalEspecifico -> NUM opConditional NUM .

    RPAREN          reduce using rule 134 (conditionalEspecifico -> NUM opConditional NUM .)
    AND             reduce using rule 134 (conditionalEspecifico -> NUM opConditional NUM .)
    OR              reduce using rule 134 (conditionalEspecifico -> NUM opConditional NUM .)
    NOT             reduce using rule 134 (conditionalEspecifico -> NUM opConditional NUM .)


state 158

    (135) conditionalEspecifico -> STRING opConditional STRING .

    RPAREN          reduce using rule 135 (conditionalEspecifico -> STRING opConditional STRING .)
    AND             reduce using rule 135 (conditionalEspecifico -> STRING opConditional STRING .)
    OR              reduce using rule 135 (conditionalEspecifico -> STRING opConditional STRING .)
    NOT             reduce using rule 135 (conditionalEspecifico -> STRING opConditional STRING .)


state 159

    (130) numNegative -> MINUS NUM .

    PERIOD          reduce using rule 130 (numNegative -> MINUS NUM .)
    PLUS            reduce using rule 130 (numNegative -> MINUS NUM .)
    MINUS           reduce using rule 130 (numNegative -> MINUS NUM .)
    TIMES           reduce using rule 130 (numNegative -> MINUS NUM .)
    DIVIDE          reduce using rule 130 (numNegative -> MINUS NUM .)
    NUM             reduce using rule 130 (numNegative -> MINUS NUM .)
    RPAREN          reduce using rule 130 (numNegative -> MINUS NUM .)
    AND             reduce using rule 130 (numNegative -> MINUS NUM .)
    OR              reduce using rule 130 (numNegative -> MINUS NUM .)
    NOT             reduce using rule 130 (numNegative -> MINUS NUM .)
    $end            reduce using rule 130 (numNegative -> MINUS NUM .)
    RBLOCK          reduce using rule 130 (numNegative -> MINUS NUM .)
    RETURN          reduce using rule 130 (numNegative -> MINUS NUM .)


state 160

    (114) suma -> numOperadores . PLUS LPAREN numOperadores RPAREN
    (115) suma -> numOperadores . PLUS NUM
    (116) suma -> numOperadores .

    PLUS            shift and go to state 193
    RPAREN          reduce using rule 116 (suma -> numOperadores .)
    AND             reduce using rule 116 (suma -> numOperadores .)
    OR              reduce using rule 116 (suma -> numOperadores .)
    NOT             reduce using rule 116 (suma -> numOperadores .)
    $end            reduce using rule 116 (suma -> numOperadores .)
    RBLOCK          reduce using rule 116 (suma -> numOperadores .)
    RETURN          reduce using rule 116 (suma -> numOperadores .)


state 161

    (102) operacionesMath -> numOperadores PLUS suma .

    RPAREN          reduce using rule 102 (operacionesMath -> numOperadores PLUS suma .)
    AND             reduce using rule 102 (operacionesMath -> numOperadores PLUS suma .)
    OR              reduce using rule 102 (operacionesMath -> numOperadores PLUS suma .)
    NOT             reduce using rule 102 (operacionesMath -> numOperadores PLUS suma .)
    $end            reduce using rule 102 (operacionesMath -> numOperadores PLUS suma .)
    RBLOCK          reduce using rule 102 (operacionesMath -> numOperadores PLUS suma .)
    RETURN          reduce using rule 102 (operacionesMath -> numOperadores PLUS suma .)


state 162

    (114) suma -> numOperadores PLUS LPAREN . numOperadores RPAREN
    (126) numOperadores -> . enteros
    (127) numOperadores -> . decimales
    (128) enteros -> . NUM
    (129) enteros -> . numNegative
    (132) decimales -> . enteros PERIOD NUM
    (130) numNegative -> . MINUS NUM
    (131) numNegative -> .

    NUM             shift and go to state 121
    MINUS           shift and go to state 120
    PERIOD          reduce using rule 131 (numNegative -> .)
    RPAREN          reduce using rule 131 (numNegative -> .)

    numOperadores                  shift and go to state 194
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 163

    (115) suma -> numOperadores PLUS NUM .
    (128) enteros -> NUM .

  ! reduce/reduce conflict for PERIOD resolved using rule 115 (suma -> numOperadores PLUS NUM .)
  ! reduce/reduce conflict for PLUS resolved using rule 115 (suma -> numOperadores PLUS NUM .)
  ! reduce/reduce conflict for RPAREN resolved using rule 115 (suma -> numOperadores PLUS NUM .)
  ! reduce/reduce conflict for AND resolved using rule 115 (suma -> numOperadores PLUS NUM .)
  ! reduce/reduce conflict for OR resolved using rule 115 (suma -> numOperadores PLUS NUM .)
  ! reduce/reduce conflict for NOT resolved using rule 115 (suma -> numOperadores PLUS NUM .)
  ! reduce/reduce conflict for $end resolved using rule 115 (suma -> numOperadores PLUS NUM .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 115 (suma -> numOperadores PLUS NUM .)
  ! reduce/reduce conflict for RETURN resolved using rule 115 (suma -> numOperadores PLUS NUM .)
    NUM             reduce using rule 115 (suma -> numOperadores PLUS NUM .)
    MINUS           reduce using rule 115 (suma -> numOperadores PLUS NUM .)
    PLUS            reduce using rule 115 (suma -> numOperadores PLUS NUM .)
    TIMES           reduce using rule 115 (suma -> numOperadores PLUS NUM .)
    DIVIDE          reduce using rule 115 (suma -> numOperadores PLUS NUM .)
    PERIOD          reduce using rule 115 (suma -> numOperadores PLUS NUM .)
    RPAREN          reduce using rule 115 (suma -> numOperadores PLUS NUM .)
    AND             reduce using rule 115 (suma -> numOperadores PLUS NUM .)
    OR              reduce using rule 115 (suma -> numOperadores PLUS NUM .)
    NOT             reduce using rule 115 (suma -> numOperadores PLUS NUM .)
    $end            reduce using rule 115 (suma -> numOperadores PLUS NUM .)
    RBLOCK          reduce using rule 115 (suma -> numOperadores PLUS NUM .)
    RETURN          reduce using rule 115 (suma -> numOperadores PLUS NUM .)

  ! PERIOD          [ reduce using rule 128 (enteros -> NUM .) ]
  ! PLUS            [ reduce using rule 128 (enteros -> NUM .) ]
  ! RPAREN          [ reduce using rule 128 (enteros -> NUM .) ]
  ! AND             [ reduce using rule 128 (enteros -> NUM .) ]
  ! OR              [ reduce using rule 128 (enteros -> NUM .) ]
  ! NOT             [ reduce using rule 128 (enteros -> NUM .) ]
  ! $end            [ reduce using rule 128 (enteros -> NUM .) ]
  ! RBLOCK          [ reduce using rule 128 (enteros -> NUM .) ]
  ! RETURN          [ reduce using rule 128 (enteros -> NUM .) ]


state 164

    (117) restas -> numOperadores . MINUS LPAREN numOperadores RPAREN
    (118) restas -> numOperadores . MINUS NUM
    (119) restas -> numOperadores .

    MINUS           shift and go to state 195
    RPAREN          reduce using rule 119 (restas -> numOperadores .)
    AND             reduce using rule 119 (restas -> numOperadores .)
    OR              reduce using rule 119 (restas -> numOperadores .)
    NOT             reduce using rule 119 (restas -> numOperadores .)
    $end            reduce using rule 119 (restas -> numOperadores .)
    RBLOCK          reduce using rule 119 (restas -> numOperadores .)
    RETURN          reduce using rule 119 (restas -> numOperadores .)


state 165

    (106) operacionesMath -> numOperadores MINUS restas .

    RPAREN          reduce using rule 106 (operacionesMath -> numOperadores MINUS restas .)
    AND             reduce using rule 106 (operacionesMath -> numOperadores MINUS restas .)
    OR              reduce using rule 106 (operacionesMath -> numOperadores MINUS restas .)
    NOT             reduce using rule 106 (operacionesMath -> numOperadores MINUS restas .)
    $end            reduce using rule 106 (operacionesMath -> numOperadores MINUS restas .)
    RBLOCK          reduce using rule 106 (operacionesMath -> numOperadores MINUS restas .)
    RETURN          reduce using rule 106 (operacionesMath -> numOperadores MINUS restas .)


state 166

    (117) restas -> numOperadores MINUS LPAREN . numOperadores RPAREN
    (126) numOperadores -> . enteros
    (127) numOperadores -> . decimales
    (128) enteros -> . NUM
    (129) enteros -> . numNegative
    (132) decimales -> . enteros PERIOD NUM
    (130) numNegative -> . MINUS NUM
    (131) numNegative -> .

    NUM             shift and go to state 121
    MINUS           shift and go to state 120
    PERIOD          reduce using rule 131 (numNegative -> .)
    RPAREN          reduce using rule 131 (numNegative -> .)

    numOperadores                  shift and go to state 196
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 167

    (118) restas -> numOperadores MINUS NUM .
    (128) enteros -> NUM .

  ! reduce/reduce conflict for PERIOD resolved using rule 118 (restas -> numOperadores MINUS NUM .)
  ! reduce/reduce conflict for MINUS resolved using rule 118 (restas -> numOperadores MINUS NUM .)
  ! reduce/reduce conflict for RPAREN resolved using rule 118 (restas -> numOperadores MINUS NUM .)
  ! reduce/reduce conflict for AND resolved using rule 118 (restas -> numOperadores MINUS NUM .)
  ! reduce/reduce conflict for OR resolved using rule 118 (restas -> numOperadores MINUS NUM .)
  ! reduce/reduce conflict for NOT resolved using rule 118 (restas -> numOperadores MINUS NUM .)
  ! reduce/reduce conflict for $end resolved using rule 118 (restas -> numOperadores MINUS NUM .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 118 (restas -> numOperadores MINUS NUM .)
  ! reduce/reduce conflict for RETURN resolved using rule 118 (restas -> numOperadores MINUS NUM .)
    NUM             reduce using rule 118 (restas -> numOperadores MINUS NUM .)
    MINUS           reduce using rule 118 (restas -> numOperadores MINUS NUM .)
    PLUS            reduce using rule 118 (restas -> numOperadores MINUS NUM .)
    TIMES           reduce using rule 118 (restas -> numOperadores MINUS NUM .)
    DIVIDE          reduce using rule 118 (restas -> numOperadores MINUS NUM .)
    PERIOD          reduce using rule 118 (restas -> numOperadores MINUS NUM .)
    RPAREN          reduce using rule 118 (restas -> numOperadores MINUS NUM .)
    AND             reduce using rule 118 (restas -> numOperadores MINUS NUM .)
    OR              reduce using rule 118 (restas -> numOperadores MINUS NUM .)
    NOT             reduce using rule 118 (restas -> numOperadores MINUS NUM .)
    $end            reduce using rule 118 (restas -> numOperadores MINUS NUM .)
    RBLOCK          reduce using rule 118 (restas -> numOperadores MINUS NUM .)
    RETURN          reduce using rule 118 (restas -> numOperadores MINUS NUM .)

  ! PERIOD          [ reduce using rule 128 (enteros -> NUM .) ]
  ! MINUS           [ reduce using rule 128 (enteros -> NUM .) ]
  ! RPAREN          [ reduce using rule 128 (enteros -> NUM .) ]
  ! AND             [ reduce using rule 128 (enteros -> NUM .) ]
  ! OR              [ reduce using rule 128 (enteros -> NUM .) ]
  ! NOT             [ reduce using rule 128 (enteros -> NUM .) ]
  ! $end            [ reduce using rule 128 (enteros -> NUM .) ]
  ! RBLOCK          [ reduce using rule 128 (enteros -> NUM .) ]
  ! RETURN          [ reduce using rule 128 (enteros -> NUM .) ]


state 168

    (120) multiplicacion -> numOperadores . TIMES LPAREN numOperadores RPAREN
    (121) multiplicacion -> numOperadores . TIMES NUM
    (122) multiplicacion -> numOperadores .

    TIMES           shift and go to state 197
    RPAREN          reduce using rule 122 (multiplicacion -> numOperadores .)
    AND             reduce using rule 122 (multiplicacion -> numOperadores .)
    OR              reduce using rule 122 (multiplicacion -> numOperadores .)
    NOT             reduce using rule 122 (multiplicacion -> numOperadores .)
    $end            reduce using rule 122 (multiplicacion -> numOperadores .)
    RBLOCK          reduce using rule 122 (multiplicacion -> numOperadores .)
    RETURN          reduce using rule 122 (multiplicacion -> numOperadores .)


state 169

    (109) operacionesMath -> numOperadores TIMES multiplicacion .

    RPAREN          reduce using rule 109 (operacionesMath -> numOperadores TIMES multiplicacion .)
    AND             reduce using rule 109 (operacionesMath -> numOperadores TIMES multiplicacion .)
    OR              reduce using rule 109 (operacionesMath -> numOperadores TIMES multiplicacion .)
    NOT             reduce using rule 109 (operacionesMath -> numOperadores TIMES multiplicacion .)
    $end            reduce using rule 109 (operacionesMath -> numOperadores TIMES multiplicacion .)
    RBLOCK          reduce using rule 109 (operacionesMath -> numOperadores TIMES multiplicacion .)
    RETURN          reduce using rule 109 (operacionesMath -> numOperadores TIMES multiplicacion .)


state 170

    (120) multiplicacion -> numOperadores TIMES LPAREN . numOperadores RPAREN
    (126) numOperadores -> . enteros
    (127) numOperadores -> . decimales
    (128) enteros -> . NUM
    (129) enteros -> . numNegative
    (132) decimales -> . enteros PERIOD NUM
    (130) numNegative -> . MINUS NUM
    (131) numNegative -> .

    NUM             shift and go to state 121
    MINUS           shift and go to state 120
    PERIOD          reduce using rule 131 (numNegative -> .)
    RPAREN          reduce using rule 131 (numNegative -> .)

    numOperadores                  shift and go to state 198
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 171

    (121) multiplicacion -> numOperadores TIMES NUM .
    (128) enteros -> NUM .

  ! reduce/reduce conflict for PERIOD resolved using rule 121 (multiplicacion -> numOperadores TIMES NUM .)
  ! reduce/reduce conflict for TIMES resolved using rule 121 (multiplicacion -> numOperadores TIMES NUM .)
  ! reduce/reduce conflict for RPAREN resolved using rule 121 (multiplicacion -> numOperadores TIMES NUM .)
  ! reduce/reduce conflict for AND resolved using rule 121 (multiplicacion -> numOperadores TIMES NUM .)
  ! reduce/reduce conflict for OR resolved using rule 121 (multiplicacion -> numOperadores TIMES NUM .)
  ! reduce/reduce conflict for NOT resolved using rule 121 (multiplicacion -> numOperadores TIMES NUM .)
  ! reduce/reduce conflict for $end resolved using rule 121 (multiplicacion -> numOperadores TIMES NUM .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 121 (multiplicacion -> numOperadores TIMES NUM .)
  ! reduce/reduce conflict for RETURN resolved using rule 121 (multiplicacion -> numOperadores TIMES NUM .)
    NUM             reduce using rule 121 (multiplicacion -> numOperadores TIMES NUM .)
    MINUS           reduce using rule 121 (multiplicacion -> numOperadores TIMES NUM .)
    PLUS            reduce using rule 121 (multiplicacion -> numOperadores TIMES NUM .)
    TIMES           reduce using rule 121 (multiplicacion -> numOperadores TIMES NUM .)
    DIVIDE          reduce using rule 121 (multiplicacion -> numOperadores TIMES NUM .)
    PERIOD          reduce using rule 121 (multiplicacion -> numOperadores TIMES NUM .)
    RPAREN          reduce using rule 121 (multiplicacion -> numOperadores TIMES NUM .)
    AND             reduce using rule 121 (multiplicacion -> numOperadores TIMES NUM .)
    OR              reduce using rule 121 (multiplicacion -> numOperadores TIMES NUM .)
    NOT             reduce using rule 121 (multiplicacion -> numOperadores TIMES NUM .)
    $end            reduce using rule 121 (multiplicacion -> numOperadores TIMES NUM .)
    RBLOCK          reduce using rule 121 (multiplicacion -> numOperadores TIMES NUM .)
    RETURN          reduce using rule 121 (multiplicacion -> numOperadores TIMES NUM .)

  ! PERIOD          [ reduce using rule 128 (enteros -> NUM .) ]
  ! TIMES           [ reduce using rule 128 (enteros -> NUM .) ]
  ! RPAREN          [ reduce using rule 128 (enteros -> NUM .) ]
  ! AND             [ reduce using rule 128 (enteros -> NUM .) ]
  ! OR              [ reduce using rule 128 (enteros -> NUM .) ]
  ! NOT             [ reduce using rule 128 (enteros -> NUM .) ]
  ! $end            [ reduce using rule 128 (enteros -> NUM .) ]
  ! RBLOCK          [ reduce using rule 128 (enteros -> NUM .) ]
  ! RETURN          [ reduce using rule 128 (enteros -> NUM .) ]


state 172

    (123) divicion -> numOperadores . DIVIDE LPAREN numOperadores RPAREN
    (124) divicion -> numOperadores . DIVIDE NUM
    (125) divicion -> numOperadores .

    DIVIDE          shift and go to state 199
    RPAREN          reduce using rule 125 (divicion -> numOperadores .)
    AND             reduce using rule 125 (divicion -> numOperadores .)
    OR              reduce using rule 125 (divicion -> numOperadores .)
    NOT             reduce using rule 125 (divicion -> numOperadores .)
    $end            reduce using rule 125 (divicion -> numOperadores .)
    RBLOCK          reduce using rule 125 (divicion -> numOperadores .)
    RETURN          reduce using rule 125 (divicion -> numOperadores .)


state 173

    (112) operacionesMath -> numOperadores DIVIDE divicion .

    RPAREN          reduce using rule 112 (operacionesMath -> numOperadores DIVIDE divicion .)
    AND             reduce using rule 112 (operacionesMath -> numOperadores DIVIDE divicion .)
    OR              reduce using rule 112 (operacionesMath -> numOperadores DIVIDE divicion .)
    NOT             reduce using rule 112 (operacionesMath -> numOperadores DIVIDE divicion .)
    $end            reduce using rule 112 (operacionesMath -> numOperadores DIVIDE divicion .)
    RBLOCK          reduce using rule 112 (operacionesMath -> numOperadores DIVIDE divicion .)
    RETURN          reduce using rule 112 (operacionesMath -> numOperadores DIVIDE divicion .)


state 174

    (123) divicion -> numOperadores DIVIDE LPAREN . numOperadores RPAREN
    (126) numOperadores -> . enteros
    (127) numOperadores -> . decimales
    (128) enteros -> . NUM
    (129) enteros -> . numNegative
    (132) decimales -> . enteros PERIOD NUM
    (130) numNegative -> . MINUS NUM
    (131) numNegative -> .

    NUM             shift and go to state 121
    MINUS           shift and go to state 120
    PERIOD          reduce using rule 131 (numNegative -> .)
    RPAREN          reduce using rule 131 (numNegative -> .)

    numOperadores                  shift and go to state 200
    enteros                        shift and go to state 81
    decimales                      shift and go to state 82
    numNegative                    shift and go to state 83

state 175

    (124) divicion -> numOperadores DIVIDE NUM .
    (128) enteros -> NUM .

  ! reduce/reduce conflict for PERIOD resolved using rule 124 (divicion -> numOperadores DIVIDE NUM .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 124 (divicion -> numOperadores DIVIDE NUM .)
  ! reduce/reduce conflict for RPAREN resolved using rule 124 (divicion -> numOperadores DIVIDE NUM .)
  ! reduce/reduce conflict for AND resolved using rule 124 (divicion -> numOperadores DIVIDE NUM .)
  ! reduce/reduce conflict for OR resolved using rule 124 (divicion -> numOperadores DIVIDE NUM .)
  ! reduce/reduce conflict for NOT resolved using rule 124 (divicion -> numOperadores DIVIDE NUM .)
  ! reduce/reduce conflict for $end resolved using rule 124 (divicion -> numOperadores DIVIDE NUM .)
  ! reduce/reduce conflict for RBLOCK resolved using rule 124 (divicion -> numOperadores DIVIDE NUM .)
  ! reduce/reduce conflict for RETURN resolved using rule 124 (divicion -> numOperadores DIVIDE NUM .)
    NUM             reduce using rule 124 (divicion -> numOperadores DIVIDE NUM .)
    MINUS           reduce using rule 124 (divicion -> numOperadores DIVIDE NUM .)
    PLUS            reduce using rule 124 (divicion -> numOperadores DIVIDE NUM .)
    TIMES           reduce using rule 124 (divicion -> numOperadores DIVIDE NUM .)
    DIVIDE          reduce using rule 124 (divicion -> numOperadores DIVIDE NUM .)
    PERIOD          reduce using rule 124 (divicion -> numOperadores DIVIDE NUM .)
    RPAREN          reduce using rule 124 (divicion -> numOperadores DIVIDE NUM .)
    AND             reduce using rule 124 (divicion -> numOperadores DIVIDE NUM .)
    OR              reduce using rule 124 (divicion -> numOperadores DIVIDE NUM .)
    NOT             reduce using rule 124 (divicion -> numOperadores DIVIDE NUM .)
    $end            reduce using rule 124 (divicion -> numOperadores DIVIDE NUM .)
    RBLOCK          reduce using rule 124 (divicion -> numOperadores DIVIDE NUM .)
    RETURN          reduce using rule 124 (divicion -> numOperadores DIVIDE NUM .)

  ! PERIOD          [ reduce using rule 128 (enteros -> NUM .) ]
  ! DIVIDE          [ reduce using rule 128 (enteros -> NUM .) ]
  ! RPAREN          [ reduce using rule 128 (enteros -> NUM .) ]
  ! AND             [ reduce using rule 128 (enteros -> NUM .) ]
  ! OR              [ reduce using rule 128 (enteros -> NUM .) ]
  ! NOT             [ reduce using rule 128 (enteros -> NUM .) ]
  ! $end            [ reduce using rule 128 (enteros -> NUM .) ]
  ! RBLOCK          [ reduce using rule 128 (enteros -> NUM .) ]
  ! RETURN          [ reduce using rule 128 (enteros -> NUM .) ]


state 176

    (132) decimales -> enteros PERIOD NUM .

    PLUS            reduce using rule 132 (decimales -> enteros PERIOD NUM .)
    MINUS           reduce using rule 132 (decimales -> enteros PERIOD NUM .)
    TIMES           reduce using rule 132 (decimales -> enteros PERIOD NUM .)
    DIVIDE          reduce using rule 132 (decimales -> enteros PERIOD NUM .)
    NUM             reduce using rule 132 (decimales -> enteros PERIOD NUM .)
    PERIOD          reduce using rule 132 (decimales -> enteros PERIOD NUM .)
    RPAREN          reduce using rule 132 (decimales -> enteros PERIOD NUM .)
    AND             reduce using rule 132 (decimales -> enteros PERIOD NUM .)
    OR              reduce using rule 132 (decimales -> enteros PERIOD NUM .)
    NOT             reduce using rule 132 (decimales -> enteros PERIOD NUM .)
    $end            reduce using rule 132 (decimales -> enteros PERIOD NUM .)
    RBLOCK          reduce using rule 132 (decimales -> enteros PERIOD NUM .)
    RETURN          reduce using rule 132 (decimales -> enteros PERIOD NUM .)


state 177

    (82) declareteFunction -> FUNCTION ID LPAREN params RPAREN .
    (83) declareteFunction -> FUNCTION ID LPAREN params RPAREN . sentencesCmpt
    (85) sentencesCmpt -> . LBLOCK sentencia RBLOCK
    (86) sentencesCmpt -> . LBLOCK sentencia RETURN RBLOCK

    $end            reduce using rule 82 (declareteFunction -> FUNCTION ID LPAREN params RPAREN .)
    RBLOCK          reduce using rule 82 (declareteFunction -> FUNCTION ID LPAREN params RPAREN .)
    RETURN          reduce using rule 82 (declareteFunction -> FUNCTION ID LPAREN params RPAREN .)
    LBLOCK          shift and go to state 202

    sentencesCmpt                  shift and go to state 201

state 178

    (27) sentencias_if -> IF LPAREN expression operadorLogical expression . RPAREN LBLOCK sentencia RBLOCK
    (29) sentencias_if_else -> IF LPAREN expression operadorLogical expression . RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK

    RPAREN          shift and go to state 203


state 179

    (28) sentencias_if -> IF LPAREN expression RPAREN LBLOCK . sentencia RBLOCK
    (30) sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK . sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (1) sentencia -> . callMethods
    (2) sentencia -> . callFunction COLON
    (3) sentencia -> . varDeclaration
    (4) sentencia -> . controlExpression
    (5) sentencia -> . impresion
    (6) sentencia -> . declareteFunction
    (7) sentencia -> . assingOperadores
    (52) callMethods -> . ID methodArray COLON
    (53) callMethods -> . ID methodSet COLON
    (54) callMethods -> . ID methodMap COLON
    (87) callFunction -> . ID LPAREN params RPAREN
    (44) varDeclaration -> . varType assign
    (45) varDeclaration -> . assign
    (46) varDeclaration -> . LET ID COLON
    (47) varDeclaration -> . VAR ID COLON
    (11) controlExpression -> . sentencias_if
    (12) controlExpression -> . sentencias_if_else
    (13) controlExpression -> . sentencias_while
    (14) controlExpression -> . impresion
    (15) controlExpression -> . impresion_vacio
    (33) impresion -> . ALERT LPAREN expression RPAREN
    (82) declareteFunction -> . FUNCTION ID LPAREN params RPAREN
    (83) declareteFunction -> . FUNCTION ID LPAREN params RPAREN sentencesCmpt
    (84) declareteFunction -> . varType ID EQUAL FUNCTION LPAREN params RPAREN
    (10) assingOperadores -> . varType ID EQUAL inicializarOp
    (41) varType -> . LET
    (42) varType -> . CONST
    (43) varType -> . VAR
    (48) assign -> . ID EQUAL arrayDeclare COLON
    (49) assign -> . ID EQUAL declareMap COLON
    (50) assign -> . ID EQUAL declararSet COLON
    (51) assign -> . ID EQUAL javaScript_param COLON
    (27) sentencias_if -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (28) sentencias_if -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (29) sentencias_if_else -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (30) sentencias_if_else -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (31) sentencias_while -> . WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (32) sentencias_while -> . WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (34) impresion_vacio -> . ALERT LPAREN RPAREN

    ID              shift and go to state 9
    LET             shift and go to state 12
    VAR             shift and go to state 13
    ALERT           shift and go to state 18
    FUNCTION        shift and go to state 19
    CONST           shift and go to state 20
    IF              shift and go to state 21
    WHILE           shift and go to state 22

    sentencia                      shift and go to state 204
    callMethods                    shift and go to state 2
    callFunction                   shift and go to state 3
    varDeclaration                 shift and go to state 4
    controlExpression              shift and go to state 5
    impresion                      shift and go to state 6
    declareteFunction              shift and go to state 7
    assingOperadores               shift and go to state 8
    varType                        shift and go to state 10
    assign                         shift and go to state 11
    sentencias_if                  shift and go to state 14
    sentencias_if_else             shift and go to state 15
    sentencias_while               shift and go to state 16
    impresion_vacio                shift and go to state 17

state 180

    (31) sentencias_while -> WHILE LPAREN expression RPAREN LBLOCK . sentencia RBLOCK
    (1) sentencia -> . callMethods
    (2) sentencia -> . callFunction COLON
    (3) sentencia -> . varDeclaration
    (4) sentencia -> . controlExpression
    (5) sentencia -> . impresion
    (6) sentencia -> . declareteFunction
    (7) sentencia -> . assingOperadores
    (52) callMethods -> . ID methodArray COLON
    (53) callMethods -> . ID methodSet COLON
    (54) callMethods -> . ID methodMap COLON
    (87) callFunction -> . ID LPAREN params RPAREN
    (44) varDeclaration -> . varType assign
    (45) varDeclaration -> . assign
    (46) varDeclaration -> . LET ID COLON
    (47) varDeclaration -> . VAR ID COLON
    (11) controlExpression -> . sentencias_if
    (12) controlExpression -> . sentencias_if_else
    (13) controlExpression -> . sentencias_while
    (14) controlExpression -> . impresion
    (15) controlExpression -> . impresion_vacio
    (33) impresion -> . ALERT LPAREN expression RPAREN
    (82) declareteFunction -> . FUNCTION ID LPAREN params RPAREN
    (83) declareteFunction -> . FUNCTION ID LPAREN params RPAREN sentencesCmpt
    (84) declareteFunction -> . varType ID EQUAL FUNCTION LPAREN params RPAREN
    (10) assingOperadores -> . varType ID EQUAL inicializarOp
    (41) varType -> . LET
    (42) varType -> . CONST
    (43) varType -> . VAR
    (48) assign -> . ID EQUAL arrayDeclare COLON
    (49) assign -> . ID EQUAL declareMap COLON
    (50) assign -> . ID EQUAL declararSet COLON
    (51) assign -> . ID EQUAL javaScript_param COLON
    (27) sentencias_if -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (28) sentencias_if -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (29) sentencias_if_else -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (30) sentencias_if_else -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (31) sentencias_while -> . WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (32) sentencias_while -> . WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (34) impresion_vacio -> . ALERT LPAREN RPAREN

    ID              shift and go to state 9
    LET             shift and go to state 12
    VAR             shift and go to state 13
    ALERT           shift and go to state 18
    FUNCTION        shift and go to state 19
    CONST           shift and go to state 20
    IF              shift and go to state 21
    WHILE           shift and go to state 22

    sentencia                      shift and go to state 205
    callMethods                    shift and go to state 2
    callFunction                   shift and go to state 3
    varDeclaration                 shift and go to state 4
    controlExpression              shift and go to state 5
    impresion                      shift and go to state 6
    declareteFunction              shift and go to state 7
    assingOperadores               shift and go to state 8
    varType                        shift and go to state 10
    assign                         shift and go to state 11
    sentencias_if                  shift and go to state 14
    sentencias_if_else             shift and go to state 15
    sentencias_while               shift and go to state 16
    impresion_vacio                shift and go to state 17

state 181

    (32) sentencias_while -> WHILE LPAREN expression operadorLogical expression . RPAREN LBLOCK sentencia RBLOCK

    RPAREN          shift and go to state 206


state 182

    (55) arrayDeclare -> LBRACKET javaScript_param COMMA javaScript_param . RBRACKET

    RBRACKET        shift and go to state 207


state 183

    (56) arrayDeclare -> NEW ARRAY LPAREN arrayValues . RPAREN

    RPAREN          shift and go to state 208


state 184

    (57) arrayValues -> javaScript_param .
    (58) arrayValues -> javaScript_param . COMMA javaScript_param

    RPAREN          reduce using rule 57 (arrayValues -> javaScript_param .)
    COMMA           shift and go to state 209


state 185

    (62) declareMap -> NEW MAP LPAREN LBRACKET . iterable RBRACKET RPAREN
    (66) iterable -> . iterableMap
    (67) iterable -> . iterableArray
    (68) iterable -> . iterableSet
    (64) iterableMap -> . LBRACKET keyValue COMMA keyValue RBRACKET
    (65) iterableMap -> . LBRACKET keyValue COMMA keyValue RBRACKET COMMA iterableMap
    (75) iterableArray -> . arrayDeclare
    (76) iterableArray -> . arrayDeclare COMMA arrayDeclare
    (77) iterableSet -> . declararSet
    (78) iterableSet -> . declararSet COMMA declararSet
    (79) iterableSet -> .
    (55) arrayDeclare -> . LBRACKET javaScript_param COMMA javaScript_param RBRACKET
    (56) arrayDeclare -> . NEW ARRAY LPAREN arrayValues RPAREN
    (95) declararSet -> . NEW SET LPAREN LBRACKET iterable RBRACKET RPAREN

    LBRACKET        shift and go to state 211
    RBRACKET        reduce using rule 79 (iterableSet -> .)
    NEW             shift and go to state 210

    iterable                       shift and go to state 212
    iterableMap                    shift and go to state 213
    iterableArray                  shift and go to state 214
    iterableSet                    shift and go to state 215
    arrayDeclare                   shift and go to state 216
    declararSet                    shift and go to state 217

state 186

    (63) declareMap -> NEW MAP LPAREN RPAREN .

    COLON           reduce using rule 63 (declareMap -> NEW MAP LPAREN RPAREN .)
    COMMA           reduce using rule 63 (declareMap -> NEW MAP LPAREN RPAREN .)
    RBRACKET        reduce using rule 63 (declareMap -> NEW MAP LPAREN RPAREN .)


state 187

    (95) declararSet -> NEW SET LPAREN LBRACKET . iterable RBRACKET RPAREN
    (66) iterable -> . iterableMap
    (67) iterable -> . iterableArray
    (68) iterable -> . iterableSet
    (64) iterableMap -> . LBRACKET keyValue COMMA keyValue RBRACKET
    (65) iterableMap -> . LBRACKET keyValue COMMA keyValue RBRACKET COMMA iterableMap
    (75) iterableArray -> . arrayDeclare
    (76) iterableArray -> . arrayDeclare COMMA arrayDeclare
    (77) iterableSet -> . declararSet
    (78) iterableSet -> . declararSet COMMA declararSet
    (79) iterableSet -> .
    (55) arrayDeclare -> . LBRACKET javaScript_param COMMA javaScript_param RBRACKET
    (56) arrayDeclare -> . NEW ARRAY LPAREN arrayValues RPAREN
    (95) declararSet -> . NEW SET LPAREN LBRACKET iterable RBRACKET RPAREN

    LBRACKET        shift and go to state 211
    RBRACKET        reduce using rule 79 (iterableSet -> .)
    NEW             shift and go to state 210

    iterable                       shift and go to state 218
    iterableMap                    shift and go to state 213
    iterableArray                  shift and go to state 214
    iterableSet                    shift and go to state 215
    arrayDeclare                   shift and go to state 216
    declararSet                    shift and go to state 217

state 188

    (59) methodArray -> PERIOD PUSH LPAREN javaScript_param RPAREN .

    COLON           reduce using rule 59 (methodArray -> PERIOD PUSH LPAREN javaScript_param RPAREN .)


state 189

    (60) methodArray -> PERIOD UNSHIFT LPAREN javaScript_param RPAREN .

    COLON           reduce using rule 60 (methodArray -> PERIOD UNSHIFT LPAREN javaScript_param RPAREN .)


state 190

    (96) methodSet -> PERIOD ADD LPAREN javaScript_param RPAREN .

    COLON           reduce using rule 96 (methodSet -> PERIOD ADD LPAREN javaScript_param RPAREN .)


state 191

    (97) methodSet -> PERIOD DELETE LPAREN javaScript_param RPAREN .

    COLON           reduce using rule 97 (methodSet -> PERIOD DELETE LPAREN javaScript_param RPAREN .)


state 192

    (84) declareteFunction -> varType ID EQUAL FUNCTION LPAREN params . RPAREN

    RPAREN          shift and go to state 219


state 193

    (114) suma -> numOperadores PLUS . LPAREN numOperadores RPAREN
    (115) suma -> numOperadores PLUS . NUM

    LPAREN          shift and go to state 162
    NUM             shift and go to state 220


state 194

    (114) suma -> numOperadores PLUS LPAREN numOperadores . RPAREN

    RPAREN          shift and go to state 221


state 195

    (117) restas -> numOperadores MINUS . LPAREN numOperadores RPAREN
    (118) restas -> numOperadores MINUS . NUM

    LPAREN          shift and go to state 166
    NUM             shift and go to state 222


state 196

    (117) restas -> numOperadores MINUS LPAREN numOperadores . RPAREN

    RPAREN          shift and go to state 223


state 197

    (120) multiplicacion -> numOperadores TIMES . LPAREN numOperadores RPAREN
    (121) multiplicacion -> numOperadores TIMES . NUM

    LPAREN          shift and go to state 170
    NUM             shift and go to state 224


state 198

    (120) multiplicacion -> numOperadores TIMES LPAREN numOperadores . RPAREN

    RPAREN          shift and go to state 225


state 199

    (123) divicion -> numOperadores DIVIDE . LPAREN numOperadores RPAREN
    (124) divicion -> numOperadores DIVIDE . NUM

    LPAREN          shift and go to state 174
    NUM             shift and go to state 226


state 200

    (123) divicion -> numOperadores DIVIDE LPAREN numOperadores . RPAREN

    RPAREN          shift and go to state 227


state 201

    (83) declareteFunction -> FUNCTION ID LPAREN params RPAREN sentencesCmpt .

    $end            reduce using rule 83 (declareteFunction -> FUNCTION ID LPAREN params RPAREN sentencesCmpt .)
    RBLOCK          reduce using rule 83 (declareteFunction -> FUNCTION ID LPAREN params RPAREN sentencesCmpt .)
    RETURN          reduce using rule 83 (declareteFunction -> FUNCTION ID LPAREN params RPAREN sentencesCmpt .)


state 202

    (85) sentencesCmpt -> LBLOCK . sentencia RBLOCK
    (86) sentencesCmpt -> LBLOCK . sentencia RETURN RBLOCK
    (1) sentencia -> . callMethods
    (2) sentencia -> . callFunction COLON
    (3) sentencia -> . varDeclaration
    (4) sentencia -> . controlExpression
    (5) sentencia -> . impresion
    (6) sentencia -> . declareteFunction
    (7) sentencia -> . assingOperadores
    (52) callMethods -> . ID methodArray COLON
    (53) callMethods -> . ID methodSet COLON
    (54) callMethods -> . ID methodMap COLON
    (87) callFunction -> . ID LPAREN params RPAREN
    (44) varDeclaration -> . varType assign
    (45) varDeclaration -> . assign
    (46) varDeclaration -> . LET ID COLON
    (47) varDeclaration -> . VAR ID COLON
    (11) controlExpression -> . sentencias_if
    (12) controlExpression -> . sentencias_if_else
    (13) controlExpression -> . sentencias_while
    (14) controlExpression -> . impresion
    (15) controlExpression -> . impresion_vacio
    (33) impresion -> . ALERT LPAREN expression RPAREN
    (82) declareteFunction -> . FUNCTION ID LPAREN params RPAREN
    (83) declareteFunction -> . FUNCTION ID LPAREN params RPAREN sentencesCmpt
    (84) declareteFunction -> . varType ID EQUAL FUNCTION LPAREN params RPAREN
    (10) assingOperadores -> . varType ID EQUAL inicializarOp
    (41) varType -> . LET
    (42) varType -> . CONST
    (43) varType -> . VAR
    (48) assign -> . ID EQUAL arrayDeclare COLON
    (49) assign -> . ID EQUAL declareMap COLON
    (50) assign -> . ID EQUAL declararSet COLON
    (51) assign -> . ID EQUAL javaScript_param COLON
    (27) sentencias_if -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (28) sentencias_if -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (29) sentencias_if_else -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (30) sentencias_if_else -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (31) sentencias_while -> . WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (32) sentencias_while -> . WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (34) impresion_vacio -> . ALERT LPAREN RPAREN

    ID              shift and go to state 9
    LET             shift and go to state 12
    VAR             shift and go to state 13
    ALERT           shift and go to state 18
    FUNCTION        shift and go to state 19
    CONST           shift and go to state 20
    IF              shift and go to state 21
    WHILE           shift and go to state 22

    sentencia                      shift and go to state 228
    callMethods                    shift and go to state 2
    callFunction                   shift and go to state 3
    varDeclaration                 shift and go to state 4
    controlExpression              shift and go to state 5
    impresion                      shift and go to state 6
    declareteFunction              shift and go to state 7
    assingOperadores               shift and go to state 8
    varType                        shift and go to state 10
    assign                         shift and go to state 11
    sentencias_if                  shift and go to state 14
    sentencias_if_else             shift and go to state 15
    sentencias_while               shift and go to state 16
    impresion_vacio                shift and go to state 17

state 203

    (27) sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN . LBLOCK sentencia RBLOCK
    (29) sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN . LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK

    LBLOCK          shift and go to state 229


state 204

    (28) sentencias_if -> IF LPAREN expression RPAREN LBLOCK sentencia . RBLOCK
    (30) sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia . RBLOCK ELSE LBLOCK sentencia RBLOCK

    RBLOCK          shift and go to state 230


state 205

    (31) sentencias_while -> WHILE LPAREN expression RPAREN LBLOCK sentencia . RBLOCK

    RBLOCK          shift and go to state 231


state 206

    (32) sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN . LBLOCK sentencia RBLOCK

    LBLOCK          shift and go to state 232


state 207

    (55) arrayDeclare -> LBRACKET javaScript_param COMMA javaScript_param RBRACKET .

    COLON           reduce using rule 55 (arrayDeclare -> LBRACKET javaScript_param COMMA javaScript_param RBRACKET .)
    COMMA           reduce using rule 55 (arrayDeclare -> LBRACKET javaScript_param COMMA javaScript_param RBRACKET .)
    RBRACKET        reduce using rule 55 (arrayDeclare -> LBRACKET javaScript_param COMMA javaScript_param RBRACKET .)


state 208

    (56) arrayDeclare -> NEW ARRAY LPAREN arrayValues RPAREN .

    COLON           reduce using rule 56 (arrayDeclare -> NEW ARRAY LPAREN arrayValues RPAREN .)
    COMMA           reduce using rule 56 (arrayDeclare -> NEW ARRAY LPAREN arrayValues RPAREN .)
    RBRACKET        reduce using rule 56 (arrayDeclare -> NEW ARRAY LPAREN arrayValues RPAREN .)


state 209

    (58) arrayValues -> javaScript_param COMMA . javaScript_param
    (35) javaScript_param -> . STRING
    (36) javaScript_param -> . NUM
    (37) javaScript_param -> . boolean
    (38) javaScript_param -> . ID
    (39) boolean -> . TRUE
    (40) boolean -> . FALSE

    STRING          shift and go to state 45
    NUM             shift and go to state 46
    ID              shift and go to state 41
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    javaScript_param               shift and go to state 233
    boolean                        shift and go to state 47

state 210

    (56) arrayDeclare -> NEW . ARRAY LPAREN arrayValues RPAREN
    (95) declararSet -> NEW . SET LPAREN LBRACKET iterable RBRACKET RPAREN

    ARRAY           shift and go to state 94
    SET             shift and go to state 96


state 211

    (64) iterableMap -> LBRACKET . keyValue COMMA keyValue RBRACKET
    (65) iterableMap -> LBRACKET . keyValue COMMA keyValue RBRACKET COMMA iterableMap
    (55) arrayDeclare -> LBRACKET . javaScript_param COMMA javaScript_param RBRACKET
    (69) keyValue -> . javaScript_param
    (70) keyValue -> . iterableMap
    (71) keyValue -> . iterableArray
    (72) keyValue -> . iterableSet
    (73) keyValue -> . declareMap
    (74) keyValue -> . arrayDeclare
    (35) javaScript_param -> . STRING
    (36) javaScript_param -> . NUM
    (37) javaScript_param -> . boolean
    (38) javaScript_param -> . ID
    (64) iterableMap -> . LBRACKET keyValue COMMA keyValue RBRACKET
    (65) iterableMap -> . LBRACKET keyValue COMMA keyValue RBRACKET COMMA iterableMap
    (75) iterableArray -> . arrayDeclare
    (76) iterableArray -> . arrayDeclare COMMA arrayDeclare
    (77) iterableSet -> . declararSet
    (78) iterableSet -> . declararSet COMMA declararSet
    (79) iterableSet -> .
    (62) declareMap -> . NEW MAP LPAREN LBRACKET iterable RBRACKET RPAREN
    (63) declareMap -> . NEW MAP LPAREN RPAREN
    (55) arrayDeclare -> . LBRACKET javaScript_param COMMA javaScript_param RBRACKET
    (56) arrayDeclare -> . NEW ARRAY LPAREN arrayValues RPAREN
    (39) boolean -> . TRUE
    (40) boolean -> . FALSE
    (95) declararSet -> . NEW SET LPAREN LBRACKET iterable RBRACKET RPAREN

    STRING          shift and go to state 45
    NUM             shift and go to state 46
    ID              shift and go to state 41
    LBRACKET        shift and go to state 211
    COMMA           reduce using rule 79 (iterableSet -> .)
    NEW             shift and go to state 241
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    keyValue                       shift and go to state 234
    iterableMap                    shift and go to state 235
    javaScript_param               shift and go to state 236
    iterableArray                  shift and go to state 237
    iterableSet                    shift and go to state 238
    declareMap                     shift and go to state 239
    arrayDeclare                   shift and go to state 240
    boolean                        shift and go to state 47
    declararSet                    shift and go to state 217

state 212

    (62) declareMap -> NEW MAP LPAREN LBRACKET iterable . RBRACKET RPAREN

    RBRACKET        shift and go to state 242


state 213

    (66) iterable -> iterableMap .

    RBRACKET        reduce using rule 66 (iterable -> iterableMap .)


state 214

    (67) iterable -> iterableArray .

    RBRACKET        reduce using rule 67 (iterable -> iterableArray .)


state 215

    (68) iterable -> iterableSet .

    RBRACKET        reduce using rule 68 (iterable -> iterableSet .)


state 216

    (75) iterableArray -> arrayDeclare .
    (76) iterableArray -> arrayDeclare . COMMA arrayDeclare

    RBRACKET        reduce using rule 75 (iterableArray -> arrayDeclare .)
    COMMA           shift and go to state 243


state 217

    (77) iterableSet -> declararSet .
    (78) iterableSet -> declararSet . COMMA declararSet

  ! shift/reduce conflict for COMMA resolved as shift
    RBRACKET        reduce using rule 77 (iterableSet -> declararSet .)
    COMMA           shift and go to state 244

  ! COMMA           [ reduce using rule 77 (iterableSet -> declararSet .) ]


state 218

    (95) declararSet -> NEW SET LPAREN LBRACKET iterable . RBRACKET RPAREN

    RBRACKET        shift and go to state 245


state 219

    (84) declareteFunction -> varType ID EQUAL FUNCTION LPAREN params RPAREN .

    $end            reduce using rule 84 (declareteFunction -> varType ID EQUAL FUNCTION LPAREN params RPAREN .)
    RBLOCK          reduce using rule 84 (declareteFunction -> varType ID EQUAL FUNCTION LPAREN params RPAREN .)
    RETURN          reduce using rule 84 (declareteFunction -> varType ID EQUAL FUNCTION LPAREN params RPAREN .)


state 220

    (115) suma -> numOperadores PLUS NUM .

    RPAREN          reduce using rule 115 (suma -> numOperadores PLUS NUM .)
    AND             reduce using rule 115 (suma -> numOperadores PLUS NUM .)
    OR              reduce using rule 115 (suma -> numOperadores PLUS NUM .)
    NOT             reduce using rule 115 (suma -> numOperadores PLUS NUM .)
    $end            reduce using rule 115 (suma -> numOperadores PLUS NUM .)
    RBLOCK          reduce using rule 115 (suma -> numOperadores PLUS NUM .)
    RETURN          reduce using rule 115 (suma -> numOperadores PLUS NUM .)


state 221

    (114) suma -> numOperadores PLUS LPAREN numOperadores RPAREN .

    NUM             reduce using rule 114 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    MINUS           reduce using rule 114 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    PLUS            reduce using rule 114 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    TIMES           reduce using rule 114 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    DIVIDE          reduce using rule 114 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    PERIOD          reduce using rule 114 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    RPAREN          reduce using rule 114 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    AND             reduce using rule 114 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    OR              reduce using rule 114 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    NOT             reduce using rule 114 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    $end            reduce using rule 114 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    RBLOCK          reduce using rule 114 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)
    RETURN          reduce using rule 114 (suma -> numOperadores PLUS LPAREN numOperadores RPAREN .)


state 222

    (118) restas -> numOperadores MINUS NUM .

    RPAREN          reduce using rule 118 (restas -> numOperadores MINUS NUM .)
    AND             reduce using rule 118 (restas -> numOperadores MINUS NUM .)
    OR              reduce using rule 118 (restas -> numOperadores MINUS NUM .)
    NOT             reduce using rule 118 (restas -> numOperadores MINUS NUM .)
    $end            reduce using rule 118 (restas -> numOperadores MINUS NUM .)
    RBLOCK          reduce using rule 118 (restas -> numOperadores MINUS NUM .)
    RETURN          reduce using rule 118 (restas -> numOperadores MINUS NUM .)


state 223

    (117) restas -> numOperadores MINUS LPAREN numOperadores RPAREN .

    NUM             reduce using rule 117 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    MINUS           reduce using rule 117 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    PLUS            reduce using rule 117 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    TIMES           reduce using rule 117 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    DIVIDE          reduce using rule 117 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    PERIOD          reduce using rule 117 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    RPAREN          reduce using rule 117 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    AND             reduce using rule 117 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    OR              reduce using rule 117 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    NOT             reduce using rule 117 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    $end            reduce using rule 117 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    RBLOCK          reduce using rule 117 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)
    RETURN          reduce using rule 117 (restas -> numOperadores MINUS LPAREN numOperadores RPAREN .)


state 224

    (121) multiplicacion -> numOperadores TIMES NUM .

    RPAREN          reduce using rule 121 (multiplicacion -> numOperadores TIMES NUM .)
    AND             reduce using rule 121 (multiplicacion -> numOperadores TIMES NUM .)
    OR              reduce using rule 121 (multiplicacion -> numOperadores TIMES NUM .)
    NOT             reduce using rule 121 (multiplicacion -> numOperadores TIMES NUM .)
    $end            reduce using rule 121 (multiplicacion -> numOperadores TIMES NUM .)
    RBLOCK          reduce using rule 121 (multiplicacion -> numOperadores TIMES NUM .)
    RETURN          reduce using rule 121 (multiplicacion -> numOperadores TIMES NUM .)


state 225

    (120) multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .

    NUM             reduce using rule 120 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    MINUS           reduce using rule 120 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    PLUS            reduce using rule 120 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    TIMES           reduce using rule 120 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    DIVIDE          reduce using rule 120 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    PERIOD          reduce using rule 120 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    RPAREN          reduce using rule 120 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    AND             reduce using rule 120 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    OR              reduce using rule 120 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    NOT             reduce using rule 120 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    $end            reduce using rule 120 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    RBLOCK          reduce using rule 120 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)
    RETURN          reduce using rule 120 (multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN .)


state 226

    (124) divicion -> numOperadores DIVIDE NUM .

    RPAREN          reduce using rule 124 (divicion -> numOperadores DIVIDE NUM .)
    AND             reduce using rule 124 (divicion -> numOperadores DIVIDE NUM .)
    OR              reduce using rule 124 (divicion -> numOperadores DIVIDE NUM .)
    NOT             reduce using rule 124 (divicion -> numOperadores DIVIDE NUM .)
    $end            reduce using rule 124 (divicion -> numOperadores DIVIDE NUM .)
    RBLOCK          reduce using rule 124 (divicion -> numOperadores DIVIDE NUM .)
    RETURN          reduce using rule 124 (divicion -> numOperadores DIVIDE NUM .)


state 227

    (123) divicion -> numOperadores DIVIDE LPAREN numOperadores RPAREN .

    NUM             reduce using rule 123 (divicion -> numOperadores DIVIDE LPAREN numOperadores RPAREN .)
    MINUS           reduce using rule 123 (divicion -> numOperadores DIVIDE LPAREN numOperadores RPAREN .)
    PLUS            reduce using rule 123 (divicion -> numOperadores DIVIDE LPAREN numOperadores RPAREN .)
    TIMES           reduce using rule 123 (divicion -> numOperadores DIVIDE LPAREN numOperadores RPAREN .)
    DIVIDE          reduce using rule 123 (divicion -> numOperadores DIVIDE LPAREN numOperadores RPAREN .)
    PERIOD          reduce using rule 123 (divicion -> numOperadores DIVIDE LPAREN numOperadores RPAREN .)
    RPAREN          reduce using rule 123 (divicion -> numOperadores DIVIDE LPAREN numOperadores RPAREN .)
    AND             reduce using rule 123 (divicion -> numOperadores DIVIDE LPAREN numOperadores RPAREN .)
    OR              reduce using rule 123 (divicion -> numOperadores DIVIDE LPAREN numOperadores RPAREN .)
    NOT             reduce using rule 123 (divicion -> numOperadores DIVIDE LPAREN numOperadores RPAREN .)
    $end            reduce using rule 123 (divicion -> numOperadores DIVIDE LPAREN numOperadores RPAREN .)
    RBLOCK          reduce using rule 123 (divicion -> numOperadores DIVIDE LPAREN numOperadores RPAREN .)
    RETURN          reduce using rule 123 (divicion -> numOperadores DIVIDE LPAREN numOperadores RPAREN .)


state 228

    (85) sentencesCmpt -> LBLOCK sentencia . RBLOCK
    (86) sentencesCmpt -> LBLOCK sentencia . RETURN RBLOCK

    RBLOCK          shift and go to state 246
    RETURN          shift and go to state 247


state 229

    (27) sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK . sentencia RBLOCK
    (29) sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK . sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (1) sentencia -> . callMethods
    (2) sentencia -> . callFunction COLON
    (3) sentencia -> . varDeclaration
    (4) sentencia -> . controlExpression
    (5) sentencia -> . impresion
    (6) sentencia -> . declareteFunction
    (7) sentencia -> . assingOperadores
    (52) callMethods -> . ID methodArray COLON
    (53) callMethods -> . ID methodSet COLON
    (54) callMethods -> . ID methodMap COLON
    (87) callFunction -> . ID LPAREN params RPAREN
    (44) varDeclaration -> . varType assign
    (45) varDeclaration -> . assign
    (46) varDeclaration -> . LET ID COLON
    (47) varDeclaration -> . VAR ID COLON
    (11) controlExpression -> . sentencias_if
    (12) controlExpression -> . sentencias_if_else
    (13) controlExpression -> . sentencias_while
    (14) controlExpression -> . impresion
    (15) controlExpression -> . impresion_vacio
    (33) impresion -> . ALERT LPAREN expression RPAREN
    (82) declareteFunction -> . FUNCTION ID LPAREN params RPAREN
    (83) declareteFunction -> . FUNCTION ID LPAREN params RPAREN sentencesCmpt
    (84) declareteFunction -> . varType ID EQUAL FUNCTION LPAREN params RPAREN
    (10) assingOperadores -> . varType ID EQUAL inicializarOp
    (41) varType -> . LET
    (42) varType -> . CONST
    (43) varType -> . VAR
    (48) assign -> . ID EQUAL arrayDeclare COLON
    (49) assign -> . ID EQUAL declareMap COLON
    (50) assign -> . ID EQUAL declararSet COLON
    (51) assign -> . ID EQUAL javaScript_param COLON
    (27) sentencias_if -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (28) sentencias_if -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (29) sentencias_if_else -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (30) sentencias_if_else -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (31) sentencias_while -> . WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (32) sentencias_while -> . WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (34) impresion_vacio -> . ALERT LPAREN RPAREN

    ID              shift and go to state 9
    LET             shift and go to state 12
    VAR             shift and go to state 13
    ALERT           shift and go to state 18
    FUNCTION        shift and go to state 19
    CONST           shift and go to state 20
    IF              shift and go to state 21
    WHILE           shift and go to state 22

    sentencia                      shift and go to state 248
    callMethods                    shift and go to state 2
    callFunction                   shift and go to state 3
    varDeclaration                 shift and go to state 4
    controlExpression              shift and go to state 5
    impresion                      shift and go to state 6
    declareteFunction              shift and go to state 7
    assingOperadores               shift and go to state 8
    varType                        shift and go to state 10
    assign                         shift and go to state 11
    sentencias_if                  shift and go to state 14
    sentencias_if_else             shift and go to state 15
    sentencias_while               shift and go to state 16
    impresion_vacio                shift and go to state 17

state 230

    (28) sentencias_if -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK .
    (30) sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK . ELSE LBLOCK sentencia RBLOCK

    $end            reduce using rule 28 (sentencias_if -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK .)
    RBLOCK          reduce using rule 28 (sentencias_if -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK .)
    RETURN          reduce using rule 28 (sentencias_if -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK .)
    ELSE            shift and go to state 249


state 231

    (31) sentencias_while -> WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK .

    $end            reduce using rule 31 (sentencias_while -> WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK .)
    RBLOCK          reduce using rule 31 (sentencias_while -> WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK .)
    RETURN          reduce using rule 31 (sentencias_while -> WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK .)


state 232

    (32) sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK . sentencia RBLOCK
    (1) sentencia -> . callMethods
    (2) sentencia -> . callFunction COLON
    (3) sentencia -> . varDeclaration
    (4) sentencia -> . controlExpression
    (5) sentencia -> . impresion
    (6) sentencia -> . declareteFunction
    (7) sentencia -> . assingOperadores
    (52) callMethods -> . ID methodArray COLON
    (53) callMethods -> . ID methodSet COLON
    (54) callMethods -> . ID methodMap COLON
    (87) callFunction -> . ID LPAREN params RPAREN
    (44) varDeclaration -> . varType assign
    (45) varDeclaration -> . assign
    (46) varDeclaration -> . LET ID COLON
    (47) varDeclaration -> . VAR ID COLON
    (11) controlExpression -> . sentencias_if
    (12) controlExpression -> . sentencias_if_else
    (13) controlExpression -> . sentencias_while
    (14) controlExpression -> . impresion
    (15) controlExpression -> . impresion_vacio
    (33) impresion -> . ALERT LPAREN expression RPAREN
    (82) declareteFunction -> . FUNCTION ID LPAREN params RPAREN
    (83) declareteFunction -> . FUNCTION ID LPAREN params RPAREN sentencesCmpt
    (84) declareteFunction -> . varType ID EQUAL FUNCTION LPAREN params RPAREN
    (10) assingOperadores -> . varType ID EQUAL inicializarOp
    (41) varType -> . LET
    (42) varType -> . CONST
    (43) varType -> . VAR
    (48) assign -> . ID EQUAL arrayDeclare COLON
    (49) assign -> . ID EQUAL declareMap COLON
    (50) assign -> . ID EQUAL declararSet COLON
    (51) assign -> . ID EQUAL javaScript_param COLON
    (27) sentencias_if -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (28) sentencias_if -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (29) sentencias_if_else -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (30) sentencias_if_else -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (31) sentencias_while -> . WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (32) sentencias_while -> . WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (34) impresion_vacio -> . ALERT LPAREN RPAREN

    ID              shift and go to state 9
    LET             shift and go to state 12
    VAR             shift and go to state 13
    ALERT           shift and go to state 18
    FUNCTION        shift and go to state 19
    CONST           shift and go to state 20
    IF              shift and go to state 21
    WHILE           shift and go to state 22

    sentencia                      shift and go to state 250
    callMethods                    shift and go to state 2
    callFunction                   shift and go to state 3
    varDeclaration                 shift and go to state 4
    controlExpression              shift and go to state 5
    impresion                      shift and go to state 6
    declareteFunction              shift and go to state 7
    assingOperadores               shift and go to state 8
    varType                        shift and go to state 10
    assign                         shift and go to state 11
    sentencias_if                  shift and go to state 14
    sentencias_if_else             shift and go to state 15
    sentencias_while               shift and go to state 16
    impresion_vacio                shift and go to state 17

state 233

    (58) arrayValues -> javaScript_param COMMA javaScript_param .

    RPAREN          reduce using rule 58 (arrayValues -> javaScript_param COMMA javaScript_param .)


state 234

    (64) iterableMap -> LBRACKET keyValue . COMMA keyValue RBRACKET
    (65) iterableMap -> LBRACKET keyValue . COMMA keyValue RBRACKET COMMA iterableMap

    COMMA           shift and go to state 251


state 235

    (70) keyValue -> iterableMap .

    COMMA           reduce using rule 70 (keyValue -> iterableMap .)
    RBRACKET        reduce using rule 70 (keyValue -> iterableMap .)


state 236

    (55) arrayDeclare -> LBRACKET javaScript_param . COMMA javaScript_param RBRACKET
    (69) keyValue -> javaScript_param .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 142

  ! COMMA           [ reduce using rule 69 (keyValue -> javaScript_param .) ]


state 237

    (71) keyValue -> iterableArray .

    COMMA           reduce using rule 71 (keyValue -> iterableArray .)
    RBRACKET        reduce using rule 71 (keyValue -> iterableArray .)


state 238

    (72) keyValue -> iterableSet .

    COMMA           reduce using rule 72 (keyValue -> iterableSet .)
    RBRACKET        reduce using rule 72 (keyValue -> iterableSet .)


state 239

    (73) keyValue -> declareMap .

    COMMA           reduce using rule 73 (keyValue -> declareMap .)
    RBRACKET        reduce using rule 73 (keyValue -> declareMap .)


state 240

    (74) keyValue -> arrayDeclare .
    (75) iterableArray -> arrayDeclare .
    (76) iterableArray -> arrayDeclare . COMMA arrayDeclare

  ! reduce/reduce conflict for COMMA resolved using rule 74 (keyValue -> arrayDeclare .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 74 (keyValue -> arrayDeclare .)
  ! shift/reduce conflict for COMMA resolved as shift
    RBRACKET        reduce using rule 74 (keyValue -> arrayDeclare .)
    COMMA           shift and go to state 243

  ! COMMA           [ reduce using rule 74 (keyValue -> arrayDeclare .) ]
  ! COMMA           [ reduce using rule 75 (iterableArray -> arrayDeclare .) ]
  ! RBRACKET        [ reduce using rule 75 (iterableArray -> arrayDeclare .) ]


state 241

    (62) declareMap -> NEW . MAP LPAREN LBRACKET iterable RBRACKET RPAREN
    (63) declareMap -> NEW . MAP LPAREN RPAREN
    (56) arrayDeclare -> NEW . ARRAY LPAREN arrayValues RPAREN
    (95) declararSet -> NEW . SET LPAREN LBRACKET iterable RBRACKET RPAREN

    MAP             shift and go to state 95
    ARRAY           shift and go to state 94
    SET             shift and go to state 96


state 242

    (62) declareMap -> NEW MAP LPAREN LBRACKET iterable RBRACKET . RPAREN

    RPAREN          shift and go to state 252


state 243

    (76) iterableArray -> arrayDeclare COMMA . arrayDeclare
    (55) arrayDeclare -> . LBRACKET javaScript_param COMMA javaScript_param RBRACKET
    (56) arrayDeclare -> . NEW ARRAY LPAREN arrayValues RPAREN

    LBRACKET        shift and go to state 54
    NEW             shift and go to state 254

    arrayDeclare                   shift and go to state 253

state 244

    (78) iterableSet -> declararSet COMMA . declararSet
    (95) declararSet -> . NEW SET LPAREN LBRACKET iterable RBRACKET RPAREN

    NEW             shift and go to state 256

    declararSet                    shift and go to state 255

state 245

    (95) declararSet -> NEW SET LPAREN LBRACKET iterable RBRACKET . RPAREN

    RPAREN          shift and go to state 257


state 246

    (85) sentencesCmpt -> LBLOCK sentencia RBLOCK .

    $end            reduce using rule 85 (sentencesCmpt -> LBLOCK sentencia RBLOCK .)
    RBLOCK          reduce using rule 85 (sentencesCmpt -> LBLOCK sentencia RBLOCK .)
    RETURN          reduce using rule 85 (sentencesCmpt -> LBLOCK sentencia RBLOCK .)


state 247

    (86) sentencesCmpt -> LBLOCK sentencia RETURN . RBLOCK

    RBLOCK          shift and go to state 258


state 248

    (27) sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia . RBLOCK
    (29) sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia . RBLOCK ELSE LBLOCK sentencia RBLOCK

    RBLOCK          shift and go to state 259


state 249

    (30) sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE . LBLOCK sentencia RBLOCK

    LBLOCK          shift and go to state 260


state 250

    (32) sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia . RBLOCK

    RBLOCK          shift and go to state 261


state 251

    (64) iterableMap -> LBRACKET keyValue COMMA . keyValue RBRACKET
    (65) iterableMap -> LBRACKET keyValue COMMA . keyValue RBRACKET COMMA iterableMap
    (69) keyValue -> . javaScript_param
    (70) keyValue -> . iterableMap
    (71) keyValue -> . iterableArray
    (72) keyValue -> . iterableSet
    (73) keyValue -> . declareMap
    (74) keyValue -> . arrayDeclare
    (35) javaScript_param -> . STRING
    (36) javaScript_param -> . NUM
    (37) javaScript_param -> . boolean
    (38) javaScript_param -> . ID
    (64) iterableMap -> . LBRACKET keyValue COMMA keyValue RBRACKET
    (65) iterableMap -> . LBRACKET keyValue COMMA keyValue RBRACKET COMMA iterableMap
    (75) iterableArray -> . arrayDeclare
    (76) iterableArray -> . arrayDeclare COMMA arrayDeclare
    (77) iterableSet -> . declararSet
    (78) iterableSet -> . declararSet COMMA declararSet
    (79) iterableSet -> .
    (62) declareMap -> . NEW MAP LPAREN LBRACKET iterable RBRACKET RPAREN
    (63) declareMap -> . NEW MAP LPAREN RPAREN
    (55) arrayDeclare -> . LBRACKET javaScript_param COMMA javaScript_param RBRACKET
    (56) arrayDeclare -> . NEW ARRAY LPAREN arrayValues RPAREN
    (39) boolean -> . TRUE
    (40) boolean -> . FALSE
    (95) declararSet -> . NEW SET LPAREN LBRACKET iterable RBRACKET RPAREN

    STRING          shift and go to state 45
    NUM             shift and go to state 46
    ID              shift and go to state 41
    LBRACKET        shift and go to state 211
    RBRACKET        reduce using rule 79 (iterableSet -> .)
    NEW             shift and go to state 241
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    keyValue                       shift and go to state 262
    iterableMap                    shift and go to state 235
    javaScript_param               shift and go to state 263
    iterableArray                  shift and go to state 237
    iterableSet                    shift and go to state 238
    declareMap                     shift and go to state 239
    arrayDeclare                   shift and go to state 240
    boolean                        shift and go to state 47
    declararSet                    shift and go to state 217

state 252

    (62) declareMap -> NEW MAP LPAREN LBRACKET iterable RBRACKET RPAREN .

    COLON           reduce using rule 62 (declareMap -> NEW MAP LPAREN LBRACKET iterable RBRACKET RPAREN .)
    COMMA           reduce using rule 62 (declareMap -> NEW MAP LPAREN LBRACKET iterable RBRACKET RPAREN .)
    RBRACKET        reduce using rule 62 (declareMap -> NEW MAP LPAREN LBRACKET iterable RBRACKET RPAREN .)


state 253

    (76) iterableArray -> arrayDeclare COMMA arrayDeclare .

    RBRACKET        reduce using rule 76 (iterableArray -> arrayDeclare COMMA arrayDeclare .)
    COMMA           reduce using rule 76 (iterableArray -> arrayDeclare COMMA arrayDeclare .)


state 254

    (56) arrayDeclare -> NEW . ARRAY LPAREN arrayValues RPAREN

    ARRAY           shift and go to state 94


state 255

    (78) iterableSet -> declararSet COMMA declararSet .

    RBRACKET        reduce using rule 78 (iterableSet -> declararSet COMMA declararSet .)
    COMMA           reduce using rule 78 (iterableSet -> declararSet COMMA declararSet .)


state 256

    (95) declararSet -> NEW . SET LPAREN LBRACKET iterable RBRACKET RPAREN

    SET             shift and go to state 96


state 257

    (95) declararSet -> NEW SET LPAREN LBRACKET iterable RBRACKET RPAREN .

    COLON           reduce using rule 95 (declararSet -> NEW SET LPAREN LBRACKET iterable RBRACKET RPAREN .)
    COMMA           reduce using rule 95 (declararSet -> NEW SET LPAREN LBRACKET iterable RBRACKET RPAREN .)
    RBRACKET        reduce using rule 95 (declararSet -> NEW SET LPAREN LBRACKET iterable RBRACKET RPAREN .)


state 258

    (86) sentencesCmpt -> LBLOCK sentencia RETURN RBLOCK .

    $end            reduce using rule 86 (sentencesCmpt -> LBLOCK sentencia RETURN RBLOCK .)
    RBLOCK          reduce using rule 86 (sentencesCmpt -> LBLOCK sentencia RETURN RBLOCK .)
    RETURN          reduce using rule 86 (sentencesCmpt -> LBLOCK sentencia RETURN RBLOCK .)


state 259

    (27) sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK .
    (29) sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK . ELSE LBLOCK sentencia RBLOCK

    $end            reduce using rule 27 (sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK .)
    RBLOCK          reduce using rule 27 (sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK .)
    RETURN          reduce using rule 27 (sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK .)
    ELSE            shift and go to state 264


state 260

    (30) sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK . sentencia RBLOCK
    (1) sentencia -> . callMethods
    (2) sentencia -> . callFunction COLON
    (3) sentencia -> . varDeclaration
    (4) sentencia -> . controlExpression
    (5) sentencia -> . impresion
    (6) sentencia -> . declareteFunction
    (7) sentencia -> . assingOperadores
    (52) callMethods -> . ID methodArray COLON
    (53) callMethods -> . ID methodSet COLON
    (54) callMethods -> . ID methodMap COLON
    (87) callFunction -> . ID LPAREN params RPAREN
    (44) varDeclaration -> . varType assign
    (45) varDeclaration -> . assign
    (46) varDeclaration -> . LET ID COLON
    (47) varDeclaration -> . VAR ID COLON
    (11) controlExpression -> . sentencias_if
    (12) controlExpression -> . sentencias_if_else
    (13) controlExpression -> . sentencias_while
    (14) controlExpression -> . impresion
    (15) controlExpression -> . impresion_vacio
    (33) impresion -> . ALERT LPAREN expression RPAREN
    (82) declareteFunction -> . FUNCTION ID LPAREN params RPAREN
    (83) declareteFunction -> . FUNCTION ID LPAREN params RPAREN sentencesCmpt
    (84) declareteFunction -> . varType ID EQUAL FUNCTION LPAREN params RPAREN
    (10) assingOperadores -> . varType ID EQUAL inicializarOp
    (41) varType -> . LET
    (42) varType -> . CONST
    (43) varType -> . VAR
    (48) assign -> . ID EQUAL arrayDeclare COLON
    (49) assign -> . ID EQUAL declareMap COLON
    (50) assign -> . ID EQUAL declararSet COLON
    (51) assign -> . ID EQUAL javaScript_param COLON
    (27) sentencias_if -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (28) sentencias_if -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (29) sentencias_if_else -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (30) sentencias_if_else -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (31) sentencias_while -> . WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (32) sentencias_while -> . WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (34) impresion_vacio -> . ALERT LPAREN RPAREN

    ID              shift and go to state 9
    LET             shift and go to state 12
    VAR             shift and go to state 13
    ALERT           shift and go to state 18
    FUNCTION        shift and go to state 19
    CONST           shift and go to state 20
    IF              shift and go to state 21
    WHILE           shift and go to state 22

    sentencia                      shift and go to state 265
    callMethods                    shift and go to state 2
    callFunction                   shift and go to state 3
    varDeclaration                 shift and go to state 4
    controlExpression              shift and go to state 5
    impresion                      shift and go to state 6
    declareteFunction              shift and go to state 7
    assingOperadores               shift and go to state 8
    varType                        shift and go to state 10
    assign                         shift and go to state 11
    sentencias_if                  shift and go to state 14
    sentencias_if_else             shift and go to state 15
    sentencias_while               shift and go to state 16
    impresion_vacio                shift and go to state 17

state 261

    (32) sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK .

    $end            reduce using rule 32 (sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK .)
    RBLOCK          reduce using rule 32 (sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK .)
    RETURN          reduce using rule 32 (sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK .)


state 262

    (64) iterableMap -> LBRACKET keyValue COMMA keyValue . RBRACKET
    (65) iterableMap -> LBRACKET keyValue COMMA keyValue . RBRACKET COMMA iterableMap

    RBRACKET        shift and go to state 266


state 263

    (69) keyValue -> javaScript_param .

    RBRACKET        reduce using rule 69 (keyValue -> javaScript_param .)
    COMMA           reduce using rule 69 (keyValue -> javaScript_param .)


state 264

    (29) sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE . LBLOCK sentencia RBLOCK

    LBLOCK          shift and go to state 267


state 265

    (30) sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia . RBLOCK

    RBLOCK          shift and go to state 268


state 266

    (64) iterableMap -> LBRACKET keyValue COMMA keyValue RBRACKET .
    (65) iterableMap -> LBRACKET keyValue COMMA keyValue RBRACKET . COMMA iterableMap

  ! shift/reduce conflict for COMMA resolved as shift
    RBRACKET        reduce using rule 64 (iterableMap -> LBRACKET keyValue COMMA keyValue RBRACKET .)
    COMMA           shift and go to state 269

  ! COMMA           [ reduce using rule 64 (iterableMap -> LBRACKET keyValue COMMA keyValue RBRACKET .) ]


state 267

    (29) sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK . sentencia RBLOCK
    (1) sentencia -> . callMethods
    (2) sentencia -> . callFunction COLON
    (3) sentencia -> . varDeclaration
    (4) sentencia -> . controlExpression
    (5) sentencia -> . impresion
    (6) sentencia -> . declareteFunction
    (7) sentencia -> . assingOperadores
    (52) callMethods -> . ID methodArray COLON
    (53) callMethods -> . ID methodSet COLON
    (54) callMethods -> . ID methodMap COLON
    (87) callFunction -> . ID LPAREN params RPAREN
    (44) varDeclaration -> . varType assign
    (45) varDeclaration -> . assign
    (46) varDeclaration -> . LET ID COLON
    (47) varDeclaration -> . VAR ID COLON
    (11) controlExpression -> . sentencias_if
    (12) controlExpression -> . sentencias_if_else
    (13) controlExpression -> . sentencias_while
    (14) controlExpression -> . impresion
    (15) controlExpression -> . impresion_vacio
    (33) impresion -> . ALERT LPAREN expression RPAREN
    (82) declareteFunction -> . FUNCTION ID LPAREN params RPAREN
    (83) declareteFunction -> . FUNCTION ID LPAREN params RPAREN sentencesCmpt
    (84) declareteFunction -> . varType ID EQUAL FUNCTION LPAREN params RPAREN
    (10) assingOperadores -> . varType ID EQUAL inicializarOp
    (41) varType -> . LET
    (42) varType -> . CONST
    (43) varType -> . VAR
    (48) assign -> . ID EQUAL arrayDeclare COLON
    (49) assign -> . ID EQUAL declareMap COLON
    (50) assign -> . ID EQUAL declararSet COLON
    (51) assign -> . ID EQUAL javaScript_param COLON
    (27) sentencias_if -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (28) sentencias_if -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (29) sentencias_if_else -> . IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (30) sentencias_if_else -> . IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK
    (31) sentencias_while -> . WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK
    (32) sentencias_while -> . WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK
    (34) impresion_vacio -> . ALERT LPAREN RPAREN

    ID              shift and go to state 9
    LET             shift and go to state 12
    VAR             shift and go to state 13
    ALERT           shift and go to state 18
    FUNCTION        shift and go to state 19
    CONST           shift and go to state 20
    IF              shift and go to state 21
    WHILE           shift and go to state 22

    sentencia                      shift and go to state 270
    callMethods                    shift and go to state 2
    callFunction                   shift and go to state 3
    varDeclaration                 shift and go to state 4
    controlExpression              shift and go to state 5
    impresion                      shift and go to state 6
    declareteFunction              shift and go to state 7
    assingOperadores               shift and go to state 8
    varType                        shift and go to state 10
    assign                         shift and go to state 11
    sentencias_if                  shift and go to state 14
    sentencias_if_else             shift and go to state 15
    sentencias_while               shift and go to state 16
    impresion_vacio                shift and go to state 17

state 268

    (30) sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK .

    $end            reduce using rule 30 (sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK .)
    RBLOCK          reduce using rule 30 (sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK .)
    RETURN          reduce using rule 30 (sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK .)


state 269

    (65) iterableMap -> LBRACKET keyValue COMMA keyValue RBRACKET COMMA . iterableMap
    (64) iterableMap -> . LBRACKET keyValue COMMA keyValue RBRACKET
    (65) iterableMap -> . LBRACKET keyValue COMMA keyValue RBRACKET COMMA iterableMap

    LBRACKET        shift and go to state 271

    iterableMap                    shift and go to state 272

state 270

    (29) sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia . RBLOCK

    RBLOCK          shift and go to state 273


state 271

    (64) iterableMap -> LBRACKET . keyValue COMMA keyValue RBRACKET
    (65) iterableMap -> LBRACKET . keyValue COMMA keyValue RBRACKET COMMA iterableMap
    (69) keyValue -> . javaScript_param
    (70) keyValue -> . iterableMap
    (71) keyValue -> . iterableArray
    (72) keyValue -> . iterableSet
    (73) keyValue -> . declareMap
    (74) keyValue -> . arrayDeclare
    (35) javaScript_param -> . STRING
    (36) javaScript_param -> . NUM
    (37) javaScript_param -> . boolean
    (38) javaScript_param -> . ID
    (64) iterableMap -> . LBRACKET keyValue COMMA keyValue RBRACKET
    (65) iterableMap -> . LBRACKET keyValue COMMA keyValue RBRACKET COMMA iterableMap
    (75) iterableArray -> . arrayDeclare
    (76) iterableArray -> . arrayDeclare COMMA arrayDeclare
    (77) iterableSet -> . declararSet
    (78) iterableSet -> . declararSet COMMA declararSet
    (79) iterableSet -> .
    (62) declareMap -> . NEW MAP LPAREN LBRACKET iterable RBRACKET RPAREN
    (63) declareMap -> . NEW MAP LPAREN RPAREN
    (55) arrayDeclare -> . LBRACKET javaScript_param COMMA javaScript_param RBRACKET
    (56) arrayDeclare -> . NEW ARRAY LPAREN arrayValues RPAREN
    (39) boolean -> . TRUE
    (40) boolean -> . FALSE
    (95) declararSet -> . NEW SET LPAREN LBRACKET iterable RBRACKET RPAREN

    STRING          shift and go to state 45
    NUM             shift and go to state 46
    ID              shift and go to state 41
    LBRACKET        shift and go to state 211
    COMMA           reduce using rule 79 (iterableSet -> .)
    NEW             shift and go to state 241
    TRUE            shift and go to state 48
    FALSE           shift and go to state 49

    keyValue                       shift and go to state 234
    iterableMap                    shift and go to state 235
    javaScript_param               shift and go to state 263
    iterableArray                  shift and go to state 237
    iterableSet                    shift and go to state 238
    declareMap                     shift and go to state 239
    arrayDeclare                   shift and go to state 240
    boolean                        shift and go to state 47
    declararSet                    shift and go to state 217

state 272

    (65) iterableMap -> LBRACKET keyValue COMMA keyValue RBRACKET COMMA iterableMap .

    RBRACKET        reduce using rule 65 (iterableMap -> LBRACKET keyValue COMMA keyValue RBRACKET COMMA iterableMap .)
    COMMA           reduce using rule 65 (iterableMap -> LBRACKET keyValue COMMA keyValue RBRACKET COMMA iterableMap .)


state 273

    (29) sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK .

    $end            reduce using rule 29 (sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK .)
    RBLOCK          reduce using rule 29 (sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK .)
    RETURN          reduce using rule 29 (sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 12 resolved as shift
WARNING: shift/reduce conflict for ID in state 13 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 34 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 34 resolved as shift
WARNING: shift/reduce conflict for NUM in state 34 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 34 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 36 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 36 resolved as shift
WARNING: shift/reduce conflict for NUM in state 36 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 37 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 37 resolved as shift
WARNING: shift/reduce conflict for NUM in state 37 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 63 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 63 resolved as shift
WARNING: shift/reduce conflict for NUM in state 63 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 73 resolved as shift
WARNING: shift/reduce conflict for NUM in state 73 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 75 resolved as shift
WARNING: shift/reduce conflict for NUM in state 75 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 76 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 76 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 76 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 76 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 76 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 76 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 76 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 76 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 76 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 76 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 76 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 76 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 76 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 76 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 76 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 76 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 77 resolved as shift
WARNING: shift/reduce conflict for NUM in state 77 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 78 resolved as shift
WARNING: shift/reduce conflict for NUM in state 78 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 79 resolved as shift
WARNING: shift/reduce conflict for NUM in state 79 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 80 resolved as shift
WARNING: shift/reduce conflict for NUM in state 80 resolved as shift
WARNING: shift/reduce conflict for PERIOD in state 81 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 125 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 134 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 134 resolved as shift
WARNING: shift/reduce conflict for NUM in state 134 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 140 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 140 resolved as shift
WARNING: shift/reduce conflict for NUM in state 140 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 217 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 236 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 240 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 266 resolved as shift
WARNING: reduce/reduce conflict in state 6 resolved using rule (sentencia -> impresion)
WARNING: rejected rule (controlExpression -> impresion) in state 6
WARNING: reduce/reduce conflict in state 76 resolved using rule (suma -> numOperadores)
WARNING: rejected rule (restas -> numOperadores) in state 76
WARNING: reduce/reduce conflict in state 76 resolved using rule (suma -> numOperadores)
WARNING: rejected rule (multiplicacion -> numOperadores) in state 76
WARNING: reduce/reduce conflict in state 76 resolved using rule (suma -> numOperadores)
WARNING: rejected rule (divicion -> numOperadores) in state 76
WARNING: reduce/reduce conflict in state 77 resolved using rule (operacionesMath -> suma)
WARNING: rejected rule (numNegative -> <empty>) in state 77
WARNING: reduce/reduce conflict in state 78 resolved using rule (operacionesMath -> restas)
WARNING: rejected rule (numNegative -> <empty>) in state 78
WARNING: reduce/reduce conflict in state 79 resolved using rule (operacionesMath -> multiplicacion)
WARNING: rejected rule (numNegative -> <empty>) in state 79
WARNING: reduce/reduce conflict in state 80 resolved using rule (operacionesMath -> divicion)
WARNING: rejected rule (numNegative -> <empty>) in state 80
WARNING: reduce/reduce conflict in state 123 resolved using rule (enteros -> NUM)
WARNING: rejected rule (numNegative -> MINUS NUM) in state 123
WARNING: reduce/reduce conflict in state 151 resolved using rule (methodMap -> PERIOD CLEAR LPAREN RPAREN)
WARNING: rejected rule (methodSet -> PERIOD CLEAR LPAREN RPAREN) in state 151
WARNING: reduce/reduce conflict in state 163 resolved using rule (suma -> numOperadores PLUS NUM)
WARNING: rejected rule (enteros -> NUM) in state 163
WARNING: reduce/reduce conflict in state 167 resolved using rule (restas -> numOperadores MINUS NUM)
WARNING: rejected rule (enteros -> NUM) in state 167
WARNING: reduce/reduce conflict in state 171 resolved using rule (multiplicacion -> numOperadores TIMES NUM)
WARNING: rejected rule (enteros -> NUM) in state 171
WARNING: reduce/reduce conflict in state 175 resolved using rule (divicion -> numOperadores DIVIDE NUM)
WARNING: rejected rule (enteros -> NUM) in state 175
WARNING: reduce/reduce conflict in state 240 resolved using rule (keyValue -> arrayDeclare)
WARNING: rejected rule (iterableArray -> arrayDeclare) in state 240
WARNING: Rule (controlExpression -> impresion) is never reduced
WARNING: Rule (methodSet -> PERIOD CLEAR LPAREN RPAREN) is never reduced
