
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD ALERT AND ARRAY CLEAR COLON COMMA CONST DELETE DIVIDE DIV_EQUAL ELSE EQUAL FALSE FUNCTION GET GREATER GREATEREQUAL HAS ID IF ISEQUAL IS_IDENTICAL IS_NOT_IDENTICAL LBLOCK LBRACKET LENGTH LESS LESSEQUAL LET LPAREN MAP MINUS MINUS_EQUAL MOD MOD_EQUAL MUL_EQUAL NEW NOT NUM OR PERIOD PLUS PLUS_EQUAL POP PUSH RBLOCK RBRACKET RETURN RPAREN SET STRING TIMES TRUE TWOPOINTS UNSHIFT VAR WHILE WITH YIELD sentencia :  callMethods\n                    | callFunction COLON\n                    | varDeclaration\n                    | controlExpression\n                    | impresion\n                    | declareteFunction\n                    | assingOperadores\n\n\n                     expression :  conditionalEspecifico\n                     | inicializarOp\n     assingOperadores : varType ID EQUAL inicializarOp  controlExpression : sentencias_if\n                        | sentencias_if_else\n                        | sentencias_while\n                        | impresion\n                        | impresion_vacio\n             opConditional : ISEQUAL\n                      |  IS_NOT_IDENTICAL\n                      |  IS_IDENTICAL\n                      | GREATER\n                      | GREATEREQUAL\n                      | LESS\n                      | LESSEQUAL\n                      | boolean\n                      operadorLogical : AND\n                        | OR\n                        | NOT sentencias_if : IF LPAREN expression operadorLogical expression  RPAREN LBLOCK sentencia RBLOCK\n                    | IF LPAREN expression RPAREN LBLOCK sentencia RBLOCKsentencias_if_else : IF LPAREN expression operadorLogical expression  RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK\n                          | IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK sentencias_while : WHILE LPAREN  expression RPAREN LBLOCK sentencia RBLOCK\n                        | WHILE LPAREN  expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCKimpresion : ALERT LPAREN expression  RPARENimpresion_vacio : ALERT LPAREN RPARENjavaScript_param : STRING\n                         | NUM\n                         | boolean\n                         | ID\n    boolean : TRUE\n             | FALSE\n         varType : LET\n                | CONST\n                | VAR\n               varDeclaration : varType assign\n                    | assign\n                    | LET ID COLON\n                    | VAR ID COLON\n                   assign : ID  EQUAL  arrayDeclare COLON\n                    |  ID EQUAL declareMap COLON\n                    |  ID EQUAL declararSet COLON\n                    |  ID EQUAL javaScript_param COLON callMethods : ID methodArray COLON\n                     | ID methodSet COLON\n                     | ID methodMap COLON arrayDeclare :  LBRACKET  RBRACKET\n                       | LBRACKET  arrayValues RBRACKET\n                       | NEW ARRAY LPAREN arrayValues RPAREN\n                       | NEW ARRAY LPAREN  RPAREN\n                      arrayValues :  javaScript_param\n                    | javaScript_param COMMA arrayValues  methodArray : PERIOD PUSH LPAREN javaScript_param RPAREN\n                      | PERIOD UNSHIFT LPAREN javaScript_param RPAREN\n                      | PERIOD POP LPAREN  RPAREN declareMap :  NEW MAP LPAREN LBRACKET iterable RBRACKET RPAREN\n                    | NEW MAP LPAREN  RPAREN\n                     iterableMap : LBRACKET keyValue COMMA keyValue RBRACKET\n                      | LBRACKET keyValue COMMA keyValue RBRACKET COMMA iterableMap iterable : iterableMap\n                   | iterableArray\n                   | iterableSet  keyValue : javaScript_param\n                  | iterableMap\n                  | iterableArray\n                  | iterableSet\n                  | declareMap\n                  | arrayDeclare  iterableArray :  arrayDeclare\n                       | arrayDeclare COMMA arrayDeclare  iterableSet : declararSet\n                     | declararSet COMMA declararSet\n                    | methodMap : PERIOD CLEAR LPAREN RPAREN\n                   | PERIOD LENGTH LPAREN RPAREN  declareteFunction : FUNCTION ID LPAREN params RPAREN\n                          | FUNCTION  ID LPAREN params RPAREN sentencesCmpt\n                          | varType ID EQUAL FUNCTION LPAREN params RPAREN\n                          sentencesCmpt : LBLOCK sentencia RBLOCK\n                     | LBLOCK sentencia RETURN RBLOCK  callFunction : ID LPAREN params RPAREN  \n                    \n                     params : paramList\n               paramList : javaScript_param\n                  | javaScript_param COMMA paramList  args : argslist\n            | javaScript_param\n     argslist : args\n                   | args COMMA argslist\n     declararSet : NEW SET LPAREN LBRACKET iterable RBRACKET RPAREN\n\n                     methodSet : PERIOD ADD LPAREN javaScript_param RPAREN\n                      | PERIOD DELETE LPAREN javaScript_param RPAREN\n                      | PERIOD CLEAR LPAREN RPAREN  inicializarOp :  PLUS operacionesMath\n                        | MINUS operacionesMath\n                        | operacionesMath  operacionesMath :  numOperadores PLUS suma\n                         | suma\n                          | suma operacionesMath\n                         | restas\n                         | numOperadores MINUS restas\n                         | restas operacionesMath\n                         | multiplicacion\n                         | numOperadores TIMES multiplicacion\n                         | multiplicacion operacionesMath\n                         | divicion\n                         | numOperadores DIVIDE divicion\n                         | divicion operacionesMathsuma : numOperadores PLUS LPAREN numOperadores RPAREN\n            | numOperadores PLUS NUM\n            | numOperadores\n\n             restas : numOperadores MINUS LPAREN numOperadores RPAREN\n               | numOperadores  MINUS NUM\n               | numOperadores  multiplicacion : numOperadores TIMES LPAREN numOperadores RPAREN\n               | numOperadores  TIMES NUM\n               | numOperadores  divicion : numOperadores DIVIDE LPAREN numOperadores RPAREN\n               | numOperadores  DIVIDE NUM\n               | numOperadores  numOperadores : enteros\n                     |  decimales   enteros : NUM\n                 | numNegative numNegative : MINUS NUM\n                 | decimales : enteros PERIOD NUM   conditionalEspecifico :  ID opConditional dataCondi\n                    |  NUM opConditional NUM\n                    | STRING opConditional STRING \n                    dataCondi : STRING\n                  | NUM '
    
_lr_action_items = {'ID':([0,10,12,13,19,20,27,28,34,36,37,54,63,84,88,99,100,102,103,136,138,139,140,142,145,146,156,182,183,205,212,230,233,251,260,267,271,],[9,31,32,33,35,-42,41,41,70,70,70,41,41,41,41,41,41,41,41,70,-24,-25,-26,70,41,41,41,9,9,9,41,9,9,41,9,9,41,]),'LET':([0,182,183,205,230,233,260,267,],[12,12,12,12,12,12,12,12,]),'VAR':([0,182,183,205,230,233,260,267,],[13,13,13,13,13,13,13,13,]),'ALERT':([0,182,183,205,230,233,260,267,],[18,18,18,18,18,18,18,18,]),'FUNCTION':([0,63,182,183,205,230,233,260,267,],[19,106,19,19,19,19,19,19,19,]),'CONST':([0,182,183,205,230,233,260,267,],[20,20,20,20,20,20,20,20,]),'IF':([0,182,183,205,230,233,260,267,],[21,21,21,21,21,21,21,21,]),'WHILE':([0,182,183,205,230,233,260,267,],[22,22,22,22,22,22,22,22,]),'$end':([1,2,4,5,6,7,8,11,14,15,16,17,23,30,38,39,40,63,64,65,67,73,74,75,76,77,78,79,80,81,82,83,89,90,91,92,107,108,109,121,123,124,125,126,127,128,129,130,131,132,133,162,163,164,166,167,168,170,171,172,174,175,176,178,179,180,204,220,221,222,223,224,225,226,227,228,231,232,246,258,259,261,268,273,],[0,-1,-3,-4,-5,-6,-7,-45,-11,-12,-13,-15,-2,-44,-52,-53,-54,-133,-46,-47,-34,-133,-103,-133,-118,-105,-107,-110,-113,-128,-129,-131,-48,-49,-50,-51,-10,-130,-33,-101,-130,-102,-130,-133,-133,-133,-133,-106,-109,-112,-115,-132,-118,-104,-117,-121,-108,-120,-124,-111,-123,-127,-114,-126,-134,-84,-85,-86,-117,-116,-120,-119,-123,-122,-126,-125,-28,-31,-87,-88,-27,-32,-30,-29,]),'RBLOCK':([2,4,5,6,7,8,11,14,15,16,17,23,30,38,39,40,63,64,65,67,73,74,75,76,77,78,79,80,81,82,83,89,90,91,92,107,108,109,121,123,124,125,126,127,128,129,130,131,132,133,162,163,164,166,167,168,170,171,172,174,175,176,178,179,180,204,207,208,220,221,222,223,224,225,226,227,228,229,231,232,246,247,248,250,258,259,261,265,268,270,273,],[-1,-3,-4,-5,-6,-7,-45,-11,-12,-13,-15,-2,-44,-52,-53,-54,-133,-46,-47,-34,-133,-103,-133,-118,-105,-107,-110,-113,-128,-129,-131,-48,-49,-50,-51,-10,-130,-33,-101,-130,-102,-130,-133,-133,-133,-133,-106,-109,-112,-115,-132,-118,-104,-117,-121,-108,-120,-124,-111,-123,-127,-114,-126,-134,-84,-85,231,232,-86,-117,-116,-120,-119,-123,-122,-126,-125,246,-28,-31,-87,258,259,261,-88,-27,-32,268,-30,273,-29,]),'RETURN':([2,4,5,6,7,8,11,14,15,16,17,23,30,38,39,40,63,64,65,67,73,74,75,76,77,78,79,80,81,82,83,89,90,91,92,107,108,109,121,123,124,125,126,127,128,129,130,131,132,133,162,163,164,166,167,168,170,171,172,174,175,176,178,179,180,204,220,221,222,223,224,225,226,227,228,229,231,232,246,258,259,261,268,273,],[-1,-3,-4,-5,-6,-7,-45,-11,-12,-13,-15,-2,-44,-52,-53,-54,-133,-46,-47,-34,-133,-103,-133,-118,-105,-107,-110,-113,-128,-129,-131,-48,-49,-50,-51,-10,-130,-33,-101,-130,-102,-130,-133,-133,-133,-133,-106,-109,-112,-115,-132,-118,-104,-117,-121,-108,-120,-124,-111,-123,-127,-114,-126,-134,-84,-85,-86,-117,-116,-120,-119,-123,-122,-126,-125,247,-28,-31,-87,-88,-27,-32,-30,-29,]),'COLON':([3,24,25,26,32,33,41,45,46,47,48,49,50,51,52,53,87,93,108,144,151,154,155,187,189,191,192,193,194,210,252,257,],[23,38,39,40,64,65,-38,-35,-36,-37,-39,-40,89,90,91,92,-89,-55,-36,-56,-63,-82,-83,-58,-65,-61,-62,-98,-99,-57,-64,-97,]),'LPAREN':([9,18,21,22,35,56,57,58,59,60,61,62,96,97,98,106,126,127,128,129,196,198,200,202,],[27,34,36,37,84,99,100,101,102,103,104,105,146,147,148,156,165,169,173,177,165,169,173,177,]),'EQUAL':([9,31,],[28,63,]),'PERIOD':([9,34,36,37,63,71,73,75,76,77,78,79,80,81,82,83,108,123,125,126,127,128,129,136,138,139,140,142,162,165,166,169,170,173,174,177,178,179,222,224,226,228,],[29,-133,-133,-133,-133,-130,-133,-133,-118,-133,-133,-133,-133,134,-129,-131,-130,-130,-130,-133,-133,-133,-133,-133,-24,-25,-26,-133,-132,-133,-117,-133,-120,-133,-123,-133,-126,-134,-116,-119,-122,-125,]),'STRING':([27,28,34,36,37,48,49,54,63,84,88,99,100,102,103,110,111,112,113,114,115,116,117,118,120,136,138,139,140,142,145,146,156,212,251,271,],[45,45,72,72,72,-39,-40,45,45,45,45,45,45,45,45,158,-16,-17,-18,-19,-20,-21,-22,-23,161,72,-24,-25,-26,72,45,45,45,45,45,45,]),'NUM':([27,28,34,36,37,48,49,54,63,71,73,75,76,77,78,79,80,81,82,83,84,88,99,100,102,103,108,110,111,112,113,114,115,116,117,118,119,122,123,125,126,127,128,129,134,136,138,139,140,142,145,146,156,162,165,166,169,170,173,174,177,178,179,196,198,200,202,212,222,224,226,228,251,271,],[46,46,71,71,71,-39,-40,46,108,-130,123,125,-118,123,123,123,123,-128,-129,-131,46,46,46,46,46,46,-130,159,-16,-17,-18,-19,-20,-21,-22,-23,160,162,-130,-130,166,170,174,178,179,71,-24,-25,-26,71,46,46,46,-132,123,-117,123,-120,123,-123,123,-126,-134,221,223,225,227,46,-116,-119,-122,-125,46,46,]),'TRUE':([27,28,54,63,70,71,72,84,88,99,100,102,103,145,146,156,212,251,271,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'FALSE':([27,28,54,63,70,71,72,84,88,99,100,102,103,145,146,156,212,251,271,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'LBRACKET':([28,63,147,148,188,190,212,243,251,269,271,],[54,54,188,190,212,212,212,54,212,271,212,]),'NEW':([28,63,188,190,212,243,244,251,271,],[55,55,211,211,241,254,256,241,241,]),'PUSH':([29,],[56,]),'UNSHIFT':([29,],[57,]),'POP':([29,],[58,]),'ADD':([29,],[59,]),'DELETE':([29,],[60,]),'CLEAR':([29,],[61,]),'LENGTH':([29,],[62,]),'RPAREN':([34,36,37,41,42,43,44,45,46,47,48,49,66,68,69,71,73,74,75,76,77,78,79,80,81,82,83,85,86,95,101,104,105,121,123,124,125,126,127,128,129,130,131,132,133,135,136,138,139,140,142,143,146,147,149,150,152,153,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,181,184,185,186,195,197,199,201,203,221,222,223,224,225,226,227,228,242,245,],[67,-133,-133,-38,87,-90,-91,-35,-36,-37,-39,-40,109,-8,-9,-130,-133,-103,-133,-118,-105,-107,-110,-113,-128,-129,-131,137,141,-59,151,154,155,-101,-130,-102,-130,-133,-133,-133,-133,-106,-109,-112,-115,180,-133,-24,-25,-26,-133,-92,187,189,191,192,193,194,-135,-138,-139,-136,-137,-132,-118,-104,-133,-117,-121,-108,-133,-120,-124,-111,-133,-123,-127,-114,-133,-126,-134,206,209,-60,210,220,222,224,226,228,-117,-116,-120,-119,-123,-122,-126,-125,252,257,]),'PLUS':([34,36,37,63,71,73,75,76,77,78,79,80,81,82,83,108,123,125,126,136,138,139,140,142,162,163,166,170,174,178,179,222,224,226,228,],[73,73,73,73,-130,-133,-133,126,-133,-133,-133,-133,-128,-129,-131,-130,-130,-130,-133,73,-24,-25,-26,73,-132,196,-117,-120,-123,-126,-134,-116,-119,-122,-125,]),'MINUS':([34,36,37,63,71,73,75,76,77,78,79,80,81,82,83,108,123,125,126,127,128,129,136,138,139,140,142,162,165,166,167,169,170,173,174,177,178,179,222,224,226,228,],[75,75,75,75,-130,122,122,127,122,122,122,122,-128,-129,-131,-130,-130,-130,122,122,122,122,75,-24,-25,-26,75,-132,122,-117,198,122,-120,122,-123,122,-126,-134,-116,-119,-122,-125,]),'TIMES':([34,36,37,63,71,73,75,76,77,78,79,80,81,82,83,108,123,125,128,136,138,139,140,142,162,166,170,171,174,178,179,222,224,226,228,],[-133,-133,-133,-133,-130,-133,-133,128,-133,-133,-133,-133,-128,-129,-131,-130,-130,-130,-133,-133,-24,-25,-26,-133,-132,-117,-120,200,-123,-126,-134,-116,-119,-122,-125,]),'DIVIDE':([34,36,37,63,71,73,75,76,77,78,79,80,81,82,83,108,123,125,129,136,138,139,140,142,162,166,170,174,175,178,179,222,224,226,228,],[-133,-133,-133,-133,-130,-133,-133,129,-133,-133,-133,-133,-128,-129,-131,-130,-130,-130,-133,-133,-24,-25,-26,-133,-132,-117,-120,-123,202,-126,-134,-116,-119,-122,-125,]),'AND':([36,37,68,69,71,73,74,75,76,77,78,79,80,81,82,83,85,86,121,123,124,125,126,127,128,129,130,131,132,133,157,158,159,160,161,162,163,164,166,167,168,170,171,172,174,175,176,178,179,221,222,223,224,225,226,227,228,],[-133,-133,-8,-9,-130,-133,-103,-133,-118,-105,-107,-110,-113,-128,-129,-131,138,138,-101,-130,-102,-130,-133,-133,-133,-133,-106,-109,-112,-115,-135,-138,-139,-136,-137,-132,-118,-104,-117,-121,-108,-120,-124,-111,-123,-127,-114,-126,-134,-117,-116,-120,-119,-123,-122,-126,-125,]),'OR':([36,37,68,69,71,73,74,75,76,77,78,79,80,81,82,83,85,86,121,123,124,125,126,127,128,129,130,131,132,133,157,158,159,160,161,162,163,164,166,167,168,170,171,172,174,175,176,178,179,221,222,223,224,225,226,227,228,],[-133,-133,-8,-9,-130,-133,-103,-133,-118,-105,-107,-110,-113,-128,-129,-131,139,139,-101,-130,-102,-130,-133,-133,-133,-133,-106,-109,-112,-115,-135,-138,-139,-136,-137,-132,-118,-104,-117,-121,-108,-120,-124,-111,-123,-127,-114,-126,-134,-117,-116,-120,-119,-123,-122,-126,-125,]),'NOT':([36,37,68,69,71,73,74,75,76,77,78,79,80,81,82,83,85,86,121,123,124,125,126,127,128,129,130,131,132,133,157,158,159,160,161,162,163,164,166,167,168,170,171,172,174,175,176,178,179,221,222,223,224,225,226,227,228,],[-133,-133,-8,-9,-130,-133,-103,-133,-118,-105,-107,-110,-113,-128,-129,-131,140,140,-101,-130,-102,-130,-133,-133,-133,-133,-106,-109,-112,-115,-135,-138,-139,-136,-137,-132,-118,-104,-117,-121,-108,-120,-124,-111,-123,-127,-114,-126,-134,-117,-116,-120,-119,-123,-122,-126,-125,]),'COMMA':([41,44,45,46,47,48,49,93,95,144,187,189,210,212,217,218,234,235,236,237,238,239,240,252,253,255,257,263,266,271,272,],[-38,88,-35,-36,-37,-39,-40,-55,145,-56,-58,-65,-57,-81,243,244,251,-72,145,-73,-74,-75,243,-64,-78,-80,-97,-71,269,-81,-67,]),'RBRACKET':([41,45,46,47,48,49,54,93,94,95,144,185,187,188,189,190,210,212,213,214,215,216,217,218,219,235,236,237,238,239,240,251,252,253,255,257,262,263,266,272,],[-38,-35,-36,-37,-39,-40,93,-55,144,-59,-56,-60,-58,-81,-65,-81,-57,93,242,-68,-69,-70,-77,-79,245,-72,-59,-73,-74,-75,-76,-81,-64,-78,-80,-97,266,-71,-66,-67,]),'ARRAY':([55,211,241,254,],[96,96,96,96,]),'MAP':([55,241,],[97,97,]),'SET':([55,211,241,256,],[98,98,98,98,]),'ISEQUAL':([70,71,72,],[111,111,111,]),'IS_NOT_IDENTICAL':([70,71,72,],[112,112,112,]),'IS_IDENTICAL':([70,71,72,],[113,113,113,]),'GREATER':([70,71,72,],[114,114,114,]),'GREATEREQUAL':([70,71,72,],[115,115,115,]),'LESS':([70,71,72,],[116,116,116,]),'LESSEQUAL':([70,71,72,],[117,117,117,]),'LBLOCK':([137,141,180,206,209,249,264,],[182,183,205,230,233,260,267,]),'ELSE':([231,259,],[249,264,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'sentencia':([0,182,183,205,230,233,260,267,],[1,207,208,229,248,250,265,270,]),'callMethods':([0,182,183,205,230,233,260,267,],[2,2,2,2,2,2,2,2,]),'callFunction':([0,182,183,205,230,233,260,267,],[3,3,3,3,3,3,3,3,]),'varDeclaration':([0,182,183,205,230,233,260,267,],[4,4,4,4,4,4,4,4,]),'controlExpression':([0,182,183,205,230,233,260,267,],[5,5,5,5,5,5,5,5,]),'impresion':([0,182,183,205,230,233,260,267,],[6,6,6,6,6,6,6,6,]),'declareteFunction':([0,182,183,205,230,233,260,267,],[7,7,7,7,7,7,7,7,]),'assingOperadores':([0,182,183,205,230,233,260,267,],[8,8,8,8,8,8,8,8,]),'varType':([0,182,183,205,230,233,260,267,],[10,10,10,10,10,10,10,10,]),'assign':([0,10,182,183,205,230,233,260,267,],[11,30,11,11,11,11,11,11,11,]),'sentencias_if':([0,182,183,205,230,233,260,267,],[14,14,14,14,14,14,14,14,]),'sentencias_if_else':([0,182,183,205,230,233,260,267,],[15,15,15,15,15,15,15,15,]),'sentencias_while':([0,182,183,205,230,233,260,267,],[16,16,16,16,16,16,16,16,]),'impresion_vacio':([0,182,183,205,230,233,260,267,],[17,17,17,17,17,17,17,17,]),'methodArray':([9,],[24,]),'methodSet':([9,],[25,]),'methodMap':([9,],[26,]),'params':([27,84,156,],[42,135,195,]),'paramList':([27,84,88,156,],[43,43,143,43,]),'javaScript_param':([27,28,54,63,84,88,99,100,102,103,145,146,156,212,251,271,],[44,53,95,53,44,44,149,150,152,153,95,95,44,236,263,263,]),'boolean':([27,28,54,63,70,71,72,84,88,99,100,102,103,145,146,156,212,251,271,],[47,47,47,47,118,118,118,47,47,47,47,47,47,47,47,47,47,47,47,]),'arrayDeclare':([28,63,188,190,212,243,251,271,],[50,50,217,217,240,253,240,240,]),'declareMap':([28,63,212,251,271,],[51,51,239,239,239,]),'declararSet':([28,63,188,190,212,244,251,271,],[52,52,218,218,218,255,218,218,]),'expression':([34,36,37,136,142,],[66,85,86,181,184,]),'conditionalEspecifico':([34,36,37,136,142,],[68,68,68,68,68,]),'inicializarOp':([34,36,37,63,136,142,],[69,69,69,107,69,69,]),'operacionesMath':([34,36,37,63,73,75,77,78,79,80,136,142,],[74,74,74,74,121,124,130,131,132,133,74,74,]),'numOperadores':([34,36,37,63,73,75,77,78,79,80,126,127,128,129,136,142,165,169,173,177,],[76,76,76,76,76,76,76,76,76,76,163,167,171,175,76,76,197,199,201,203,]),'suma':([34,36,37,63,73,75,77,78,79,80,126,136,142,],[77,77,77,77,77,77,77,77,77,77,164,77,77,]),'restas':([34,36,37,63,73,75,77,78,79,80,127,136,142,],[78,78,78,78,78,78,78,78,78,78,168,78,78,]),'multiplicacion':([34,36,37,63,73,75,77,78,79,80,128,136,142,],[79,79,79,79,79,79,79,79,79,79,172,79,79,]),'divicion':([34,36,37,63,73,75,77,78,79,80,129,136,142,],[80,80,80,80,80,80,80,80,80,80,176,80,80,]),'enteros':([34,36,37,63,73,75,77,78,79,80,126,127,128,129,136,142,165,169,173,177,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'decimales':([34,36,37,63,73,75,77,78,79,80,126,127,128,129,136,142,165,169,173,177,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'numNegative':([34,36,37,63,73,75,77,78,79,80,126,127,128,129,136,142,165,169,173,177,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'arrayValues':([54,145,146,212,],[94,185,186,94,]),'opConditional':([70,71,72,],[110,119,120,]),'operadorLogical':([85,86,],[136,142,]),'dataCondi':([110,],[157,]),'sentencesCmpt':([180,],[204,]),'iterable':([188,190,],[213,219,]),'iterableMap':([188,190,212,251,269,271,],[214,214,235,235,272,235,]),'iterableArray':([188,190,212,251,271,],[215,215,237,237,237,]),'iterableSet':([188,190,212,251,271,],[216,216,238,238,238,]),'keyValue':([212,251,271,],[234,262,234,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> sentencia","S'",1,None,None,None),
  ('sentencia -> callMethods','sentencia',1,'p_sentencia','analisisSintactico.py',7),
  ('sentencia -> callFunction COLON','sentencia',2,'p_sentencia','analisisSintactico.py',8),
  ('sentencia -> varDeclaration','sentencia',1,'p_sentencia','analisisSintactico.py',9),
  ('sentencia -> controlExpression','sentencia',1,'p_sentencia','analisisSintactico.py',10),
  ('sentencia -> impresion','sentencia',1,'p_sentencia','analisisSintactico.py',11),
  ('sentencia -> declareteFunction','sentencia',1,'p_sentencia','analisisSintactico.py',12),
  ('sentencia -> assingOperadores','sentencia',1,'p_sentencia','analisisSintactico.py',13),
  ('expression -> conditionalEspecifico','expression',1,'p_expression','analisisSintactico.py',18),
  ('expression -> inicializarOp','expression',1,'p_expression','analisisSintactico.py',19),
  ('assingOperadores -> varType ID EQUAL inicializarOp','assingOperadores',4,'p_assingOperadores','analisisSintactico.py',23),
  ('controlExpression -> sentencias_if','controlExpression',1,'p_controlExpression','analisisSintactico.py',26),
  ('controlExpression -> sentencias_if_else','controlExpression',1,'p_controlExpression','analisisSintactico.py',27),
  ('controlExpression -> sentencias_while','controlExpression',1,'p_controlExpression','analisisSintactico.py',28),
  ('controlExpression -> impresion','controlExpression',1,'p_controlExpression','analisisSintactico.py',29),
  ('controlExpression -> impresion_vacio','controlExpression',1,'p_controlExpression','analisisSintactico.py',30),
  ('opConditional -> ISEQUAL','opConditional',1,'p_opConditional','analisisSintactico.py',35),
  ('opConditional -> IS_NOT_IDENTICAL','opConditional',1,'p_opConditional','analisisSintactico.py',36),
  ('opConditional -> IS_IDENTICAL','opConditional',1,'p_opConditional','analisisSintactico.py',37),
  ('opConditional -> GREATER','opConditional',1,'p_opConditional','analisisSintactico.py',38),
  ('opConditional -> GREATEREQUAL','opConditional',1,'p_opConditional','analisisSintactico.py',39),
  ('opConditional -> LESS','opConditional',1,'p_opConditional','analisisSintactico.py',40),
  ('opConditional -> LESSEQUAL','opConditional',1,'p_opConditional','analisisSintactico.py',41),
  ('opConditional -> boolean','opConditional',1,'p_opConditional','analisisSintactico.py',42),
  ('operadorLogical -> AND','operadorLogical',1,'p_operadorLogical','analisisSintactico.py',45),
  ('operadorLogical -> OR','operadorLogical',1,'p_operadorLogical','analisisSintactico.py',46),
  ('operadorLogical -> NOT','operadorLogical',1,'p_operadorLogical','analisisSintactico.py',47),
  ('sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK','sentencias_if',9,'p_sentencias_if','analisisSintactico.py',51),
  ('sentencias_if -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK','sentencias_if',7,'p_sentencias_if','analisisSintactico.py',52),
  ('sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK','sentencias_if_else',13,'p_sentencias_if_else','analisisSintactico.py',55),
  ('sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK','sentencias_if_else',11,'p_sentencias_if_else','analisisSintactico.py',56),
  ('sentencias_while -> WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK','sentencias_while',7,'p_sentencias_while','analisisSintactico.py',59),
  ('sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK','sentencias_while',9,'p_sentencias_while','analisisSintactico.py',60),
  ('impresion -> ALERT LPAREN expression RPAREN','impresion',4,'p_impresion','analisisSintactico.py',63),
  ('impresion_vacio -> ALERT LPAREN RPAREN','impresion_vacio',3,'p_impresion_vacio','analisisSintactico.py',65),
  ('javaScript_param -> STRING','javaScript_param',1,'p_javaScript_param','analisisSintactico.py',82),
  ('javaScript_param -> NUM','javaScript_param',1,'p_javaScript_param','analisisSintactico.py',83),
  ('javaScript_param -> boolean','javaScript_param',1,'p_javaScript_param','analisisSintactico.py',84),
  ('javaScript_param -> ID','javaScript_param',1,'p_javaScript_param','analisisSintactico.py',85),
  ('boolean -> TRUE','boolean',1,'p_boolean','analisisSintactico.py',97),
  ('boolean -> FALSE','boolean',1,'p_boolean','analisisSintactico.py',98),
  ('varType -> LET','varType',1,'p_varType','analisisSintactico.py',103),
  ('varType -> CONST','varType',1,'p_varType','analisisSintactico.py',104),
  ('varType -> VAR','varType',1,'p_varType','analisisSintactico.py',105),
  ('varDeclaration -> varType assign','varDeclaration',2,'p_varDeclaration','analisisSintactico.py',111),
  ('varDeclaration -> assign','varDeclaration',1,'p_varDeclaration','analisisSintactico.py',112),
  ('varDeclaration -> LET ID COLON','varDeclaration',3,'p_varDeclaration','analisisSintactico.py',113),
  ('varDeclaration -> VAR ID COLON','varDeclaration',3,'p_varDeclaration','analisisSintactico.py',114),
  ('assign -> ID EQUAL arrayDeclare COLON','assign',4,'p_assign','analisisSintactico.py',118),
  ('assign -> ID EQUAL declareMap COLON','assign',4,'p_assign','analisisSintactico.py',119),
  ('assign -> ID EQUAL declararSet COLON','assign',4,'p_assign','analisisSintactico.py',120),
  ('assign -> ID EQUAL javaScript_param COLON','assign',4,'p_assign','analisisSintactico.py',121),
  ('callMethods -> ID methodArray COLON','callMethods',3,'p_callMethods','analisisSintactico.py',127),
  ('callMethods -> ID methodSet COLON','callMethods',3,'p_callMethods','analisisSintactico.py',128),
  ('callMethods -> ID methodMap COLON','callMethods',3,'p_callMethods','analisisSintactico.py',129),
  ('arrayDeclare -> LBRACKET RBRACKET','arrayDeclare',2,'p_arrayDeclare','analisisSintactico.py',134),
  ('arrayDeclare -> LBRACKET arrayValues RBRACKET','arrayDeclare',3,'p_arrayDeclare','analisisSintactico.py',135),
  ('arrayDeclare -> NEW ARRAY LPAREN arrayValues RPAREN','arrayDeclare',5,'p_arrayDeclare','analisisSintactico.py',136),
  ('arrayDeclare -> NEW ARRAY LPAREN RPAREN','arrayDeclare',4,'p_arrayDeclare','analisisSintactico.py',137),
  ('arrayValues -> javaScript_param','arrayValues',1,'p_arrayValues','analisisSintactico.py',142),
  ('arrayValues -> javaScript_param COMMA arrayValues','arrayValues',3,'p_arrayValues','analisisSintactico.py',143),
  ('methodArray -> PERIOD PUSH LPAREN javaScript_param RPAREN','methodArray',5,'p_methodArray','analisisSintactico.py',149),
  ('methodArray -> PERIOD UNSHIFT LPAREN javaScript_param RPAREN','methodArray',5,'p_methodArray','analisisSintactico.py',150),
  ('methodArray -> PERIOD POP LPAREN RPAREN','methodArray',4,'p_methodArray','analisisSintactico.py',151),
  ('declareMap -> NEW MAP LPAREN LBRACKET iterable RBRACKET RPAREN','declareMap',7,'p_declareMap','analisisSintactico.py',155),
  ('declareMap -> NEW MAP LPAREN RPAREN','declareMap',4,'p_declareMap','analisisSintactico.py',156),
  ('iterableMap -> LBRACKET keyValue COMMA keyValue RBRACKET','iterableMap',5,'p_iterableMap','analisisSintactico.py',160),
  ('iterableMap -> LBRACKET keyValue COMMA keyValue RBRACKET COMMA iterableMap','iterableMap',7,'p_iterableMap','analisisSintactico.py',161),
  ('iterable -> iterableMap','iterable',1,'p_iterable','analisisSintactico.py',164),
  ('iterable -> iterableArray','iterable',1,'p_iterable','analisisSintactico.py',165),
  ('iterable -> iterableSet','iterable',1,'p_iterable','analisisSintactico.py',166),
  ('keyValue -> javaScript_param','keyValue',1,'p_keyValue','analisisSintactico.py',168),
  ('keyValue -> iterableMap','keyValue',1,'p_keyValue','analisisSintactico.py',169),
  ('keyValue -> iterableArray','keyValue',1,'p_keyValue','analisisSintactico.py',170),
  ('keyValue -> iterableSet','keyValue',1,'p_keyValue','analisisSintactico.py',171),
  ('keyValue -> declareMap','keyValue',1,'p_keyValue','analisisSintactico.py',172),
  ('keyValue -> arrayDeclare','keyValue',1,'p_keyValue','analisisSintactico.py',173),
  ('iterableArray -> arrayDeclare','iterableArray',1,'p_iterableArray','analisisSintactico.py',176),
  ('iterableArray -> arrayDeclare COMMA arrayDeclare','iterableArray',3,'p_iterableArray','analisisSintactico.py',177),
  ('iterableSet -> declararSet','iterableSet',1,'p_iterableSet','analisisSintactico.py',180),
  ('iterableSet -> declararSet COMMA declararSet','iterableSet',3,'p_iterableSet','analisisSintactico.py',181),
  ('iterableSet -> <empty>','iterableSet',0,'p_iterableSet','analisisSintactico.py',182),
  ('methodMap -> PERIOD CLEAR LPAREN RPAREN','methodMap',4,'p_methodMap','analisisSintactico.py',185),
  ('methodMap -> PERIOD LENGTH LPAREN RPAREN','methodMap',4,'p_methodMap','analisisSintactico.py',186),
  ('declareteFunction -> FUNCTION ID LPAREN params RPAREN','declareteFunction',5,'p_declareteFunction','analisisSintactico.py',191),
  ('declareteFunction -> FUNCTION ID LPAREN params RPAREN sentencesCmpt','declareteFunction',6,'p_declareteFunction','analisisSintactico.py',192),
  ('declareteFunction -> varType ID EQUAL FUNCTION LPAREN params RPAREN','declareteFunction',7,'p_declareteFunction','analisisSintactico.py',193),
  ('sentencesCmpt -> LBLOCK sentencia RBLOCK','sentencesCmpt',3,'p_sentencesCmpt','analisisSintactico.py',198),
  ('sentencesCmpt -> LBLOCK sentencia RETURN RBLOCK','sentencesCmpt',4,'p_sentencesCmpt','analisisSintactico.py',199),
  ('callFunction -> ID LPAREN params RPAREN','callFunction',4,'p_callFunction','analisisSintactico.py',204),
  ('params -> paramList','params',1,'p_params','analisisSintactico.py',210),
  ('paramList -> javaScript_param','paramList',1,'p_paramList','analisisSintactico.py',222),
  ('paramList -> javaScript_param COMMA paramList','paramList',3,'p_paramList','analisisSintactico.py',223),
  ('args -> argslist','args',1,'p_args','analisisSintactico.py',229),
  ('args -> javaScript_param','args',1,'p_args','analisisSintactico.py',230),
  ('argslist -> args','argslist',1,'p_argslist','analisisSintactico.py',234),
  ('argslist -> args COMMA argslist','argslist',3,'p_argslist','analisisSintactico.py',235),
  ('declararSet -> NEW SET LPAREN LBRACKET iterable RBRACKET RPAREN','declararSet',7,'p_declararSet','analisisSintactico.py',244),
  ('methodSet -> PERIOD ADD LPAREN javaScript_param RPAREN','methodSet',5,'p_methodSet','analisisSintactico.py',266),
  ('methodSet -> PERIOD DELETE LPAREN javaScript_param RPAREN','methodSet',5,'p_methodSet','analisisSintactico.py',267),
  ('methodSet -> PERIOD CLEAR LPAREN RPAREN','methodSet',4,'p_methodSet','analisisSintactico.py',268),
  ('inicializarOp -> PLUS operacionesMath','inicializarOp',2,'p_inicializarOp','analisisSintactico.py',276),
  ('inicializarOp -> MINUS operacionesMath','inicializarOp',2,'p_inicializarOp','analisisSintactico.py',277),
  ('inicializarOp -> operacionesMath','inicializarOp',1,'p_inicializarOp','analisisSintactico.py',278),
  ('operacionesMath -> numOperadores PLUS suma','operacionesMath',3,'p_operacionesMath','analisisSintactico.py',281),
  ('operacionesMath -> suma','operacionesMath',1,'p_operacionesMath','analisisSintactico.py',282),
  ('operacionesMath -> suma operacionesMath','operacionesMath',2,'p_operacionesMath','analisisSintactico.py',283),
  ('operacionesMath -> restas','operacionesMath',1,'p_operacionesMath','analisisSintactico.py',284),
  ('operacionesMath -> numOperadores MINUS restas','operacionesMath',3,'p_operacionesMath','analisisSintactico.py',285),
  ('operacionesMath -> restas operacionesMath','operacionesMath',2,'p_operacionesMath','analisisSintactico.py',286),
  ('operacionesMath -> multiplicacion','operacionesMath',1,'p_operacionesMath','analisisSintactico.py',287),
  ('operacionesMath -> numOperadores TIMES multiplicacion','operacionesMath',3,'p_operacionesMath','analisisSintactico.py',288),
  ('operacionesMath -> multiplicacion operacionesMath','operacionesMath',2,'p_operacionesMath','analisisSintactico.py',289),
  ('operacionesMath -> divicion','operacionesMath',1,'p_operacionesMath','analisisSintactico.py',290),
  ('operacionesMath -> numOperadores DIVIDE divicion','operacionesMath',3,'p_operacionesMath','analisisSintactico.py',291),
  ('operacionesMath -> divicion operacionesMath','operacionesMath',2,'p_operacionesMath','analisisSintactico.py',292),
  ('suma -> numOperadores PLUS LPAREN numOperadores RPAREN','suma',5,'p_suma','analisisSintactico.py',295),
  ('suma -> numOperadores PLUS NUM','suma',3,'p_suma','analisisSintactico.py',296),
  ('suma -> numOperadores','suma',1,'p_suma','analisisSintactico.py',297),
  ('restas -> numOperadores MINUS LPAREN numOperadores RPAREN','restas',5,'p_restas','analisisSintactico.py',301),
  ('restas -> numOperadores MINUS NUM','restas',3,'p_restas','analisisSintactico.py',302),
  ('restas -> numOperadores','restas',1,'p_restas','analisisSintactico.py',303),
  ('multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN','multiplicacion',5,'p_multiplicacion','analisisSintactico.py',306),
  ('multiplicacion -> numOperadores TIMES NUM','multiplicacion',3,'p_multiplicacion','analisisSintactico.py',307),
  ('multiplicacion -> numOperadores','multiplicacion',1,'p_multiplicacion','analisisSintactico.py',308),
  ('divicion -> numOperadores DIVIDE LPAREN numOperadores RPAREN','divicion',5,'p_divicion','analisisSintactico.py',311),
  ('divicion -> numOperadores DIVIDE NUM','divicion',3,'p_divicion','analisisSintactico.py',312),
  ('divicion -> numOperadores','divicion',1,'p_divicion','analisisSintactico.py',313),
  ('numOperadores -> enteros','numOperadores',1,'p_numOperadores','analisisSintactico.py',316),
  ('numOperadores -> decimales','numOperadores',1,'p_numOperadores','analisisSintactico.py',317),
  ('enteros -> NUM','enteros',1,'p_enteros','analisisSintactico.py',320),
  ('enteros -> numNegative','enteros',1,'p_enteros','analisisSintactico.py',321),
  ('numNegative -> MINUS NUM','numNegative',2,'p_numNegative','analisisSintactico.py',324),
  ('numNegative -> <empty>','numNegative',0,'p_numNegative','analisisSintactico.py',325),
  ('decimales -> enteros PERIOD NUM','decimales',3,'p_decimales','analisisSintactico.py',328),
  ('conditionalEspecifico -> ID opConditional dataCondi','conditionalEspecifico',3,'p_coditionalEspecifico','analisisSintactico.py',334),
  ('conditionalEspecifico -> NUM opConditional NUM','conditionalEspecifico',3,'p_coditionalEspecifico','analisisSintactico.py',335),
  ('conditionalEspecifico -> STRING opConditional STRING','conditionalEspecifico',3,'p_coditionalEspecifico','analisisSintactico.py',336),
  ('dataCondi -> STRING','dataCondi',1,'p_dataCondi','analisisSintactico.py',341),
  ('dataCondi -> NUM','dataCondi',1,'p_dataCondi','analisisSintactico.py',342),
]
