
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALERT AND AWAIT BREAK CASE CATCH CLASS COLON COMMA CONST CONTINUE DEBUGGER DEFAULT DELETE DIVIDE DIV_EQUAL DO ELSE EQUAL EXPORT EXTENDS FINALLY FOR FUNCTION GREATER GREATEREQUAL ID IF IMPORT IN INSTANCEOF ISEQUAL IS_IDENTICAL IS_NOT_IDENTICAL LBLOCK LBRACKET LESS LESSEQUAL LPAREN MINUS MINUS_EQUAL MOD MOD_EQUAL MUL_EQUAL NEW NOT NUMBER OR PERIOD PLUS PLUS_EQUAL RBLOCK RBRACKET RETURN RPAREN SUPER SWITCH THIS THROW TIMES TRY TWOPOINTS TYPEOF VAR VOID WHILE WITH YIELDsentencias : impresion\n                    | expressionsentencias : IF LPAREN logical_expresion RPARENsentencias : IF LPAREN logical_expresion RPAREN sentencias ELSE sentenciassentencias : WHILE LPAREN logical_expresion RPAREN blockimpresion : ALERT LPAREN expression RPARENimpresion : ALERT LPAREN RPARENexpression : expression PLUS termexpression : expression TIMES termexpression : expression DIVIDE termexpression : expression MOD termexpression : logical_expresionlogical_expresion : expression GREATER termlogical_expresion : expression LESS termlogical_expresion : expression ISEQUAL termlogical_expresion : expression IS_NOT_IDENTICAL termlogical_expresion : expression IS_IDENTICAL termexpression : blockblock : LBLOCK sentencias RBLOCKexpression : termterm : term TIMES factorterm : term DIVIDE factorterm : factorfactor : NUMBERfactor : IDfactor : LPAREN expression RPAREN'
    
_lr_action_items = {'IF':([0,11,49,54,],[4,4,4,4,]),'WHILE':([0,11,49,54,],[7,7,7,7,]),'ALERT':([0,11,49,54,],[9,9,9,9,]),'LBLOCK':([0,5,11,24,26,27,49,50,54,],[11,11,11,11,11,11,11,11,11,]),'NUMBER':([0,5,11,15,16,17,18,19,20,21,22,23,24,26,27,28,29,49,54,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'ID':([0,5,11,15,16,17,18,19,20,21,22,23,24,26,27,28,29,49,54,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'LPAREN':([0,4,5,7,9,11,15,16,17,18,19,20,21,22,23,24,26,27,28,29,49,54,],[5,24,5,26,27,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'$end':([1,2,3,6,8,10,12,13,14,31,32,33,34,35,36,37,38,39,42,45,46,47,48,49,51,53,55,],[0,-1,-2,-12,-18,-20,-23,-24,-25,-8,-9,-10,-11,-13,-14,-15,-16,-17,-26,-7,-21,-22,-19,-3,-6,-5,-4,]),'RBLOCK':([2,3,6,8,10,12,13,14,30,31,32,33,34,35,36,37,38,39,42,45,46,47,48,49,51,53,55,],[-1,-2,-12,-18,-20,-23,-24,-25,48,-8,-9,-10,-11,-13,-14,-15,-16,-17,-26,-7,-21,-22,-19,-3,-6,-5,-4,]),'ELSE':([2,3,6,8,10,12,13,14,31,32,33,34,35,36,37,38,39,42,45,46,47,48,49,51,52,53,55,],[-1,-2,-12,-18,-20,-23,-24,-25,-8,-9,-10,-11,-13,-14,-15,-16,-17,-26,-7,-21,-22,-19,-3,-6,54,-5,-4,]),'PLUS':([3,6,8,10,12,13,14,25,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,],[15,-12,-18,-20,-23,-24,-25,15,-8,-9,-10,-11,-13,-14,-15,-16,-17,-12,15,-26,-12,15,-21,-22,-19,]),'TIMES':([3,6,8,10,12,13,14,25,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,],[16,-12,-18,28,-23,-24,-25,16,28,28,28,28,28,28,28,28,28,-12,16,-26,-12,16,-21,-22,-19,]),'DIVIDE':([3,6,8,10,12,13,14,25,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,],[17,-12,-18,29,-23,-24,-25,17,29,29,29,29,29,29,29,29,29,-12,17,-26,-12,17,-21,-22,-19,]),'MOD':([3,6,8,10,12,13,14,25,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,],[18,-12,-18,-20,-23,-24,-25,18,-8,-9,-10,-11,-13,-14,-15,-16,-17,-12,18,-26,-12,18,-21,-22,-19,]),'GREATER':([3,6,8,10,12,13,14,25,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,],[19,-12,-18,-20,-23,-24,-25,19,-8,-9,-10,-11,-13,-14,-15,-16,-17,-12,19,-26,-12,19,-21,-22,-19,]),'LESS':([3,6,8,10,12,13,14,25,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,],[20,-12,-18,-20,-23,-24,-25,20,-8,-9,-10,-11,-13,-14,-15,-16,-17,-12,20,-26,-12,20,-21,-22,-19,]),'ISEQUAL':([3,6,8,10,12,13,14,25,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,],[21,-12,-18,-20,-23,-24,-25,21,-8,-9,-10,-11,-13,-14,-15,-16,-17,-12,21,-26,-12,21,-21,-22,-19,]),'IS_NOT_IDENTICAL':([3,6,8,10,12,13,14,25,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,],[22,-12,-18,-20,-23,-24,-25,22,-8,-9,-10,-11,-13,-14,-15,-16,-17,-12,22,-26,-12,22,-21,-22,-19,]),'IS_IDENTICAL':([3,6,8,10,12,13,14,25,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,],[23,-12,-18,-20,-23,-24,-25,23,-8,-9,-10,-11,-13,-14,-15,-16,-17,-12,23,-26,-12,23,-21,-22,-19,]),'RPAREN':([6,8,10,12,13,14,25,27,31,32,33,34,35,36,37,38,39,40,42,43,44,46,47,48,],[-12,-18,-20,-23,-24,-25,42,45,-8,-9,-10,-11,-13,-14,-15,-16,-17,49,-26,50,51,-21,-22,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'sentencias':([0,11,49,54,],[1,30,52,55,]),'impresion':([0,11,49,54,],[2,2,2,2,]),'expression':([0,5,11,24,26,27,49,54,],[3,25,3,41,41,44,3,3,]),'logical_expresion':([0,5,11,24,26,27,49,54,],[6,6,6,40,43,6,6,6,]),'block':([0,5,11,24,26,27,49,50,54,],[8,8,8,8,8,8,8,53,8,]),'term':([0,5,11,15,16,17,18,19,20,21,22,23,24,26,27,49,54,],[10,10,10,31,32,33,34,35,36,37,38,39,10,10,10,10,10,]),'factor':([0,5,11,15,16,17,18,19,20,21,22,23,24,26,27,28,29,49,54,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,46,47,12,12,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> sentencias","S'",1,None,None,None),
  ('sentencias -> impresion','sentencias',1,'p_sentencias','analisisSintactico.py',4),
  ('sentencias -> expression','sentencias',1,'p_sentencias','analisisSintactico.py',5),
  ('sentencias -> IF LPAREN logical_expresion RPAREN','sentencias',4,'p_sentencias_if','analisisSintactico.py',9),
  ('sentencias -> IF LPAREN logical_expresion RPAREN sentencias ELSE sentencias','sentencias',7,'p_sentencias_if_else','analisisSintactico.py',11),
  ('sentencias -> WHILE LPAREN logical_expresion RPAREN block','sentencias',5,'p_sentencias_while','analisisSintactico.py',13),
  ('impresion -> ALERT LPAREN expression RPAREN','impresion',4,'p_impresion','analisisSintactico.py',15),
  ('impresion -> ALERT LPAREN RPAREN','impresion',3,'p_impresion_vacio','analisisSintactico.py',17),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','analisisSintactico.py',20),
  ('expression -> expression TIMES term','expression',3,'p_expression_times','analisisSintactico.py',22),
  ('expression -> expression DIVIDE term','expression',3,'p_expression_divide','analisisSintactico.py',24),
  ('expression -> expression MOD term','expression',3,'p_expression_mod','analisisSintactico.py',26),
  ('expression -> logical_expresion','expression',1,'p_expression_logical','analisisSintactico.py',29),
  ('logical_expresion -> expression GREATER term','logical_expresion',3,'p_expression_greater','analisisSintactico.py',32),
  ('logical_expresion -> expression LESS term','logical_expresion',3,'p_expression_less','analisisSintactico.py',34),
  ('logical_expresion -> expression ISEQUAL term','logical_expresion',3,'p_expression_isequal','analisisSintactico.py',36),
  ('logical_expresion -> expression IS_NOT_IDENTICAL term','logical_expresion',3,'p_expression_is_not_identical','analisisSintactico.py',38),
  ('logical_expresion -> expression IS_IDENTICAL term','logical_expresion',3,'p_expression_is_identical','analisisSintactico.py',40),
  ('expression -> block','expression',1,'p_expression_block','analisisSintactico.py',42),
  ('block -> LBLOCK sentencias RBLOCK','block',3,'p_block','analisisSintactico.py',44),
  ('expression -> term','expression',1,'p_expression_term','analisisSintactico.py',46),
  ('term -> term TIMES factor','term',3,'p_term_times','analisisSintactico.py',50),
  ('term -> term DIVIDE factor','term',3,'p_term_div','analisisSintactico.py',54),
  ('term -> factor','term',1,'p_term_factor','analisisSintactico.py',58),
  ('factor -> NUMBER','factor',1,'p_factor_num','analisisSintactico.py',62),
  ('factor -> ID','factor',1,'p_factor_var','analisisSintactico.py',65),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','analisisSintactico.py',68),
]
