
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD ALERT AND ARRAY BREAK CASE CATCH CLASS CLEAR COLON COMMA CONST CONTINUE DEBUGGER DEFAULT DELETE DIVIDE DIV_EQUAL DO ELSE EQUAL EXPORT EXTENDS FALSE FINALLY FOR FUNCTION GREATER GREATEREQUAL HAS ID IF IMPORT IN INSTANCEOF ISEQUAL IS_IDENTICAL IS_NOT_IDENTICAL LBLOCK LBRACKET LENGTH LESS LESSEQUAL LET LPAREN MAP MINUS MINUS_EQUAL MOD MOD_EQUAL MUL_EQUAL NEW NOT NUM OR PERIOD PLUS PLUS_EQUAL POP PRINT PUSH RBLOCK RBRACKET RETURN RPAREN SET STRING SWITCH THIS THROW TIMES TRUE TRY TWOPOINTS TYPEOF UNSHIFT VAR WHILE WITH YIELD sentencia :  callMethods\n                    | varType ID EQUAL callMethods\n                    | callFunction\n                    | javaScript_param\n                    | varDeclaration\n                    | controlExpression\n                    | impresion\n                    | declareteFunction\n                    | assingOperadores\n\n                     expression :  conditionalEspecifico\n                     | inicializarOp\n     assingOperadores : varType ID EQUAL inicializarOp  controlExpression : sentencias_if\n                        | sentencias_if_else\n                        | sentencias_while\n                        | impresion\n                        | impresion_vacio\n             opConditional : ISEQUAL\n                      |  IS_NOT_IDENTICAL\n                      |  IS_IDENTICAL\n                      | GREATER\n                      | GREATEREQUAL\n                      | LESS\n                      | LESSEQUAL\n                      | boolean\n                      operadorLogical : AND\n                        | OR\n                        | NOT sentencias_if : IF LPAREN expression operadorLogical expression  RPAREN LBLOCK sentencia RBLOCK\n                    | IF LPAREN expression RPAREN LBLOCK sentencia RBLOCKsentencias_if_else : IF LPAREN expression operadorLogical expression  RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK\n                          | IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK sentencias_while : WHILE LPAREN  expression RPAREN LBLOCK sentencia RBLOCK\n                        | WHILE LPAREN  expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCKimpresion : ALERT LPAREN expression  RPARENimpresion_vacio : ALERT LPAREN RPARENjavaScript_param : STRING\n                         | NUM\n                         | boolean\n                         | ID\n    empty : boolean : TRUE\n             | FALSE\n         varType : LET\n                | CONST\n                | VAR\n                 | empty  varDeclaration : varType ID  EQUAL  arrayDeclare COLON\n                    |  varType ID EQUAL declareMap COLON\n                    |  varType ID EQUAL declararSet COLON\n                    | varType ID COLON   callMethods : ID methodArray COLON\n                     | ID methodSet COLON\n                     | ID methodMap COLONarrayDeclare :  LBRACKET arrayValues RBRACKET\n                       | NEW ARRAY LPAREN arrayValues RPAREN\n                     arrayValues :  arrayValue\n                    | arrayValue COMMA arrayValue arrayValue :  LPAREN expression RPAREN\n                      | ID\n                      | NUM\n                      | STRING\n                      | boolean\n                      | empty  methodArray : PERIOD PUSH LPAREN arrayValue RPAREN\n                      | PERIOD UNSHIFT LPAREN arrayValue RPAREN\n                      | PERIOD POP LPAREN empty RPAREN declareMap :  NEW MAP LPAREN iterable RPAREN\n                    iterable  : arrayDeclare\n                   | declararSet\n                   | empty methodMap : PERIOD CLEAR LPAREN RPAREN\n                   | PERIOD LENGTH LPAREN RPAREN  declareteFunction : FUNCTION ID LPAREN params RPAREN\n                          | FUNCTION  ID LPAREN params RPAREN sentencesCmpt\n                          | varType ID EQUAL FUNCTION LPAREN params RPAREN\n                          sentencesCmpt : LBLOCK sentencia RBLOCK\n                     | LBLOCK sentencia RETURN RBLOCK  callFunction : ID LPAREN params RPAREN  \n                    \n                     params : paramList\n               | empty   param : ID\n              | ID LBRACKET RBRACKET\n               paramList : param\n                  | param COMMA paramList  args : argslist\n            | empty\n            | javaScript_param\n     argslist : args\n                   | args COMMA argslist\n    declararSet : NEW SET LPAREN setValues RPARENcontiene : ID PERIOD HAS LPAREN params RPARENsetValues :  setValue\n                    | setValue COMMA setValue setValue : ID\n                 | NUM\n                 | STRING\n                 | boolean\n                 | empty  methodSet : PERIOD ADD LPAREN setValue RPAREN\n                      | PERIOD DELETE LPAREN setValue RPAREN\n                      | PERIOD CLEAR LPAREN empty RPAREN  inicializarOp :  PLUS operacionesMath\n                        | MINUS operacionesMath\n                        | empty operacionesMath  operacionesMath :  numOperadores PLUS suma\n                         | suma\n                          | suma operacionesMath\n                         | restas\n                         | numOperadores MINUS restas\n                         | restas operacionesMath\n                         | multiplicacion\n                         | numOperadores TIMES multiplicacion\n                         | multiplicacion operacionesMathsuma : numOperadores PLUS LPAREN numOperadores RPAREN\n            | numOperadores PLUS NUM\n            | numOperadores\n\n             restas : numOperadores MINUS LPAREN numOperadores RPAREN\n               | numOperadores  MINUS NUM\n               | numOperadores  multiplicacion : numOperadores TIMES LPAREN numOperadores RPAREN\n               | numOperadores  TIMES NUM\n               | numOperadores  divicion : numOperadores DIVIDE LPAREN numOperadores RPAREN\n               | numOperadores  DIVIDE NUM\n               | numOperadores  numOperadores : enteros\n                     |  decimales   enteros : NUM\n                 | numNegative numNegative : MINUS NUM\n                 | decimales : enteros PERIOD NUM   conditionalEspecifico :  ID opConditional dataCondi\n                    |  NUM opConditional NUM\n                    | STRING opConditional STRING \n                    dataCondi : STRING\n                  | NUM '
    
_lr_action_items = {'ID':([0,3,12,13,14,15,24,33,35,37,38,39,66,76,80,81,82,84,85,113,115,116,117,119,123,126,165,166,170,172,174,195,218,221,225,240,244,],[4,29,-44,-45,-46,-47,36,44,60,60,60,69,44,127,44,127,127,141,141,60,-26,-27,-28,60,44,60,4,4,127,127,141,4,4,4,141,4,4,]),'LET':([0,165,166,195,218,221,240,244,],[12,12,12,12,12,12,12,12,]),'CONST':([0,165,166,195,218,221,240,244,],[13,13,13,13,13,13,13,13,]),'VAR':([0,165,166,195,218,221,240,244,],[14,14,14,14,14,14,14,14,]),'STRING':([0,25,26,35,37,38,76,81,82,84,85,89,90,91,92,93,94,95,96,97,99,113,115,116,117,119,126,165,166,170,172,174,195,218,221,225,240,244,],[16,-42,-43,62,62,62,129,129,129,143,143,151,-18,-19,-20,-21,-22,-23,-24,-25,154,62,-26,-27,-28,62,62,16,16,129,129,143,16,16,16,143,16,16,]),'NUM':([0,25,26,35,37,38,39,63,64,65,76,81,82,84,85,89,90,91,92,93,94,95,96,97,98,101,102,103,104,105,106,107,108,109,113,115,116,117,119,126,155,156,157,160,162,165,166,170,172,174,183,184,187,188,191,192,193,195,211,213,215,218,221,225,227,229,231,240,244,],[17,-42,-43,61,61,61,-41,108,108,108,128,128,128,142,142,152,-18,-19,-20,-21,-22,-23,-24,-25,153,-117,108,108,160,108,-127,-128,-129,-130,61,-26,-27,-28,61,61,184,188,192,-131,193,17,17,128,128,142,108,-116,108,-119,108,-122,-133,17,226,228,230,17,17,142,-115,-118,-121,17,17,]),'ALERT':([0,165,166,195,218,221,240,244,],[23,23,23,23,23,23,23,23,]),'FUNCTION':([0,39,165,166,195,218,221,240,244,],[24,74,24,24,24,24,24,24,24,]),'TRUE':([0,60,61,62,76,81,82,84,85,165,166,170,172,174,195,218,221,225,240,244,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'FALSE':([0,60,61,62,76,81,82,84,85,165,166,170,172,174,195,218,221,225,240,244,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'IF':([0,165,166,195,218,221,240,244,],[27,27,27,27,27,27,27,27,]),'WHILE':([0,165,166,195,218,221,240,244,],[28,28,28,28,28,28,28,28,]),'$end':([1,2,4,5,6,7,8,9,10,11,16,17,18,19,20,21,22,25,26,39,40,41,42,43,57,63,64,65,70,75,79,88,100,101,102,103,105,106,107,108,109,110,111,120,121,122,155,156,157,158,159,160,161,163,181,182,184,185,186,188,189,190,192,193,194,200,219,220,226,227,228,229,230,231,232,238,239,241,245,247,],[0,-1,-40,-3,-4,-5,-6,-7,-8,-9,-37,-38,-39,-13,-14,-15,-17,-42,-43,-41,-51,-52,-53,-54,-36,-132,-132,-132,-2,-12,-79,-35,-103,-117,-107,-109,-112,-127,-128,-129,-130,-104,-105,-48,-49,-50,-132,-132,-132,-108,-111,-131,-114,-74,-117,-106,-116,-120,-110,-119,-123,-113,-122,-133,-75,-76,-30,-33,-116,-115,-119,-118,-122,-121,-77,-78,-29,-34,-32,-31,]),'RBLOCK':([2,4,5,6,7,8,9,10,11,16,17,18,19,20,21,22,25,26,39,40,41,42,43,57,63,64,65,70,75,79,88,100,101,102,103,105,106,107,108,109,110,111,120,121,122,155,156,157,158,159,160,161,163,181,182,184,185,186,188,189,190,192,193,194,197,198,200,217,219,220,226,227,228,229,230,231,232,233,234,236,238,239,241,243,245,246,247,],[-1,-40,-3,-4,-5,-6,-7,-8,-9,-37,-38,-39,-13,-14,-15,-17,-42,-43,-41,-51,-52,-53,-54,-36,-132,-132,-132,-2,-12,-79,-35,-103,-117,-107,-109,-112,-127,-128,-129,-130,-104,-105,-48,-49,-50,-132,-132,-132,-108,-111,-131,-114,-74,-117,-106,-116,-120,-110,-119,-123,-113,-122,-133,-75,219,220,-76,232,-30,-33,-116,-115,-119,-118,-122,-121,-77,238,239,241,-78,-29,-34,245,-32,247,-31,]),'RETURN':([2,4,5,6,7,8,9,10,11,16,17,18,19,20,21,22,25,26,39,40,41,42,43,57,63,64,65,70,75,79,88,100,101,102,103,105,106,107,108,109,110,111,120,121,122,155,156,157,158,159,160,161,163,181,182,184,185,186,188,189,190,192,193,194,200,217,219,220,226,227,228,229,230,231,232,238,239,241,245,247,],[-1,-40,-3,-4,-5,-6,-7,-8,-9,-37,-38,-39,-13,-14,-15,-17,-42,-43,-41,-51,-52,-53,-54,-36,-132,-132,-132,-2,-12,-79,-35,-103,-117,-107,-109,-112,-127,-128,-129,-130,-104,-105,-48,-49,-50,-132,-132,-132,-108,-111,-131,-114,-74,-117,-106,-116,-120,-110,-119,-123,-113,-122,-133,-75,-76,233,-30,-33,-116,-115,-119,-118,-122,-121,-77,-78,-29,-34,-32,-31,]),'LPAREN':([4,23,27,28,36,49,50,51,52,53,54,55,74,76,81,82,132,133,134,155,156,157,170,172,211,213,215,],[33,35,37,38,66,81,82,83,84,85,86,87,123,126,126,126,172,173,174,183,187,191,126,126,183,187,191,]),'PERIOD':([4,35,37,38,39,63,64,65,69,101,102,103,105,106,107,108,109,113,115,116,117,119,126,155,156,157,160,183,184,187,188,191,192,193,227,229,231,],[34,-41,-41,-41,-41,-132,-132,-132,34,-117,-132,-132,-132,162,-128,-129,-130,-41,-26,-27,-28,-41,-41,-132,-132,-132,-131,-132,-116,-132,-119,-132,-122,-133,-115,-118,-121,]),'COMMA':([25,26,44,48,76,125,127,128,129,130,131,135,141,142,143,144,145,172,174,202,210,],[-42,-43,-82,80,-41,170,-60,-61,-62,-63,-64,-83,-95,-96,-97,-98,-99,-41,-41,-59,225,]),'RBRACKET':([25,26,76,78,124,125,127,128,129,130,131,170,201,202,],[-42,-43,-41,135,169,-57,-60,-61,-62,-63,-64,-41,-58,-59,]),'RPAREN':([25,26,33,35,37,38,44,45,46,47,48,56,58,59,63,64,65,66,67,68,81,82,83,84,85,86,87,100,101,102,103,105,106,107,108,109,110,111,112,113,115,116,117,119,123,125,126,127,128,129,130,131,135,136,137,138,139,140,141,142,143,144,145,146,147,150,151,152,153,154,155,156,157,158,159,160,161,164,167,168,169,170,171,172,173,174,181,182,183,184,185,186,187,188,189,190,191,192,193,201,202,203,205,206,207,208,209,210,212,214,216,222,224,225,226,227,228,229,230,231,237,],[-42,-43,-41,57,-41,-41,-82,79,-80,-81,-84,88,-10,-11,-132,-132,-132,-41,114,118,-41,-41,-41,-41,-41,148,149,-103,-117,-107,-109,-112,-127,-128,-129,-130,-104,-105,163,-41,-26,-27,-28,-41,-41,-57,-41,-60,-61,-62,-63,-64,-83,-85,175,176,177,178,-95,-96,-97,-98,-99,179,180,-134,-137,-138,-135,-136,-132,-132,-132,-108,-111,-131,-114,196,199,200,-55,-41,202,-41,-41,-41,-117,-106,-132,-116,-120,-110,-132,-119,-123,-113,-132,-122,-133,-58,-59,222,223,-69,-70,-71,224,-93,227,229,231,-56,-91,-41,-116,-115,-119,-118,-122,-121,-94,]),'EQUAL':([29,],[39,]),'COLON':([29,30,31,32,71,72,73,148,149,169,175,176,177,178,179,180,222,223,224,],[40,41,42,43,120,121,122,-72,-73,-55,-65,-66,-67,-100,-101,-102,-56,-68,-91,]),'PUSH':([34,],[49,]),'UNSHIFT':([34,],[50,]),'POP':([34,],[51,]),'ADD':([34,],[52,]),'DELETE':([34,],[53,]),'CLEAR':([34,],[54,]),'LENGTH':([34,],[55,]),'PLUS':([35,37,38,39,63,64,65,101,102,103,105,106,107,108,109,113,115,116,117,119,126,155,160,181,184,188,192,193,227,229,231,],[63,63,63,63,-132,-132,-132,155,-132,-132,-132,-127,-128,-129,-130,63,-26,-27,-28,63,63,-132,-131,211,-116,-119,-122,-133,-115,-118,-121,]),'MINUS':([35,37,38,39,63,64,65,101,102,103,105,106,107,108,109,113,115,116,117,119,126,155,156,157,160,183,184,185,187,188,191,192,193,227,229,231,],[64,64,64,64,104,104,104,156,104,104,104,-127,-128,-129,-130,64,-26,-27,-28,64,64,104,104,104,-131,104,-116,213,104,-119,104,-122,-133,-115,-118,-121,]),'TIMES':([35,37,38,39,63,64,65,101,102,103,105,106,107,108,109,113,115,116,117,119,126,157,160,184,188,189,192,193,227,229,231,],[-41,-41,-41,-41,-132,-132,-132,157,-132,-132,-132,-127,-128,-129,-130,-41,-26,-27,-28,-41,-41,-132,-131,-116,-119,215,-122,-133,-115,-118,-121,]),'AND':([37,38,58,59,63,64,65,67,68,100,101,102,103,105,106,107,108,109,110,111,150,151,152,153,154,155,156,157,158,159,160,161,181,182,184,185,186,188,189,190,192,193,226,227,228,229,230,231,],[-41,-41,-10,-11,-132,-132,-132,115,115,-103,-117,-107,-109,-112,-127,-128,-129,-130,-104,-105,-134,-137,-138,-135,-136,-132,-132,-132,-108,-111,-131,-114,-117,-106,-116,-120,-110,-119,-123,-113,-122,-133,-116,-115,-119,-118,-122,-121,]),'OR':([37,38,58,59,63,64,65,67,68,100,101,102,103,105,106,107,108,109,110,111,150,151,152,153,154,155,156,157,158,159,160,161,181,182,184,185,186,188,189,190,192,193,226,227,228,229,230,231,],[-41,-41,-10,-11,-132,-132,-132,116,116,-103,-117,-107,-109,-112,-127,-128,-129,-130,-104,-105,-134,-137,-138,-135,-136,-132,-132,-132,-108,-111,-131,-114,-117,-106,-116,-120,-110,-119,-123,-113,-122,-133,-116,-115,-119,-118,-122,-121,]),'NOT':([37,38,58,59,63,64,65,67,68,100,101,102,103,105,106,107,108,109,110,111,150,151,152,153,154,155,156,157,158,159,160,161,181,182,184,185,186,188,189,190,192,193,226,227,228,229,230,231,],[-41,-41,-10,-11,-132,-132,-132,117,117,-103,-117,-107,-109,-112,-127,-128,-129,-130,-104,-105,-134,-137,-138,-135,-136,-132,-132,-132,-108,-111,-131,-114,-117,-106,-116,-120,-110,-119,-123,-113,-122,-133,-116,-115,-119,-118,-122,-121,]),'LBRACKET':([39,44,173,],[76,78,76,]),'NEW':([39,173,],[77,204,]),'ISEQUAL':([60,61,62,],[90,90,90,]),'IS_NOT_IDENTICAL':([60,61,62,],[91,91,91,]),'IS_IDENTICAL':([60,61,62,],[92,92,92,]),'GREATER':([60,61,62,],[93,93,93,]),'GREATEREQUAL':([60,61,62,],[94,94,94,]),'LESS':([60,61,62,],[95,95,95,]),'LESSEQUAL':([60,61,62,],[96,96,96,]),'ARRAY':([77,204,],[132,132,]),'MAP':([77,],[133,]),'SET':([77,204,],[134,134,]),'LBLOCK':([114,118,163,196,199,235,242,],[165,166,195,218,221,240,244,]),'ELSE':([219,239,],[235,242,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'sentencia':([0,165,166,195,218,221,240,244,],[1,197,198,217,234,236,243,246,]),'callMethods':([0,39,165,166,195,218,221,240,244,],[2,70,2,2,2,2,2,2,2,]),'varType':([0,165,166,195,218,221,240,244,],[3,3,3,3,3,3,3,3,]),'callFunction':([0,165,166,195,218,221,240,244,],[5,5,5,5,5,5,5,5,]),'javaScript_param':([0,165,166,195,218,221,240,244,],[6,6,6,6,6,6,6,6,]),'varDeclaration':([0,165,166,195,218,221,240,244,],[7,7,7,7,7,7,7,7,]),'controlExpression':([0,165,166,195,218,221,240,244,],[8,8,8,8,8,8,8,8,]),'impresion':([0,165,166,195,218,221,240,244,],[9,9,9,9,9,9,9,9,]),'declareteFunction':([0,165,166,195,218,221,240,244,],[10,10,10,10,10,10,10,10,]),'assingOperadores':([0,165,166,195,218,221,240,244,],[11,11,11,11,11,11,11,11,]),'empty':([0,33,35,37,38,39,66,76,81,82,83,84,85,86,113,119,123,126,165,166,170,172,173,174,195,218,221,225,240,244,],[15,47,65,65,65,65,47,131,131,131,139,145,145,147,65,65,47,65,15,15,131,131,208,145,15,15,15,145,15,15,]),'boolean':([0,60,61,62,76,81,82,84,85,165,166,170,172,174,195,218,221,225,240,244,],[18,97,97,97,130,130,130,144,144,18,18,130,130,144,18,18,18,144,18,18,]),'sentencias_if':([0,165,166,195,218,221,240,244,],[19,19,19,19,19,19,19,19,]),'sentencias_if_else':([0,165,166,195,218,221,240,244,],[20,20,20,20,20,20,20,20,]),'sentencias_while':([0,165,166,195,218,221,240,244,],[21,21,21,21,21,21,21,21,]),'impresion_vacio':([0,165,166,195,218,221,240,244,],[22,22,22,22,22,22,22,22,]),'methodArray':([4,69,],[30,30,]),'methodSet':([4,69,],[31,31,]),'methodMap':([4,69,],[32,32,]),'params':([33,66,123,],[45,112,168,]),'paramList':([33,66,80,123,],[46,46,136,46,]),'param':([33,66,80,123,],[48,48,48,48,]),'expression':([35,37,38,113,119,126,],[56,67,68,164,167,171,]),'conditionalEspecifico':([35,37,38,113,119,126,],[58,58,58,58,58,58,]),'inicializarOp':([35,37,38,39,113,119,126,],[59,59,59,75,59,59,59,]),'arrayDeclare':([39,173,],[71,206,]),'declareMap':([39,],[72,]),'declararSet':([39,173,],[73,207,]),'opConditional':([60,61,62,],[89,98,99,]),'operacionesMath':([63,64,65,102,103,105,],[100,110,111,158,159,161,]),'numOperadores':([63,64,65,102,103,105,155,156,157,183,187,191,],[101,101,101,101,101,101,181,185,189,212,214,216,]),'suma':([63,64,65,102,103,105,155,],[102,102,102,102,102,102,182,]),'restas':([63,64,65,102,103,105,156,],[103,103,103,103,103,103,186,]),'multiplicacion':([63,64,65,102,103,105,157,],[105,105,105,105,105,105,190,]),'enteros':([63,64,65,102,103,105,155,156,157,183,187,191,],[106,106,106,106,106,106,106,106,106,106,106,106,]),'decimales':([63,64,65,102,103,105,155,156,157,183,187,191,],[107,107,107,107,107,107,107,107,107,107,107,107,]),'numNegative':([63,64,65,102,103,105,155,156,157,183,187,191,],[109,109,109,109,109,109,109,109,109,109,109,109,]),'operadorLogical':([67,68,],[113,119,]),'arrayValues':([76,172,],[124,203,]),'arrayValue':([76,81,82,170,172,],[125,137,138,201,125,]),'setValue':([84,85,174,225,],[140,146,210,237,]),'dataCondi':([89,],[150,]),'sentencesCmpt':([163,],[194,]),'iterable':([173,],[205,]),'setValues':([174,],[209,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> sentencia","S'",1,None,None,None),
  ('sentencia -> callMethods','sentencia',1,'p_sentencia','analisisSintactico.py',6),
  ('sentencia -> varType ID EQUAL callMethods','sentencia',4,'p_sentencia','analisisSintactico.py',7),
  ('sentencia -> callFunction','sentencia',1,'p_sentencia','analisisSintactico.py',8),
  ('sentencia -> javaScript_param','sentencia',1,'p_sentencia','analisisSintactico.py',9),
  ('sentencia -> varDeclaration','sentencia',1,'p_sentencia','analisisSintactico.py',10),
  ('sentencia -> controlExpression','sentencia',1,'p_sentencia','analisisSintactico.py',11),
  ('sentencia -> impresion','sentencia',1,'p_sentencia','analisisSintactico.py',12),
  ('sentencia -> declareteFunction','sentencia',1,'p_sentencia','analisisSintactico.py',13),
  ('sentencia -> assingOperadores','sentencia',1,'p_sentencia','analisisSintactico.py',14),
  ('expression -> conditionalEspecifico','expression',1,'p_expression','analisisSintactico.py',18),
  ('expression -> inicializarOp','expression',1,'p_expression','analisisSintactico.py',19),
  ('assingOperadores -> varType ID EQUAL inicializarOp','assingOperadores',4,'p_assingOperadores','analisisSintactico.py',23),
  ('controlExpression -> sentencias_if','controlExpression',1,'p_controlExpression','analisisSintactico.py',26),
  ('controlExpression -> sentencias_if_else','controlExpression',1,'p_controlExpression','analisisSintactico.py',27),
  ('controlExpression -> sentencias_while','controlExpression',1,'p_controlExpression','analisisSintactico.py',28),
  ('controlExpression -> impresion','controlExpression',1,'p_controlExpression','analisisSintactico.py',29),
  ('controlExpression -> impresion_vacio','controlExpression',1,'p_controlExpression','analisisSintactico.py',30),
  ('opConditional -> ISEQUAL','opConditional',1,'p_opConditional','analisisSintactico.py',35),
  ('opConditional -> IS_NOT_IDENTICAL','opConditional',1,'p_opConditional','analisisSintactico.py',36),
  ('opConditional -> IS_IDENTICAL','opConditional',1,'p_opConditional','analisisSintactico.py',37),
  ('opConditional -> GREATER','opConditional',1,'p_opConditional','analisisSintactico.py',38),
  ('opConditional -> GREATEREQUAL','opConditional',1,'p_opConditional','analisisSintactico.py',39),
  ('opConditional -> LESS','opConditional',1,'p_opConditional','analisisSintactico.py',40),
  ('opConditional -> LESSEQUAL','opConditional',1,'p_opConditional','analisisSintactico.py',41),
  ('opConditional -> boolean','opConditional',1,'p_opConditional','analisisSintactico.py',42),
  ('operadorLogical -> AND','operadorLogical',1,'p_operadorLogical','analisisSintactico.py',45),
  ('operadorLogical -> OR','operadorLogical',1,'p_operadorLogical','analisisSintactico.py',46),
  ('operadorLogical -> NOT','operadorLogical',1,'p_operadorLogical','analisisSintactico.py',47),
  ('sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK','sentencias_if',9,'p_sentencias_if','analisisSintactico.py',51),
  ('sentencias_if -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK','sentencias_if',7,'p_sentencias_if','analisisSintactico.py',52),
  ('sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK','sentencias_if_else',13,'p_sentencias_if_else','analisisSintactico.py',55),
  ('sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK','sentencias_if_else',11,'p_sentencias_if_else','analisisSintactico.py',56),
  ('sentencias_while -> WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK','sentencias_while',7,'p_sentencias_while','analisisSintactico.py',59),
  ('sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK','sentencias_while',9,'p_sentencias_while','analisisSintactico.py',60),
  ('impresion -> ALERT LPAREN expression RPAREN','impresion',4,'p_impresion','analisisSintactico.py',63),
  ('impresion_vacio -> ALERT LPAREN RPAREN','impresion_vacio',3,'p_impresion_vacio','analisisSintactico.py',65),
  ('javaScript_param -> STRING','javaScript_param',1,'p_javaScript_param','analisisSintactico.py',80),
  ('javaScript_param -> NUM','javaScript_param',1,'p_javaScript_param','analisisSintactico.py',81),
  ('javaScript_param -> boolean','javaScript_param',1,'p_javaScript_param','analisisSintactico.py',82),
  ('javaScript_param -> ID','javaScript_param',1,'p_javaScript_param','analisisSintactico.py',83),
  ('empty -> <empty>','empty',0,'p_empty','analisisSintactico.py',90),
  ('boolean -> TRUE','boolean',1,'p_boolean','analisisSintactico.py',95),
  ('boolean -> FALSE','boolean',1,'p_boolean','analisisSintactico.py',96),
  ('varType -> LET','varType',1,'p_varType','analisisSintactico.py',101),
  ('varType -> CONST','varType',1,'p_varType','analisisSintactico.py',102),
  ('varType -> VAR','varType',1,'p_varType','analisisSintactico.py',103),
  ('varType -> empty','varType',1,'p_varType','analisisSintactico.py',104),
  ('varDeclaration -> varType ID EQUAL arrayDeclare COLON','varDeclaration',5,'p_varDeclaration','analisisSintactico.py',108),
  ('varDeclaration -> varType ID EQUAL declareMap COLON','varDeclaration',5,'p_varDeclaration','analisisSintactico.py',109),
  ('varDeclaration -> varType ID EQUAL declararSet COLON','varDeclaration',5,'p_varDeclaration','analisisSintactico.py',110),
  ('varDeclaration -> varType ID COLON','varDeclaration',3,'p_varDeclaration','analisisSintactico.py',111),
  ('callMethods -> ID methodArray COLON','callMethods',3,'p_callMethods','analisisSintactico.py',116),
  ('callMethods -> ID methodSet COLON','callMethods',3,'p_callMethods','analisisSintactico.py',117),
  ('callMethods -> ID methodMap COLON','callMethods',3,'p_callMethods','analisisSintactico.py',118),
  ('arrayDeclare -> LBRACKET arrayValues RBRACKET','arrayDeclare',3,'p_arrayDeclare','analisisSintactico.py',123),
  ('arrayDeclare -> NEW ARRAY LPAREN arrayValues RPAREN','arrayDeclare',5,'p_arrayDeclare','analisisSintactico.py',124),
  ('arrayValues -> arrayValue','arrayValues',1,'p_arrayValues','analisisSintactico.py',129),
  ('arrayValues -> arrayValue COMMA arrayValue','arrayValues',3,'p_arrayValues','analisisSintactico.py',130),
  ('arrayValue -> LPAREN expression RPAREN','arrayValue',3,'p_arrayValue','analisisSintactico.py',134),
  ('arrayValue -> ID','arrayValue',1,'p_arrayValue','analisisSintactico.py',135),
  ('arrayValue -> NUM','arrayValue',1,'p_arrayValue','analisisSintactico.py',136),
  ('arrayValue -> STRING','arrayValue',1,'p_arrayValue','analisisSintactico.py',137),
  ('arrayValue -> boolean','arrayValue',1,'p_arrayValue','analisisSintactico.py',138),
  ('arrayValue -> empty','arrayValue',1,'p_arrayValue','analisisSintactico.py',139),
  ('methodArray -> PERIOD PUSH LPAREN arrayValue RPAREN','methodArray',5,'p_methodArray','analisisSintactico.py',142),
  ('methodArray -> PERIOD UNSHIFT LPAREN arrayValue RPAREN','methodArray',5,'p_methodArray','analisisSintactico.py',143),
  ('methodArray -> PERIOD POP LPAREN empty RPAREN','methodArray',5,'p_methodArray','analisisSintactico.py',144),
  ('declareMap -> NEW MAP LPAREN iterable RPAREN','declareMap',5,'p_declareMap','analisisSintactico.py',148),
  ('iterable -> arrayDeclare','iterable',1,'p_iterable','analisisSintactico.py',152),
  ('iterable -> declararSet','iterable',1,'p_iterable','analisisSintactico.py',153),
  ('iterable -> empty','iterable',1,'p_iterable','analisisSintactico.py',154),
  ('methodMap -> PERIOD CLEAR LPAREN RPAREN','methodMap',4,'p_methodMap','analisisSintactico.py',157),
  ('methodMap -> PERIOD LENGTH LPAREN RPAREN','methodMap',4,'p_methodMap','analisisSintactico.py',158),
  ('declareteFunction -> FUNCTION ID LPAREN params RPAREN','declareteFunction',5,'p_declareteFunction','analisisSintactico.py',163),
  ('declareteFunction -> FUNCTION ID LPAREN params RPAREN sentencesCmpt','declareteFunction',6,'p_declareteFunction','analisisSintactico.py',164),
  ('declareteFunction -> varType ID EQUAL FUNCTION LPAREN params RPAREN','declareteFunction',7,'p_declareteFunction','analisisSintactico.py',165),
  ('sentencesCmpt -> LBLOCK sentencia RBLOCK','sentencesCmpt',3,'p_sentencesCmpt','analisisSintactico.py',170),
  ('sentencesCmpt -> LBLOCK sentencia RETURN RBLOCK','sentencesCmpt',4,'p_sentencesCmpt','analisisSintactico.py',171),
  ('callFunction -> ID LPAREN params RPAREN','callFunction',4,'p_callFunction','analisisSintactico.py',176),
  ('params -> paramList','params',1,'p_params','analisisSintactico.py',182),
  ('params -> empty','params',1,'p_params','analisisSintactico.py',183),
  ('param -> ID','param',1,'p_param','analisisSintactico.py',187),
  ('param -> ID LBRACKET RBRACKET','param',3,'p_param','analisisSintactico.py',188),
  ('paramList -> param','paramList',1,'p_paramList','analisisSintactico.py',192),
  ('paramList -> param COMMA paramList','paramList',3,'p_paramList','analisisSintactico.py',193),
  ('args -> argslist','args',1,'p_args','analisisSintactico.py',199),
  ('args -> empty','args',1,'p_args','analisisSintactico.py',200),
  ('args -> javaScript_param','args',1,'p_args','analisisSintactico.py',201),
  ('argslist -> args','argslist',1,'p_argslist','analisisSintactico.py',205),
  ('argslist -> args COMMA argslist','argslist',3,'p_argslist','analisisSintactico.py',206),
  ('declararSet -> NEW SET LPAREN setValues RPAREN','declararSet',5,'p_declararSet','analisisSintactico.py',215),
  ('contiene -> ID PERIOD HAS LPAREN params RPAREN','contiene',6,'p_contiene','analisisSintactico.py',219),
  ('setValues -> setValue','setValues',1,'p_setValues','analisisSintactico.py',223),
  ('setValues -> setValue COMMA setValue','setValues',3,'p_setValues','analisisSintactico.py',224),
  ('setValue -> ID','setValue',1,'p_setValue','analisisSintactico.py',228),
  ('setValue -> NUM','setValue',1,'p_setValue','analisisSintactico.py',229),
  ('setValue -> STRING','setValue',1,'p_setValue','analisisSintactico.py',230),
  ('setValue -> boolean','setValue',1,'p_setValue','analisisSintactico.py',231),
  ('setValue -> empty','setValue',1,'p_setValue','analisisSintactico.py',232),
  ('methodSet -> PERIOD ADD LPAREN setValue RPAREN','methodSet',5,'p_methodSet','analisisSintactico.py',236),
  ('methodSet -> PERIOD DELETE LPAREN setValue RPAREN','methodSet',5,'p_methodSet','analisisSintactico.py',237),
  ('methodSet -> PERIOD CLEAR LPAREN empty RPAREN','methodSet',5,'p_methodSet','analisisSintactico.py',238),
  ('inicializarOp -> PLUS operacionesMath','inicializarOp',2,'p_inicializarOp','analisisSintactico.py',246),
  ('inicializarOp -> MINUS operacionesMath','inicializarOp',2,'p_inicializarOp','analisisSintactico.py',247),
  ('inicializarOp -> empty operacionesMath','inicializarOp',2,'p_inicializarOp','analisisSintactico.py',248),
  ('operacionesMath -> numOperadores PLUS suma','operacionesMath',3,'p_operacionesMath','analisisSintactico.py',251),
  ('operacionesMath -> suma','operacionesMath',1,'p_operacionesMath','analisisSintactico.py',252),
  ('operacionesMath -> suma operacionesMath','operacionesMath',2,'p_operacionesMath','analisisSintactico.py',253),
  ('operacionesMath -> restas','operacionesMath',1,'p_operacionesMath','analisisSintactico.py',254),
  ('operacionesMath -> numOperadores MINUS restas','operacionesMath',3,'p_operacionesMath','analisisSintactico.py',255),
  ('operacionesMath -> restas operacionesMath','operacionesMath',2,'p_operacionesMath','analisisSintactico.py',256),
  ('operacionesMath -> multiplicacion','operacionesMath',1,'p_operacionesMath','analisisSintactico.py',257),
  ('operacionesMath -> numOperadores TIMES multiplicacion','operacionesMath',3,'p_operacionesMath','analisisSintactico.py',258),
  ('operacionesMath -> multiplicacion operacionesMath','operacionesMath',2,'p_operacionesMath','analisisSintactico.py',259),
  ('suma -> numOperadores PLUS LPAREN numOperadores RPAREN','suma',5,'p_suma','analisisSintactico.py',262),
  ('suma -> numOperadores PLUS NUM','suma',3,'p_suma','analisisSintactico.py',263),
  ('suma -> numOperadores','suma',1,'p_suma','analisisSintactico.py',264),
  ('restas -> numOperadores MINUS LPAREN numOperadores RPAREN','restas',5,'p_restas','analisisSintactico.py',268),
  ('restas -> numOperadores MINUS NUM','restas',3,'p_restas','analisisSintactico.py',269),
  ('restas -> numOperadores','restas',1,'p_restas','analisisSintactico.py',270),
  ('multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN','multiplicacion',5,'p_multiplicacion','analisisSintactico.py',273),
  ('multiplicacion -> numOperadores TIMES NUM','multiplicacion',3,'p_multiplicacion','analisisSintactico.py',274),
  ('multiplicacion -> numOperadores','multiplicacion',1,'p_multiplicacion','analisisSintactico.py',275),
  ('divicion -> numOperadores DIVIDE LPAREN numOperadores RPAREN','divicion',5,'p_divicion','analisisSintactico.py',278),
  ('divicion -> numOperadores DIVIDE NUM','divicion',3,'p_divicion','analisisSintactico.py',279),
  ('divicion -> numOperadores','divicion',1,'p_divicion','analisisSintactico.py',280),
  ('numOperadores -> enteros','numOperadores',1,'p_numOperadores','analisisSintactico.py',283),
  ('numOperadores -> decimales','numOperadores',1,'p_numOperadores','analisisSintactico.py',284),
  ('enteros -> NUM','enteros',1,'p_enteros','analisisSintactico.py',287),
  ('enteros -> numNegative','enteros',1,'p_enteros','analisisSintactico.py',288),
  ('numNegative -> MINUS NUM','numNegative',2,'p_numNegative','analisisSintactico.py',291),
  ('numNegative -> <empty>','numNegative',0,'p_numNegative','analisisSintactico.py',292),
  ('decimales -> enteros PERIOD NUM','decimales',3,'p_decimales','analisisSintactico.py',295),
  ('conditionalEspecifico -> ID opConditional dataCondi','conditionalEspecifico',3,'p_coditionalEspecifico','analisisSintactico.py',301),
  ('conditionalEspecifico -> NUM opConditional NUM','conditionalEspecifico',3,'p_coditionalEspecifico','analisisSintactico.py',302),
  ('conditionalEspecifico -> STRING opConditional STRING','conditionalEspecifico',3,'p_coditionalEspecifico','analisisSintactico.py',303),
  ('dataCondi -> STRING','dataCondi',1,'p_dataCondi','analisisSintactico.py',308),
  ('dataCondi -> NUM','dataCondi',1,'p_dataCondi','analisisSintactico.py',309),
]
