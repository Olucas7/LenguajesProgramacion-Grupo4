
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD ALERT AND ARRAY BREAK CASE CATCH CLASS CLEAR COLON COMMA CONST CONTINUE DEBUGGER DEFAULT DELETE DIVIDE DIV_EQUAL DO ELSE EQUAL EXPORT EXTENDS FALSE FINALLY FOR FUNCTION GREATER GREATEREQUAL HAS ID IF IMPORT IN INSTANCEOF ISEQUAL IS_IDENTICAL IS_NOT_IDENTICAL LBLOCK LBRACKET LENGTH LESS LESSEQUAL LET LPAREN MAP MINUS MINUS_EQUAL MOD MOD_EQUAL MUL_EQUAL NEW NOT NUM OR PERIOD PLUS PLUS_EQUAL POP PRINT PUSH RBLOCK RBRACKET RETURN RPAREN SET STRING SWITCH THIS THROW TIMES TRUE TRY TWOPOINTS TYPEOF UNSHIFT VAR VOID WHILE WITH YIELD sentencia :  callMethods\n                    | varType ID EQUAL callMethods\n                    | callFunction\n                    | javaScript_param\n                    | varDeclaration\n                    | controlExpression\n                    | impresion\n                    | declarateOperacion expression :  ID opConditional ID\n                     | ID opConditional NUM\n                     | NUM opConditional NUM\n                     | declarateOperacion\n\n    controlExpression : sentencias_if\n                        | sentencias_if_else\n                        | sentencias_while\n                        | impresion\n                        | impresion_vacio\n             opConditional : ISEQUAL\n                      |  IS_NOT_IDENTICAL\n                      |  IS_IDENTICAL\n                      | GREATER\n                      | GREATEREQUAL\n                      | LESS\n                      | LESSEQUAL\n                      operacionesBasicas :  PLUS\n                            | MINUS\n                            | TIMES\n                            | DIVIDE\n                            | MOD operadorLogical : AND\n                        | OR\n                        | NOT  declarateOperacion : factor operacionesBasicas termExpresion\n                            |  termExpresion operacionesBasicas termExpresion\n                            | factor operacionesBasicas factor\n                            | termExpresion operacionesBasicas factor\n                       sentencias_if : IF LPAREN expression operadorLogical expression  RPAREN LBLOCK sentencia RBLOCK\n                    | IF LPAREN expression RPAREN LBLOCK sentencia RBLOCKsentencias_if_else : IF LPAREN expression operadorLogical expression  RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK\n                          | IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK sentencias_while : WHILE LPAREN  expression RPAREN LBLOCK sentencia RBLOCK\n                        | WHILE LPAREN  expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCKimpresion : ALERT LPAREN expression  RPARENimpresion_vacio : ALERT LPAREN RPARENexpression : expression PLUS termexpression : expression TIMES termexpression : expression DIVIDE termexpression : expression MOD termexpression : VAR IDexpression : CONST IDtermExpresion : termPlus\n                    | term_times\n                    | termMinus\n                    | term_div\n                    | term_factor term : PLUS NUM\n            | MINUS NUM\n            | NUM  termPlus :  term PLUS factor\n                 termMinus :  term MINUS factor\n                term_times : term TIMES factorterm_div : term DIVIDE factorterm_factor : factor factor : factor_num\n               | factor_var\n               | factor_expr factor_num : NUMfactor_var : IDfactor_expr : LPAREN expression RPARENjavaScript_param : STRING\n                         | NUM\n                         | boolean\n                         | ID\n    empty : boolean : TRUE\n             | FALSE\n         varType : LET\n                | CONST\n                | VAR\n                 | empty varDeclaration : varType ID  EQUAL  arrayDeclare COLON\n                    |   varType ID EQUAL declareMap COLON\n                    |   varType ID EQUAL declararSet COLON callMethods : ID methodArray COLON\n                     | ID methodSet COLON\n                     | ID methodMap COLONarrayDeclare :  LBRACKET arrayValues RBRACKET\n                       | NEW ARRAY LPAREN arrayValues RPAREN\n                     arrayValues :  arrayValue\n                    | arrayValue COMMA arrayValue arrayValue :  LPAREN expression RPAREN\n                      | ID\n                      | NUM\n                      | STRING\n                      | boolean\n                      | empty  methodArray : PERIOD PUSH LPAREN arrayValue RPAREN\n                      | PERIOD UNSHIFT LPAREN arrayValue RPAREN\n                      | PERIOD POP LPAREN empty RPAREN declareMap :  NEW MAP LPAREN iterable RPAREN\n                    iterable  : arrayDeclare\n                   | declararSet\n                   | empty methodMap : PERIOD CLEAR LPAREN RPAREN\n                   | PERIOD LENGTH LPAREN RPAREN declaration : varDeclaration\n                    | declareteFunction\n                    | callFunction\n     declareteFunction : FUNCTION ID LPAREN params RPAREN\n                          | FUNCTION  ID LPAREN params RPAREN sentencesCmpt\n                          | varType ID EQUAL FUNCTION LPAREN params RPAREN\n                          sentencesCmpt : LBLOCK sentencia RBLOCK\n                     | LBLOCK sentencia RETURN RBLOCK  callFunction : ID LPAREN params RPAREN  \n                    \n                     params : paramList\n               | empty   param : ID\n              | ID LBRACKET RBRACKET\n               paramList : param\n                  | param COMMA paramList  args : argslist\n            | empty\n            | javaScript_param\n     argslist : args\n                   | args COMMA argslist\n    declararSet : NEW SET LPAREN setValues RPARENcontiene : ID PERIOD HAS LPAREN params RPARENsetValues :  setValue\n                    | setValue COMMA setValue setValue : ID\n                 | NUM\n                 | STRING\n                 | boolean\n                 | empty  methodSet : PERIOD ADD LPAREN setValue RPAREN\n                      | PERIOD DELETE LPAREN setValue RPAREN\n                      | PERIOD CLEAR LPAREN empty RPAREN '
    
_lr_action_items = {'ID':([0,3,11,12,13,14,15,45,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,69,90,91,92,93,94,95,96,97,121,125,126,127,129,130,142,144,145,146,148,154,179,180,183,185,187,208,211,215,221,225,],[4,41,-77,-78,-79,-80,48,73,99,100,48,106,-25,-26,-27,-28,-29,106,48,48,106,106,106,106,116,138,-18,-19,-20,-21,-22,-23,-24,155,73,155,155,169,169,48,-30,-31,-32,48,48,4,4,155,155,169,4,4,169,4,4,]),'LET':([0,179,180,208,211,221,225,],[11,11,11,11,11,11,11,]),'CONST':([0,15,53,61,62,142,144,145,146,148,154,179,180,208,211,221,225,],[12,52,52,52,52,52,-30,-31,-32,52,52,12,12,12,12,12,12,]),'VAR':([0,15,53,61,62,142,144,145,146,148,154,179,180,208,211,221,225,],[13,51,51,51,51,51,-30,-31,-32,51,51,13,13,13,13,13,13,]),'STRING':([0,121,126,127,129,130,179,180,183,185,187,208,211,215,221,225,],[16,157,157,157,171,171,16,16,157,157,171,16,16,171,16,16,]),'NUM':([0,15,39,40,53,54,55,56,57,58,59,60,61,62,63,64,65,66,86,87,88,89,90,91,92,93,94,95,96,97,98,121,126,127,129,130,142,144,145,146,148,154,179,180,183,185,187,208,211,215,221,225,],[17,49,67,68,49,105,-25,-26,-27,-28,-29,105,49,49,112,112,112,112,134,134,134,134,139,-18,-19,-20,-21,-22,-23,-24,140,156,156,156,170,170,49,-30,-31,-32,49,49,17,17,156,156,170,17,17,170,17,17,]),'ALERT':([0,179,180,208,211,221,225,],[23,23,23,23,23,23,23,]),'TRUE':([0,121,126,127,129,130,179,180,183,185,187,208,211,215,221,225,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'FALSE':([0,121,126,127,129,130,179,180,183,185,187,208,211,215,221,225,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'IF':([0,179,180,208,211,221,225,],[28,28,28,28,28,28,28,]),'WHILE':([0,179,180,208,211,221,225,],[29,29,29,29,29,29,29,]),'LPAREN':([0,4,15,23,28,29,53,54,55,56,57,58,59,60,61,62,63,64,65,66,78,79,80,81,82,83,84,121,126,127,142,144,145,146,148,154,160,161,162,179,180,183,185,208,211,221,225,],[15,45,15,53,61,62,15,15,-25,-26,-27,-28,-29,15,15,15,15,15,15,15,126,127,128,129,130,131,132,154,154,154,15,-30,-31,-32,15,15,185,186,187,15,15,154,154,15,15,15,15,]),'PLUS':([0,4,15,17,24,25,30,31,32,33,34,35,36,37,38,47,48,49,50,53,54,55,56,57,58,59,60,61,62,67,68,85,86,87,88,89,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,133,134,135,136,137,138,139,140,142,144,145,146,148,154,178,179,180,181,184,208,211,221,225,],[39,-68,39,-58,55,55,-64,-65,-66,-51,-52,-53,-54,-55,63,86,-68,-58,-12,39,39,-25,-26,-27,-28,-29,39,39,39,-56,-57,-69,39,39,39,39,-49,-50,86,-35,-33,-58,-68,-34,-36,86,86,-59,-67,-61,-60,-62,-45,-58,-46,-47,-48,-9,-10,-11,39,-30,-31,-32,39,39,86,39,39,86,86,39,39,39,39,]),'MINUS':([0,4,15,17,24,25,30,31,32,33,34,35,36,37,38,48,49,53,54,55,56,57,58,59,60,61,62,67,68,85,86,87,88,89,105,106,111,112,113,114,115,142,144,145,146,148,154,179,180,208,211,221,225,],[40,-68,40,-58,56,56,-64,-65,-66,-51,-52,-53,-54,-55,65,-68,-58,40,40,-25,-26,-27,-28,-29,40,40,40,-56,-57,-69,40,40,40,40,-58,-68,-59,-67,-61,-60,-62,40,-30,-31,-32,40,40,40,40,40,40,40,40,]),'$end':([1,2,4,5,6,7,8,9,10,16,17,18,19,20,21,22,26,27,30,31,32,33,34,35,36,37,70,71,72,85,102,103,104,105,106,107,108,111,112,113,114,115,117,124,141,149,150,151,209,210,220,222,226,228,],[0,-1,-73,-3,-4,-5,-6,-7,-8,-70,-71,-72,-13,-14,-15,-17,-75,-76,-64,-65,-66,-51,-52,-53,-54,-55,-84,-85,-86,-69,-44,-35,-33,-67,-68,-34,-36,-59,-67,-61,-60,-62,-2,-114,-43,-81,-82,-83,-38,-41,-37,-42,-40,-39,]),'RBLOCK':([2,4,5,6,7,8,9,10,16,17,18,19,20,21,22,26,27,30,31,32,33,34,35,36,37,70,71,72,85,102,103,104,105,106,107,108,111,112,113,114,115,117,124,141,149,150,151,195,196,209,210,216,218,220,222,224,226,227,228,],[-1,-73,-3,-4,-5,-6,-7,-8,-70,-71,-72,-13,-14,-15,-17,-75,-76,-64,-65,-66,-51,-52,-53,-54,-55,-84,-85,-86,-69,-44,-35,-33,-67,-68,-34,-36,-59,-67,-61,-60,-62,-2,-114,-43,-81,-82,-83,209,210,-38,-41,220,222,-37,-42,226,-40,228,-39,]),'TIMES':([4,17,24,25,30,31,32,33,34,35,36,37,38,47,48,49,50,67,68,85,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,133,134,135,136,137,138,139,140,178,181,184,],[-68,-58,57,57,-64,-65,-66,-51,-52,-53,-54,-55,64,87,-68,-58,-12,-56,-57,-69,-49,-50,87,-35,-33,-58,-68,-34,-36,87,87,-59,-67,-61,-60,-62,-45,-58,-46,-47,-48,-9,-10,-11,87,87,87,]),'DIVIDE':([4,17,24,25,30,31,32,33,34,35,36,37,38,47,48,49,50,67,68,85,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,133,134,135,136,137,138,139,140,178,181,184,],[-68,-58,58,58,-64,-65,-66,-51,-52,-53,-54,-55,66,88,-68,-58,-12,-56,-57,-69,-49,-50,88,-35,-33,-58,-68,-34,-36,88,88,-59,-67,-61,-60,-62,-45,-58,-46,-47,-48,-9,-10,-11,88,88,88,]),'MOD':([4,17,24,25,30,31,32,33,34,35,36,37,47,48,49,50,67,68,85,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,133,134,135,136,137,138,139,140,178,181,184,],[-68,-67,59,59,-64,-65,-66,-51,-52,-53,-54,-55,89,-68,-67,-12,-56,-57,-69,-49,-50,89,-35,-33,-67,-68,-34,-36,89,89,-59,-67,-61,-60,-62,-45,-58,-46,-47,-48,-9,-10,-11,89,89,89,]),'PERIOD':([4,116,],[46,46,]),'COMMA':([26,27,73,77,121,153,155,156,157,158,159,163,169,170,171,172,173,185,187,199,207,],[-75,-76,-117,125,-74,183,-92,-93,-94,-95,-96,-118,-130,-131,-132,-133,-134,-74,-74,-91,215,]),'RBRACKET':([26,27,121,123,152,153,155,156,157,158,159,183,198,199,],[-75,-76,-74,163,182,-89,-92,-93,-94,-95,-96,-74,-90,-91,]),'RPAREN':([26,27,30,31,32,33,34,35,36,37,45,47,50,53,67,68,73,74,75,76,77,85,99,100,101,103,104,105,106,107,108,109,110,111,112,113,114,115,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,153,155,156,157,158,159,163,164,165,166,167,168,169,170,171,172,173,174,175,178,181,182,183,184,185,186,187,198,199,200,202,203,204,205,206,207,212,214,215,219,],[-75,-76,-64,-65,-66,-51,-52,-53,-54,-55,-74,85,-12,102,-56,-57,-117,124,-115,-116,-119,-69,-49,-50,141,-35,-33,-67,-68,-34,-36,143,147,-59,-67,-61,-60,-62,-74,-74,-74,-74,-74,176,177,-45,-58,-46,-47,-48,-9,-10,-11,-89,-92,-93,-94,-95,-96,-118,-120,188,189,190,191,-130,-131,-132,-133,-134,192,193,194,197,-87,-74,199,-74,-74,-74,-90,-91,212,213,-101,-102,-103,214,-128,-88,-126,-74,-129,]),'AND':([30,31,32,33,34,35,36,37,50,67,68,85,99,100,103,104,105,106,107,108,109,110,111,112,113,114,115,133,134,135,136,137,138,139,140,],[-64,-65,-66,-51,-52,-53,-54,-55,-12,-56,-57,-69,-49,-50,-35,-33,-67,-68,-34,-36,144,144,-59,-67,-61,-60,-62,-45,-58,-46,-47,-48,-9,-10,-11,]),'OR':([30,31,32,33,34,35,36,37,50,67,68,85,99,100,103,104,105,106,107,108,109,110,111,112,113,114,115,133,134,135,136,137,138,139,140,],[-64,-65,-66,-51,-52,-53,-54,-55,-12,-56,-57,-69,-49,-50,-35,-33,-67,-68,-34,-36,145,145,-59,-67,-61,-60,-62,-45,-58,-46,-47,-48,-9,-10,-11,]),'NOT':([30,31,32,33,34,35,36,37,50,67,68,85,99,100,103,104,105,106,107,108,109,110,111,112,113,114,115,133,134,135,136,137,138,139,140,],[-64,-65,-66,-51,-52,-53,-54,-55,-12,-56,-57,-69,-49,-50,-35,-33,-67,-68,-34,-36,146,146,-59,-67,-61,-60,-62,-45,-58,-46,-47,-48,-9,-10,-11,]),'EQUAL':([41,],[69,]),'COLON':([42,43,44,118,119,120,176,177,182,188,189,190,191,192,193,212,213,214,],[70,71,72,149,150,151,-104,-105,-87,-97,-98,-99,-135,-136,-137,-88,-100,-126,]),'PUSH':([46,],[78,]),'UNSHIFT':([46,],[79,]),'POP':([46,],[80,]),'ADD':([46,],[81,]),'DELETE':([46,],[82,]),'CLEAR':([46,],[83,]),'LENGTH':([46,],[84,]),'ISEQUAL':([48,49,],[91,91,]),'IS_NOT_IDENTICAL':([48,49,],[92,92,]),'IS_IDENTICAL':([48,49,],[93,93,]),'GREATER':([48,49,],[94,94,]),'GREATEREQUAL':([48,49,],[95,95,]),'LESS':([48,49,],[96,96,]),'LESSEQUAL':([48,49,],[97,97,]),'LBRACKET':([69,73,186,],[121,123,121,]),'NEW':([69,186,],[122,201,]),'ARRAY':([122,201,],[160,160,]),'MAP':([122,],[161,]),'SET':([122,201,],[162,162,]),'LBLOCK':([143,147,194,197,217,223,],[179,180,208,211,221,225,]),'ELSE':([209,220,],[217,223,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'sentencia':([0,179,180,208,211,221,225,],[1,195,196,216,218,224,227,]),'callMethods':([0,69,179,180,208,211,221,225,],[2,117,2,2,2,2,2,2,]),'varType':([0,179,180,208,211,221,225,],[3,3,3,3,3,3,3,]),'callFunction':([0,179,180,208,211,221,225,],[5,5,5,5,5,5,5,]),'javaScript_param':([0,179,180,208,211,221,225,],[6,6,6,6,6,6,6,]),'varDeclaration':([0,179,180,208,211,221,225,],[7,7,7,7,7,7,7,]),'controlExpression':([0,179,180,208,211,221,225,],[8,8,8,8,8,8,8,]),'impresion':([0,179,180,208,211,221,225,],[9,9,9,9,9,9,9,]),'declarateOperacion':([0,15,53,61,62,142,148,154,179,180,208,211,221,225,],[10,50,50,50,50,50,50,50,10,10,10,10,10,10,]),'empty':([0,45,121,126,127,128,129,130,131,179,180,183,185,186,187,208,211,215,221,225,],[14,76,159,159,159,167,173,173,175,14,14,159,159,205,173,14,14,173,14,14,]),'boolean':([0,121,126,127,129,130,179,180,183,185,187,208,211,215,221,225,],[18,158,158,158,172,172,18,18,158,158,172,18,18,172,18,18,]),'sentencias_if':([0,179,180,208,211,221,225,],[19,19,19,19,19,19,19,]),'sentencias_if_else':([0,179,180,208,211,221,225,],[20,20,20,20,20,20,20,]),'sentencias_while':([0,179,180,208,211,221,225,],[21,21,21,21,21,21,21,]),'impresion_vacio':([0,179,180,208,211,221,225,],[22,22,22,22,22,22,22,]),'factor':([0,15,53,54,60,61,62,63,64,65,66,142,148,154,179,180,208,211,221,225,],[24,24,24,103,108,24,24,111,113,114,115,24,24,24,24,24,24,24,24,24,]),'termExpresion':([0,15,53,54,60,61,62,142,148,154,179,180,208,211,221,225,],[25,25,25,104,107,25,25,25,25,25,25,25,25,25,25,25,]),'factor_num':([0,15,53,54,60,61,62,63,64,65,66,142,148,154,179,180,208,211,221,225,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'factor_var':([0,15,53,54,60,61,62,63,64,65,66,142,148,154,179,180,208,211,221,225,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'factor_expr':([0,15,53,54,60,61,62,63,64,65,66,142,148,154,179,180,208,211,221,225,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'termPlus':([0,15,53,54,60,61,62,142,148,154,179,180,208,211,221,225,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'term_times':([0,15,53,54,60,61,62,142,148,154,179,180,208,211,221,225,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'termMinus':([0,15,53,54,60,61,62,142,148,154,179,180,208,211,221,225,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'term_div':([0,15,53,54,60,61,62,142,148,154,179,180,208,211,221,225,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'term_factor':([0,15,53,54,60,61,62,142,148,154,179,180,208,211,221,225,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'term':([0,15,53,54,60,61,62,86,87,88,89,142,148,154,179,180,208,211,221,225,],[38,38,38,38,38,38,38,133,135,136,137,38,38,38,38,38,38,38,38,38,]),'methodArray':([4,116,],[42,42,]),'methodSet':([4,116,],[43,43,]),'methodMap':([4,116,],[44,44,]),'expression':([15,53,61,62,142,148,154,],[47,101,109,110,178,181,184,]),'operacionesBasicas':([24,25,],[54,60,]),'params':([45,],[74,]),'paramList':([45,125,],[75,164,]),'param':([45,125,],[77,77,]),'opConditional':([48,49,],[90,98,]),'arrayDeclare':([69,186,],[118,203,]),'declareMap':([69,],[119,]),'declararSet':([69,186,],[120,204,]),'operadorLogical':([109,110,],[142,148,]),'arrayValues':([121,185,],[152,200,]),'arrayValue':([121,126,127,183,185,],[153,165,166,198,153,]),'setValue':([129,130,187,215,],[168,174,207,219,]),'iterable':([186,],[202,]),'setValues':([187,],[206,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> sentencia","S'",1,None,None,None),
  ('sentencia -> callMethods','sentencia',1,'p_sentencia','analisisSintactico.py',6),
  ('sentencia -> varType ID EQUAL callMethods','sentencia',4,'p_sentencia','analisisSintactico.py',7),
  ('sentencia -> callFunction','sentencia',1,'p_sentencia','analisisSintactico.py',8),
  ('sentencia -> javaScript_param','sentencia',1,'p_sentencia','analisisSintactico.py',9),
  ('sentencia -> varDeclaration','sentencia',1,'p_sentencia','analisisSintactico.py',10),
  ('sentencia -> controlExpression','sentencia',1,'p_sentencia','analisisSintactico.py',11),
  ('sentencia -> impresion','sentencia',1,'p_sentencia','analisisSintactico.py',12),
  ('sentencia -> declarateOperacion','sentencia',1,'p_sentencia','analisisSintactico.py',13),
  ('expression -> ID opConditional ID','expression',3,'p_expression','analisisSintactico.py',15),
  ('expression -> ID opConditional NUM','expression',3,'p_expression','analisisSintactico.py',16),
  ('expression -> NUM opConditional NUM','expression',3,'p_expression','analisisSintactico.py',17),
  ('expression -> declarateOperacion','expression',1,'p_expression','analisisSintactico.py',18),
  ('controlExpression -> sentencias_if','controlExpression',1,'p_controlExpression','analisisSintactico.py',24),
  ('controlExpression -> sentencias_if_else','controlExpression',1,'p_controlExpression','analisisSintactico.py',25),
  ('controlExpression -> sentencias_while','controlExpression',1,'p_controlExpression','analisisSintactico.py',26),
  ('controlExpression -> impresion','controlExpression',1,'p_controlExpression','analisisSintactico.py',27),
  ('controlExpression -> impresion_vacio','controlExpression',1,'p_controlExpression','analisisSintactico.py',28),
  ('opConditional -> ISEQUAL','opConditional',1,'p_opConditional','analisisSintactico.py',33),
  ('opConditional -> IS_NOT_IDENTICAL','opConditional',1,'p_opConditional','analisisSintactico.py',34),
  ('opConditional -> IS_IDENTICAL','opConditional',1,'p_opConditional','analisisSintactico.py',35),
  ('opConditional -> GREATER','opConditional',1,'p_opConditional','analisisSintactico.py',36),
  ('opConditional -> GREATEREQUAL','opConditional',1,'p_opConditional','analisisSintactico.py',37),
  ('opConditional -> LESS','opConditional',1,'p_opConditional','analisisSintactico.py',38),
  ('opConditional -> LESSEQUAL','opConditional',1,'p_opConditional','analisisSintactico.py',39),
  ('operacionesBasicas -> PLUS','operacionesBasicas',1,'p_operacionesBasicas','analisisSintactico.py',43),
  ('operacionesBasicas -> MINUS','operacionesBasicas',1,'p_operacionesBasicas','analisisSintactico.py',44),
  ('operacionesBasicas -> TIMES','operacionesBasicas',1,'p_operacionesBasicas','analisisSintactico.py',45),
  ('operacionesBasicas -> DIVIDE','operacionesBasicas',1,'p_operacionesBasicas','analisisSintactico.py',46),
  ('operacionesBasicas -> MOD','operacionesBasicas',1,'p_operacionesBasicas','analisisSintactico.py',47),
  ('operadorLogical -> AND','operadorLogical',1,'p_operadorLogical','analisisSintactico.py',50),
  ('operadorLogical -> OR','operadorLogical',1,'p_operadorLogical','analisisSintactico.py',51),
  ('operadorLogical -> NOT','operadorLogical',1,'p_operadorLogical','analisisSintactico.py',52),
  ('declarateOperacion -> factor operacionesBasicas termExpresion','declarateOperacion',3,'p_declarateOperacion','analisisSintactico.py',54),
  ('declarateOperacion -> termExpresion operacionesBasicas termExpresion','declarateOperacion',3,'p_declarateOperacion','analisisSintactico.py',55),
  ('declarateOperacion -> factor operacionesBasicas factor','declarateOperacion',3,'p_declarateOperacion','analisisSintactico.py',56),
  ('declarateOperacion -> termExpresion operacionesBasicas factor','declarateOperacion',3,'p_declarateOperacion','analisisSintactico.py',57),
  ('sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK','sentencias_if',9,'p_sentencias_if','analisisSintactico.py',63),
  ('sentencias_if -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK','sentencias_if',7,'p_sentencias_if','analisisSintactico.py',64),
  ('sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK','sentencias_if_else',13,'p_sentencias_if_else','analisisSintactico.py',67),
  ('sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK','sentencias_if_else',11,'p_sentencias_if_else','analisisSintactico.py',68),
  ('sentencias_while -> WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK','sentencias_while',7,'p_sentencias_while','analisisSintactico.py',71),
  ('sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK','sentencias_while',9,'p_sentencias_while','analisisSintactico.py',72),
  ('impresion -> ALERT LPAREN expression RPAREN','impresion',4,'p_impresion','analisisSintactico.py',75),
  ('impresion_vacio -> ALERT LPAREN RPAREN','impresion_vacio',3,'p_impresion_vacio','analisisSintactico.py',77),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','analisisSintactico.py',81),
  ('expression -> expression TIMES term','expression',3,'p_expression_times','analisisSintactico.py',83),
  ('expression -> expression DIVIDE term','expression',3,'p_expression_divide','analisisSintactico.py',85),
  ('expression -> expression MOD term','expression',3,'p_expression_mod','analisisSintactico.py',87),
  ('expression -> VAR ID','expression',2,'p_expression_var','analisisSintactico.py',90),
  ('expression -> CONST ID','expression',2,'p_expression_const','analisisSintactico.py',92),
  ('termExpresion -> termPlus','termExpresion',1,'p_termExpresion','analisisSintactico.py',95),
  ('termExpresion -> term_times','termExpresion',1,'p_termExpresion','analisisSintactico.py',96),
  ('termExpresion -> termMinus','termExpresion',1,'p_termExpresion','analisisSintactico.py',97),
  ('termExpresion -> term_div','termExpresion',1,'p_termExpresion','analisisSintactico.py',98),
  ('termExpresion -> term_factor','termExpresion',1,'p_termExpresion','analisisSintactico.py',99),
  ('term -> PLUS NUM','term',2,'p_term','analisisSintactico.py',102),
  ('term -> MINUS NUM','term',2,'p_term','analisisSintactico.py',103),
  ('term -> NUM','term',1,'p_term','analisisSintactico.py',104),
  ('termPlus -> term PLUS factor','termPlus',3,'p_termPlus','analisisSintactico.py',108),
  ('termMinus -> term MINUS factor','termMinus',3,'p_termMinus','analisisSintactico.py',112),
  ('term_times -> term TIMES factor','term_times',3,'p_term_times','analisisSintactico.py',116),
  ('term_div -> term DIVIDE factor','term_div',3,'p_term_div','analisisSintactico.py',120),
  ('term_factor -> factor','term_factor',1,'p_term_factor','analisisSintactico.py',124),
  ('factor -> factor_num','factor',1,'p_factor','analisisSintactico.py',128),
  ('factor -> factor_var','factor',1,'p_factor','analisisSintactico.py',129),
  ('factor -> factor_expr','factor',1,'p_factor','analisisSintactico.py',130),
  ('factor_num -> NUM','factor_num',1,'p_factor_num','analisisSintactico.py',133),
  ('factor_var -> ID','factor_var',1,'p_factor_var','analisisSintactico.py',136),
  ('factor_expr -> LPAREN expression RPAREN','factor_expr',3,'p_factor_expr','analisisSintactico.py',139),
  ('javaScript_param -> STRING','javaScript_param',1,'p_javaScript_param','analisisSintactico.py',155),
  ('javaScript_param -> NUM','javaScript_param',1,'p_javaScript_param','analisisSintactico.py',156),
  ('javaScript_param -> boolean','javaScript_param',1,'p_javaScript_param','analisisSintactico.py',157),
  ('javaScript_param -> ID','javaScript_param',1,'p_javaScript_param','analisisSintactico.py',158),
  ('empty -> <empty>','empty',0,'p_empty','analisisSintactico.py',165),
  ('boolean -> TRUE','boolean',1,'p_boolean','analisisSintactico.py',170),
  ('boolean -> FALSE','boolean',1,'p_boolean','analisisSintactico.py',171),
  ('varType -> LET','varType',1,'p_varType','analisisSintactico.py',176),
  ('varType -> CONST','varType',1,'p_varType','analisisSintactico.py',177),
  ('varType -> VAR','varType',1,'p_varType','analisisSintactico.py',178),
  ('varType -> empty','varType',1,'p_varType','analisisSintactico.py',179),
  ('varDeclaration -> varType ID EQUAL arrayDeclare COLON','varDeclaration',5,'p_varDeclaration','analisisSintactico.py',183),
  ('varDeclaration -> varType ID EQUAL declareMap COLON','varDeclaration',5,'p_varDeclaration','analisisSintactico.py',184),
  ('varDeclaration -> varType ID EQUAL declararSet COLON','varDeclaration',5,'p_varDeclaration','analisisSintactico.py',185),
  ('callMethods -> ID methodArray COLON','callMethods',3,'p_callMethods','analisisSintactico.py',190),
  ('callMethods -> ID methodSet COLON','callMethods',3,'p_callMethods','analisisSintactico.py',191),
  ('callMethods -> ID methodMap COLON','callMethods',3,'p_callMethods','analisisSintactico.py',192),
  ('arrayDeclare -> LBRACKET arrayValues RBRACKET','arrayDeclare',3,'p_arrayDeclare','analisisSintactico.py',197),
  ('arrayDeclare -> NEW ARRAY LPAREN arrayValues RPAREN','arrayDeclare',5,'p_arrayDeclare','analisisSintactico.py',198),
  ('arrayValues -> arrayValue','arrayValues',1,'p_arrayValues','analisisSintactico.py',203),
  ('arrayValues -> arrayValue COMMA arrayValue','arrayValues',3,'p_arrayValues','analisisSintactico.py',204),
  ('arrayValue -> LPAREN expression RPAREN','arrayValue',3,'p_arrayValue','analisisSintactico.py',208),
  ('arrayValue -> ID','arrayValue',1,'p_arrayValue','analisisSintactico.py',209),
  ('arrayValue -> NUM','arrayValue',1,'p_arrayValue','analisisSintactico.py',210),
  ('arrayValue -> STRING','arrayValue',1,'p_arrayValue','analisisSintactico.py',211),
  ('arrayValue -> boolean','arrayValue',1,'p_arrayValue','analisisSintactico.py',212),
  ('arrayValue -> empty','arrayValue',1,'p_arrayValue','analisisSintactico.py',213),
  ('methodArray -> PERIOD PUSH LPAREN arrayValue RPAREN','methodArray',5,'p_methodArray','analisisSintactico.py',216),
  ('methodArray -> PERIOD UNSHIFT LPAREN arrayValue RPAREN','methodArray',5,'p_methodArray','analisisSintactico.py',217),
  ('methodArray -> PERIOD POP LPAREN empty RPAREN','methodArray',5,'p_methodArray','analisisSintactico.py',218),
  ('declareMap -> NEW MAP LPAREN iterable RPAREN','declareMap',5,'p_declareMap','analisisSintactico.py',222),
  ('iterable -> arrayDeclare','iterable',1,'p_iterable','analisisSintactico.py',226),
  ('iterable -> declararSet','iterable',1,'p_iterable','analisisSintactico.py',227),
  ('iterable -> empty','iterable',1,'p_iterable','analisisSintactico.py',228),
  ('methodMap -> PERIOD CLEAR LPAREN RPAREN','methodMap',4,'p_methodMap','analisisSintactico.py',231),
  ('methodMap -> PERIOD LENGTH LPAREN RPAREN','methodMap',4,'p_methodMap','analisisSintactico.py',232),
  ('declaration -> varDeclaration','declaration',1,'p_declaration','analisisSintactico.py',236),
  ('declaration -> declareteFunction','declaration',1,'p_declaration','analisisSintactico.py',237),
  ('declaration -> callFunction','declaration',1,'p_declaration','analisisSintactico.py',238),
  ('declareteFunction -> FUNCTION ID LPAREN params RPAREN','declareteFunction',5,'p_declareteFunction','analisisSintactico.py',244),
  ('declareteFunction -> FUNCTION ID LPAREN params RPAREN sentencesCmpt','declareteFunction',6,'p_declareteFunction','analisisSintactico.py',245),
  ('declareteFunction -> varType ID EQUAL FUNCTION LPAREN params RPAREN','declareteFunction',7,'p_declareteFunction','analisisSintactico.py',246),
  ('sentencesCmpt -> LBLOCK sentencia RBLOCK','sentencesCmpt',3,'p_sentencesCmpt','analisisSintactico.py',251),
  ('sentencesCmpt -> LBLOCK sentencia RETURN RBLOCK','sentencesCmpt',4,'p_sentencesCmpt','analisisSintactico.py',252),
  ('callFunction -> ID LPAREN params RPAREN','callFunction',4,'p_callFunction','analisisSintactico.py',257),
  ('params -> paramList','params',1,'p_params','analisisSintactico.py',263),
  ('params -> empty','params',1,'p_params','analisisSintactico.py',264),
  ('param -> ID','param',1,'p_param','analisisSintactico.py',268),
  ('param -> ID LBRACKET RBRACKET','param',3,'p_param','analisisSintactico.py',269),
  ('paramList -> param','paramList',1,'p_paramList','analisisSintactico.py',273),
  ('paramList -> param COMMA paramList','paramList',3,'p_paramList','analisisSintactico.py',274),
  ('args -> argslist','args',1,'p_args','analisisSintactico.py',280),
  ('args -> empty','args',1,'p_args','analisisSintactico.py',281),
  ('args -> javaScript_param','args',1,'p_args','analisisSintactico.py',282),
  ('argslist -> args','argslist',1,'p_argslist','analisisSintactico.py',286),
  ('argslist -> args COMMA argslist','argslist',3,'p_argslist','analisisSintactico.py',287),
  ('declararSet -> NEW SET LPAREN setValues RPAREN','declararSet',5,'p_declararSet','analisisSintactico.py',296),
  ('contiene -> ID PERIOD HAS LPAREN params RPAREN','contiene',6,'p_contiene','analisisSintactico.py',300),
  ('setValues -> setValue','setValues',1,'p_setValues','analisisSintactico.py',304),
  ('setValues -> setValue COMMA setValue','setValues',3,'p_setValues','analisisSintactico.py',305),
  ('setValue -> ID','setValue',1,'p_setValue','analisisSintactico.py',309),
  ('setValue -> NUM','setValue',1,'p_setValue','analisisSintactico.py',310),
  ('setValue -> STRING','setValue',1,'p_setValue','analisisSintactico.py',311),
  ('setValue -> boolean','setValue',1,'p_setValue','analisisSintactico.py',312),
  ('setValue -> empty','setValue',1,'p_setValue','analisisSintactico.py',313),
  ('methodSet -> PERIOD ADD LPAREN setValue RPAREN','methodSet',5,'p_methodSet','analisisSintactico.py',317),
  ('methodSet -> PERIOD DELETE LPAREN setValue RPAREN','methodSet',5,'p_methodSet','analisisSintactico.py',318),
  ('methodSet -> PERIOD CLEAR LPAREN empty RPAREN','methodSet',5,'p_methodSet','analisisSintactico.py',319),
]
