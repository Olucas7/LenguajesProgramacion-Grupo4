
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD ALERT AND ARRAY CLEAR COLON COMMA CONST DELETE DIVIDE DIV_EQUAL ELSE EQUAL FALSE FUNCTION GET GREATER GREATEREQUAL HAS ID IF ISEQUAL IS_IDENTICAL IS_NOT_IDENTICAL LBLOCK LBRACKET LENGTH LESS LESSEQUAL LET LPAREN MAP MINUS MINUS_EQUAL MOD MOD_EQUAL MUL_EQUAL NEW NOT NUM OR PERIOD PLUS PLUS_EQUAL POP PUSH RBLOCK RBRACKET RETURN RPAREN SET STRING TIMES TRUE TWOPOINTS UNSHIFT VAR WHILE WITH YIELD sentencia :  callMethods\n                    | varType ID EQUAL callMethods\n                    | callFunction\n                    | javaScript_param\n                    | varDeclaration\n                    | controlExpression\n                    | impresion\n                    | declareteFunction\n                    | assingOperadores\n\n                     expression :  conditionalEspecifico\n                     | inicializarOp\n     assingOperadores : varType ID EQUAL inicializarOp  controlExpression : sentencias_if\n                        | sentencias_if_else\n                        | sentencias_while\n                        | impresion\n                        | impresion_vacio\n             opConditional : ISEQUAL\n                      |  IS_NOT_IDENTICAL\n                      |  IS_IDENTICAL\n                      | GREATER\n                      | GREATEREQUAL\n                      | LESS\n                      | LESSEQUAL\n                      | boolean\n                      operadorLogical : AND\n                        | OR\n                        | NOT sentencias_if : IF LPAREN expression operadorLogical expression  RPAREN LBLOCK sentencia RBLOCK\n                    | IF LPAREN expression RPAREN LBLOCK sentencia RBLOCKsentencias_if_else : IF LPAREN expression operadorLogical expression  RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK\n                          | IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK sentencias_while : WHILE LPAREN  expression RPAREN LBLOCK sentencia RBLOCK\n                        | WHILE LPAREN  expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCKimpresion : ALERT LPAREN expression  RPARENimpresion_vacio : ALERT LPAREN RPARENjavaScript_param : STRING\n                         | NUM\n                         | boolean\n                         | ID\n    empty : boolean : TRUE\n             | FALSE\n         varType : LET\n                | CONST\n                | VAR\n                 | empty  varDeclaration : varType ID  EQUAL  arrayDeclare COLON\n                    |  varType ID EQUAL declareMap COLON\n                    |  varType ID EQUAL declararSet COLON\n                    | varType ID COLON   callMethods : ID methodArray COLON\n                     | ID methodSet COLON\n                     | ID methodMap COLONarrayDeclare :  LBRACKET arrayValues RBRACKET\n                       | NEW ARRAY LPAREN arrayValues RPAREN\n                     arrayValues :  arrayValue\n                    | arrayValue COMMA arrayValue arrayValue :  LPAREN expression RPAREN\n                      | ID\n                      | NUM\n                      | STRING\n                      | boolean\n                      | empty  methodArray : PERIOD PUSH LPAREN arrayValue RPAREN\n                      | PERIOD UNSHIFT LPAREN arrayValue RPAREN\n                      | PERIOD POP LPAREN empty RPAREN declareMap :  NEW MAP LPAREN iterable RPAREN\n                    iterable  : arrayDeclare\n                   | declararSet\n                   | empty methodMap : PERIOD CLEAR LPAREN RPAREN\n                   | PERIOD LENGTH LPAREN RPAREN  declareteFunction : FUNCTION ID LPAREN params RPAREN\n                          | FUNCTION  ID LPAREN params RPAREN sentencesCmpt\n                          | varType ID EQUAL FUNCTION LPAREN params RPAREN\n                          sentencesCmpt : LBLOCK sentencia RBLOCK\n                     | LBLOCK sentencia RETURN RBLOCK  callFunction : ID LPAREN params RPAREN  \n                    \n                     params : paramList\n               | empty   param : ID\n              | ID LBRACKET RBRACKET\n               paramList : param\n                  | param COMMA paramList  args : argslist\n            | empty\n            | javaScript_param\n     argslist : args\n                   | args COMMA argslist\n    declararSet : NEW SET LPAREN setValues RPARENsetValues :  setValue\n                    | setValue COMMA setValue setValue : ID\n                 | NUM\n                 | STRING\n                 | boolean\n                 | empty  methodSet : PERIOD ADD LPAREN setValue RPAREN\n                      | PERIOD DELETE LPAREN setValue RPAREN\n                      | PERIOD CLEAR LPAREN empty RPAREN  inicializarOp :  PLUS operacionesMath\n                        | MINUS operacionesMath\n                        | empty operacionesMath  operacionesMath :  numOperadores PLUS suma\n                         | suma\n                          | suma operacionesMath\n                         | restas\n                         | numOperadores MINUS restas\n                         | restas operacionesMath\n                         | multiplicacion\n                         | numOperadores TIMES multiplicacion\n                         | multiplicacion operacionesMath\n                         | divicion\n                         | numOperadores DIVIDE divicion\n                         | divicion operacionesMathsuma : numOperadores PLUS LPAREN numOperadores RPAREN\n            | numOperadores PLUS NUM\n            | numOperadores\n\n             restas : numOperadores MINUS LPAREN numOperadores RPAREN\n               | numOperadores  MINUS NUM\n               | numOperadores  multiplicacion : numOperadores TIMES LPAREN numOperadores RPAREN\n               | numOperadores  TIMES NUM\n               | numOperadores  divicion : numOperadores DIVIDE LPAREN numOperadores RPAREN\n               | numOperadores  DIVIDE NUM\n               | numOperadores  numOperadores : enteros\n                     |  decimales   enteros : NUM\n                 | numNegative numNegative : MINUS NUM\n                 | decimales : enteros PERIOD NUM   conditionalEspecifico :  ID opConditional dataCondi\n                    |  NUM opConditional NUM\n                    | STRING opConditional STRING \n                    dataCondi : STRING\n                  | NUM setMetodoAdd : PERIOD ADD LPAREN setValue RPARENsetMetodoDelete :  PERIOD DELETE LPAREN setValue RPARENsetMetodoClear : PERIOD CLEAR LPAREN empty RPAREN  ValueMapMethods : ID\n                 | NUM\n                 | STRING\n                  mapMetodoGet : PERIOD GET LPAREN ValueMapMethods RPARENmapMetodoSet : PERIOD GET LPAREN ValueMapMethods COMMA ValueMapMethods RPAREN'
    
_lr_action_items = {'ID':([0,3,12,13,14,15,24,33,35,37,38,39,66,76,80,81,82,84,85,114,116,117,118,120,124,127,168,169,173,175,177,202,227,230,234,251,255,],[4,29,-44,-45,-46,-47,36,44,60,60,60,69,44,128,44,128,128,142,142,60,-26,-27,-28,60,44,60,4,4,128,128,142,4,4,4,142,4,4,]),'LET':([0,168,169,202,227,230,251,255,],[12,12,12,12,12,12,12,12,]),'CONST':([0,168,169,202,227,230,251,255,],[13,13,13,13,13,13,13,13,]),'VAR':([0,168,169,202,227,230,251,255,],[14,14,14,14,14,14,14,14,]),'STRING':([0,25,26,35,37,38,76,81,82,84,85,89,90,91,92,93,94,95,96,97,99,114,116,117,118,120,127,168,169,173,175,177,202,227,230,234,251,255,],[16,-42,-43,62,62,62,130,130,130,144,144,152,-18,-19,-20,-21,-22,-23,-24,-25,155,62,-26,-27,-28,62,62,16,16,130,130,144,16,16,16,144,16,16,]),'NUM':([0,25,26,35,37,38,39,63,64,65,76,81,82,84,85,89,90,91,92,93,94,95,96,97,98,101,102,103,104,105,106,107,108,109,110,114,116,117,118,120,127,156,157,158,159,162,165,168,169,173,175,177,186,187,190,191,194,195,198,199,200,202,218,220,222,224,227,230,234,236,238,240,242,251,255,],[17,-42,-43,61,61,61,-41,109,109,109,129,129,129,143,143,153,-18,-19,-20,-21,-22,-23,-24,-25,154,-119,109,109,162,109,109,-129,-130,-131,-132,61,-26,-27,-28,61,61,187,191,195,199,-133,200,17,17,129,129,143,109,-118,109,-121,109,-124,109,-127,-135,17,235,237,239,241,17,17,143,-117,-120,-123,-126,17,17,]),'ALERT':([0,168,169,202,227,230,251,255,],[23,23,23,23,23,23,23,23,]),'FUNCTION':([0,39,168,169,202,227,230,251,255,],[24,74,24,24,24,24,24,24,24,]),'TRUE':([0,60,61,62,76,81,82,84,85,168,169,173,175,177,202,227,230,234,251,255,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'FALSE':([0,60,61,62,76,81,82,84,85,168,169,173,175,177,202,227,230,234,251,255,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'IF':([0,168,169,202,227,230,251,255,],[27,27,27,27,27,27,27,27,]),'WHILE':([0,168,169,202,227,230,251,255,],[28,28,28,28,28,28,28,28,]),'$end':([1,2,4,5,6,7,8,9,10,11,16,17,18,19,20,21,22,25,26,39,40,41,42,43,57,63,64,65,70,75,79,88,100,101,102,103,105,106,107,108,109,110,111,112,121,122,123,156,157,158,159,160,161,162,163,164,166,184,185,187,188,189,191,192,193,195,196,197,199,200,201,207,228,229,235,236,237,238,239,240,241,242,243,249,250,252,256,258,],[0,-1,-40,-3,-4,-5,-6,-7,-8,-9,-37,-38,-39,-13,-14,-15,-17,-42,-43,-41,-51,-52,-53,-54,-36,-134,-134,-134,-2,-12,-79,-35,-102,-119,-106,-108,-111,-114,-129,-130,-131,-132,-103,-104,-48,-49,-50,-134,-134,-134,-134,-107,-110,-133,-113,-116,-74,-119,-105,-118,-122,-109,-121,-125,-112,-124,-128,-115,-127,-135,-75,-76,-30,-33,-118,-117,-121,-120,-124,-123,-127,-126,-77,-78,-29,-34,-32,-31,]),'RBLOCK':([2,4,5,6,7,8,9,10,11,16,17,18,19,20,21,22,25,26,39,40,41,42,43,57,63,64,65,70,75,79,88,100,101,102,103,105,106,107,108,109,110,111,112,121,122,123,156,157,158,159,160,161,162,163,164,166,184,185,187,188,189,191,192,193,195,196,197,199,200,201,204,205,207,226,228,229,235,236,237,238,239,240,241,242,243,244,245,247,249,250,252,254,256,257,258,],[-1,-40,-3,-4,-5,-6,-7,-8,-9,-37,-38,-39,-13,-14,-15,-17,-42,-43,-41,-51,-52,-53,-54,-36,-134,-134,-134,-2,-12,-79,-35,-102,-119,-106,-108,-111,-114,-129,-130,-131,-132,-103,-104,-48,-49,-50,-134,-134,-134,-134,-107,-110,-133,-113,-116,-74,-119,-105,-118,-122,-109,-121,-125,-112,-124,-128,-115,-127,-135,-75,228,229,-76,243,-30,-33,-118,-117,-121,-120,-124,-123,-127,-126,-77,249,250,252,-78,-29,-34,256,-32,258,-31,]),'RETURN':([2,4,5,6,7,8,9,10,11,16,17,18,19,20,21,22,25,26,39,40,41,42,43,57,63,64,65,70,75,79,88,100,101,102,103,105,106,107,108,109,110,111,112,121,122,123,156,157,158,159,160,161,162,163,164,166,184,185,187,188,189,191,192,193,195,196,197,199,200,201,207,226,228,229,235,236,237,238,239,240,241,242,243,249,250,252,256,258,],[-1,-40,-3,-4,-5,-6,-7,-8,-9,-37,-38,-39,-13,-14,-15,-17,-42,-43,-41,-51,-52,-53,-54,-36,-134,-134,-134,-2,-12,-79,-35,-102,-119,-106,-108,-111,-114,-129,-130,-131,-132,-103,-104,-48,-49,-50,-134,-134,-134,-134,-107,-110,-133,-113,-116,-74,-119,-105,-118,-122,-109,-121,-125,-112,-124,-128,-115,-127,-135,-75,-76,244,-30,-33,-118,-117,-121,-120,-124,-123,-127,-126,-77,-78,-29,-34,-32,-31,]),'LPAREN':([4,23,27,28,36,49,50,51,52,53,54,55,74,76,81,82,133,134,135,156,157,158,159,173,175,218,220,222,224,],[33,35,37,38,66,81,82,83,84,85,86,87,124,127,127,127,175,176,177,186,190,194,198,127,127,186,190,194,198,]),'PERIOD':([4,35,37,38,39,63,64,65,69,101,102,103,105,106,107,108,109,110,114,116,117,118,120,127,156,157,158,159,162,186,187,190,191,194,195,198,199,200,236,238,240,242,],[34,-41,-41,-41,-41,-134,-134,-134,34,-119,-134,-134,-134,-134,165,-130,-131,-132,-41,-26,-27,-28,-41,-41,-134,-134,-134,-134,-133,-134,-118,-134,-121,-134,-124,-134,-127,-135,-117,-120,-123,-126,]),'COMMA':([25,26,44,48,76,126,128,129,130,131,132,136,142,143,144,145,146,175,177,209,217,],[-42,-43,-82,80,-41,173,-60,-61,-62,-63,-64,-83,-94,-95,-96,-97,-98,-41,-41,-59,234,]),'RBRACKET':([25,26,76,78,125,126,128,129,130,131,132,173,208,209,],[-42,-43,-41,136,172,-57,-60,-61,-62,-63,-64,-41,-58,-59,]),'RPAREN':([25,26,33,35,37,38,44,45,46,47,48,56,58,59,63,64,65,66,67,68,81,82,83,84,85,86,87,100,101,102,103,105,106,107,108,109,110,111,112,113,114,116,117,118,120,124,126,127,128,129,130,131,132,136,137,138,139,140,141,142,143,144,145,146,147,148,151,152,153,154,155,156,157,158,159,160,161,162,163,164,167,170,171,172,173,174,175,176,177,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,208,209,210,212,213,214,215,216,217,219,221,223,225,231,233,234,235,236,237,238,239,240,241,242,248,],[-42,-43,-41,57,-41,-41,-82,79,-80,-81,-84,88,-10,-11,-134,-134,-134,-41,115,119,-41,-41,-41,-41,-41,149,150,-102,-119,-106,-108,-111,-114,-129,-130,-131,-132,-103,-104,166,-41,-26,-27,-28,-41,-41,-57,-41,-60,-61,-62,-63,-64,-83,-85,178,179,180,181,-94,-95,-96,-97,-98,182,183,-136,-139,-140,-137,-138,-134,-134,-134,-134,-107,-110,-133,-113,-116,203,206,207,-55,-41,209,-41,-41,-41,-119,-105,-134,-118,-122,-109,-134,-121,-125,-112,-134,-124,-128,-115,-134,-127,-135,-58,-59,231,232,-69,-70,-71,233,-92,236,238,240,242,-56,-91,-41,-118,-117,-121,-120,-124,-123,-127,-126,-93,]),'EQUAL':([29,],[39,]),'COLON':([29,30,31,32,71,72,73,149,150,172,178,179,180,181,182,183,231,232,233,],[40,41,42,43,121,122,123,-72,-73,-55,-65,-66,-67,-99,-100,-101,-56,-68,-91,]),'PUSH':([34,],[49,]),'UNSHIFT':([34,],[50,]),'POP':([34,],[51,]),'ADD':([34,],[52,]),'DELETE':([34,],[53,]),'CLEAR':([34,],[54,]),'LENGTH':([34,],[55,]),'PLUS':([35,37,38,39,63,64,65,101,102,103,105,106,107,108,109,110,114,116,117,118,120,127,156,162,184,187,191,195,199,200,236,238,240,242,],[63,63,63,63,-134,-134,-134,156,-134,-134,-134,-134,-129,-130,-131,-132,63,-26,-27,-28,63,63,-134,-133,218,-118,-121,-124,-127,-135,-117,-120,-123,-126,]),'MINUS':([35,37,38,39,63,64,65,101,102,103,105,106,107,108,109,110,114,116,117,118,120,127,156,157,158,159,162,186,187,188,190,191,194,195,198,199,200,236,238,240,242,],[64,64,64,64,104,104,104,157,104,104,104,104,-129,-130,-131,-132,64,-26,-27,-28,64,64,104,104,104,104,-133,104,-118,220,104,-121,104,-124,104,-127,-135,-117,-120,-123,-126,]),'TIMES':([35,37,38,39,63,64,65,101,102,103,105,106,107,108,109,110,114,116,117,118,120,127,158,162,187,191,192,195,199,200,236,238,240,242,],[-41,-41,-41,-41,-134,-134,-134,158,-134,-134,-134,-134,-129,-130,-131,-132,-41,-26,-27,-28,-41,-41,-134,-133,-118,-121,222,-124,-127,-135,-117,-120,-123,-126,]),'DIVIDE':([35,37,38,39,63,64,65,101,102,103,105,106,107,108,109,110,114,116,117,118,120,127,159,162,187,191,195,196,199,200,236,238,240,242,],[-41,-41,-41,-41,-134,-134,-134,159,-134,-134,-134,-134,-129,-130,-131,-132,-41,-26,-27,-28,-41,-41,-134,-133,-118,-121,-124,224,-127,-135,-117,-120,-123,-126,]),'AND':([37,38,58,59,63,64,65,67,68,100,101,102,103,105,106,107,108,109,110,111,112,151,152,153,154,155,156,157,158,159,160,161,162,163,164,184,185,187,188,189,191,192,193,195,196,197,199,200,235,236,237,238,239,240,241,242,],[-41,-41,-10,-11,-134,-134,-134,116,116,-102,-119,-106,-108,-111,-114,-129,-130,-131,-132,-103,-104,-136,-139,-140,-137,-138,-134,-134,-134,-134,-107,-110,-133,-113,-116,-119,-105,-118,-122,-109,-121,-125,-112,-124,-128,-115,-127,-135,-118,-117,-121,-120,-124,-123,-127,-126,]),'OR':([37,38,58,59,63,64,65,67,68,100,101,102,103,105,106,107,108,109,110,111,112,151,152,153,154,155,156,157,158,159,160,161,162,163,164,184,185,187,188,189,191,192,193,195,196,197,199,200,235,236,237,238,239,240,241,242,],[-41,-41,-10,-11,-134,-134,-134,117,117,-102,-119,-106,-108,-111,-114,-129,-130,-131,-132,-103,-104,-136,-139,-140,-137,-138,-134,-134,-134,-134,-107,-110,-133,-113,-116,-119,-105,-118,-122,-109,-121,-125,-112,-124,-128,-115,-127,-135,-118,-117,-121,-120,-124,-123,-127,-126,]),'NOT':([37,38,58,59,63,64,65,67,68,100,101,102,103,105,106,107,108,109,110,111,112,151,152,153,154,155,156,157,158,159,160,161,162,163,164,184,185,187,188,189,191,192,193,195,196,197,199,200,235,236,237,238,239,240,241,242,],[-41,-41,-10,-11,-134,-134,-134,118,118,-102,-119,-106,-108,-111,-114,-129,-130,-131,-132,-103,-104,-136,-139,-140,-137,-138,-134,-134,-134,-134,-107,-110,-133,-113,-116,-119,-105,-118,-122,-109,-121,-125,-112,-124,-128,-115,-127,-135,-118,-117,-121,-120,-124,-123,-127,-126,]),'LBRACKET':([39,44,176,],[76,78,76,]),'NEW':([39,176,],[77,211,]),'ISEQUAL':([60,61,62,],[90,90,90,]),'IS_NOT_IDENTICAL':([60,61,62,],[91,91,91,]),'IS_IDENTICAL':([60,61,62,],[92,92,92,]),'GREATER':([60,61,62,],[93,93,93,]),'GREATEREQUAL':([60,61,62,],[94,94,94,]),'LESS':([60,61,62,],[95,95,95,]),'LESSEQUAL':([60,61,62,],[96,96,96,]),'ARRAY':([77,211,],[133,133,]),'MAP':([77,],[134,]),'SET':([77,211,],[135,135,]),'LBLOCK':([115,119,166,203,206,246,253,],[168,169,202,227,230,251,255,]),'ELSE':([228,250,],[246,253,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'sentencia':([0,168,169,202,227,230,251,255,],[1,204,205,226,245,247,254,257,]),'callMethods':([0,39,168,169,202,227,230,251,255,],[2,70,2,2,2,2,2,2,2,]),'varType':([0,168,169,202,227,230,251,255,],[3,3,3,3,3,3,3,3,]),'callFunction':([0,168,169,202,227,230,251,255,],[5,5,5,5,5,5,5,5,]),'javaScript_param':([0,168,169,202,227,230,251,255,],[6,6,6,6,6,6,6,6,]),'varDeclaration':([0,168,169,202,227,230,251,255,],[7,7,7,7,7,7,7,7,]),'controlExpression':([0,168,169,202,227,230,251,255,],[8,8,8,8,8,8,8,8,]),'impresion':([0,168,169,202,227,230,251,255,],[9,9,9,9,9,9,9,9,]),'declareteFunction':([0,168,169,202,227,230,251,255,],[10,10,10,10,10,10,10,10,]),'assingOperadores':([0,168,169,202,227,230,251,255,],[11,11,11,11,11,11,11,11,]),'empty':([0,33,35,37,38,39,66,76,81,82,83,84,85,86,114,120,124,127,168,169,173,175,176,177,202,227,230,234,251,255,],[15,47,65,65,65,65,47,132,132,132,140,146,146,148,65,65,47,65,15,15,132,132,215,146,15,15,15,146,15,15,]),'boolean':([0,60,61,62,76,81,82,84,85,168,169,173,175,177,202,227,230,234,251,255,],[18,97,97,97,131,131,131,145,145,18,18,131,131,145,18,18,18,145,18,18,]),'sentencias_if':([0,168,169,202,227,230,251,255,],[19,19,19,19,19,19,19,19,]),'sentencias_if_else':([0,168,169,202,227,230,251,255,],[20,20,20,20,20,20,20,20,]),'sentencias_while':([0,168,169,202,227,230,251,255,],[21,21,21,21,21,21,21,21,]),'impresion_vacio':([0,168,169,202,227,230,251,255,],[22,22,22,22,22,22,22,22,]),'methodArray':([4,69,],[30,30,]),'methodSet':([4,69,],[31,31,]),'methodMap':([4,69,],[32,32,]),'params':([33,66,124,],[45,113,171,]),'paramList':([33,66,80,124,],[46,46,137,46,]),'param':([33,66,80,124,],[48,48,48,48,]),'expression':([35,37,38,114,120,127,],[56,67,68,167,170,174,]),'conditionalEspecifico':([35,37,38,114,120,127,],[58,58,58,58,58,58,]),'inicializarOp':([35,37,38,39,114,120,127,],[59,59,59,75,59,59,59,]),'arrayDeclare':([39,176,],[71,213,]),'declareMap':([39,],[72,]),'declararSet':([39,176,],[73,214,]),'opConditional':([60,61,62,],[89,98,99,]),'operacionesMath':([63,64,65,102,103,105,106,],[100,111,112,160,161,163,164,]),'numOperadores':([63,64,65,102,103,105,106,156,157,158,159,186,190,194,198,],[101,101,101,101,101,101,101,184,188,192,196,219,221,223,225,]),'suma':([63,64,65,102,103,105,106,156,],[102,102,102,102,102,102,102,185,]),'restas':([63,64,65,102,103,105,106,157,],[103,103,103,103,103,103,103,189,]),'multiplicacion':([63,64,65,102,103,105,106,158,],[105,105,105,105,105,105,105,193,]),'divicion':([63,64,65,102,103,105,106,159,],[106,106,106,106,106,106,106,197,]),'enteros':([63,64,65,102,103,105,106,156,157,158,159,186,190,194,198,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'decimales':([63,64,65,102,103,105,106,156,157,158,159,186,190,194,198,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'numNegative':([63,64,65,102,103,105,106,156,157,158,159,186,190,194,198,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'operadorLogical':([67,68,],[114,120,]),'arrayValues':([76,175,],[125,210,]),'arrayValue':([76,81,82,173,175,],[126,138,139,208,126,]),'setValue':([84,85,177,234,],[141,147,217,248,]),'dataCondi':([89,],[151,]),'sentencesCmpt':([166,],[201,]),'iterable':([176,],[212,]),'setValues':([177,],[216,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> sentencia","S'",1,None,None,None),
  ('sentencia -> callMethods','sentencia',1,'p_sentencia','analisisSintactico.py',6),
  ('sentencia -> varType ID EQUAL callMethods','sentencia',4,'p_sentencia','analisisSintactico.py',7),
  ('sentencia -> callFunction','sentencia',1,'p_sentencia','analisisSintactico.py',8),
  ('sentencia -> javaScript_param','sentencia',1,'p_sentencia','analisisSintactico.py',9),
  ('sentencia -> varDeclaration','sentencia',1,'p_sentencia','analisisSintactico.py',10),
  ('sentencia -> controlExpression','sentencia',1,'p_sentencia','analisisSintactico.py',11),
  ('sentencia -> impresion','sentencia',1,'p_sentencia','analisisSintactico.py',12),
  ('sentencia -> declareteFunction','sentencia',1,'p_sentencia','analisisSintactico.py',13),
  ('sentencia -> assingOperadores','sentencia',1,'p_sentencia','analisisSintactico.py',14),
  ('expression -> conditionalEspecifico','expression',1,'p_expression','analisisSintactico.py',18),
  ('expression -> inicializarOp','expression',1,'p_expression','analisisSintactico.py',19),
  ('assingOperadores -> varType ID EQUAL inicializarOp','assingOperadores',4,'p_assingOperadores','analisisSintactico.py',23),
  ('controlExpression -> sentencias_if','controlExpression',1,'p_controlExpression','analisisSintactico.py',26),
  ('controlExpression -> sentencias_if_else','controlExpression',1,'p_controlExpression','analisisSintactico.py',27),
  ('controlExpression -> sentencias_while','controlExpression',1,'p_controlExpression','analisisSintactico.py',28),
  ('controlExpression -> impresion','controlExpression',1,'p_controlExpression','analisisSintactico.py',29),
  ('controlExpression -> impresion_vacio','controlExpression',1,'p_controlExpression','analisisSintactico.py',30),
  ('opConditional -> ISEQUAL','opConditional',1,'p_opConditional','analisisSintactico.py',35),
  ('opConditional -> IS_NOT_IDENTICAL','opConditional',1,'p_opConditional','analisisSintactico.py',36),
  ('opConditional -> IS_IDENTICAL','opConditional',1,'p_opConditional','analisisSintactico.py',37),
  ('opConditional -> GREATER','opConditional',1,'p_opConditional','analisisSintactico.py',38),
  ('opConditional -> GREATEREQUAL','opConditional',1,'p_opConditional','analisisSintactico.py',39),
  ('opConditional -> LESS','opConditional',1,'p_opConditional','analisisSintactico.py',40),
  ('opConditional -> LESSEQUAL','opConditional',1,'p_opConditional','analisisSintactico.py',41),
  ('opConditional -> boolean','opConditional',1,'p_opConditional','analisisSintactico.py',42),
  ('operadorLogical -> AND','operadorLogical',1,'p_operadorLogical','analisisSintactico.py',45),
  ('operadorLogical -> OR','operadorLogical',1,'p_operadorLogical','analisisSintactico.py',46),
  ('operadorLogical -> NOT','operadorLogical',1,'p_operadorLogical','analisisSintactico.py',47),
  ('sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK','sentencias_if',9,'p_sentencias_if','analisisSintactico.py',51),
  ('sentencias_if -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK','sentencias_if',7,'p_sentencias_if','analisisSintactico.py',52),
  ('sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK','sentencias_if_else',13,'p_sentencias_if_else','analisisSintactico.py',55),
  ('sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK','sentencias_if_else',11,'p_sentencias_if_else','analisisSintactico.py',56),
  ('sentencias_while -> WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK','sentencias_while',7,'p_sentencias_while','analisisSintactico.py',59),
  ('sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK','sentencias_while',9,'p_sentencias_while','analisisSintactico.py',60),
  ('impresion -> ALERT LPAREN expression RPAREN','impresion',4,'p_impresion','analisisSintactico.py',63),
  ('impresion_vacio -> ALERT LPAREN RPAREN','impresion_vacio',3,'p_impresion_vacio','analisisSintactico.py',65),
  ('javaScript_param -> STRING','javaScript_param',1,'p_javaScript_param','analisisSintactico.py',82),
  ('javaScript_param -> NUM','javaScript_param',1,'p_javaScript_param','analisisSintactico.py',83),
  ('javaScript_param -> boolean','javaScript_param',1,'p_javaScript_param','analisisSintactico.py',84),
  ('javaScript_param -> ID','javaScript_param',1,'p_javaScript_param','analisisSintactico.py',85),
  ('empty -> <empty>','empty',0,'p_empty','analisisSintactico.py',92),
  ('boolean -> TRUE','boolean',1,'p_boolean','analisisSintactico.py',97),
  ('boolean -> FALSE','boolean',1,'p_boolean','analisisSintactico.py',98),
  ('varType -> LET','varType',1,'p_varType','analisisSintactico.py',103),
  ('varType -> CONST','varType',1,'p_varType','analisisSintactico.py',104),
  ('varType -> VAR','varType',1,'p_varType','analisisSintactico.py',105),
  ('varType -> empty','varType',1,'p_varType','analisisSintactico.py',106),
  ('varDeclaration -> varType ID EQUAL arrayDeclare COLON','varDeclaration',5,'p_varDeclaration','analisisSintactico.py',110),
  ('varDeclaration -> varType ID EQUAL declareMap COLON','varDeclaration',5,'p_varDeclaration','analisisSintactico.py',111),
  ('varDeclaration -> varType ID EQUAL declararSet COLON','varDeclaration',5,'p_varDeclaration','analisisSintactico.py',112),
  ('varDeclaration -> varType ID COLON','varDeclaration',3,'p_varDeclaration','analisisSintactico.py',113),
  ('callMethods -> ID methodArray COLON','callMethods',3,'p_callMethods','analisisSintactico.py',118),
  ('callMethods -> ID methodSet COLON','callMethods',3,'p_callMethods','analisisSintactico.py',119),
  ('callMethods -> ID methodMap COLON','callMethods',3,'p_callMethods','analisisSintactico.py',120),
  ('arrayDeclare -> LBRACKET arrayValues RBRACKET','arrayDeclare',3,'p_arrayDeclare','analisisSintactico.py',125),
  ('arrayDeclare -> NEW ARRAY LPAREN arrayValues RPAREN','arrayDeclare',5,'p_arrayDeclare','analisisSintactico.py',126),
  ('arrayValues -> arrayValue','arrayValues',1,'p_arrayValues','analisisSintactico.py',131),
  ('arrayValues -> arrayValue COMMA arrayValue','arrayValues',3,'p_arrayValues','analisisSintactico.py',132),
  ('arrayValue -> LPAREN expression RPAREN','arrayValue',3,'p_arrayValue','analisisSintactico.py',136),
  ('arrayValue -> ID','arrayValue',1,'p_arrayValue','analisisSintactico.py',137),
  ('arrayValue -> NUM','arrayValue',1,'p_arrayValue','analisisSintactico.py',138),
  ('arrayValue -> STRING','arrayValue',1,'p_arrayValue','analisisSintactico.py',139),
  ('arrayValue -> boolean','arrayValue',1,'p_arrayValue','analisisSintactico.py',140),
  ('arrayValue -> empty','arrayValue',1,'p_arrayValue','analisisSintactico.py',141),
  ('methodArray -> PERIOD PUSH LPAREN arrayValue RPAREN','methodArray',5,'p_methodArray','analisisSintactico.py',144),
  ('methodArray -> PERIOD UNSHIFT LPAREN arrayValue RPAREN','methodArray',5,'p_methodArray','analisisSintactico.py',145),
  ('methodArray -> PERIOD POP LPAREN empty RPAREN','methodArray',5,'p_methodArray','analisisSintactico.py',146),
  ('declareMap -> NEW MAP LPAREN iterable RPAREN','declareMap',5,'p_declareMap','analisisSintactico.py',150),
  ('iterable -> arrayDeclare','iterable',1,'p_iterable','analisisSintactico.py',154),
  ('iterable -> declararSet','iterable',1,'p_iterable','analisisSintactico.py',155),
  ('iterable -> empty','iterable',1,'p_iterable','analisisSintactico.py',156),
  ('methodMap -> PERIOD CLEAR LPAREN RPAREN','methodMap',4,'p_methodMap','analisisSintactico.py',159),
  ('methodMap -> PERIOD LENGTH LPAREN RPAREN','methodMap',4,'p_methodMap','analisisSintactico.py',160),
  ('declareteFunction -> FUNCTION ID LPAREN params RPAREN','declareteFunction',5,'p_declareteFunction','analisisSintactico.py',165),
  ('declareteFunction -> FUNCTION ID LPAREN params RPAREN sentencesCmpt','declareteFunction',6,'p_declareteFunction','analisisSintactico.py',166),
  ('declareteFunction -> varType ID EQUAL FUNCTION LPAREN params RPAREN','declareteFunction',7,'p_declareteFunction','analisisSintactico.py',167),
  ('sentencesCmpt -> LBLOCK sentencia RBLOCK','sentencesCmpt',3,'p_sentencesCmpt','analisisSintactico.py',172),
  ('sentencesCmpt -> LBLOCK sentencia RETURN RBLOCK','sentencesCmpt',4,'p_sentencesCmpt','analisisSintactico.py',173),
  ('callFunction -> ID LPAREN params RPAREN','callFunction',4,'p_callFunction','analisisSintactico.py',178),
  ('params -> paramList','params',1,'p_params','analisisSintactico.py',184),
  ('params -> empty','params',1,'p_params','analisisSintactico.py',185),
  ('param -> ID','param',1,'p_param','analisisSintactico.py',189),
  ('param -> ID LBRACKET RBRACKET','param',3,'p_param','analisisSintactico.py',190),
  ('paramList -> param','paramList',1,'p_paramList','analisisSintactico.py',194),
  ('paramList -> param COMMA paramList','paramList',3,'p_paramList','analisisSintactico.py',195),
  ('args -> argslist','args',1,'p_args','analisisSintactico.py',201),
  ('args -> empty','args',1,'p_args','analisisSintactico.py',202),
  ('args -> javaScript_param','args',1,'p_args','analisisSintactico.py',203),
  ('argslist -> args','argslist',1,'p_argslist','analisisSintactico.py',207),
  ('argslist -> args COMMA argslist','argslist',3,'p_argslist','analisisSintactico.py',208),
  ('declararSet -> NEW SET LPAREN setValues RPAREN','declararSet',5,'p_declararSet','analisisSintactico.py',217),
  ('setValues -> setValue','setValues',1,'p_setValues','analisisSintactico.py',222),
  ('setValues -> setValue COMMA setValue','setValues',3,'p_setValues','analisisSintactico.py',223),
  ('setValue -> ID','setValue',1,'p_setValue','analisisSintactico.py',227),
  ('setValue -> NUM','setValue',1,'p_setValue','analisisSintactico.py',228),
  ('setValue -> STRING','setValue',1,'p_setValue','analisisSintactico.py',229),
  ('setValue -> boolean','setValue',1,'p_setValue','analisisSintactico.py',230),
  ('setValue -> empty','setValue',1,'p_setValue','analisisSintactico.py',231),
  ('methodSet -> PERIOD ADD LPAREN setValue RPAREN','methodSet',5,'p_methodSet','analisisSintactico.py',235),
  ('methodSet -> PERIOD DELETE LPAREN setValue RPAREN','methodSet',5,'p_methodSet','analisisSintactico.py',236),
  ('methodSet -> PERIOD CLEAR LPAREN empty RPAREN','methodSet',5,'p_methodSet','analisisSintactico.py',237),
  ('inicializarOp -> PLUS operacionesMath','inicializarOp',2,'p_inicializarOp','analisisSintactico.py',245),
  ('inicializarOp -> MINUS operacionesMath','inicializarOp',2,'p_inicializarOp','analisisSintactico.py',246),
  ('inicializarOp -> empty operacionesMath','inicializarOp',2,'p_inicializarOp','analisisSintactico.py',247),
  ('operacionesMath -> numOperadores PLUS suma','operacionesMath',3,'p_operacionesMath','analisisSintactico.py',250),
  ('operacionesMath -> suma','operacionesMath',1,'p_operacionesMath','analisisSintactico.py',251),
  ('operacionesMath -> suma operacionesMath','operacionesMath',2,'p_operacionesMath','analisisSintactico.py',252),
  ('operacionesMath -> restas','operacionesMath',1,'p_operacionesMath','analisisSintactico.py',253),
  ('operacionesMath -> numOperadores MINUS restas','operacionesMath',3,'p_operacionesMath','analisisSintactico.py',254),
  ('operacionesMath -> restas operacionesMath','operacionesMath',2,'p_operacionesMath','analisisSintactico.py',255),
  ('operacionesMath -> multiplicacion','operacionesMath',1,'p_operacionesMath','analisisSintactico.py',256),
  ('operacionesMath -> numOperadores TIMES multiplicacion','operacionesMath',3,'p_operacionesMath','analisisSintactico.py',257),
  ('operacionesMath -> multiplicacion operacionesMath','operacionesMath',2,'p_operacionesMath','analisisSintactico.py',258),
  ('operacionesMath -> divicion','operacionesMath',1,'p_operacionesMath','analisisSintactico.py',259),
  ('operacionesMath -> numOperadores DIVIDE divicion','operacionesMath',3,'p_operacionesMath','analisisSintactico.py',260),
  ('operacionesMath -> divicion operacionesMath','operacionesMath',2,'p_operacionesMath','analisisSintactico.py',261),
  ('suma -> numOperadores PLUS LPAREN numOperadores RPAREN','suma',5,'p_suma','analisisSintactico.py',264),
  ('suma -> numOperadores PLUS NUM','suma',3,'p_suma','analisisSintactico.py',265),
  ('suma -> numOperadores','suma',1,'p_suma','analisisSintactico.py',266),
  ('restas -> numOperadores MINUS LPAREN numOperadores RPAREN','restas',5,'p_restas','analisisSintactico.py',270),
  ('restas -> numOperadores MINUS NUM','restas',3,'p_restas','analisisSintactico.py',271),
  ('restas -> numOperadores','restas',1,'p_restas','analisisSintactico.py',272),
  ('multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN','multiplicacion',5,'p_multiplicacion','analisisSintactico.py',275),
  ('multiplicacion -> numOperadores TIMES NUM','multiplicacion',3,'p_multiplicacion','analisisSintactico.py',276),
  ('multiplicacion -> numOperadores','multiplicacion',1,'p_multiplicacion','analisisSintactico.py',277),
  ('divicion -> numOperadores DIVIDE LPAREN numOperadores RPAREN','divicion',5,'p_divicion','analisisSintactico.py',280),
  ('divicion -> numOperadores DIVIDE NUM','divicion',3,'p_divicion','analisisSintactico.py',281),
  ('divicion -> numOperadores','divicion',1,'p_divicion','analisisSintactico.py',282),
  ('numOperadores -> enteros','numOperadores',1,'p_numOperadores','analisisSintactico.py',285),
  ('numOperadores -> decimales','numOperadores',1,'p_numOperadores','analisisSintactico.py',286),
  ('enteros -> NUM','enteros',1,'p_enteros','analisisSintactico.py',289),
  ('enteros -> numNegative','enteros',1,'p_enteros','analisisSintactico.py',290),
  ('numNegative -> MINUS NUM','numNegative',2,'p_numNegative','analisisSintactico.py',293),
  ('numNegative -> <empty>','numNegative',0,'p_numNegative','analisisSintactico.py',294),
  ('decimales -> enteros PERIOD NUM','decimales',3,'p_decimales','analisisSintactico.py',297),
  ('conditionalEspecifico -> ID opConditional dataCondi','conditionalEspecifico',3,'p_coditionalEspecifico','analisisSintactico.py',303),
  ('conditionalEspecifico -> NUM opConditional NUM','conditionalEspecifico',3,'p_coditionalEspecifico','analisisSintactico.py',304),
  ('conditionalEspecifico -> STRING opConditional STRING','conditionalEspecifico',3,'p_coditionalEspecifico','analisisSintactico.py',305),
  ('dataCondi -> STRING','dataCondi',1,'p_dataCondi','analisisSintactico.py',310),
  ('dataCondi -> NUM','dataCondi',1,'p_dataCondi','analisisSintactico.py',311),
  ('setMetodoAdd -> PERIOD ADD LPAREN setValue RPAREN','setMetodoAdd',5,'p_setMetodoAdd','analisisSintactico.py',315),
  ('setMetodoDelete -> PERIOD DELETE LPAREN setValue RPAREN','setMetodoDelete',5,'p_SetMetodoDelete','analisisSintactico.py',317),
  ('setMetodoClear -> PERIOD CLEAR LPAREN empty RPAREN','setMetodoClear',5,'p_SetMetodoClear','analisisSintactico.py',319),
  ('ValueMapMethods -> ID','ValueMapMethods',1,'p_ValueMapMethods','analisisSintactico.py',322),
  ('ValueMapMethods -> NUM','ValueMapMethods',1,'p_ValueMapMethods','analisisSintactico.py',323),
  ('ValueMapMethods -> STRING','ValueMapMethods',1,'p_ValueMapMethods','analisisSintactico.py',324),
  ('mapMetodoGet -> PERIOD GET LPAREN ValueMapMethods RPAREN','mapMetodoGet',5,'p_MapMetodoGet','analisisSintactico.py',328),
  ('mapMetodoSet -> PERIOD GET LPAREN ValueMapMethods COMMA ValueMapMethods RPAREN','mapMetodoSet',7,'p_MapMetodoSet','analisisSintactico.py',330),
]
