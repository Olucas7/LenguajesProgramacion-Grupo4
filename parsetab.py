
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD ALERT AND ARRAY CLEAR COLON COMMA CONST DELETE DIVIDE DIV_EQUAL ELSE EQUAL FALSE FUNCTION GET GREATER GREATEREQUAL HAS ID IF ISEQUAL IS_IDENTICAL IS_NOT_IDENTICAL LBLOCK LBRACKET LENGTH LESS LESSEQUAL LET LPAREN MAP MINUS MINUS_EQUAL MOD MOD_EQUAL MUL_EQUAL NEW NOT NUM OR PERIOD PLUS PLUS_EQUAL POP PUSH RBLOCK RBRACKET RETURN RPAREN SET STRING TIMES TRUE TWOPOINTS UNSHIFT VAR WHILE WITH YIELD sentencia :  callMethods\n                    | callFunction COLON\n                    | varDeclaration\n                    | controlExpression\n                    | impresion\n                    | declareteFunction\n                    | assingOperadores\n\n\n                     expression :  conditionalEspecifico\n                     | inicializarOp\n     assingOperadores : varType ID EQUAL inicializarOp  controlExpression : sentencias_if\n                        | sentencias_if_else\n                        | sentencias_while\n                        | impresion\n                        | impresion_vacio\n             opConditional : ISEQUAL\n                      |  IS_NOT_IDENTICAL\n                      |  IS_IDENTICAL\n                      | GREATER\n                      | GREATEREQUAL\n                      | LESS\n                      | LESSEQUAL\n                      | boolean\n                      operadorLogical : AND\n                        | OR\n                        | NOT sentencias_if : IF LPAREN expression operadorLogical expression  RPAREN cuerpo_de_sentencias\n                    | IF LPAREN expression RPAREN cuerpo_de_sentencias\n    sentencias_if_else : IF LPAREN expression operadorLogical expression  RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias\n                          | IF LPAREN expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias\n    cuerpo_de_sentencias : LBLOCK sentencia RBLOCK\n                            | LBLOCK RBLOCK\n                            sentencias_while : WHILE LPAREN  expression RPAREN cuerpo_de_sentencias\n                        | WHILE LPAREN  expression operadorLogical expression RPAREN cuerpo_de_sentencias\n\n    impresion : ALERT LPAREN expression  RPAREN COLON\n                    |\n    impresion_vacio : ALERT LPAREN RPAREN COLONjavaScript_param : STRING\n                         | NUM\n                         | boolean\n                         | ID\n    boolean : TRUE\n             | FALSE\n         varType : LET\n                | CONST\n                | VAR\n               varDeclaration : varType assign\n                    | assign\n                    | LET ID COLON\n                    | VAR ID COLON\n                   assign : ID  EQUAL  arrayDeclare COLON\n                    |  ID EQUAL declareMap COLON\n                    |  ID EQUAL declararSet COLON\n                    |  ID EQUAL javaScript_param COLON callMethods : ID methodArray COLON\n                     | ID methodSet COLON\n                     | ID methodMap COLON arrayDeclare :  LBRACKET  RBRACKET\n                       | LBRACKET  arrayValues RBRACKET\n                       | NEW ARRAY LPAREN arrayValues RPAREN\n                       | NEW ARRAY LPAREN  RPAREN\n                      arrayValues :  javaScript_param\n                    | javaScript_param COMMA arrayValues  methodArray : PERIOD PUSH LPAREN javaScript_param RPAREN\n                      | PERIOD UNSHIFT LPAREN arrayValues RPAREN\n                      | PERIOD POP LPAREN  RPAREN declareMap :  NEW MAP LPAREN LBRACKET iterableMap RBRACKET RPAREN\n                    | NEW MAP LPAREN  RPAREN\n                     iterableMap : LBRACKET keyValue COMMA keyValue RBRACKET\n                      | LBRACKET keyValue COMMA keyValue RBRACKET COMMA iterableMap keyValue : javaScript_param\n                  | declararSet\n                  | declareMap\n                  | arrayDeclare  iterableSet : keyValue\n                     | keyValue COMMA iterableSet\n                    | methodMap : PERIOD CLEAR LPAREN RPAREN\n                   | PERIOD LENGTH LPAREN RPAREN  declareteFunction : FUNCTION ID LPAREN params RPAREN\n                          | FUNCTION  ID LPAREN params RPAREN sentencesCmpt\n                          | varType ID EQUAL FUNCTION LPAREN params RPAREN\n                          sentencesCmpt : LBLOCK sentencia RBLOCK\n                     | LBLOCK sentencia RETURN RBLOCK  callFunction : ID LPAREN params RPAREN  \n                    \n                     params : paramList\n               paramList : javaScript_param\n                  | javaScript_param COMMA paramList  args : argslist\n            | javaScript_param\n     argslist : args\n                   | args COMMA argslist\n     declararSet : NEW SET LPAREN RPAREN\n                    | NEW SET LPAREN LBRACKET iterableSet RBRACKET RPAREN\n     methodSet : PERIOD ADD LPAREN javaScript_param RPAREN\n                      | PERIOD DELETE LPAREN javaScript_param RPAREN\n                      | PERIOD CLEAR LPAREN RPAREN  inicializarOp :  PLUS operacionesMath\n                        | MINUS operacionesMath\n                        | operacionesMath  operacionesMath :  numOperadores PLUS suma\n                         | suma\n                          | suma operacionesMath\n                         | restas\n                         | numOperadores MINUS restas\n                         | restas operacionesMath\n                         | multiplicacion\n                         | numOperadores TIMES multiplicacion\n                         | multiplicacion operacionesMath\n                         | divicion\n                         | numOperadores DIVIDE divicion\n                         | divicion operacionesMathsuma : numOperadores PLUS LPAREN numOperadores RPAREN\n            | numOperadores PLUS NUM\n            | numOperadores\n\n             restas : numOperadores MINUS LPAREN numOperadores RPAREN\n               | numOperadores  MINUS NUM\n               | numOperadores  multiplicacion : numOperadores TIMES LPAREN numOperadores RPAREN\n               | numOperadores  TIMES NUM\n               | numOperadores  divicion : numOperadores DIVIDE LPAREN numOperadores RPAREN\n               | numOperadores  DIVIDE NUM\n               | numOperadores  numOperadores : enteros\n                     |  decimales   enteros : NUM\n                 | numNegative numNegative : MINUS NUM\n                 | decimales : enteros PERIOD NUM   conditionalEspecifico :  ID opConditional dataCondi\n                    |  NUM opConditional NUM\n                    | STRING opConditional STRING \n                    dataCondi : STRING\n                  | NUM '
    
_lr_action_items = {'ID':([0,10,12,13,19,20,27,28,34,36,37,54,63,84,88,99,100,102,103,137,139,140,141,143,146,147,157,185,194,209,216,242,246,],[9,31,32,33,35,-45,41,41,70,70,70,41,41,41,41,41,41,41,41,70,-24,-25,-26,70,41,41,41,9,41,9,41,41,41,]),'LET':([0,185,209,],[12,12,12,]),'VAR':([0,185,209,],[13,13,13,]),'ALERT':([0,185,209,],[18,18,18,]),'$end':([0,1,2,4,5,6,7,8,11,14,15,16,17,23,30,38,39,40,63,64,65,73,74,75,76,77,78,79,80,81,82,83,89,90,91,92,107,108,110,122,124,125,126,127,128,129,130,131,132,133,134,158,164,165,166,168,169,170,172,173,174,176,177,178,180,181,182,184,186,208,213,225,226,227,228,229,230,231,232,233,235,236,237,238,243,250,251,],[-36,0,-1,-3,-4,-5,-6,-7,-48,-11,-12,-13,-15,-2,-47,-55,-56,-57,-130,-49,-50,-130,-100,-130,-115,-102,-104,-107,-110,-125,-126,-128,-51,-52,-53,-54,-10,-127,-37,-98,-127,-99,-127,-130,-130,-130,-130,-103,-106,-109,-112,-35,-129,-115,-101,-114,-118,-105,-117,-121,-108,-120,-124,-111,-123,-131,-80,-28,-33,-81,-32,-82,-114,-113,-117,-116,-120,-119,-123,-122,-27,-30,-31,-34,-83,-84,-29,]),'FUNCTION':([0,63,185,209,],[19,106,19,19,]),'CONST':([0,185,209,],[20,20,20,]),'IF':([0,185,209,],[21,21,21,]),'WHILE':([0,185,209,],[22,22,22,]),'RBLOCK':([2,4,5,6,7,8,11,14,15,16,17,23,30,38,39,40,63,64,65,73,74,75,76,77,78,79,80,81,82,83,89,90,91,92,107,108,110,122,124,125,126,127,128,129,130,131,132,133,134,158,164,165,166,168,169,170,172,173,174,176,177,178,180,181,182,184,185,186,208,209,212,213,225,226,227,228,229,230,231,232,233,234,235,236,237,238,243,244,250,251,],[-1,-3,-4,-5,-6,-7,-48,-11,-12,-13,-15,-2,-47,-55,-56,-57,-130,-49,-50,-130,-100,-130,-115,-102,-104,-107,-110,-125,-126,-128,-51,-52,-53,-54,-10,-127,-37,-98,-127,-99,-127,-130,-130,-130,-130,-103,-106,-109,-112,-35,-129,-115,-101,-114,-118,-105,-117,-121,-108,-120,-124,-111,-123,-131,-80,-28,213,-33,-81,-36,237,-32,-82,-114,-113,-117,-116,-120,-119,-123,-122,243,-27,-30,-31,-34,-83,250,-84,-29,]),'RETURN':([2,4,5,6,7,8,11,14,15,16,17,23,30,38,39,40,63,64,65,73,74,75,76,77,78,79,80,81,82,83,89,90,91,92,107,108,110,122,124,125,126,127,128,129,130,131,132,133,134,158,164,165,166,168,169,170,172,173,174,176,177,178,180,181,182,184,186,208,209,213,225,226,227,228,229,230,231,232,233,234,235,236,237,238,243,250,251,],[-1,-3,-4,-5,-6,-7,-48,-11,-12,-13,-15,-2,-47,-55,-56,-57,-130,-49,-50,-130,-100,-130,-115,-102,-104,-107,-110,-125,-126,-128,-51,-52,-53,-54,-10,-127,-37,-98,-127,-99,-127,-130,-130,-130,-130,-103,-106,-109,-112,-35,-129,-115,-101,-114,-118,-105,-117,-121,-108,-120,-124,-111,-123,-131,-80,-28,-33,-81,-36,-32,-82,-114,-113,-117,-116,-120,-119,-123,-122,244,-27,-30,-31,-34,-83,-84,-29,]),'COLON':([3,24,25,26,32,33,41,45,46,47,48,49,50,51,52,53,67,87,93,108,109,145,152,155,156,190,192,193,195,196,197,198,215,247,248,],[23,38,39,40,64,65,-41,-38,-39,-40,-42,-43,89,90,91,92,110,-85,-58,-39,158,-59,-66,-78,-79,-61,-68,-93,-64,-65,-95,-96,-60,-67,-94,]),'LPAREN':([9,18,21,22,35,56,57,58,59,60,61,62,96,97,98,106,127,128,129,130,200,202,204,206,],[27,34,36,37,84,99,100,101,102,103,104,105,147,148,149,157,167,171,175,179,167,171,175,179,]),'EQUAL':([9,31,],[28,63,]),'PERIOD':([9,34,36,37,63,71,73,75,76,77,78,79,80,81,82,83,108,124,126,127,128,129,130,137,139,140,141,143,164,167,168,171,172,175,176,179,180,181,227,229,231,233,],[29,-130,-130,-130,-130,-127,-130,-130,-115,-130,-130,-130,-130,135,-126,-128,-127,-127,-127,-130,-130,-130,-130,-130,-24,-25,-26,-130,-129,-130,-114,-130,-117,-130,-120,-130,-123,-131,-113,-116,-119,-122,]),'STRING':([27,28,34,36,37,48,49,54,63,84,88,99,100,102,103,111,112,113,114,115,116,117,118,119,121,137,139,140,141,143,146,147,157,194,216,242,246,],[45,45,72,72,72,-42,-43,45,45,45,45,45,45,45,45,160,-16,-17,-18,-19,-20,-21,-22,-23,163,72,-24,-25,-26,72,45,45,45,45,45,45,45,]),'NUM':([27,28,34,36,37,48,49,54,63,71,73,75,76,77,78,79,80,81,82,83,84,88,99,100,102,103,108,111,112,113,114,115,116,117,118,119,120,123,124,126,127,128,129,130,135,137,139,140,141,143,146,147,157,164,167,168,171,172,175,176,179,180,181,194,200,202,204,206,216,227,229,231,233,242,246,],[46,46,71,71,71,-42,-43,46,108,-127,124,126,-115,124,124,124,124,-125,-126,-128,46,46,46,46,46,46,-127,161,-16,-17,-18,-19,-20,-21,-22,-23,162,164,-127,-127,168,172,176,180,181,71,-24,-25,-26,71,46,46,46,-129,124,-114,124,-117,124,-120,124,-123,-131,46,226,228,230,232,46,-113,-116,-119,-122,46,46,]),'TRUE':([27,28,54,63,70,71,72,84,88,99,100,102,103,146,147,157,194,216,242,246,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'FALSE':([27,28,54,63,70,71,72,84,88,99,100,102,103,146,147,157,194,216,242,246,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'LBRACKET':([28,63,148,149,191,194,216,242,246,254,],[54,54,191,194,216,54,54,54,54,216,]),'NEW':([28,63,194,216,242,246,],[55,55,218,218,218,218,]),'PUSH':([29,],[56,]),'UNSHIFT':([29,],[57,]),'POP':([29,],[58,]),'ADD':([29,],[59,]),'DELETE':([29,],[60,]),'CLEAR':([29,],[61,]),'LENGTH':([29,],[62,]),'RPAREN':([34,36,37,41,42,43,44,45,46,47,48,49,66,68,69,71,73,74,75,76,77,78,79,80,81,82,83,85,86,95,101,104,105,122,124,125,126,127,128,129,130,131,132,133,134,136,137,139,140,141,143,144,147,148,149,150,151,153,154,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,187,188,189,199,201,203,205,207,226,227,228,229,230,231,232,233,240,241,],[67,-130,-130,-41,87,-86,-87,-38,-39,-40,-42,-43,109,-8,-9,-127,-130,-100,-130,-115,-102,-104,-107,-110,-125,-126,-128,138,142,-62,152,155,156,-98,-127,-99,-127,-130,-130,-130,-130,-103,-106,-109,-112,182,-130,-24,-25,-26,-130,-88,190,192,193,195,196,197,198,-132,-135,-136,-133,-134,-129,-115,-101,-130,-114,-118,-105,-130,-117,-121,-108,-130,-120,-124,-111,-130,-123,-131,210,214,-63,215,225,227,229,231,233,-114,-113,-117,-116,-120,-119,-123,-122,247,248,]),'PLUS':([34,36,37,63,71,73,75,76,77,78,79,80,81,82,83,108,124,126,127,137,139,140,141,143,164,165,168,172,176,180,181,227,229,231,233,],[73,73,73,73,-127,-130,-130,127,-130,-130,-130,-130,-125,-126,-128,-127,-127,-127,-130,73,-24,-25,-26,73,-129,200,-114,-117,-120,-123,-131,-113,-116,-119,-122,]),'MINUS':([34,36,37,63,71,73,75,76,77,78,79,80,81,82,83,108,124,126,127,128,129,130,137,139,140,141,143,164,167,168,169,171,172,175,176,179,180,181,227,229,231,233,],[75,75,75,75,-127,123,123,128,123,123,123,123,-125,-126,-128,-127,-127,-127,123,123,123,123,75,-24,-25,-26,75,-129,123,-114,202,123,-117,123,-120,123,-123,-131,-113,-116,-119,-122,]),'TIMES':([34,36,37,63,71,73,75,76,77,78,79,80,81,82,83,108,124,126,129,137,139,140,141,143,164,168,172,173,176,180,181,227,229,231,233,],[-130,-130,-130,-130,-127,-130,-130,129,-130,-130,-130,-130,-125,-126,-128,-127,-127,-127,-130,-130,-24,-25,-26,-130,-129,-114,-117,204,-120,-123,-131,-113,-116,-119,-122,]),'DIVIDE':([34,36,37,63,71,73,75,76,77,78,79,80,81,82,83,108,124,126,130,137,139,140,141,143,164,168,172,176,177,180,181,227,229,231,233,],[-130,-130,-130,-130,-127,-130,-130,130,-130,-130,-130,-130,-125,-126,-128,-127,-127,-127,-130,-130,-24,-25,-26,-130,-129,-114,-117,-120,206,-123,-131,-113,-116,-119,-122,]),'AND':([36,37,68,69,71,73,74,75,76,77,78,79,80,81,82,83,85,86,122,124,125,126,127,128,129,130,131,132,133,134,159,160,161,162,163,164,165,166,168,169,170,172,173,174,176,177,178,180,181,226,227,228,229,230,231,232,233,],[-130,-130,-8,-9,-127,-130,-100,-130,-115,-102,-104,-107,-110,-125,-126,-128,139,139,-98,-127,-99,-127,-130,-130,-130,-130,-103,-106,-109,-112,-132,-135,-136,-133,-134,-129,-115,-101,-114,-118,-105,-117,-121,-108,-120,-124,-111,-123,-131,-114,-113,-117,-116,-120,-119,-123,-122,]),'OR':([36,37,68,69,71,73,74,75,76,77,78,79,80,81,82,83,85,86,122,124,125,126,127,128,129,130,131,132,133,134,159,160,161,162,163,164,165,166,168,169,170,172,173,174,176,177,178,180,181,226,227,228,229,230,231,232,233,],[-130,-130,-8,-9,-127,-130,-100,-130,-115,-102,-104,-107,-110,-125,-126,-128,140,140,-98,-127,-99,-127,-130,-130,-130,-130,-103,-106,-109,-112,-132,-135,-136,-133,-134,-129,-115,-101,-114,-118,-105,-117,-121,-108,-120,-124,-111,-123,-131,-114,-113,-117,-116,-120,-119,-123,-122,]),'NOT':([36,37,68,69,71,73,74,75,76,77,78,79,80,81,82,83,85,86,122,124,125,126,127,128,129,130,131,132,133,134,159,160,161,162,163,164,165,166,168,169,170,172,173,174,176,177,178,180,181,226,227,228,229,230,231,232,233,],[-130,-130,-8,-9,-127,-130,-100,-130,-115,-102,-104,-107,-110,-125,-126,-128,141,141,-98,-127,-99,-127,-130,-130,-130,-130,-103,-106,-109,-112,-132,-135,-136,-133,-134,-129,-115,-101,-114,-118,-105,-117,-121,-108,-120,-124,-111,-123,-131,-114,-113,-117,-116,-120,-119,-123,-122,]),'COMMA':([41,44,45,46,47,48,49,93,95,145,190,192,193,215,220,221,222,223,224,239,247,248,253,],[-41,88,-38,-39,-40,-42,-43,-58,146,-59,-61,-68,-93,-60,242,-71,-72,-73,-74,246,-67,-94,254,]),'RBRACKET':([41,45,46,47,48,49,54,93,94,95,145,188,190,192,193,194,215,217,219,220,221,222,223,224,242,247,248,249,252,253,255,],[-41,-38,-39,-40,-42,-43,93,-58,145,-62,-59,-63,-61,-68,-93,-77,-60,240,241,-75,-71,-72,-73,-74,-77,-67,-94,-76,253,-69,-70,]),'ARRAY':([55,218,],[96,96,]),'MAP':([55,218,],[97,97,]),'SET':([55,218,],[98,98,]),'ISEQUAL':([70,71,72,],[112,112,112,]),'IS_NOT_IDENTICAL':([70,71,72,],[113,113,113,]),'IS_IDENTICAL':([70,71,72,],[114,114,114,]),'GREATER':([70,71,72,],[115,115,115,]),'GREATEREQUAL':([70,71,72,],[116,116,116,]),'LESS':([70,71,72,],[117,117,117,]),'LESSEQUAL':([70,71,72,],[118,118,118,]),'LBLOCK':([138,142,182,210,211,214,245,],[185,185,209,185,185,185,185,]),'ELSE':([184,213,235,237,],[211,-32,245,-31,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'sentencia':([0,185,209,],[1,212,234,]),'callMethods':([0,185,209,],[2,2,2,]),'callFunction':([0,185,209,],[3,3,3,]),'varDeclaration':([0,185,209,],[4,4,4,]),'controlExpression':([0,185,209,],[5,5,5,]),'impresion':([0,185,209,],[6,6,6,]),'declareteFunction':([0,185,209,],[7,7,7,]),'assingOperadores':([0,185,209,],[8,8,8,]),'varType':([0,185,209,],[10,10,10,]),'assign':([0,10,185,209,],[11,30,11,11,]),'sentencias_if':([0,185,209,],[14,14,14,]),'sentencias_if_else':([0,185,209,],[15,15,15,]),'sentencias_while':([0,185,209,],[16,16,16,]),'impresion_vacio':([0,185,209,],[17,17,17,]),'methodArray':([9,],[24,]),'methodSet':([9,],[25,]),'methodMap':([9,],[26,]),'params':([27,84,157,],[42,136,199,]),'paramList':([27,84,88,157,],[43,43,144,43,]),'javaScript_param':([27,28,54,63,84,88,99,100,102,103,146,147,157,194,216,242,246,],[44,53,95,53,44,44,150,95,153,154,95,95,44,221,221,221,221,]),'boolean':([27,28,54,63,70,71,72,84,88,99,100,102,103,146,147,157,194,216,242,246,],[47,47,47,47,119,119,119,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'arrayDeclare':([28,63,194,216,242,246,],[50,50,224,224,224,224,]),'declareMap':([28,63,194,216,242,246,],[51,51,223,223,223,223,]),'declararSet':([28,63,194,216,242,246,],[52,52,222,222,222,222,]),'expression':([34,36,37,137,143,],[66,85,86,183,187,]),'conditionalEspecifico':([34,36,37,137,143,],[68,68,68,68,68,]),'inicializarOp':([34,36,37,63,137,143,],[69,69,69,107,69,69,]),'operacionesMath':([34,36,37,63,73,75,77,78,79,80,137,143,],[74,74,74,74,122,125,131,132,133,134,74,74,]),'numOperadores':([34,36,37,63,73,75,77,78,79,80,127,128,129,130,137,143,167,171,175,179,],[76,76,76,76,76,76,76,76,76,76,165,169,173,177,76,76,201,203,205,207,]),'suma':([34,36,37,63,73,75,77,78,79,80,127,137,143,],[77,77,77,77,77,77,77,77,77,77,166,77,77,]),'restas':([34,36,37,63,73,75,77,78,79,80,128,137,143,],[78,78,78,78,78,78,78,78,78,78,170,78,78,]),'multiplicacion':([34,36,37,63,73,75,77,78,79,80,129,137,143,],[79,79,79,79,79,79,79,79,79,79,174,79,79,]),'divicion':([34,36,37,63,73,75,77,78,79,80,130,137,143,],[80,80,80,80,80,80,80,80,80,80,178,80,80,]),'enteros':([34,36,37,63,73,75,77,78,79,80,127,128,129,130,137,143,167,171,175,179,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'decimales':([34,36,37,63,73,75,77,78,79,80,127,128,129,130,137,143,167,171,175,179,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'numNegative':([34,36,37,63,73,75,77,78,79,80,127,128,129,130,137,143,167,171,175,179,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'arrayValues':([54,100,146,147,],[94,151,188,189,]),'opConditional':([70,71,72,],[111,120,121,]),'operadorLogical':([85,86,],[137,143,]),'dataCondi':([111,],[159,]),'cuerpo_de_sentencias':([138,142,210,211,214,245,],[184,186,235,236,238,251,]),'sentencesCmpt':([182,],[208,]),'iterableMap':([191,254,],[217,255,]),'iterableSet':([194,242,],[219,249,]),'keyValue':([194,216,242,246,],[220,239,220,252,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> sentencia","S'",1,None,None,None),
  ('sentencia -> callMethods','sentencia',1,'p_sentencia','analisisSintactico.py',7),
  ('sentencia -> callFunction COLON','sentencia',2,'p_sentencia','analisisSintactico.py',8),
  ('sentencia -> varDeclaration','sentencia',1,'p_sentencia','analisisSintactico.py',9),
  ('sentencia -> controlExpression','sentencia',1,'p_sentencia','analisisSintactico.py',10),
  ('sentencia -> impresion','sentencia',1,'p_sentencia','analisisSintactico.py',11),
  ('sentencia -> declareteFunction','sentencia',1,'p_sentencia','analisisSintactico.py',12),
  ('sentencia -> assingOperadores','sentencia',1,'p_sentencia','analisisSintactico.py',13),
  ('expression -> conditionalEspecifico','expression',1,'p_expression','analisisSintactico.py',18),
  ('expression -> inicializarOp','expression',1,'p_expression','analisisSintactico.py',19),
  ('assingOperadores -> varType ID EQUAL inicializarOp','assingOperadores',4,'p_assingOperadores','analisisSintactico.py',23),
  ('controlExpression -> sentencias_if','controlExpression',1,'p_controlExpression','analisisSintactico.py',26),
  ('controlExpression -> sentencias_if_else','controlExpression',1,'p_controlExpression','analisisSintactico.py',27),
  ('controlExpression -> sentencias_while','controlExpression',1,'p_controlExpression','analisisSintactico.py',28),
  ('controlExpression -> impresion','controlExpression',1,'p_controlExpression','analisisSintactico.py',29),
  ('controlExpression -> impresion_vacio','controlExpression',1,'p_controlExpression','analisisSintactico.py',30),
  ('opConditional -> ISEQUAL','opConditional',1,'p_opConditional','analisisSintactico.py',35),
  ('opConditional -> IS_NOT_IDENTICAL','opConditional',1,'p_opConditional','analisisSintactico.py',36),
  ('opConditional -> IS_IDENTICAL','opConditional',1,'p_opConditional','analisisSintactico.py',37),
  ('opConditional -> GREATER','opConditional',1,'p_opConditional','analisisSintactico.py',38),
  ('opConditional -> GREATEREQUAL','opConditional',1,'p_opConditional','analisisSintactico.py',39),
  ('opConditional -> LESS','opConditional',1,'p_opConditional','analisisSintactico.py',40),
  ('opConditional -> LESSEQUAL','opConditional',1,'p_opConditional','analisisSintactico.py',41),
  ('opConditional -> boolean','opConditional',1,'p_opConditional','analisisSintactico.py',42),
  ('operadorLogical -> AND','operadorLogical',1,'p_operadorLogical','analisisSintactico.py',45),
  ('operadorLogical -> OR','operadorLogical',1,'p_operadorLogical','analisisSintactico.py',46),
  ('operadorLogical -> NOT','operadorLogical',1,'p_operadorLogical','analisisSintactico.py',47),
  ('sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias','sentencias_if',7,'p_sentencias_if','analisisSintactico.py',51),
  ('sentencias_if -> IF LPAREN expression RPAREN cuerpo_de_sentencias','sentencias_if',5,'p_sentencias_if','analisisSintactico.py',52),
  ('sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias','sentencias_if_else',9,'p_sentencias_if_else','analisisSintactico.py',57),
  ('sentencias_if_else -> IF LPAREN expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias','sentencias_if_else',7,'p_sentencias_if_else','analisisSintactico.py',58),
  ('cuerpo_de_sentencias -> LBLOCK sentencia RBLOCK','cuerpo_de_sentencias',3,'p_cuerpo_de_sentencias','analisisSintactico.py',61),
  ('cuerpo_de_sentencias -> LBLOCK RBLOCK','cuerpo_de_sentencias',2,'p_cuerpo_de_sentencias','analisisSintactico.py',62),
  ('sentencias_while -> WHILE LPAREN expression RPAREN cuerpo_de_sentencias','sentencias_while',5,'p_sentencias_while','analisisSintactico.py',66),
  ('sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias','sentencias_while',7,'p_sentencias_while','analisisSintactico.py',67),
  ('impresion -> ALERT LPAREN expression RPAREN COLON','impresion',5,'p_impresion','analisisSintactico.py',72),
  ('impresion -> <empty>','impresion',0,'p_impresion','analisisSintactico.py',73),
  ('impresion_vacio -> ALERT LPAREN RPAREN COLON','impresion_vacio',4,'p_impresion_vacio','analisisSintactico.py',76),
  ('javaScript_param -> STRING','javaScript_param',1,'p_javaScript_param','analisisSintactico.py',93),
  ('javaScript_param -> NUM','javaScript_param',1,'p_javaScript_param','analisisSintactico.py',94),
  ('javaScript_param -> boolean','javaScript_param',1,'p_javaScript_param','analisisSintactico.py',95),
  ('javaScript_param -> ID','javaScript_param',1,'p_javaScript_param','analisisSintactico.py',96),
  ('boolean -> TRUE','boolean',1,'p_boolean','analisisSintactico.py',105),
  ('boolean -> FALSE','boolean',1,'p_boolean','analisisSintactico.py',106),
  ('varType -> LET','varType',1,'p_varType','analisisSintactico.py',111),
  ('varType -> CONST','varType',1,'p_varType','analisisSintactico.py',112),
  ('varType -> VAR','varType',1,'p_varType','analisisSintactico.py',113),
  ('varDeclaration -> varType assign','varDeclaration',2,'p_varDeclaration','analisisSintactico.py',119),
  ('varDeclaration -> assign','varDeclaration',1,'p_varDeclaration','analisisSintactico.py',120),
  ('varDeclaration -> LET ID COLON','varDeclaration',3,'p_varDeclaration','analisisSintactico.py',121),
  ('varDeclaration -> VAR ID COLON','varDeclaration',3,'p_varDeclaration','analisisSintactico.py',122),
  ('assign -> ID EQUAL arrayDeclare COLON','assign',4,'p_assign','analisisSintactico.py',126),
  ('assign -> ID EQUAL declareMap COLON','assign',4,'p_assign','analisisSintactico.py',127),
  ('assign -> ID EQUAL declararSet COLON','assign',4,'p_assign','analisisSintactico.py',128),
  ('assign -> ID EQUAL javaScript_param COLON','assign',4,'p_assign','analisisSintactico.py',129),
  ('callMethods -> ID methodArray COLON','callMethods',3,'p_callMethods','analisisSintactico.py',135),
  ('callMethods -> ID methodSet COLON','callMethods',3,'p_callMethods','analisisSintactico.py',136),
  ('callMethods -> ID methodMap COLON','callMethods',3,'p_callMethods','analisisSintactico.py',137),
  ('arrayDeclare -> LBRACKET RBRACKET','arrayDeclare',2,'p_arrayDeclare','analisisSintactico.py',142),
  ('arrayDeclare -> LBRACKET arrayValues RBRACKET','arrayDeclare',3,'p_arrayDeclare','analisisSintactico.py',143),
  ('arrayDeclare -> NEW ARRAY LPAREN arrayValues RPAREN','arrayDeclare',5,'p_arrayDeclare','analisisSintactico.py',144),
  ('arrayDeclare -> NEW ARRAY LPAREN RPAREN','arrayDeclare',4,'p_arrayDeclare','analisisSintactico.py',145),
  ('arrayValues -> javaScript_param','arrayValues',1,'p_arrayValues','analisisSintactico.py',150),
  ('arrayValues -> javaScript_param COMMA arrayValues','arrayValues',3,'p_arrayValues','analisisSintactico.py',151),
  ('methodArray -> PERIOD PUSH LPAREN javaScript_param RPAREN','methodArray',5,'p_methodArray','analisisSintactico.py',157),
  ('methodArray -> PERIOD UNSHIFT LPAREN arrayValues RPAREN','methodArray',5,'p_methodArray','analisisSintactico.py',158),
  ('methodArray -> PERIOD POP LPAREN RPAREN','methodArray',4,'p_methodArray','analisisSintactico.py',159),
  ('declareMap -> NEW MAP LPAREN LBRACKET iterableMap RBRACKET RPAREN','declareMap',7,'p_declareMap','analisisSintactico.py',163),
  ('declareMap -> NEW MAP LPAREN RPAREN','declareMap',4,'p_declareMap','analisisSintactico.py',164),
  ('iterableMap -> LBRACKET keyValue COMMA keyValue RBRACKET','iterableMap',5,'p_iterableMap','analisisSintactico.py',168),
  ('iterableMap -> LBRACKET keyValue COMMA keyValue RBRACKET COMMA iterableMap','iterableMap',7,'p_iterableMap','analisisSintactico.py',169),
  ('keyValue -> javaScript_param','keyValue',1,'p_keyValue','analisisSintactico.py',173),
  ('keyValue -> declararSet','keyValue',1,'p_keyValue','analisisSintactico.py',174),
  ('keyValue -> declareMap','keyValue',1,'p_keyValue','analisisSintactico.py',175),
  ('keyValue -> arrayDeclare','keyValue',1,'p_keyValue','analisisSintactico.py',176),
  ('iterableSet -> keyValue','iterableSet',1,'p_iterableSet','analisisSintactico.py',181),
  ('iterableSet -> keyValue COMMA iterableSet','iterableSet',3,'p_iterableSet','analisisSintactico.py',182),
  ('iterableSet -> <empty>','iterableSet',0,'p_iterableSet','analisisSintactico.py',183),
  ('methodMap -> PERIOD CLEAR LPAREN RPAREN','methodMap',4,'p_methodMap','analisisSintactico.py',186),
  ('methodMap -> PERIOD LENGTH LPAREN RPAREN','methodMap',4,'p_methodMap','analisisSintactico.py',187),
  ('declareteFunction -> FUNCTION ID LPAREN params RPAREN','declareteFunction',5,'p_declareteFunction','analisisSintactico.py',192),
  ('declareteFunction -> FUNCTION ID LPAREN params RPAREN sentencesCmpt','declareteFunction',6,'p_declareteFunction','analisisSintactico.py',193),
  ('declareteFunction -> varType ID EQUAL FUNCTION LPAREN params RPAREN','declareteFunction',7,'p_declareteFunction','analisisSintactico.py',194),
  ('sentencesCmpt -> LBLOCK sentencia RBLOCK','sentencesCmpt',3,'p_sentencesCmpt','analisisSintactico.py',199),
  ('sentencesCmpt -> LBLOCK sentencia RETURN RBLOCK','sentencesCmpt',4,'p_sentencesCmpt','analisisSintactico.py',200),
  ('callFunction -> ID LPAREN params RPAREN','callFunction',4,'p_callFunction','analisisSintactico.py',205),
  ('params -> paramList','params',1,'p_params','analisisSintactico.py',211),
  ('paramList -> javaScript_param','paramList',1,'p_paramList','analisisSintactico.py',217),
  ('paramList -> javaScript_param COMMA paramList','paramList',3,'p_paramList','analisisSintactico.py',218),
  ('args -> argslist','args',1,'p_args','analisisSintactico.py',224),
  ('args -> javaScript_param','args',1,'p_args','analisisSintactico.py',225),
  ('argslist -> args','argslist',1,'p_argslist','analisisSintactico.py',229),
  ('argslist -> args COMMA argslist','argslist',3,'p_argslist','analisisSintactico.py',230),
  ('declararSet -> NEW SET LPAREN RPAREN','declararSet',4,'p_declararSet','analisisSintactico.py',239),
  ('declararSet -> NEW SET LPAREN LBRACKET iterableSet RBRACKET RPAREN','declararSet',7,'p_declararSet','analisisSintactico.py',240),
  ('methodSet -> PERIOD ADD LPAREN javaScript_param RPAREN','methodSet',5,'p_methodSet','analisisSintactico.py',249),
  ('methodSet -> PERIOD DELETE LPAREN javaScript_param RPAREN','methodSet',5,'p_methodSet','analisisSintactico.py',250),
  ('methodSet -> PERIOD CLEAR LPAREN RPAREN','methodSet',4,'p_methodSet','analisisSintactico.py',251),
  ('inicializarOp -> PLUS operacionesMath','inicializarOp',2,'p_inicializarOp','analisisSintactico.py',259),
  ('inicializarOp -> MINUS operacionesMath','inicializarOp',2,'p_inicializarOp','analisisSintactico.py',260),
  ('inicializarOp -> operacionesMath','inicializarOp',1,'p_inicializarOp','analisisSintactico.py',261),
  ('operacionesMath -> numOperadores PLUS suma','operacionesMath',3,'p_operacionesMath','analisisSintactico.py',264),
  ('operacionesMath -> suma','operacionesMath',1,'p_operacionesMath','analisisSintactico.py',265),
  ('operacionesMath -> suma operacionesMath','operacionesMath',2,'p_operacionesMath','analisisSintactico.py',266),
  ('operacionesMath -> restas','operacionesMath',1,'p_operacionesMath','analisisSintactico.py',267),
  ('operacionesMath -> numOperadores MINUS restas','operacionesMath',3,'p_operacionesMath','analisisSintactico.py',268),
  ('operacionesMath -> restas operacionesMath','operacionesMath',2,'p_operacionesMath','analisisSintactico.py',269),
  ('operacionesMath -> multiplicacion','operacionesMath',1,'p_operacionesMath','analisisSintactico.py',270),
  ('operacionesMath -> numOperadores TIMES multiplicacion','operacionesMath',3,'p_operacionesMath','analisisSintactico.py',271),
  ('operacionesMath -> multiplicacion operacionesMath','operacionesMath',2,'p_operacionesMath','analisisSintactico.py',272),
  ('operacionesMath -> divicion','operacionesMath',1,'p_operacionesMath','analisisSintactico.py',273),
  ('operacionesMath -> numOperadores DIVIDE divicion','operacionesMath',3,'p_operacionesMath','analisisSintactico.py',274),
  ('operacionesMath -> divicion operacionesMath','operacionesMath',2,'p_operacionesMath','analisisSintactico.py',275),
  ('suma -> numOperadores PLUS LPAREN numOperadores RPAREN','suma',5,'p_suma','analisisSintactico.py',278),
  ('suma -> numOperadores PLUS NUM','suma',3,'p_suma','analisisSintactico.py',279),
  ('suma -> numOperadores','suma',1,'p_suma','analisisSintactico.py',280),
  ('restas -> numOperadores MINUS LPAREN numOperadores RPAREN','restas',5,'p_restas','analisisSintactico.py',284),
  ('restas -> numOperadores MINUS NUM','restas',3,'p_restas','analisisSintactico.py',285),
  ('restas -> numOperadores','restas',1,'p_restas','analisisSintactico.py',286),
  ('multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN','multiplicacion',5,'p_multiplicacion','analisisSintactico.py',289),
  ('multiplicacion -> numOperadores TIMES NUM','multiplicacion',3,'p_multiplicacion','analisisSintactico.py',290),
  ('multiplicacion -> numOperadores','multiplicacion',1,'p_multiplicacion','analisisSintactico.py',291),
  ('divicion -> numOperadores DIVIDE LPAREN numOperadores RPAREN','divicion',5,'p_divicion','analisisSintactico.py',294),
  ('divicion -> numOperadores DIVIDE NUM','divicion',3,'p_divicion','analisisSintactico.py',295),
  ('divicion -> numOperadores','divicion',1,'p_divicion','analisisSintactico.py',296),
  ('numOperadores -> enteros','numOperadores',1,'p_numOperadores','analisisSintactico.py',299),
  ('numOperadores -> decimales','numOperadores',1,'p_numOperadores','analisisSintactico.py',300),
  ('enteros -> NUM','enteros',1,'p_enteros','analisisSintactico.py',303),
  ('enteros -> numNegative','enteros',1,'p_enteros','analisisSintactico.py',304),
  ('numNegative -> MINUS NUM','numNegative',2,'p_numNegative','analisisSintactico.py',307),
  ('numNegative -> <empty>','numNegative',0,'p_numNegative','analisisSintactico.py',308),
  ('decimales -> enteros PERIOD NUM','decimales',3,'p_decimales','analisisSintactico.py',311),
  ('conditionalEspecifico -> ID opConditional dataCondi','conditionalEspecifico',3,'p_coditionalEspecifico','analisisSintactico.py',317),
  ('conditionalEspecifico -> NUM opConditional NUM','conditionalEspecifico',3,'p_coditionalEspecifico','analisisSintactico.py',318),
  ('conditionalEspecifico -> STRING opConditional STRING','conditionalEspecifico',3,'p_coditionalEspecifico','analisisSintactico.py',319),
  ('dataCondi -> STRING','dataCondi',1,'p_dataCondi','analisisSintactico.py',324),
  ('dataCondi -> NUM','dataCondi',1,'p_dataCondi','analisisSintactico.py',325),
]
