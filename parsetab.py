
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD ALERT AND ARRAY CLEAR COLON COMMA CONST DELETE DIVIDE DIV_EQUAL ELSE EQUAL FALSE FUNCTION GET GREATER GREATEREQUAL HAS ID IF ISEQUAL IS_IDENTICAL IS_NOT_IDENTICAL LBLOCK LBRACKET LENGTH LESS LESSEQUAL LET LPAREN MAP MINUS MINUS_EQUAL MOD MOD_EQUAL MUL_EQUAL NEW NOT NUM OR PERIOD PLUS PLUS_EQUAL POP PUSH RBLOCK RBRACKET RETURN RPAREN SET STRING TIMES TRUE TWOPOINTS UNSHIFT VAR WHILE WITH YIELD sentencia :  callMethods\n                    | callFunction COLON\n                    | varDeclaration\n                    | controlExpression\n                    | impresion\n                    | declareteFunction\n                    | assingOperadores\n\n\n                     expression :  conditionalEspecifico\n                     | inicializarOp\n     assingOperadores : varType ID EQUAL inicializarOp  controlExpression : sentencias_if\n                        | sentencias_if_else\n                        | sentencias_while\n                        | impresion\n                        | impresion_vacio\n             opConditional : ISEQUAL\n                      |  IS_NOT_IDENTICAL\n                      |  IS_IDENTICAL\n                      | GREATER\n                      | GREATEREQUAL\n                      | LESS\n                      | LESSEQUAL\n                      | boolean\n                      operadorLogical : AND\n                        | OR\n                        | NOT sentencias_if : IF LPAREN expression operadorLogical expression  RPAREN LBLOCK sentencia RBLOCK\n                    | IF LPAREN expression RPAREN LBLOCK sentencia RBLOCKsentencias_if_else : IF LPAREN expression operadorLogical expression  RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK\n                          | IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK sentencias_while : WHILE LPAREN  expression RPAREN LBLOCK sentencia RBLOCK\n                        | WHILE LPAREN  expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCKimpresion : ALERT LPAREN expression  RPARENimpresion_vacio : ALERT LPAREN RPARENjavaScript_param : STRING\n                         | NUM\n                         | boolean\n                         | ID\n    boolean : TRUE\n             | FALSE\n         varType : LET\n                | CONST\n                | VAR\n               varDeclaration : varType assign\n                    | assign\n                    | LET ID COLON\n                    | VAR ID COLON\n                   assign : ID  EQUAL  arrayDeclare COLON\n                    |  ID EQUAL declareMap COLON\n                    |  ID EQUAL declararSet COLON\n                    |  ID EQUAL javaScript_param COLON callMethods : ID methodArray COLON\n                     | ID methodSet COLON\n                     | ID methodMap COLONarrayDeclare :  LBRACKET javaScript_param COMMA javaScript_param RBRACKET\n                       | NEW ARRAY LPAREN arrayValues RPAREN\n                     arrayValues :  javaScript_param\n                    | javaScript_param COMMA javaScript_param methodArray : PERIOD PUSH LPAREN javaScript_param RPAREN\n                      | PERIOD UNSHIFT LPAREN javaScript_param RPAREN\n                      | PERIOD POP LPAREN  RPAREN declareMap :  NEW MAP LPAREN LBRACKET iterable RBRACKET RPAREN\n                    | NEW MAP LPAREN  RPAREN\n                     iterableMap : LBRACKET keyValue COMMA keyValue RBRACKET\n                      | LBRACKET keyValue COMMA keyValue RBRACKET COMMA iterableMap iterable : iterableMap\n                   | iterableArray\n                   | iterableSet  keyValue : javaScript_param\n                  | iterableMap\n                  | iterableArray\n                  | iterableSet\n                  | declareMap\n                  | arrayDeclare  iterableArray :  arrayDeclare\n                       | arrayDeclare COMMA arrayDeclare  iterableSet : declararSet\n                     | declararSet COMMA declararSet\n                    | methodMap : PERIOD CLEAR LPAREN RPAREN\n                   | PERIOD LENGTH LPAREN RPAREN  declareteFunction : FUNCTION ID LPAREN params RPAREN\n                          | FUNCTION  ID LPAREN params RPAREN sentencesCmpt\n                          | varType ID EQUAL FUNCTION LPAREN params RPAREN\n                          sentencesCmpt : LBLOCK sentencia RBLOCK\n                     | LBLOCK sentencia RETURN RBLOCK  callFunction : ID LPAREN params RPAREN  \n                    \n                     params : paramList\n               paramList : javaScript_param\n                  | javaScript_param COMMA paramList  args : argslist\n            | javaScript_param\n     argslist : args\n                   | args COMMA argslist\n    declararSet : NEW SET LPAREN LBRACKET iterable RBRACKET RPAREN\n                     methodSet : PERIOD ADD LPAREN javaScript_param RPAREN\n                      | PERIOD DELETE LPAREN javaScript_param RPAREN\n                      | PERIOD CLEAR LPAREN RPAREN  inicializarOp :  PLUS operacionesMath\n                        | MINUS operacionesMath\n                        | operacionesMath  operacionesMath :  numOperadores PLUS suma\n                         | suma\n                          | suma operacionesMath\n                         | restas\n                         | numOperadores MINUS restas\n                         | restas operacionesMath\n                         | multiplicacion\n                         | numOperadores TIMES multiplicacion\n                         | multiplicacion operacionesMath\n                         | divicion\n                         | numOperadores DIVIDE divicion\n                         | divicion operacionesMathsuma : numOperadores PLUS LPAREN numOperadores RPAREN\n            | numOperadores PLUS NUM\n            | numOperadores\n\n             restas : numOperadores MINUS LPAREN numOperadores RPAREN\n               | numOperadores  MINUS NUM\n               | numOperadores  multiplicacion : numOperadores TIMES LPAREN numOperadores RPAREN\n               | numOperadores  TIMES NUM\n               | numOperadores  divicion : numOperadores DIVIDE LPAREN numOperadores RPAREN\n               | numOperadores  DIVIDE NUM\n               | numOperadores  numOperadores : enteros\n                     |  decimales   enteros : NUM\n                 | numNegative numNegative : MINUS NUM\n                 | decimales : enteros PERIOD NUM   conditionalEspecifico :  ID opConditional dataCondi\n                    |  NUM opConditional NUM\n                    | STRING opConditional STRING \n                    dataCondi : STRING\n                  | NUM setMetodoAdd : PERIOD ADD LPAREN javaScript_param RPARENsetMetodoDelete :  PERIOD DELETE LPAREN javaScript_param RPARENsetMetodoClear : PERIOD CLEAR LPAREN RPAREN  ValueMapMethods : ID\n                 | NUM\n                 | STRING\n                  mapMetodoGet : PERIOD GET LPAREN ValueMapMethods RPARENmapMetodoSet : PERIOD GET LPAREN ValueMapMethods COMMA ValueMapMethods RPAREN'
    
_lr_action_items = {'ID':([0,10,12,13,19,20,27,28,34,36,37,54,63,84,88,97,98,100,101,134,136,137,138,140,142,143,153,179,180,202,209,211,229,232,251,260,267,271,],[9,31,32,33,35,-42,41,41,70,70,70,41,41,41,41,41,41,41,41,70,-24,-25,-26,70,41,41,41,9,9,9,41,41,9,9,41,9,9,41,]),'LET':([0,179,180,202,229,232,260,267,],[12,12,12,12,12,12,12,12,]),'VAR':([0,179,180,202,229,232,260,267,],[13,13,13,13,13,13,13,13,]),'ALERT':([0,179,180,202,229,232,260,267,],[18,18,18,18,18,18,18,18,]),'FUNCTION':([0,63,179,180,202,229,232,260,267,],[19,104,19,19,19,19,19,19,19,]),'CONST':([0,179,180,202,229,232,260,267,],[20,20,20,20,20,20,20,20,]),'IF':([0,179,180,202,229,232,260,267,],[21,21,21,21,21,21,21,21,]),'WHILE':([0,179,180,202,229,232,260,267,],[22,22,22,22,22,22,22,22,]),'$end':([1,2,4,5,6,7,8,11,14,15,16,17,23,30,38,39,40,63,64,65,67,73,74,75,76,77,78,79,80,81,82,83,89,90,91,92,105,106,107,119,121,122,123,124,125,126,127,128,129,130,131,159,160,161,163,164,165,167,168,169,171,172,173,175,176,177,201,219,220,221,222,223,224,225,226,227,230,231,246,258,259,261,268,273,],[0,-1,-3,-4,-5,-6,-7,-45,-11,-12,-13,-15,-2,-44,-52,-53,-54,-131,-46,-47,-34,-131,-101,-131,-116,-103,-105,-108,-111,-126,-127,-129,-48,-49,-50,-51,-10,-128,-33,-99,-128,-100,-128,-131,-131,-131,-131,-104,-107,-110,-113,-130,-116,-102,-115,-119,-106,-118,-122,-109,-121,-125,-112,-124,-132,-82,-83,-84,-115,-114,-118,-117,-121,-120,-124,-123,-28,-31,-85,-86,-27,-32,-30,-29,]),'RBLOCK':([2,4,5,6,7,8,11,14,15,16,17,23,30,38,39,40,63,64,65,67,73,74,75,76,77,78,79,80,81,82,83,89,90,91,92,105,106,107,119,121,122,123,124,125,126,127,128,129,130,131,159,160,161,163,164,165,167,168,169,171,172,173,175,176,177,201,204,205,219,220,221,222,223,224,225,226,227,228,230,231,246,247,248,250,258,259,261,265,268,270,273,],[-1,-3,-4,-5,-6,-7,-45,-11,-12,-13,-15,-2,-44,-52,-53,-54,-131,-46,-47,-34,-131,-101,-131,-116,-103,-105,-108,-111,-126,-127,-129,-48,-49,-50,-51,-10,-128,-33,-99,-128,-100,-128,-131,-131,-131,-131,-104,-107,-110,-113,-130,-116,-102,-115,-119,-106,-118,-122,-109,-121,-125,-112,-124,-132,-82,-83,230,231,-84,-115,-114,-118,-117,-121,-120,-124,-123,246,-28,-31,-85,258,259,261,-86,-27,-32,268,-30,273,-29,]),'RETURN':([2,4,5,6,7,8,11,14,15,16,17,23,30,38,39,40,63,64,65,67,73,74,75,76,77,78,79,80,81,82,83,89,90,91,92,105,106,107,119,121,122,123,124,125,126,127,128,129,130,131,159,160,161,163,164,165,167,168,169,171,172,173,175,176,177,201,219,220,221,222,223,224,225,226,227,228,230,231,246,258,259,261,268,273,],[-1,-3,-4,-5,-6,-7,-45,-11,-12,-13,-15,-2,-44,-52,-53,-54,-131,-46,-47,-34,-131,-101,-131,-116,-103,-105,-108,-111,-126,-127,-129,-48,-49,-50,-51,-10,-128,-33,-99,-128,-100,-128,-131,-131,-131,-131,-104,-107,-110,-113,-130,-116,-102,-115,-119,-106,-118,-122,-109,-121,-125,-112,-124,-132,-82,-83,-84,-115,-114,-118,-117,-121,-120,-124,-123,247,-28,-31,-85,-86,-27,-32,-30,-29,]),'COLON':([3,24,25,26,32,33,41,45,46,47,48,49,50,51,52,53,87,106,148,151,152,186,188,189,190,191,207,208,252,257,],[23,38,39,40,64,65,-38,-35,-36,-37,-39,-40,89,90,91,92,-87,-36,-61,-80,-81,-63,-59,-60,-96,-97,-55,-56,-62,-95,]),'LPAREN':([9,18,21,22,35,56,57,58,59,60,61,62,94,95,96,104,124,125,126,127,193,195,197,199,],[27,34,36,37,84,97,98,99,100,101,102,103,143,144,145,153,162,166,170,174,162,166,170,174,]),'EQUAL':([9,31,],[28,63,]),'PERIOD':([9,34,36,37,63,71,73,75,76,77,78,79,80,81,82,83,106,121,123,124,125,126,127,134,136,137,138,140,159,162,163,166,167,170,171,174,175,176,221,223,225,227,],[29,-131,-131,-131,-131,-128,-131,-131,-116,-131,-131,-131,-131,132,-127,-129,-128,-128,-128,-131,-131,-131,-131,-131,-24,-25,-26,-131,-130,-131,-115,-131,-118,-131,-121,-131,-124,-132,-114,-117,-120,-123,]),'STRING':([27,28,34,36,37,48,49,54,63,84,88,97,98,100,101,108,109,110,111,112,113,114,115,116,118,134,136,137,138,140,142,143,153,209,211,251,271,],[45,45,72,72,72,-39,-40,45,45,45,45,45,45,45,45,155,-16,-17,-18,-19,-20,-21,-22,-23,158,72,-24,-25,-26,72,45,45,45,45,45,45,45,]),'NUM':([27,28,34,36,37,48,49,54,63,71,73,75,76,77,78,79,80,81,82,83,84,88,97,98,100,101,106,108,109,110,111,112,113,114,115,116,117,120,121,123,124,125,126,127,132,134,136,137,138,140,142,143,153,159,162,163,166,167,170,171,174,175,176,193,195,197,199,209,211,221,223,225,227,251,271,],[46,46,71,71,71,-39,-40,46,106,-128,121,123,-116,121,121,121,121,-126,-127,-129,46,46,46,46,46,46,-128,156,-16,-17,-18,-19,-20,-21,-22,-23,157,159,-128,-128,163,167,171,175,176,71,-24,-25,-26,71,46,46,46,-130,121,-115,121,-118,121,-121,121,-124,-132,220,222,224,226,46,46,-114,-117,-120,-123,46,46,]),'TRUE':([27,28,54,63,70,71,72,84,88,97,98,100,101,142,143,153,209,211,251,271,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'FALSE':([27,28,54,63,70,71,72,84,88,97,98,100,101,142,143,153,209,211,251,271,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'LBRACKET':([28,63,144,145,185,187,211,243,251,269,271,],[54,54,185,187,211,211,211,54,211,271,211,]),'NEW':([28,63,185,187,211,243,244,251,271,],[55,55,210,210,241,254,256,241,241,]),'PUSH':([29,],[56,]),'UNSHIFT':([29,],[57,]),'POP':([29,],[58,]),'ADD':([29,],[59,]),'DELETE':([29,],[60,]),'CLEAR':([29,],[61,]),'LENGTH':([29,],[62,]),'RPAREN':([34,36,37,41,42,43,44,45,46,47,48,49,66,68,69,71,73,74,75,76,77,78,79,80,81,82,83,85,86,99,102,103,119,121,122,123,124,125,126,127,128,129,130,131,133,134,136,137,138,140,141,144,146,147,149,150,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,178,181,183,184,192,194,196,198,200,220,221,222,223,224,225,226,227,233,242,245,],[67,-131,-131,-38,87,-88,-89,-35,-36,-37,-39,-40,107,-8,-9,-128,-131,-101,-131,-116,-103,-105,-108,-111,-126,-127,-129,135,139,148,151,152,-99,-128,-100,-128,-131,-131,-131,-131,-104,-107,-110,-113,177,-131,-24,-25,-26,-131,-90,186,188,189,190,191,-133,-136,-137,-134,-135,-130,-116,-102,-131,-115,-119,-106,-131,-118,-122,-109,-131,-121,-125,-112,-131,-124,-132,203,206,208,-57,219,221,223,225,227,-115,-114,-118,-117,-121,-120,-124,-123,-58,252,257,]),'PLUS':([34,36,37,63,71,73,75,76,77,78,79,80,81,82,83,106,121,123,124,134,136,137,138,140,159,160,163,167,171,175,176,221,223,225,227,],[73,73,73,73,-128,-131,-131,124,-131,-131,-131,-131,-126,-127,-129,-128,-128,-128,-131,73,-24,-25,-26,73,-130,193,-115,-118,-121,-124,-132,-114,-117,-120,-123,]),'MINUS':([34,36,37,63,71,73,75,76,77,78,79,80,81,82,83,106,121,123,124,125,126,127,134,136,137,138,140,159,162,163,164,166,167,170,171,174,175,176,221,223,225,227,],[75,75,75,75,-128,120,120,125,120,120,120,120,-126,-127,-129,-128,-128,-128,120,120,120,120,75,-24,-25,-26,75,-130,120,-115,195,120,-118,120,-121,120,-124,-132,-114,-117,-120,-123,]),'TIMES':([34,36,37,63,71,73,75,76,77,78,79,80,81,82,83,106,121,123,126,134,136,137,138,140,159,163,167,168,171,175,176,221,223,225,227,],[-131,-131,-131,-131,-128,-131,-131,126,-131,-131,-131,-131,-126,-127,-129,-128,-128,-128,-131,-131,-24,-25,-26,-131,-130,-115,-118,197,-121,-124,-132,-114,-117,-120,-123,]),'DIVIDE':([34,36,37,63,71,73,75,76,77,78,79,80,81,82,83,106,121,123,127,134,136,137,138,140,159,163,167,171,172,175,176,221,223,225,227,],[-131,-131,-131,-131,-128,-131,-131,127,-131,-131,-131,-131,-126,-127,-129,-128,-128,-128,-131,-131,-24,-25,-26,-131,-130,-115,-118,-121,199,-124,-132,-114,-117,-120,-123,]),'AND':([36,37,68,69,71,73,74,75,76,77,78,79,80,81,82,83,85,86,119,121,122,123,124,125,126,127,128,129,130,131,154,155,156,157,158,159,160,161,163,164,165,167,168,169,171,172,173,175,176,220,221,222,223,224,225,226,227,],[-131,-131,-8,-9,-128,-131,-101,-131,-116,-103,-105,-108,-111,-126,-127,-129,136,136,-99,-128,-100,-128,-131,-131,-131,-131,-104,-107,-110,-113,-133,-136,-137,-134,-135,-130,-116,-102,-115,-119,-106,-118,-122,-109,-121,-125,-112,-124,-132,-115,-114,-118,-117,-121,-120,-124,-123,]),'OR':([36,37,68,69,71,73,74,75,76,77,78,79,80,81,82,83,85,86,119,121,122,123,124,125,126,127,128,129,130,131,154,155,156,157,158,159,160,161,163,164,165,167,168,169,171,172,173,175,176,220,221,222,223,224,225,226,227,],[-131,-131,-8,-9,-128,-131,-101,-131,-116,-103,-105,-108,-111,-126,-127,-129,137,137,-99,-128,-100,-128,-131,-131,-131,-131,-104,-107,-110,-113,-133,-136,-137,-134,-135,-130,-116,-102,-115,-119,-106,-118,-122,-109,-121,-125,-112,-124,-132,-115,-114,-118,-117,-121,-120,-124,-123,]),'NOT':([36,37,68,69,71,73,74,75,76,77,78,79,80,81,82,83,85,86,119,121,122,123,124,125,126,127,128,129,130,131,154,155,156,157,158,159,160,161,163,164,165,167,168,169,171,172,173,175,176,220,221,222,223,224,225,226,227,],[-131,-131,-8,-9,-128,-131,-101,-131,-116,-103,-105,-108,-111,-126,-127,-129,138,138,-99,-128,-100,-128,-131,-131,-131,-131,-104,-107,-110,-113,-133,-136,-137,-134,-135,-130,-116,-102,-115,-119,-106,-118,-122,-109,-121,-125,-112,-124,-132,-115,-114,-118,-117,-121,-120,-124,-123,]),'COMMA':([41,44,45,46,47,48,49,93,184,186,207,208,211,216,217,234,235,236,237,238,239,240,252,253,255,257,263,266,271,272,],[-38,88,-35,-36,-37,-39,-40,142,209,-63,-55,-56,-79,243,244,251,-70,142,-71,-72,-73,243,-62,-76,-78,-95,-69,269,-79,-65,]),'RBRACKET':([41,45,46,47,48,49,182,185,186,187,207,208,212,213,214,215,216,217,218,235,237,238,239,240,251,252,253,255,257,262,263,266,272,],[-38,-35,-36,-37,-39,-40,207,-79,-63,-79,-55,-56,242,-66,-67,-68,-75,-77,245,-70,-71,-72,-73,-74,-79,-62,-76,-78,-95,266,-69,-64,-65,]),'ARRAY':([55,210,241,254,],[94,94,94,94,]),'MAP':([55,241,],[95,95,]),'SET':([55,210,241,256,],[96,96,96,96,]),'ISEQUAL':([70,71,72,],[109,109,109,]),'IS_NOT_IDENTICAL':([70,71,72,],[110,110,110,]),'IS_IDENTICAL':([70,71,72,],[111,111,111,]),'GREATER':([70,71,72,],[112,112,112,]),'GREATEREQUAL':([70,71,72,],[113,113,113,]),'LESS':([70,71,72,],[114,114,114,]),'LESSEQUAL':([70,71,72,],[115,115,115,]),'LBLOCK':([135,139,177,203,206,249,264,],[179,180,202,229,232,260,267,]),'ELSE':([230,259,],[249,264,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'sentencia':([0,179,180,202,229,232,260,267,],[1,204,205,228,248,250,265,270,]),'callMethods':([0,179,180,202,229,232,260,267,],[2,2,2,2,2,2,2,2,]),'callFunction':([0,179,180,202,229,232,260,267,],[3,3,3,3,3,3,3,3,]),'varDeclaration':([0,179,180,202,229,232,260,267,],[4,4,4,4,4,4,4,4,]),'controlExpression':([0,179,180,202,229,232,260,267,],[5,5,5,5,5,5,5,5,]),'impresion':([0,179,180,202,229,232,260,267,],[6,6,6,6,6,6,6,6,]),'declareteFunction':([0,179,180,202,229,232,260,267,],[7,7,7,7,7,7,7,7,]),'assingOperadores':([0,179,180,202,229,232,260,267,],[8,8,8,8,8,8,8,8,]),'varType':([0,179,180,202,229,232,260,267,],[10,10,10,10,10,10,10,10,]),'assign':([0,10,179,180,202,229,232,260,267,],[11,30,11,11,11,11,11,11,11,]),'sentencias_if':([0,179,180,202,229,232,260,267,],[14,14,14,14,14,14,14,14,]),'sentencias_if_else':([0,179,180,202,229,232,260,267,],[15,15,15,15,15,15,15,15,]),'sentencias_while':([0,179,180,202,229,232,260,267,],[16,16,16,16,16,16,16,16,]),'impresion_vacio':([0,179,180,202,229,232,260,267,],[17,17,17,17,17,17,17,17,]),'methodArray':([9,],[24,]),'methodSet':([9,],[25,]),'methodMap':([9,],[26,]),'params':([27,84,153,],[42,133,192,]),'paramList':([27,84,88,153,],[43,43,141,43,]),'javaScript_param':([27,28,54,63,84,88,97,98,100,101,142,143,153,209,211,251,271,],[44,53,93,53,44,44,146,147,149,150,182,184,44,233,236,263,263,]),'boolean':([27,28,54,63,70,71,72,84,88,97,98,100,101,142,143,153,209,211,251,271,],[47,47,47,47,116,116,116,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'arrayDeclare':([28,63,185,187,211,243,251,271,],[50,50,216,216,240,253,240,240,]),'declareMap':([28,63,211,251,271,],[51,51,239,239,239,]),'declararSet':([28,63,185,187,211,244,251,271,],[52,52,217,217,217,255,217,217,]),'expression':([34,36,37,134,140,],[66,85,86,178,181,]),'conditionalEspecifico':([34,36,37,134,140,],[68,68,68,68,68,]),'inicializarOp':([34,36,37,63,134,140,],[69,69,69,105,69,69,]),'operacionesMath':([34,36,37,63,73,75,77,78,79,80,134,140,],[74,74,74,74,119,122,128,129,130,131,74,74,]),'numOperadores':([34,36,37,63,73,75,77,78,79,80,124,125,126,127,134,140,162,166,170,174,],[76,76,76,76,76,76,76,76,76,76,160,164,168,172,76,76,194,196,198,200,]),'suma':([34,36,37,63,73,75,77,78,79,80,124,134,140,],[77,77,77,77,77,77,77,77,77,77,161,77,77,]),'restas':([34,36,37,63,73,75,77,78,79,80,125,134,140,],[78,78,78,78,78,78,78,78,78,78,165,78,78,]),'multiplicacion':([34,36,37,63,73,75,77,78,79,80,126,134,140,],[79,79,79,79,79,79,79,79,79,79,169,79,79,]),'divicion':([34,36,37,63,73,75,77,78,79,80,127,134,140,],[80,80,80,80,80,80,80,80,80,80,173,80,80,]),'enteros':([34,36,37,63,73,75,77,78,79,80,124,125,126,127,134,140,162,166,170,174,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'decimales':([34,36,37,63,73,75,77,78,79,80,124,125,126,127,134,140,162,166,170,174,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'numNegative':([34,36,37,63,73,75,77,78,79,80,124,125,126,127,134,140,162,166,170,174,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'opConditional':([70,71,72,],[108,117,118,]),'operadorLogical':([85,86,],[134,140,]),'dataCondi':([108,],[154,]),'arrayValues':([143,],[183,]),'sentencesCmpt':([177,],[201,]),'iterable':([185,187,],[212,218,]),'iterableMap':([185,187,211,251,269,271,],[213,213,235,235,272,235,]),'iterableArray':([185,187,211,251,271,],[214,214,237,237,237,]),'iterableSet':([185,187,211,251,271,],[215,215,238,238,238,]),'keyValue':([211,251,271,],[234,262,234,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> sentencia","S'",1,None,None,None),
  ('sentencia -> callMethods','sentencia',1,'p_sentencia','analisisSintactico.py',7),
  ('sentencia -> callFunction COLON','sentencia',2,'p_sentencia','analisisSintactico.py',8),
  ('sentencia -> varDeclaration','sentencia',1,'p_sentencia','analisisSintactico.py',9),
  ('sentencia -> controlExpression','sentencia',1,'p_sentencia','analisisSintactico.py',10),
  ('sentencia -> impresion','sentencia',1,'p_sentencia','analisisSintactico.py',11),
  ('sentencia -> declareteFunction','sentencia',1,'p_sentencia','analisisSintactico.py',12),
  ('sentencia -> assingOperadores','sentencia',1,'p_sentencia','analisisSintactico.py',13),
  ('expression -> conditionalEspecifico','expression',1,'p_expression','analisisSintactico.py',18),
  ('expression -> inicializarOp','expression',1,'p_expression','analisisSintactico.py',19),
  ('assingOperadores -> varType ID EQUAL inicializarOp','assingOperadores',4,'p_assingOperadores','analisisSintactico.py',23),
  ('controlExpression -> sentencias_if','controlExpression',1,'p_controlExpression','analisisSintactico.py',26),
  ('controlExpression -> sentencias_if_else','controlExpression',1,'p_controlExpression','analisisSintactico.py',27),
  ('controlExpression -> sentencias_while','controlExpression',1,'p_controlExpression','analisisSintactico.py',28),
  ('controlExpression -> impresion','controlExpression',1,'p_controlExpression','analisisSintactico.py',29),
  ('controlExpression -> impresion_vacio','controlExpression',1,'p_controlExpression','analisisSintactico.py',30),
  ('opConditional -> ISEQUAL','opConditional',1,'p_opConditional','analisisSintactico.py',35),
  ('opConditional -> IS_NOT_IDENTICAL','opConditional',1,'p_opConditional','analisisSintactico.py',36),
  ('opConditional -> IS_IDENTICAL','opConditional',1,'p_opConditional','analisisSintactico.py',37),
  ('opConditional -> GREATER','opConditional',1,'p_opConditional','analisisSintactico.py',38),
  ('opConditional -> GREATEREQUAL','opConditional',1,'p_opConditional','analisisSintactico.py',39),
  ('opConditional -> LESS','opConditional',1,'p_opConditional','analisisSintactico.py',40),
  ('opConditional -> LESSEQUAL','opConditional',1,'p_opConditional','analisisSintactico.py',41),
  ('opConditional -> boolean','opConditional',1,'p_opConditional','analisisSintactico.py',42),
  ('operadorLogical -> AND','operadorLogical',1,'p_operadorLogical','analisisSintactico.py',45),
  ('operadorLogical -> OR','operadorLogical',1,'p_operadorLogical','analisisSintactico.py',46),
  ('operadorLogical -> NOT','operadorLogical',1,'p_operadorLogical','analisisSintactico.py',47),
  ('sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK','sentencias_if',9,'p_sentencias_if','analisisSintactico.py',51),
  ('sentencias_if -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK','sentencias_if',7,'p_sentencias_if','analisisSintactico.py',52),
  ('sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK','sentencias_if_else',13,'p_sentencias_if_else','analisisSintactico.py',55),
  ('sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK','sentencias_if_else',11,'p_sentencias_if_else','analisisSintactico.py',56),
  ('sentencias_while -> WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK','sentencias_while',7,'p_sentencias_while','analisisSintactico.py',59),
  ('sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK','sentencias_while',9,'p_sentencias_while','analisisSintactico.py',60),
  ('impresion -> ALERT LPAREN expression RPAREN','impresion',4,'p_impresion','analisisSintactico.py',63),
  ('impresion_vacio -> ALERT LPAREN RPAREN','impresion_vacio',3,'p_impresion_vacio','analisisSintactico.py',65),
  ('javaScript_param -> STRING','javaScript_param',1,'p_javaScript_param','analisisSintactico.py',82),
  ('javaScript_param -> NUM','javaScript_param',1,'p_javaScript_param','analisisSintactico.py',83),
  ('javaScript_param -> boolean','javaScript_param',1,'p_javaScript_param','analisisSintactico.py',84),
  ('javaScript_param -> ID','javaScript_param',1,'p_javaScript_param','analisisSintactico.py',85),
  ('boolean -> TRUE','boolean',1,'p_boolean','analisisSintactico.py',97),
  ('boolean -> FALSE','boolean',1,'p_boolean','analisisSintactico.py',98),
  ('varType -> LET','varType',1,'p_varType','analisisSintactico.py',103),
  ('varType -> CONST','varType',1,'p_varType','analisisSintactico.py',104),
  ('varType -> VAR','varType',1,'p_varType','analisisSintactico.py',105),
  ('varDeclaration -> varType assign','varDeclaration',2,'p_varDeclaration','analisisSintactico.py',111),
  ('varDeclaration -> assign','varDeclaration',1,'p_varDeclaration','analisisSintactico.py',112),
  ('varDeclaration -> LET ID COLON','varDeclaration',3,'p_varDeclaration','analisisSintactico.py',113),
  ('varDeclaration -> VAR ID COLON','varDeclaration',3,'p_varDeclaration','analisisSintactico.py',114),
  ('assign -> ID EQUAL arrayDeclare COLON','assign',4,'p_assign','analisisSintactico.py',118),
  ('assign -> ID EQUAL declareMap COLON','assign',4,'p_assign','analisisSintactico.py',119),
  ('assign -> ID EQUAL declararSet COLON','assign',4,'p_assign','analisisSintactico.py',120),
  ('assign -> ID EQUAL javaScript_param COLON','assign',4,'p_assign','analisisSintactico.py',121),
  ('callMethods -> ID methodArray COLON','callMethods',3,'p_callMethods','analisisSintactico.py',127),
  ('callMethods -> ID methodSet COLON','callMethods',3,'p_callMethods','analisisSintactico.py',128),
  ('callMethods -> ID methodMap COLON','callMethods',3,'p_callMethods','analisisSintactico.py',129),
  ('arrayDeclare -> LBRACKET javaScript_param COMMA javaScript_param RBRACKET','arrayDeclare',5,'p_arrayDeclare','analisisSintactico.py',134),
  ('arrayDeclare -> NEW ARRAY LPAREN arrayValues RPAREN','arrayDeclare',5,'p_arrayDeclare','analisisSintactico.py',135),
  ('arrayValues -> javaScript_param','arrayValues',1,'p_arrayValues','analisisSintactico.py',140),
  ('arrayValues -> javaScript_param COMMA javaScript_param','arrayValues',3,'p_arrayValues','analisisSintactico.py',141),
  ('methodArray -> PERIOD PUSH LPAREN javaScript_param RPAREN','methodArray',5,'p_methodArray','analisisSintactico.py',147),
  ('methodArray -> PERIOD UNSHIFT LPAREN javaScript_param RPAREN','methodArray',5,'p_methodArray','analisisSintactico.py',148),
  ('methodArray -> PERIOD POP LPAREN RPAREN','methodArray',4,'p_methodArray','analisisSintactico.py',149),
  ('declareMap -> NEW MAP LPAREN LBRACKET iterable RBRACKET RPAREN','declareMap',7,'p_declareMap','analisisSintactico.py',153),
  ('declareMap -> NEW MAP LPAREN RPAREN','declareMap',4,'p_declareMap','analisisSintactico.py',154),
  ('iterableMap -> LBRACKET keyValue COMMA keyValue RBRACKET','iterableMap',5,'p_iterableMap','analisisSintactico.py',158),
  ('iterableMap -> LBRACKET keyValue COMMA keyValue RBRACKET COMMA iterableMap','iterableMap',7,'p_iterableMap','analisisSintactico.py',159),
  ('iterable -> iterableMap','iterable',1,'p_iterable','analisisSintactico.py',162),
  ('iterable -> iterableArray','iterable',1,'p_iterable','analisisSintactico.py',163),
  ('iterable -> iterableSet','iterable',1,'p_iterable','analisisSintactico.py',164),
  ('keyValue -> javaScript_param','keyValue',1,'p_keyValue','analisisSintactico.py',166),
  ('keyValue -> iterableMap','keyValue',1,'p_keyValue','analisisSintactico.py',167),
  ('keyValue -> iterableArray','keyValue',1,'p_keyValue','analisisSintactico.py',168),
  ('keyValue -> iterableSet','keyValue',1,'p_keyValue','analisisSintactico.py',169),
  ('keyValue -> declareMap','keyValue',1,'p_keyValue','analisisSintactico.py',170),
  ('keyValue -> arrayDeclare','keyValue',1,'p_keyValue','analisisSintactico.py',171),
  ('iterableArray -> arrayDeclare','iterableArray',1,'p_iterableArray','analisisSintactico.py',174),
  ('iterableArray -> arrayDeclare COMMA arrayDeclare','iterableArray',3,'p_iterableArray','analisisSintactico.py',175),
  ('iterableSet -> declararSet','iterableSet',1,'p_iterableSet','analisisSintactico.py',178),
  ('iterableSet -> declararSet COMMA declararSet','iterableSet',3,'p_iterableSet','analisisSintactico.py',179),
  ('iterableSet -> <empty>','iterableSet',0,'p_iterableSet','analisisSintactico.py',180),
  ('methodMap -> PERIOD CLEAR LPAREN RPAREN','methodMap',4,'p_methodMap','analisisSintactico.py',183),
  ('methodMap -> PERIOD LENGTH LPAREN RPAREN','methodMap',4,'p_methodMap','analisisSintactico.py',184),
  ('declareteFunction -> FUNCTION ID LPAREN params RPAREN','declareteFunction',5,'p_declareteFunction','analisisSintactico.py',189),
  ('declareteFunction -> FUNCTION ID LPAREN params RPAREN sentencesCmpt','declareteFunction',6,'p_declareteFunction','analisisSintactico.py',190),
  ('declareteFunction -> varType ID EQUAL FUNCTION LPAREN params RPAREN','declareteFunction',7,'p_declareteFunction','analisisSintactico.py',191),
  ('sentencesCmpt -> LBLOCK sentencia RBLOCK','sentencesCmpt',3,'p_sentencesCmpt','analisisSintactico.py',196),
  ('sentencesCmpt -> LBLOCK sentencia RETURN RBLOCK','sentencesCmpt',4,'p_sentencesCmpt','analisisSintactico.py',197),
  ('callFunction -> ID LPAREN params RPAREN','callFunction',4,'p_callFunction','analisisSintactico.py',202),
  ('params -> paramList','params',1,'p_params','analisisSintactico.py',208),
  ('paramList -> javaScript_param','paramList',1,'p_paramList','analisisSintactico.py',220),
  ('paramList -> javaScript_param COMMA paramList','paramList',3,'p_paramList','analisisSintactico.py',221),
  ('args -> argslist','args',1,'p_args','analisisSintactico.py',227),
  ('args -> javaScript_param','args',1,'p_args','analisisSintactico.py',228),
  ('argslist -> args','argslist',1,'p_argslist','analisisSintactico.py',232),
  ('argslist -> args COMMA argslist','argslist',3,'p_argslist','analisisSintactico.py',233),
  ('declararSet -> NEW SET LPAREN LBRACKET iterable RBRACKET RPAREN','declararSet',7,'p_declararSet','analisisSintactico.py',242),
  ('methodSet -> PERIOD ADD LPAREN javaScript_param RPAREN','methodSet',5,'p_methodSet','analisisSintactico.py',263),
  ('methodSet -> PERIOD DELETE LPAREN javaScript_param RPAREN','methodSet',5,'p_methodSet','analisisSintactico.py',264),
  ('methodSet -> PERIOD CLEAR LPAREN RPAREN','methodSet',4,'p_methodSet','analisisSintactico.py',265),
  ('inicializarOp -> PLUS operacionesMath','inicializarOp',2,'p_inicializarOp','analisisSintactico.py',273),
  ('inicializarOp -> MINUS operacionesMath','inicializarOp',2,'p_inicializarOp','analisisSintactico.py',274),
  ('inicializarOp -> operacionesMath','inicializarOp',1,'p_inicializarOp','analisisSintactico.py',275),
  ('operacionesMath -> numOperadores PLUS suma','operacionesMath',3,'p_operacionesMath','analisisSintactico.py',278),
  ('operacionesMath -> suma','operacionesMath',1,'p_operacionesMath','analisisSintactico.py',279),
  ('operacionesMath -> suma operacionesMath','operacionesMath',2,'p_operacionesMath','analisisSintactico.py',280),
  ('operacionesMath -> restas','operacionesMath',1,'p_operacionesMath','analisisSintactico.py',281),
  ('operacionesMath -> numOperadores MINUS restas','operacionesMath',3,'p_operacionesMath','analisisSintactico.py',282),
  ('operacionesMath -> restas operacionesMath','operacionesMath',2,'p_operacionesMath','analisisSintactico.py',283),
  ('operacionesMath -> multiplicacion','operacionesMath',1,'p_operacionesMath','analisisSintactico.py',284),
  ('operacionesMath -> numOperadores TIMES multiplicacion','operacionesMath',3,'p_operacionesMath','analisisSintactico.py',285),
  ('operacionesMath -> multiplicacion operacionesMath','operacionesMath',2,'p_operacionesMath','analisisSintactico.py',286),
  ('operacionesMath -> divicion','operacionesMath',1,'p_operacionesMath','analisisSintactico.py',287),
  ('operacionesMath -> numOperadores DIVIDE divicion','operacionesMath',3,'p_operacionesMath','analisisSintactico.py',288),
  ('operacionesMath -> divicion operacionesMath','operacionesMath',2,'p_operacionesMath','analisisSintactico.py',289),
  ('suma -> numOperadores PLUS LPAREN numOperadores RPAREN','suma',5,'p_suma','analisisSintactico.py',292),
  ('suma -> numOperadores PLUS NUM','suma',3,'p_suma','analisisSintactico.py',293),
  ('suma -> numOperadores','suma',1,'p_suma','analisisSintactico.py',294),
  ('restas -> numOperadores MINUS LPAREN numOperadores RPAREN','restas',5,'p_restas','analisisSintactico.py',298),
  ('restas -> numOperadores MINUS NUM','restas',3,'p_restas','analisisSintactico.py',299),
  ('restas -> numOperadores','restas',1,'p_restas','analisisSintactico.py',300),
  ('multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN','multiplicacion',5,'p_multiplicacion','analisisSintactico.py',303),
  ('multiplicacion -> numOperadores TIMES NUM','multiplicacion',3,'p_multiplicacion','analisisSintactico.py',304),
  ('multiplicacion -> numOperadores','multiplicacion',1,'p_multiplicacion','analisisSintactico.py',305),
  ('divicion -> numOperadores DIVIDE LPAREN numOperadores RPAREN','divicion',5,'p_divicion','analisisSintactico.py',308),
  ('divicion -> numOperadores DIVIDE NUM','divicion',3,'p_divicion','analisisSintactico.py',309),
  ('divicion -> numOperadores','divicion',1,'p_divicion','analisisSintactico.py',310),
  ('numOperadores -> enteros','numOperadores',1,'p_numOperadores','analisisSintactico.py',313),
  ('numOperadores -> decimales','numOperadores',1,'p_numOperadores','analisisSintactico.py',314),
  ('enteros -> NUM','enteros',1,'p_enteros','analisisSintactico.py',317),
  ('enteros -> numNegative','enteros',1,'p_enteros','analisisSintactico.py',318),
  ('numNegative -> MINUS NUM','numNegative',2,'p_numNegative','analisisSintactico.py',321),
  ('numNegative -> <empty>','numNegative',0,'p_numNegative','analisisSintactico.py',322),
  ('decimales -> enteros PERIOD NUM','decimales',3,'p_decimales','analisisSintactico.py',325),
  ('conditionalEspecifico -> ID opConditional dataCondi','conditionalEspecifico',3,'p_coditionalEspecifico','analisisSintactico.py',331),
  ('conditionalEspecifico -> NUM opConditional NUM','conditionalEspecifico',3,'p_coditionalEspecifico','analisisSintactico.py',332),
  ('conditionalEspecifico -> STRING opConditional STRING','conditionalEspecifico',3,'p_coditionalEspecifico','analisisSintactico.py',333),
  ('dataCondi -> STRING','dataCondi',1,'p_dataCondi','analisisSintactico.py',338),
  ('dataCondi -> NUM','dataCondi',1,'p_dataCondi','analisisSintactico.py',339),
  ('setMetodoAdd -> PERIOD ADD LPAREN javaScript_param RPAREN','setMetodoAdd',5,'p_setMetodoAdd','analisisSintactico.py',343),
  ('setMetodoDelete -> PERIOD DELETE LPAREN javaScript_param RPAREN','setMetodoDelete',5,'p_SetMetodoDelete','analisisSintactico.py',345),
  ('setMetodoClear -> PERIOD CLEAR LPAREN RPAREN','setMetodoClear',4,'p_SetMetodoClear','analisisSintactico.py',347),
  ('ValueMapMethods -> ID','ValueMapMethods',1,'p_ValueMapMethods','analisisSintactico.py',350),
  ('ValueMapMethods -> NUM','ValueMapMethods',1,'p_ValueMapMethods','analisisSintactico.py',351),
  ('ValueMapMethods -> STRING','ValueMapMethods',1,'p_ValueMapMethods','analisisSintactico.py',352),
  ('mapMetodoGet -> PERIOD GET LPAREN ValueMapMethods RPAREN','mapMetodoGet',5,'p_MapMetodoGet','analisisSintactico.py',356),
  ('mapMetodoSet -> PERIOD GET LPAREN ValueMapMethods COMMA ValueMapMethods RPAREN','mapMetodoSet',7,'p_MapMetodoSet','analisisSintactico.py',358),
]
