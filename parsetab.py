
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD ALERT AND ARRAY BREAK CASE CATCH CLASS CLEAR COLON COMMA CONST CONTINUE DEBUGGER DEFAULT DELETE DIVIDE DIV_EQUAL DO ELSE EQUAL EXPORT EXTENDS FALSE FINALLY FOR FUNCTION GREATER GREATEREQUAL HAS ID IF IMPORT IN INSTANCEOF ISEQUAL IS_IDENTICAL IS_NOT_IDENTICAL LBLOCK LBRACKET LENGTH LESS LESSEQUAL LET LPAREN MAP MINUS MINUS_EQUAL MOD MOD_EQUAL MUL_EQUAL NEW NOT NUM OR PERIOD PLUS PLUS_EQUAL POP PRINT PUSH RBLOCK RBRACKET RETURN RPAREN SET STRING SWITCH THIS THROW TIMES TRUE TRY TWOPOINTS TYPEOF UNSHIFT VAR VOID WHILE WITH YIELDsentencias : impresion\n                    | expressionexpression : ID EQUAL expression\n                       | callMethods\n                       | callFunction\n                       | javaScript_param\n                       | varDeclaration\n    sentencias : IF LPAREN logical_expresion RPARENsentencias : IF LPAREN logical_expresion RPAREN sentencias ELSE sentenciassentencias : WHILE LPAREN logical_expresion RPAREN blockimpresion : ALERT LPAREN expression RPARENimpresion : ALERT LPAREN RPARENexpression : expression PLUS termexpression : expression TIMES termexpression : expression DIVIDE termexpression : expression MOD termexpression : VAR IDexpression : CONST IDexpression : logical_expresionlogical_expresion : expression GREATER termlogical_expresion : expression LESS termlogical_expresion : expression ISEQUAL termlogical_expresion : expression IS_NOT_IDENTICAL termlogical_expresion : expression IS_IDENTICAL termexpression : blockblock : LBLOCK sentencias RBLOCKexpression : termterm : term TIMES factorterm : term DIVIDE factorterm : factorfactor : NUMfactor : IDfactor : LPAREN expression RPARENjavaScript_param : STRING\n                         | NUM\n                         | boolean\n    empty : boolean : TRUE\n             | FALSE\n         varType : LET\n                | CONST\n                | VAR\n                 | empty varDeclaration : varType ID  EQUAL  arrayDeclare COLON\n                    |   varType ID EQUAL declareMap COLON\n                    |   varType ID EQUAL declararSet COLON callMethods : ID methodArray COLON\n                     | ID methodSet COLON\n                     | ID methodMap COLONarrayDeclare :  LBRACKET arrayValues RBRACKET\n                       | NEW ARRAY LPAREN arrayValues RPAREN\n                     arrayValues :  arrayValue\n                    | arrayValue COMMA arrayValue arrayValue :  LPAREN expression RPAREN\n                      | ID\n                      | NUM\n                      | STRING\n                      | boolean\n                      | empty  methodArray : PERIOD PUSH LPAREN arrayValue RPAREN\n                      | PERIOD UNSHIFT LPAREN arrayValue RPAREN\n                      | PERIOD POP LPAREN empty RPAREN declareMap :  NEW MAP LPAREN iterable RPAREN\n                    iterable  : arrayDeclare\n                   | declararSet\n                   | empty methodMap : PERIOD CLEAR LPAREN RPAREN\n                   | PERIOD LENGTH LPAREN RPAREN declaration : varDeclaration\n                    | declareteFunction\n                    | callFunction\n     declareteFunction : FUNCTION ID LPAREN params RPAREN\n                          | FUNCTION  ID LPAREN params RPAREN sentencesCmpt sentencesCmpt : LBLOCK expression RBLOCK\n                     | LBLOCK expression RETURN RBLOCK  callFunction : ID LPAREN params RPAREN  \n                    \n                     params : paramList\n               | empty   param : ID\n              | ID LBRACKET RBRACKET\n               paramList : param\n                  | param COMMA paramList  args : argslist\n            | empty\n            | javaScript_param\n     argslist : args\n                   | args COMMA argslist\n    declararSet : NEW SET LPAREN setValues RPARENcontiene : ID PERIOD HAS LPAREN params RPARENsetValues :  setValue\n                    | setValue COMMA setValue setValue : ID\n                 | NUM\n                 | STRING\n                 | boolean\n                 | empty  methodSet : PERIOD ADD LPAREN setValue RPAREN\n                      | PERIOD DELETE LPAREN setValue RPAREN\n                      | PERIOD CLEAR LPAREN empty RPAREN '
    
_lr_action_items = {'IF':([0,22,90,139,],[4,4,4,4,]),'WHILE':([0,22,90,139,],[7,7,7,7,]),'ALERT':([0,22,90,139,],[9,9,9,9,]),'ID':([0,5,16,17,21,22,26,27,28,29,30,31,32,33,34,35,36,37,39,40,41,45,47,48,90,95,96,97,99,100,106,112,139,148,149,151,166,],[10,10,49,50,51,10,-40,-43,55,55,55,55,55,55,55,55,55,10,10,10,10,74,55,55,10,74,114,114,122,122,114,10,10,114,114,122,122,]),'VAR':([0,5,22,37,39,40,41,90,112,139,],[16,16,16,16,16,16,16,16,16,16,]),'CONST':([0,5,22,37,39,40,41,90,112,139,],[17,17,17,17,17,17,17,17,17,17,]),'STRING':([0,5,22,37,39,40,41,90,96,97,99,100,106,112,139,148,149,151,166,],[18,18,18,18,18,18,18,18,116,116,124,124,116,18,18,116,116,124,124,]),'NUM':([0,5,22,28,29,30,31,32,33,34,35,36,37,39,40,41,47,48,90,96,97,99,100,106,112,139,148,149,151,166,],[19,19,19,54,54,54,54,54,54,54,54,54,19,19,19,19,54,54,19,115,115,123,123,115,19,19,115,115,123,123,]),'LBLOCK':([0,5,22,37,39,40,41,90,91,112,139,],[22,22,22,22,22,22,22,22,22,22,22,]),'TRUE':([0,5,22,37,39,40,41,90,96,97,99,100,106,112,139,148,149,151,166,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'FALSE':([0,5,22,37,39,40,41,90,96,97,99,100,106,112,139,148,149,151,166,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'LET':([0,5,22,37,39,40,41,90,112,139,],[26,26,26,26,26,26,26,26,26,26,]),'LPAREN':([0,4,5,7,9,10,22,28,29,30,31,32,33,34,35,36,37,39,40,41,47,48,79,80,81,82,83,84,85,90,96,97,106,112,136,137,138,139,148,149,],[5,37,5,39,40,45,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,96,97,98,99,100,101,102,5,112,112,112,5,149,150,151,5,112,112,]),'$end':([1,2,3,6,8,10,11,12,13,14,15,18,19,20,23,24,25,49,50,53,54,55,56,57,58,59,60,61,62,63,66,69,70,71,72,73,86,87,89,90,92,94,109,131,132,133,152,],[0,-1,-2,-19,-25,-32,-4,-5,-6,-7,-27,-34,-31,-36,-30,-38,-39,-17,-18,-13,-31,-32,-14,-15,-16,-20,-21,-22,-23,-24,-33,-12,-3,-47,-48,-49,-28,-29,-26,-8,-11,-76,-10,-44,-45,-46,-9,]),'RBLOCK':([2,3,6,8,10,11,12,13,14,15,18,19,20,23,24,25,49,50,52,53,54,55,56,57,58,59,60,61,62,63,66,69,70,71,72,73,86,87,89,90,92,94,109,131,132,133,152,],[-1,-2,-19,-25,-32,-4,-5,-6,-7,-27,-34,-31,-36,-30,-38,-39,-17,-18,89,-13,-31,-32,-14,-15,-16,-20,-21,-22,-23,-24,-33,-12,-3,-47,-48,-49,-28,-29,-26,-8,-11,-76,-10,-44,-45,-46,-9,]),'ELSE':([2,3,6,8,10,11,12,13,14,15,18,19,20,23,24,25,49,50,53,54,55,56,57,58,59,60,61,62,63,66,69,70,71,72,73,86,87,89,90,92,94,108,109,131,132,133,152,],[-1,-2,-19,-25,-32,-4,-5,-6,-7,-27,-34,-31,-36,-30,-38,-39,-17,-18,-13,-31,-32,-14,-15,-16,-20,-21,-22,-23,-24,-33,-12,-3,-47,-48,-49,-28,-29,-26,-8,-11,-76,139,-10,-44,-45,-46,-9,]),'PLUS':([3,6,8,10,11,12,13,14,15,18,19,20,23,24,25,38,49,50,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,86,87,89,94,131,132,133,140,],[28,-19,-25,-32,-4,-5,-6,-7,-27,-34,-31,-36,-30,-38,-39,28,-17,-18,-13,-31,-32,-14,-15,-16,-20,-21,-22,-23,-24,-19,28,-33,-19,28,28,-47,-48,-49,-28,-29,-26,-76,-44,-45,-46,28,]),'TIMES':([3,6,8,10,11,12,13,14,15,18,19,20,23,24,25,38,49,50,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,86,87,89,94,131,132,133,140,],[29,-19,-25,-32,-4,-5,-6,-7,47,-34,-31,-36,-30,-38,-39,29,-17,-18,47,-31,-32,47,47,47,47,47,47,47,47,-19,29,-33,-19,29,29,-47,-48,-49,-28,-29,-26,-76,-44,-45,-46,29,]),'DIVIDE':([3,6,8,10,11,12,13,14,15,18,19,20,23,24,25,38,49,50,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,86,87,89,94,131,132,133,140,],[30,-19,-25,-32,-4,-5,-6,-7,48,-34,-31,-36,-30,-38,-39,30,-17,-18,48,-31,-32,48,48,48,48,48,48,48,48,-19,30,-33,-19,30,30,-47,-48,-49,-28,-29,-26,-76,-44,-45,-46,30,]),'MOD':([3,6,8,10,11,12,13,14,15,18,19,20,23,24,25,38,49,50,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,86,87,89,94,131,132,133,140,],[31,-19,-25,-32,-4,-5,-6,-7,-27,-34,-31,-36,-30,-38,-39,31,-17,-18,-13,-31,-32,-14,-15,-16,-20,-21,-22,-23,-24,-19,31,-33,-19,31,31,-47,-48,-49,-28,-29,-26,-76,-44,-45,-46,31,]),'GREATER':([3,6,8,10,11,12,13,14,15,18,19,20,23,24,25,38,49,50,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,86,87,89,94,131,132,133,140,],[32,-19,-25,-32,-4,-5,-6,-7,-27,-34,-31,-36,-30,-38,-39,32,-17,-18,-13,-31,-32,-14,-15,-16,-20,-21,-22,-23,-24,-19,32,-33,-19,32,32,-47,-48,-49,-28,-29,-26,-76,-44,-45,-46,32,]),'LESS':([3,6,8,10,11,12,13,14,15,18,19,20,23,24,25,38,49,50,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,86,87,89,94,131,132,133,140,],[33,-19,-25,-32,-4,-5,-6,-7,-27,-34,-31,-36,-30,-38,-39,33,-17,-18,-13,-31,-32,-14,-15,-16,-20,-21,-22,-23,-24,-19,33,-33,-19,33,33,-47,-48,-49,-28,-29,-26,-76,-44,-45,-46,33,]),'ISEQUAL':([3,6,8,10,11,12,13,14,15,18,19,20,23,24,25,38,49,50,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,86,87,89,94,131,132,133,140,],[34,-19,-25,-32,-4,-5,-6,-7,-27,-34,-31,-36,-30,-38,-39,34,-17,-18,-13,-31,-32,-14,-15,-16,-20,-21,-22,-23,-24,-19,34,-33,-19,34,34,-47,-48,-49,-28,-29,-26,-76,-44,-45,-46,34,]),'IS_NOT_IDENTICAL':([3,6,8,10,11,12,13,14,15,18,19,20,23,24,25,38,49,50,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,86,87,89,94,131,132,133,140,],[35,-19,-25,-32,-4,-5,-6,-7,-27,-34,-31,-36,-30,-38,-39,35,-17,-18,-13,-31,-32,-14,-15,-16,-20,-21,-22,-23,-24,-19,35,-33,-19,35,35,-47,-48,-49,-28,-29,-26,-76,-44,-45,-46,35,]),'IS_IDENTICAL':([3,6,8,10,11,12,13,14,15,18,19,20,23,24,25,38,49,50,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,86,87,89,94,131,132,133,140,],[36,-19,-25,-32,-4,-5,-6,-7,-27,-34,-31,-36,-30,-38,-39,36,-17,-18,-13,-31,-32,-14,-15,-16,-20,-21,-22,-23,-24,-19,36,-33,-19,36,36,-47,-48,-49,-28,-29,-26,-76,-44,-45,-46,36,]),'RPAREN':([6,8,10,11,12,13,14,15,18,19,20,23,24,25,38,40,45,49,50,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,70,71,72,73,74,75,76,77,78,86,87,89,94,96,97,98,99,100,101,102,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,131,132,133,135,140,147,148,149,150,151,153,154,155,157,158,159,160,161,162,163,165,166,167,],[-19,-25,-32,-4,-5,-6,-7,-27,-34,-31,-36,-30,-38,-39,66,69,-37,-17,-18,-13,-31,-32,-14,-15,-16,-20,-21,-22,-23,-24,90,-33,91,92,-3,-47,-48,-49,-79,94,-77,-78,-81,-28,-29,-26,-76,-37,-37,-37,-37,-37,129,130,-80,-82,141,-55,-56,-57,-58,-59,142,143,144,-92,-93,-94,-95,-96,145,146,-44,-45,-46,-52,153,-50,-37,-37,-37,-37,-54,-53,163,164,-64,-65,-66,165,-90,-51,-88,-37,-91,]),'EQUAL':([10,51,],[41,88,]),'PERIOD':([10,],[46,]),'COMMA':([24,25,74,78,106,110,114,115,116,117,118,122,123,124,125,126,135,149,151,153,162,],[-38,-39,-79,95,-37,-80,-55,-56,-57,-58,-59,-92,-93,-94,-95,-96,148,-37,-37,-54,166,]),'RBRACKET':([24,25,93,106,114,115,116,117,118,134,135,148,153,154,],[-38,-39,110,-37,-55,-56,-57,-58,-59,147,-52,-37,-54,-53,]),'COLON':([42,43,44,103,104,105,129,130,141,142,143,144,145,146,147,163,164,165,],[71,72,73,131,132,133,-67,-68,-60,-61,-62,-97,-98,-99,-50,-51,-63,-88,]),'PUSH':([46,],[79,]),'UNSHIFT':([46,],[80,]),'POP':([46,],[81,]),'ADD':([46,],[82,]),'DELETE':([46,],[83,]),'CLEAR':([46,],[84,]),'LENGTH':([46,],[85,]),'LBRACKET':([74,88,150,],[93,106,106,]),'NEW':([88,150,],[107,156,]),'ARRAY':([107,156,],[136,136,]),'MAP':([107,],[137,]),'SET':([107,156,],[138,138,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'sentencias':([0,22,90,139,],[1,52,108,152,]),'impresion':([0,22,90,139,],[2,2,2,2,]),'expression':([0,5,22,37,39,40,41,90,112,139,],[3,38,3,65,65,68,70,3,140,3,]),'logical_expresion':([0,5,22,37,39,40,41,90,112,139,],[6,6,6,64,67,6,6,6,6,6,]),'block':([0,5,22,37,39,40,41,90,91,112,139,],[8,8,8,8,8,8,8,8,109,8,8,]),'callMethods':([0,5,22,37,39,40,41,90,112,139,],[11,11,11,11,11,11,11,11,11,11,]),'callFunction':([0,5,22,37,39,40,41,90,112,139,],[12,12,12,12,12,12,12,12,12,12,]),'javaScript_param':([0,5,22,37,39,40,41,90,112,139,],[13,13,13,13,13,13,13,13,13,13,]),'varDeclaration':([0,5,22,37,39,40,41,90,112,139,],[14,14,14,14,14,14,14,14,14,14,]),'term':([0,5,22,28,29,30,31,32,33,34,35,36,37,39,40,41,90,112,139,],[15,15,15,53,56,57,58,59,60,61,62,63,15,15,15,15,15,15,15,]),'boolean':([0,5,22,37,39,40,41,90,96,97,99,100,106,112,139,148,149,151,166,],[20,20,20,20,20,20,20,20,117,117,125,125,117,20,20,117,117,125,125,]),'varType':([0,5,22,37,39,40,41,90,112,139,],[21,21,21,21,21,21,21,21,21,21,]),'factor':([0,5,22,28,29,30,31,32,33,34,35,36,37,39,40,41,47,48,90,112,139,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,86,87,23,23,23,]),'empty':([0,5,22,37,39,40,41,45,90,96,97,98,99,100,101,106,112,139,148,149,150,151,166,],[27,27,27,27,27,27,27,77,27,118,118,120,126,126,128,118,27,27,118,118,160,126,126,]),'methodArray':([10,],[42,]),'methodSet':([10,],[43,]),'methodMap':([10,],[44,]),'params':([45,],[75,]),'paramList':([45,95,],[76,111,]),'param':([45,95,],[78,78,]),'arrayDeclare':([88,150,],[103,158,]),'declareMap':([88,],[104,]),'declararSet':([88,150,],[105,159,]),'arrayValue':([96,97,106,148,149,],[113,119,135,154,135,]),'setValue':([99,100,151,166,],[121,127,162,167,]),'arrayValues':([106,149,],[134,155,]),'iterable':([150,],[157,]),'setValues':([151,],[161,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> sentencias","S'",1,None,None,None),
  ('sentencias -> impresion','sentencias',1,'p_sentencias','analisisSintactico.py',6),
  ('sentencias -> expression','sentencias',1,'p_sentencias','analisisSintactico.py',7),
  ('expression -> ID EQUAL expression','expression',3,'p_expression','analisisSintactico.py',10),
  ('expression -> callMethods','expression',1,'p_expression','analisisSintactico.py',11),
  ('expression -> callFunction','expression',1,'p_expression','analisisSintactico.py',12),
  ('expression -> javaScript_param','expression',1,'p_expression','analisisSintactico.py',13),
  ('expression -> varDeclaration','expression',1,'p_expression','analisisSintactico.py',14),
  ('sentencias -> IF LPAREN logical_expresion RPAREN','sentencias',4,'p_sentencias_if','analisisSintactico.py',17),
  ('sentencias -> IF LPAREN logical_expresion RPAREN sentencias ELSE sentencias','sentencias',7,'p_sentencias_if_else','analisisSintactico.py',19),
  ('sentencias -> WHILE LPAREN logical_expresion RPAREN block','sentencias',5,'p_sentencias_while','analisisSintactico.py',21),
  ('impresion -> ALERT LPAREN expression RPAREN','impresion',4,'p_impresion','analisisSintactico.py',23),
  ('impresion -> ALERT LPAREN RPAREN','impresion',3,'p_impresion_vacio','analisisSintactico.py',25),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','analisisSintactico.py',28),
  ('expression -> expression TIMES term','expression',3,'p_expression_times','analisisSintactico.py',30),
  ('expression -> expression DIVIDE term','expression',3,'p_expression_divide','analisisSintactico.py',32),
  ('expression -> expression MOD term','expression',3,'p_expression_mod','analisisSintactico.py',34),
  ('expression -> VAR ID','expression',2,'p_expression_var','analisisSintactico.py',37),
  ('expression -> CONST ID','expression',2,'p_expression_const','analisisSintactico.py',39),
  ('expression -> logical_expresion','expression',1,'p_expression_logical','analisisSintactico.py',42),
  ('logical_expresion -> expression GREATER term','logical_expresion',3,'p_expression_greater','analisisSintactico.py',45),
  ('logical_expresion -> expression LESS term','logical_expresion',3,'p_expression_less','analisisSintactico.py',47),
  ('logical_expresion -> expression ISEQUAL term','logical_expresion',3,'p_expression_isequal','analisisSintactico.py',49),
  ('logical_expresion -> expression IS_NOT_IDENTICAL term','logical_expresion',3,'p_expression_is_not_identical','analisisSintactico.py',51),
  ('logical_expresion -> expression IS_IDENTICAL term','logical_expresion',3,'p_expression_is_identical','analisisSintactico.py',53),
  ('expression -> block','expression',1,'p_expression_block','analisisSintactico.py',55),
  ('block -> LBLOCK sentencias RBLOCK','block',3,'p_block','analisisSintactico.py',57),
  ('expression -> term','expression',1,'p_expression_term','analisisSintactico.py',59),
  ('term -> term TIMES factor','term',3,'p_term_times','analisisSintactico.py',63),
  ('term -> term DIVIDE factor','term',3,'p_term_div','analisisSintactico.py',67),
  ('term -> factor','term',1,'p_term_factor','analisisSintactico.py',71),
  ('factor -> NUM','factor',1,'p_factor_num','analisisSintactico.py',75),
  ('factor -> ID','factor',1,'p_factor_var','analisisSintactico.py',78),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','analisisSintactico.py',81),
  ('javaScript_param -> STRING','javaScript_param',1,'p_javaScript_param','analisisSintactico.py',96),
  ('javaScript_param -> NUM','javaScript_param',1,'p_javaScript_param','analisisSintactico.py',97),
  ('javaScript_param -> boolean','javaScript_param',1,'p_javaScript_param','analisisSintactico.py',98),
  ('empty -> <empty>','empty',0,'p_empty','analisisSintactico.py',105),
  ('boolean -> TRUE','boolean',1,'p_boolean','analisisSintactico.py',110),
  ('boolean -> FALSE','boolean',1,'p_boolean','analisisSintactico.py',111),
  ('varType -> LET','varType',1,'p_varType','analisisSintactico.py',116),
  ('varType -> CONST','varType',1,'p_varType','analisisSintactico.py',117),
  ('varType -> VAR','varType',1,'p_varType','analisisSintactico.py',118),
  ('varType -> empty','varType',1,'p_varType','analisisSintactico.py',119),
  ('varDeclaration -> varType ID EQUAL arrayDeclare COLON','varDeclaration',5,'p_varDeclaration','analisisSintactico.py',123),
  ('varDeclaration -> varType ID EQUAL declareMap COLON','varDeclaration',5,'p_varDeclaration','analisisSintactico.py',124),
  ('varDeclaration -> varType ID EQUAL declararSet COLON','varDeclaration',5,'p_varDeclaration','analisisSintactico.py',125),
  ('callMethods -> ID methodArray COLON','callMethods',3,'p_callMethods','analisisSintactico.py',130),
  ('callMethods -> ID methodSet COLON','callMethods',3,'p_callMethods','analisisSintactico.py',131),
  ('callMethods -> ID methodMap COLON','callMethods',3,'p_callMethods','analisisSintactico.py',132),
  ('arrayDeclare -> LBRACKET arrayValues RBRACKET','arrayDeclare',3,'p_arrayDeclare','analisisSintactico.py',137),
  ('arrayDeclare -> NEW ARRAY LPAREN arrayValues RPAREN','arrayDeclare',5,'p_arrayDeclare','analisisSintactico.py',138),
  ('arrayValues -> arrayValue','arrayValues',1,'p_arrayValues','analisisSintactico.py',143),
  ('arrayValues -> arrayValue COMMA arrayValue','arrayValues',3,'p_arrayValues','analisisSintactico.py',144),
  ('arrayValue -> LPAREN expression RPAREN','arrayValue',3,'p_arrayValue','analisisSintactico.py',148),
  ('arrayValue -> ID','arrayValue',1,'p_arrayValue','analisisSintactico.py',149),
  ('arrayValue -> NUM','arrayValue',1,'p_arrayValue','analisisSintactico.py',150),
  ('arrayValue -> STRING','arrayValue',1,'p_arrayValue','analisisSintactico.py',151),
  ('arrayValue -> boolean','arrayValue',1,'p_arrayValue','analisisSintactico.py',152),
  ('arrayValue -> empty','arrayValue',1,'p_arrayValue','analisisSintactico.py',153),
  ('methodArray -> PERIOD PUSH LPAREN arrayValue RPAREN','methodArray',5,'p_methodArray','analisisSintactico.py',156),
  ('methodArray -> PERIOD UNSHIFT LPAREN arrayValue RPAREN','methodArray',5,'p_methodArray','analisisSintactico.py',157),
  ('methodArray -> PERIOD POP LPAREN empty RPAREN','methodArray',5,'p_methodArray','analisisSintactico.py',158),
  ('declareMap -> NEW MAP LPAREN iterable RPAREN','declareMap',5,'p_declareMap','analisisSintactico.py',162),
  ('iterable -> arrayDeclare','iterable',1,'p_iterable','analisisSintactico.py',166),
  ('iterable -> declararSet','iterable',1,'p_iterable','analisisSintactico.py',167),
  ('iterable -> empty','iterable',1,'p_iterable','analisisSintactico.py',168),
  ('methodMap -> PERIOD CLEAR LPAREN RPAREN','methodMap',4,'p_methodMap','analisisSintactico.py',171),
  ('methodMap -> PERIOD LENGTH LPAREN RPAREN','methodMap',4,'p_methodMap','analisisSintactico.py',172),
  ('declaration -> varDeclaration','declaration',1,'p_declaration','analisisSintactico.py',176),
  ('declaration -> declareteFunction','declaration',1,'p_declaration','analisisSintactico.py',177),
  ('declaration -> callFunction','declaration',1,'p_declaration','analisisSintactico.py',178),
  ('declareteFunction -> FUNCTION ID LPAREN params RPAREN','declareteFunction',5,'p_declareteFunction','analisisSintactico.py',184),
  ('declareteFunction -> FUNCTION ID LPAREN params RPAREN sentencesCmpt','declareteFunction',6,'p_declareteFunction','analisisSintactico.py',185),
  ('sentencesCmpt -> LBLOCK expression RBLOCK','sentencesCmpt',3,'p_sentencesCmpt','analisisSintactico.py',189),
  ('sentencesCmpt -> LBLOCK expression RETURN RBLOCK','sentencesCmpt',4,'p_sentencesCmpt','analisisSintactico.py',190),
  ('callFunction -> ID LPAREN params RPAREN','callFunction',4,'p_callFunction','analisisSintactico.py',195),
  ('params -> paramList','params',1,'p_params','analisisSintactico.py',201),
  ('params -> empty','params',1,'p_params','analisisSintactico.py',202),
  ('param -> ID','param',1,'p_param','analisisSintactico.py',206),
  ('param -> ID LBRACKET RBRACKET','param',3,'p_param','analisisSintactico.py',207),
  ('paramList -> param','paramList',1,'p_paramList','analisisSintactico.py',211),
  ('paramList -> param COMMA paramList','paramList',3,'p_paramList','analisisSintactico.py',212),
  ('args -> argslist','args',1,'p_args','analisisSintactico.py',218),
  ('args -> empty','args',1,'p_args','analisisSintactico.py',219),
  ('args -> javaScript_param','args',1,'p_args','analisisSintactico.py',220),
  ('argslist -> args','argslist',1,'p_argslist','analisisSintactico.py',224),
  ('argslist -> args COMMA argslist','argslist',3,'p_argslist','analisisSintactico.py',225),
  ('declararSet -> NEW SET LPAREN setValues RPAREN','declararSet',5,'p_declararSet','analisisSintactico.py',234),
  ('contiene -> ID PERIOD HAS LPAREN params RPAREN','contiene',6,'p_contiene','analisisSintactico.py',238),
  ('setValues -> setValue','setValues',1,'p_setValues','analisisSintactico.py',242),
  ('setValues -> setValue COMMA setValue','setValues',3,'p_setValues','analisisSintactico.py',243),
  ('setValue -> ID','setValue',1,'p_setValue','analisisSintactico.py',247),
  ('setValue -> NUM','setValue',1,'p_setValue','analisisSintactico.py',248),
  ('setValue -> STRING','setValue',1,'p_setValue','analisisSintactico.py',249),
  ('setValue -> boolean','setValue',1,'p_setValue','analisisSintactico.py',250),
  ('setValue -> empty','setValue',1,'p_setValue','analisisSintactico.py',251),
  ('methodSet -> PERIOD ADD LPAREN setValue RPAREN','methodSet',5,'p_methodSet','analisisSintactico.py',255),
  ('methodSet -> PERIOD DELETE LPAREN setValue RPAREN','methodSet',5,'p_methodSet','analisisSintactico.py',256),
  ('methodSet -> PERIOD CLEAR LPAREN empty RPAREN','methodSet',5,'p_methodSet','analisisSintactico.py',257),
]
