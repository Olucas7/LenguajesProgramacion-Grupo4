
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD ALERT AND ARRAY CLEAR COLON COMMA CONST DELETE DIVIDE DIV_EQUAL ELSE EQUAL FALSE FUNCTION GET GREATER GREATEREQUAL HAS ID IF ISEQUAL IS_IDENTICAL IS_NOT_IDENTICAL LBLOCK LBRACKET LENGTH LESS LESSEQUAL LET LPAREN MAP MINUS MINUS_EQUAL MOD MOD_EQUAL MUL_EQUAL NEW NOT NUM OR PERIOD PLUS PLUS_EQUAL POP PUSH RBLOCK RBRACKET RETURN RPAREN SET STRING TIMES TRUE TWOPOINTS UNSHIFT VAR WHILE WITH YIELD sentencia :  callMethods\n                    | callFunction COLON\n                    | varDeclaration\n                    | controlExpression\n                    | declareteFunction\n                    | assingOperadores COLON\n                    | inicializarOp\n\n       expression :  conditionalEspecifico\n                     | inicializarOp\n     asignarID :  ID EQUAL\n                        | varType_const ID EQUAL\n                        | varType_let ID EQUAL  assingOperadores : asignarID inicializarOp\n\n    controlExpression : sentencias_if\n                        | sentencias_if_else\n                        | sentencias_while\n                        | impresion\n                        | impresion_vacio\n             opConditional : ISEQUAL\n                      |  IS_NOT_IDENTICAL\n                      |  IS_IDENTICAL\n                      | GREATER\n                      | GREATEREQUAL\n                      | LESS\n                      | LESSEQUAL\n                      | boolean\n                      operadorLogical : AND\n                        | OR\n                        | NOT sentencias_if : IF LPAREN expression operadorLogical expression  RPAREN cuerpo_de_sentencias\n                    | IF LPAREN expression RPAREN cuerpo_de_sentencias\n    sentencias_if_else : IF LPAREN expression operadorLogical expression  RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias\n                          | IF LPAREN expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias\n    cuerpo_de_sentencias : LBLOCK sentencia RBLOCK\n                            | LBLOCK RBLOCK\n                            sentencias_while : WHILE LPAREN  expression RPAREN cuerpo_de_sentencias\n                        | WHILE LPAREN  expression operadorLogical expression RPAREN cuerpo_de_sentencias\n\n    impresion : ALERT LPAREN valores_de_impresion RPAREN COLON\n\n    valores_de_impresion : inicializarOp\n                              | javaScript_param\n                              | callFunction\n                              | estructuras_datos\n                              | return_ops\n\n\n    impresion_vacio : ALERT LPAREN RPAREN COLONjavaScript_param : STRING\n                         | NUM\n                         | boolean\n                         | ID\n                         | enteros\n                         | decimales\n    boolean : TRUE\n             | FALSE\n         varType_const : CONST\n\n     varType_let : LET\n                    | VAR\n     varDeclaration : asignarID  assign\n                    | varType_let ID COLON\n    assign : estructuras_datos COLON\n                    | javaScript_param COLON estructuras_datos : arrayDeclare\n                            | declararSet\n                            | declareMap\n\n     callMethods : ID methodArray COLON\n                     | ID methodSet COLON\n                     | ID methodMap COLON arrayDeclare :  LBRACKET  RBRACKET\n                       | LBRACKET  arrayValues RBRACKET\n                       | NEW ARRAY LPAREN arrayValues RPAREN\n                       | NEW ARRAY LPAREN  RPAREN\n                      arrayValues :  javaScript_param\n                    | javaScript_param COMMA arrayValues  methodArray : PERIOD PUSH LPAREN javaScript_param RPAREN\n                      | PERIOD UNSHIFT LPAREN arrayValues RPAREN\n                      | PERIOD POP LPAREN  RPAREN declareMap :  NEW MAP LPAREN LBRACKET iterableMap RBRACKET RPAREN\n                    | NEW MAP LPAREN  RPAREN\n                     iterableMap : LBRACKET keyValue COMMA keyValue RBRACKET\n                      | LBRACKET keyValue COMMA keyValue RBRACKET COMMA iterableMap keyValue : javaScript_param\n                  | declararSet\n                  | declareMap\n                  | arrayDeclare  iterableSet : keyValue\n                     | keyValue COMMA iterableSet\n                    | methodMap : PERIOD CLEAR LPAREN RPAREN\n                   | PERIOD LENGTH LPAREN RPAREN  declareteFunction : FUNCTION  ID LPAREN params RPAREN sentencesCmpt\n                          | FUNCTION  ID LPAREN RPAREN sentencesCmpt\n    sentencesCmpt : LBLOCK sentencia RBLOCK\n                     | LBLOCK RBLOCK\n                     | LBLOCK RETURN valores_de_impresion COLON RBLOCK\n                     | LBLOCK sentencia RETURN valores_de_impresion COLON RBLOCK    return_ops : javaScript_param\n                    | javaScript_param operadores_mat return_ops  operadores_mat : PLUS\n                        | MINUS\n                        | DIVIDE\n                        | TIMES\n\n    callFunction : ID LPAREN params RPAREN\n                    | ID LPAREN RPAREN\n                    \n                     params : paramList\n               paramList : javaScript_param\n                  | javaScript_param COMMA paramList  declararSet : NEW SET LPAREN RPAREN\n                    | NEW SET LPAREN LBRACKET iterableSet RBRACKET RPAREN\n     methodSet : PERIOD ADD LPAREN javaScript_param RPAREN\n                      | PERIOD DELETE LPAREN javaScript_param RPAREN\n                      | PERIOD CLEAR LPAREN RPAREN  inicializarOp : suma\n                    | resta  suma : numOperadores PLUS numOperadores\n           | numOperadores PLUS LPAREN numOperadores RPAREN\n            | numOperadores PLUS suma\n            |  numOperadores PLUS LPAREN numOperadores RPAREN suma\n          resta : numOperadores MINUS numOperadores\n             | numOperadores MINUS LPAREN numOperadores RPAREN\n             | numOperadores MINUS resta\n             | numOperadores MINUS LPAREN numOperadores RPAREN resta numOperadores : enteros\n                     |  decimales   enteros : NUM\n                 | numNegative numNegative : MINUS NUM\n                 | decimales : enteros PERIOD NUM   conditionalEspecifico :  ID opConditional dataCondi\n                    |  NUM opConditional NUM\n                    | STRING opConditional STRING \n                    dataCondi : STRING\n                  | NUM '
    
_lr_action_items = {'ID':([0,10,11,17,20,21,22,28,38,39,54,61,62,63,93,94,95,119,120,121,123,124,128,129,134,136,137,138,151,154,155,156,157,158,173,178,181,206,211,222,226,234,],[9,51,58,59,60,-54,-55,-53,51,-10,51,99,99,110,-12,51,-11,51,51,51,51,51,51,51,99,-27,-28,-29,99,51,-96,-97,-98,-99,51,9,9,51,110,51,110,51,]),'FUNCTION':([0,178,181,],[17,17,17,]),'LET':([0,178,181,],[21,21,21,]),'VAR':([0,178,181,],[22,22,22,]),'IF':([0,178,181,],[23,23,23,]),'WHILE':([0,178,181,],[24,24,24,]),'ALERT':([0,178,181,],[25,25,25,]),'CONST':([0,178,181,],[28,28,28,]),'NUM':([0,10,27,38,39,54,56,57,61,62,63,64,65,67,93,94,95,112,115,119,120,121,123,124,128,129,134,136,137,138,139,140,141,142,143,144,145,146,147,148,151,154,155,156,157,158,173,178,181,192,193,206,211,222,226,234,],[31,49,66,49,-10,49,-51,-52,100,100,49,31,31,117,-12,49,-11,31,31,49,49,49,49,49,49,49,100,-27,-28,-29,184,-19,-20,-21,-22,-23,-24,-25,-26,185,100,49,-96,-97,-98,-99,49,31,31,31,31,49,49,49,49,49,]),'MINUS':([0,10,26,29,30,31,32,38,39,48,49,50,51,52,53,54,56,57,61,62,63,64,65,66,75,76,93,94,95,100,106,110,112,114,115,117,119,120,121,123,124,128,129,134,136,137,138,151,154,155,156,157,158,173,178,181,190,192,193,206,211,219,222,226,234,],[27,27,65,-120,-121,-122,-123,27,-10,-45,-46,-47,-48,-49,-50,27,-51,-52,27,27,27,27,27,-124,-49,-50,-12,27,-11,-122,156,-48,27,65,27,-126,27,27,27,27,27,27,27,27,-27,-28,-29,27,27,-96,-97,-98,-99,27,27,27,156,27,27,27,27,65,27,27,27,]),'PERIOD':([0,9,10,29,31,32,38,39,49,52,54,61,62,63,64,65,66,75,93,94,95,100,112,115,119,120,121,123,124,128,129,134,136,137,138,151,154,155,156,157,158,173,178,181,192,193,206,211,222,226,234,],[-125,40,-125,67,-122,-123,-125,-10,-122,67,-125,-125,-125,-125,-125,-125,-124,67,-12,-125,-11,-122,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,-27,-28,-29,-125,-125,-96,-97,-98,-99,-125,-125,-125,-125,-125,-125,-125,-125,-125,-125,]),'PLUS':([0,10,26,29,30,31,32,39,48,49,50,51,52,53,56,57,61,62,63,64,66,75,76,93,95,100,106,110,111,117,134,136,137,138,151,154,155,156,157,158,178,181,190,192,211,217,226,],[-125,-125,64,-120,-121,-122,-123,-10,-45,-46,-47,-48,-49,-50,-51,-52,-125,-125,-125,-125,-124,-49,-50,-12,-11,-122,155,-48,64,-126,-125,-27,-28,-29,-125,-125,-96,-97,-98,-99,-125,-125,155,-125,-125,64,-125,]),'$end':([1,2,4,5,6,8,12,13,14,15,16,18,19,29,30,31,32,33,34,41,64,65,66,68,69,70,84,85,92,111,113,114,116,117,153,177,180,187,189,192,193,208,210,215,218,220,225,228,229,230,231,241,242,244,],[0,-1,-3,-4,-5,-7,-14,-15,-16,-17,-18,-110,-111,-120,-121,-122,-123,-2,-6,-56,-125,-125,-124,-63,-64,-65,-58,-59,-57,-112,-114,-116,-118,-126,-44,-89,-31,-36,-38,-113,-117,-88,-91,-35,-115,-119,-90,-30,-33,-34,-37,-92,-32,-93,]),'RBLOCK':([2,4,5,6,8,12,13,14,15,16,18,19,29,30,31,32,33,34,41,64,65,66,68,69,70,84,85,92,111,113,114,116,117,153,177,178,180,181,187,189,192,193,208,209,210,214,215,218,220,225,228,229,230,231,237,240,241,242,244,],[-1,-3,-4,-5,-7,-14,-15,-16,-17,-18,-110,-111,-120,-121,-122,-123,-2,-6,-56,-125,-125,-124,-63,-64,-65,-58,-59,-57,-112,-114,-116,-118,-126,-44,-89,210,-31,215,-36,-38,-113,-117,-88,225,-91,230,-35,-115,-119,-90,-30,-33,-34,-37,241,244,-92,-32,-93,]),'RETURN':([2,4,5,6,8,12,13,14,15,16,18,19,29,30,31,32,33,34,41,64,65,66,68,69,70,84,85,92,111,113,114,116,117,153,177,178,180,187,189,192,193,208,209,210,215,218,220,225,228,229,230,231,241,242,244,],[-1,-3,-4,-5,-7,-14,-15,-16,-17,-18,-110,-111,-120,-121,-122,-123,-2,-6,-56,-125,-125,-124,-63,-64,-65,-58,-59,-57,-112,-114,-116,-118,-126,-44,-89,211,-31,-36,-38,-113,-117,-88,226,-91,-35,-115,-119,-90,-30,-33,-34,-37,-92,-32,-93,]),'COLON':([3,7,10,18,19,29,30,31,32,35,36,37,39,42,43,44,45,46,47,48,49,50,51,52,53,56,57,58,64,65,66,72,75,76,86,93,95,104,105,106,107,108,109,110,111,113,114,116,117,118,127,152,154,155,156,157,158,164,167,168,171,172,175,190,191,192,193,194,195,196,197,198,211,218,220,226,227,232,235,236,],[33,34,-125,-110,-111,-120,-121,-122,-123,68,69,70,-10,-13,84,85,-60,-61,-62,-45,-46,-47,-48,-49,-50,-51,-52,92,-125,-125,-124,-101,-49,-50,-66,-12,-11,153,-39,-40,-41,-42,-43,-48,-112,-114,-116,-118,-126,-100,-67,189,-125,-96,-97,-98,-99,-74,-86,-87,-69,-105,-76,-94,-95,-113,-117,-72,-73,-107,-108,-68,-125,-115,-119,-125,237,-106,-75,240,]),'LPAREN':([9,23,24,25,59,64,65,77,78,79,80,81,82,83,89,90,91,110,],[38,61,62,63,94,112,115,120,121,122,123,124,125,126,129,130,131,38,]),'EQUAL':([9,58,60,],[39,93,95,]),'STRING':([10,38,39,54,56,57,61,62,63,93,94,95,119,120,121,123,124,128,129,134,136,137,138,139,140,141,142,143,144,145,146,147,149,151,154,155,156,157,158,173,206,211,222,226,234,],[48,48,-10,48,-51,-52,101,101,48,-12,48,-11,48,48,48,48,48,48,48,101,-27,-28,-29,183,-19,-20,-21,-22,-23,-24,-25,-26,186,101,48,-96,-97,-98,-99,48,48,48,48,48,48,]),'LBRACKET':([10,39,63,93,95,130,131,173,174,206,211,222,226,234,245,],[54,-10,54,-12,-11,173,174,54,206,54,54,54,54,54,206,]),'NEW':([10,39,63,93,95,173,206,211,222,226,234,],[55,-10,55,-12,-11,199,199,55,199,55,199,]),'TRUE':([10,38,39,54,63,93,94,95,99,100,101,119,120,121,123,124,128,129,154,155,156,157,158,173,206,211,222,226,234,],[56,56,-10,56,56,-12,56,-11,56,56,56,56,56,56,56,56,56,56,56,-96,-97,-98,-99,56,56,56,56,56,56,]),'FALSE':([10,38,39,54,63,93,94,95,99,100,101,119,120,121,123,124,128,129,154,155,156,157,158,173,206,211,222,226,234,],[57,57,-10,57,57,-12,57,-11,57,57,57,57,57,57,57,57,57,57,57,-96,-97,-98,-99,57,57,57,57,57,57,]),'RPAREN':([18,19,29,30,31,32,38,45,46,47,48,49,50,51,52,53,56,57,63,64,65,66,71,72,73,74,75,76,86,88,94,96,97,98,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,154,155,156,157,158,159,160,161,162,163,165,166,169,170,171,172,175,179,182,183,184,185,186,188,190,191,192,193,198,218,220,221,224,232,235,],[-110,-111,-120,-121,-122,-123,72,-60,-61,-62,-45,-46,-47,-48,-49,-50,-51,-52,104,-125,-125,-124,118,-101,-102,-103,-49,-50,-66,-70,133,135,-8,-9,150,152,-39,-40,-41,-42,-43,-48,-112,-125,-114,-116,-125,-118,-126,-100,-125,-125,-125,164,-125,-125,167,168,-67,-125,171,172,175,176,-125,-96,-97,-98,-99,192,193,-104,194,195,196,197,-71,198,-69,-105,-76,212,-127,-130,-131,-128,-129,216,-94,-95,-113,-117,-68,-115,-119,232,235,-106,-75,]),'AND':([18,19,29,30,31,32,64,65,66,96,97,98,102,111,113,114,116,117,182,183,184,185,186,192,193,218,220,],[-110,-111,-120,-121,-122,-123,-125,-125,-124,136,-8,-9,136,-112,-114,-116,-118,-126,-127,-130,-131,-128,-129,-113,-117,-115,-119,]),'OR':([18,19,29,30,31,32,64,65,66,96,97,98,102,111,113,114,116,117,182,183,184,185,186,192,193,218,220,],[-110,-111,-120,-121,-122,-123,-125,-125,-124,137,-8,-9,137,-112,-114,-116,-118,-126,-127,-130,-131,-128,-129,-113,-117,-115,-119,]),'NOT':([18,19,29,30,31,32,64,65,66,96,97,98,102,111,113,114,116,117,182,183,184,185,186,192,193,218,220,],[-110,-111,-120,-121,-122,-123,-125,-125,-124,138,-8,-9,138,-112,-114,-116,-118,-126,-127,-130,-131,-128,-129,-113,-117,-115,-119,]),'COMMA':([32,38,48,49,50,51,54,56,57,66,74,75,76,86,88,94,117,119,121,127,128,129,171,172,173,175,198,201,202,203,204,205,206,222,223,232,235,243,],[-123,-125,-45,-46,-47,-48,-125,-51,-52,-124,119,-49,-50,-66,128,-125,-126,-125,-125,-67,-125,-125,-69,-105,-125,-76,-68,222,-79,-80,-81,-82,-125,-125,234,-106,-75,245,]),'RBRACKET':([32,48,49,50,51,54,56,57,66,75,76,86,87,88,117,127,128,169,171,172,173,175,198,200,201,202,203,204,205,207,222,232,233,234,235,239,243,246,],[-123,-45,-46,-47,-48,86,-51,-52,-124,-49,-50,-66,127,-70,-126,-67,-125,-71,-69,-105,-85,-76,-68,221,-83,-79,-80,-81,-82,224,-85,-106,-84,-125,-75,243,-77,-78,]),'DIVIDE':([32,48,49,50,51,52,53,56,57,63,66,75,76,106,110,117,154,155,156,157,158,190,211,226,],[-123,-45,-46,-47,-48,-49,-50,-51,-52,-125,-124,-49,-50,157,-48,-126,-125,-96,-97,-98,-99,157,-125,-125,]),'TIMES':([32,48,49,50,51,52,53,56,57,63,66,75,76,106,110,117,154,155,156,157,158,190,211,226,],[-123,-45,-46,-47,-48,-49,-50,-51,-52,-125,-124,-49,-50,158,-48,-126,-125,-96,-97,-98,-99,158,-125,-125,]),'PUSH':([40,],[77,]),'UNSHIFT':([40,],[78,]),'POP':([40,],[79,]),'ADD':([40,],[80,]),'DELETE':([40,],[81,]),'CLEAR':([40,],[82,]),'LENGTH':([40,],[83,]),'ARRAY':([55,199,],[89,89,]),'SET':([55,199,],[90,90,]),'MAP':([55,199,],[91,91,]),'ISEQUAL':([99,100,101,],[140,140,140,]),'IS_NOT_IDENTICAL':([99,100,101,],[141,141,141,]),'IS_IDENTICAL':([99,100,101,],[142,142,142,]),'GREATER':([99,100,101,],[143,143,143,]),'GREATEREQUAL':([99,100,101,],[144,144,144,]),'LESS':([99,100,101,],[145,145,145,]),'LESSEQUAL':([99,100,101,],[146,146,146,]),'LBLOCK':([133,135,150,176,212,213,216,238,],[178,181,181,178,181,181,181,181,]),'ELSE':([180,215,228,230,],[213,-35,238,-34,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'sentencia':([0,178,181,],[1,209,214,]),'callMethods':([0,178,181,],[2,2,2,]),'callFunction':([0,63,178,181,211,226,],[3,107,3,3,107,107,]),'varDeclaration':([0,178,181,],[4,4,4,]),'controlExpression':([0,178,181,],[5,5,5,]),'declareteFunction':([0,178,181,],[6,6,6,]),'assingOperadores':([0,178,181,],[7,7,7,]),'inicializarOp':([0,10,61,62,63,134,151,178,181,211,226,],[8,42,98,98,105,98,98,8,8,105,105,]),'asignarID':([0,178,181,],[10,10,10,]),'varType_let':([0,178,181,],[11,11,11,]),'sentencias_if':([0,178,181,],[12,12,12,]),'sentencias_if_else':([0,178,181,],[13,13,13,]),'sentencias_while':([0,178,181,],[14,14,14,]),'impresion':([0,178,181,],[15,15,15,]),'impresion_vacio':([0,178,181,],[16,16,16,]),'suma':([0,10,61,62,63,64,134,151,178,181,192,211,226,],[18,18,18,18,18,113,18,18,18,18,218,18,18,]),'resta':([0,10,61,62,63,65,134,151,178,181,193,211,226,],[19,19,19,19,19,116,19,19,19,19,220,19,19,]),'varType_const':([0,178,181,],[20,20,20,]),'numOperadores':([0,10,61,62,63,64,65,112,115,134,151,178,181,192,193,211,226,],[26,26,26,26,26,111,114,159,160,26,26,26,26,217,219,26,26,]),'enteros':([0,10,38,54,61,62,63,64,65,94,112,115,119,120,121,123,124,128,129,134,151,154,173,178,181,192,193,206,211,222,226,234,],[29,52,75,75,29,29,52,29,29,75,29,29,75,75,75,75,75,75,75,29,29,75,75,29,29,29,29,75,52,75,52,75,]),'decimales':([0,10,38,54,61,62,63,64,65,94,112,115,119,120,121,123,124,128,129,134,151,154,173,178,181,192,193,206,211,222,226,234,],[30,53,76,76,30,30,53,30,30,76,30,30,76,76,76,76,76,76,76,30,30,76,76,30,30,30,30,76,53,76,53,76,]),'numNegative':([0,10,38,54,61,62,63,64,65,94,112,115,119,120,121,123,124,128,129,134,151,154,173,178,181,192,193,206,211,222,226,234,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'methodArray':([9,],[35,]),'methodSet':([9,],[36,]),'methodMap':([9,],[37,]),'assign':([10,],[41,]),'estructuras_datos':([10,63,211,226,],[43,108,108,108,]),'javaScript_param':([10,38,54,63,94,119,120,121,123,124,128,129,154,173,206,211,222,226,234,],[44,74,88,106,74,74,162,88,165,166,88,88,190,202,202,106,202,106,202,]),'arrayDeclare':([10,63,173,206,211,222,226,234,],[45,45,205,205,45,205,45,205,]),'declararSet':([10,63,173,206,211,222,226,234,],[46,46,203,203,46,203,46,203,]),'declareMap':([10,63,173,206,211,222,226,234,],[47,47,204,204,47,204,47,204,]),'boolean':([10,38,54,63,94,99,100,101,119,120,121,123,124,128,129,154,173,206,211,222,226,234,],[50,50,50,50,50,147,147,147,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'params':([38,94,],[71,132,]),'paramList':([38,94,119,],[73,73,161,]),'arrayValues':([54,121,128,129,],[87,163,169,170,]),'expression':([61,62,134,151,],[96,102,179,188,]),'conditionalEspecifico':([61,62,134,151,],[97,97,97,97,]),'valores_de_impresion':([63,211,226,],[103,227,236,]),'return_ops':([63,154,211,226,],[109,191,109,109,]),'operadorLogical':([96,102,],[134,151,]),'opConditional':([99,100,101,],[139,148,149,]),'operadores_mat':([106,190,],[154,154,]),'sentencesCmpt':([133,176,],[177,208,]),'cuerpo_de_sentencias':([135,150,212,213,216,238,],[180,187,228,229,231,242,]),'dataCondi':([139,],[182,]),'iterableSet':([173,222,],[200,233,]),'keyValue':([173,206,222,234,],[201,223,201,239,]),'iterableMap':([174,245,],[207,246,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> sentencia","S'",1,None,None,None),
  ('sentencia -> callMethods','sentencia',1,'p_sentencia','analisisSintactico.py',7),
  ('sentencia -> callFunction COLON','sentencia',2,'p_sentencia','analisisSintactico.py',8),
  ('sentencia -> varDeclaration','sentencia',1,'p_sentencia','analisisSintactico.py',9),
  ('sentencia -> controlExpression','sentencia',1,'p_sentencia','analisisSintactico.py',10),
  ('sentencia -> declareteFunction','sentencia',1,'p_sentencia','analisisSintactico.py',11),
  ('sentencia -> assingOperadores COLON','sentencia',2,'p_sentencia','analisisSintactico.py',12),
  ('sentencia -> inicializarOp','sentencia',1,'p_sentencia','analisisSintactico.py',13),
  ('expression -> conditionalEspecifico','expression',1,'p_expression','analisisSintactico.py',17),
  ('expression -> inicializarOp','expression',1,'p_expression','analisisSintactico.py',18),
  ('asignarID -> ID EQUAL','asignarID',2,'p_asignarID','analisisSintactico.py',22),
  ('asignarID -> varType_const ID EQUAL','asignarID',3,'p_asignarID','analisisSintactico.py',23),
  ('asignarID -> varType_let ID EQUAL','asignarID',3,'p_asignarID','analisisSintactico.py',24),
  ('assingOperadores -> asignarID inicializarOp','assingOperadores',2,'p_assingOperadores','analisisSintactico.py',26),
  ('controlExpression -> sentencias_if','controlExpression',1,'p_controlExpression','analisisSintactico.py',31),
  ('controlExpression -> sentencias_if_else','controlExpression',1,'p_controlExpression','analisisSintactico.py',32),
  ('controlExpression -> sentencias_while','controlExpression',1,'p_controlExpression','analisisSintactico.py',33),
  ('controlExpression -> impresion','controlExpression',1,'p_controlExpression','analisisSintactico.py',34),
  ('controlExpression -> impresion_vacio','controlExpression',1,'p_controlExpression','analisisSintactico.py',35),
  ('opConditional -> ISEQUAL','opConditional',1,'p_opConditional','analisisSintactico.py',40),
  ('opConditional -> IS_NOT_IDENTICAL','opConditional',1,'p_opConditional','analisisSintactico.py',41),
  ('opConditional -> IS_IDENTICAL','opConditional',1,'p_opConditional','analisisSintactico.py',42),
  ('opConditional -> GREATER','opConditional',1,'p_opConditional','analisisSintactico.py',43),
  ('opConditional -> GREATEREQUAL','opConditional',1,'p_opConditional','analisisSintactico.py',44),
  ('opConditional -> LESS','opConditional',1,'p_opConditional','analisisSintactico.py',45),
  ('opConditional -> LESSEQUAL','opConditional',1,'p_opConditional','analisisSintactico.py',46),
  ('opConditional -> boolean','opConditional',1,'p_opConditional','analisisSintactico.py',47),
  ('operadorLogical -> AND','operadorLogical',1,'p_operadorLogical','analisisSintactico.py',50),
  ('operadorLogical -> OR','operadorLogical',1,'p_operadorLogical','analisisSintactico.py',51),
  ('operadorLogical -> NOT','operadorLogical',1,'p_operadorLogical','analisisSintactico.py',52),
  ('sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias','sentencias_if',7,'p_sentencias_if','analisisSintactico.py',56),
  ('sentencias_if -> IF LPAREN expression RPAREN cuerpo_de_sentencias','sentencias_if',5,'p_sentencias_if','analisisSintactico.py',57),
  ('sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias','sentencias_if_else',9,'p_sentencias_if_else','analisisSintactico.py',62),
  ('sentencias_if_else -> IF LPAREN expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias','sentencias_if_else',7,'p_sentencias_if_else','analisisSintactico.py',63),
  ('cuerpo_de_sentencias -> LBLOCK sentencia RBLOCK','cuerpo_de_sentencias',3,'p_cuerpo_de_sentencias','analisisSintactico.py',66),
  ('cuerpo_de_sentencias -> LBLOCK RBLOCK','cuerpo_de_sentencias',2,'p_cuerpo_de_sentencias','analisisSintactico.py',67),
  ('sentencias_while -> WHILE LPAREN expression RPAREN cuerpo_de_sentencias','sentencias_while',5,'p_sentencias_while','analisisSintactico.py',71),
  ('sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias','sentencias_while',7,'p_sentencias_while','analisisSintactico.py',72),
  ('impresion -> ALERT LPAREN valores_de_impresion RPAREN COLON','impresion',5,'p_impresion','analisisSintactico.py',77),
  ('valores_de_impresion -> inicializarOp','valores_de_impresion',1,'p_valores_de_impresion','analisisSintactico.py',81),
  ('valores_de_impresion -> javaScript_param','valores_de_impresion',1,'p_valores_de_impresion','analisisSintactico.py',82),
  ('valores_de_impresion -> callFunction','valores_de_impresion',1,'p_valores_de_impresion','analisisSintactico.py',83),
  ('valores_de_impresion -> estructuras_datos','valores_de_impresion',1,'p_valores_de_impresion','analisisSintactico.py',84),
  ('valores_de_impresion -> return_ops','valores_de_impresion',1,'p_valores_de_impresion','analisisSintactico.py',85),
  ('impresion_vacio -> ALERT LPAREN RPAREN COLON','impresion_vacio',4,'p_impresion_vacio','analisisSintactico.py',90),
  ('javaScript_param -> STRING','javaScript_param',1,'p_javaScript_param','analisisSintactico.py',107),
  ('javaScript_param -> NUM','javaScript_param',1,'p_javaScript_param','analisisSintactico.py',108),
  ('javaScript_param -> boolean','javaScript_param',1,'p_javaScript_param','analisisSintactico.py',109),
  ('javaScript_param -> ID','javaScript_param',1,'p_javaScript_param','analisisSintactico.py',110),
  ('javaScript_param -> enteros','javaScript_param',1,'p_javaScript_param','analisisSintactico.py',111),
  ('javaScript_param -> decimales','javaScript_param',1,'p_javaScript_param','analisisSintactico.py',112),
  ('boolean -> TRUE','boolean',1,'p_boolean','analisisSintactico.py',121),
  ('boolean -> FALSE','boolean',1,'p_boolean','analisisSintactico.py',122),
  ('varType_const -> CONST','varType_const',1,'p_varType_const','analisisSintactico.py',127),
  ('varType_let -> LET','varType_let',1,'p_varType_let','analisisSintactico.py',132),
  ('varType_let -> VAR','varType_let',1,'p_varType_let','analisisSintactico.py',133),
  ('varDeclaration -> asignarID assign','varDeclaration',2,'p_varDeclaration','analisisSintactico.py',139),
  ('varDeclaration -> varType_let ID COLON','varDeclaration',3,'p_varDeclaration','analisisSintactico.py',140),
  ('assign -> estructuras_datos COLON','assign',2,'p_assign','analisisSintactico.py',144),
  ('assign -> javaScript_param COLON','assign',2,'p_assign','analisisSintactico.py',145),
  ('estructuras_datos -> arrayDeclare','estructuras_datos',1,'p_estructuras_datos','analisisSintactico.py',148),
  ('estructuras_datos -> declararSet','estructuras_datos',1,'p_estructuras_datos','analisisSintactico.py',149),
  ('estructuras_datos -> declareMap','estructuras_datos',1,'p_estructuras_datos','analisisSintactico.py',150),
  ('callMethods -> ID methodArray COLON','callMethods',3,'p_callMethods','analisisSintactico.py',156),
  ('callMethods -> ID methodSet COLON','callMethods',3,'p_callMethods','analisisSintactico.py',157),
  ('callMethods -> ID methodMap COLON','callMethods',3,'p_callMethods','analisisSintactico.py',158),
  ('arrayDeclare -> LBRACKET RBRACKET','arrayDeclare',2,'p_arrayDeclare','analisisSintactico.py',163),
  ('arrayDeclare -> LBRACKET arrayValues RBRACKET','arrayDeclare',3,'p_arrayDeclare','analisisSintactico.py',164),
  ('arrayDeclare -> NEW ARRAY LPAREN arrayValues RPAREN','arrayDeclare',5,'p_arrayDeclare','analisisSintactico.py',165),
  ('arrayDeclare -> NEW ARRAY LPAREN RPAREN','arrayDeclare',4,'p_arrayDeclare','analisisSintactico.py',166),
  ('arrayValues -> javaScript_param','arrayValues',1,'p_arrayValues','analisisSintactico.py',171),
  ('arrayValues -> javaScript_param COMMA arrayValues','arrayValues',3,'p_arrayValues','analisisSintactico.py',172),
  ('methodArray -> PERIOD PUSH LPAREN javaScript_param RPAREN','methodArray',5,'p_methodArray','analisisSintactico.py',178),
  ('methodArray -> PERIOD UNSHIFT LPAREN arrayValues RPAREN','methodArray',5,'p_methodArray','analisisSintactico.py',179),
  ('methodArray -> PERIOD POP LPAREN RPAREN','methodArray',4,'p_methodArray','analisisSintactico.py',180),
  ('declareMap -> NEW MAP LPAREN LBRACKET iterableMap RBRACKET RPAREN','declareMap',7,'p_declareMap','analisisSintactico.py',184),
  ('declareMap -> NEW MAP LPAREN RPAREN','declareMap',4,'p_declareMap','analisisSintactico.py',185),
  ('iterableMap -> LBRACKET keyValue COMMA keyValue RBRACKET','iterableMap',5,'p_iterableMap','analisisSintactico.py',189),
  ('iterableMap -> LBRACKET keyValue COMMA keyValue RBRACKET COMMA iterableMap','iterableMap',7,'p_iterableMap','analisisSintactico.py',190),
  ('keyValue -> javaScript_param','keyValue',1,'p_keyValue','analisisSintactico.py',194),
  ('keyValue -> declararSet','keyValue',1,'p_keyValue','analisisSintactico.py',195),
  ('keyValue -> declareMap','keyValue',1,'p_keyValue','analisisSintactico.py',196),
  ('keyValue -> arrayDeclare','keyValue',1,'p_keyValue','analisisSintactico.py',197),
  ('iterableSet -> keyValue','iterableSet',1,'p_iterableSet','analisisSintactico.py',202),
  ('iterableSet -> keyValue COMMA iterableSet','iterableSet',3,'p_iterableSet','analisisSintactico.py',203),
  ('iterableSet -> <empty>','iterableSet',0,'p_iterableSet','analisisSintactico.py',204),
  ('methodMap -> PERIOD CLEAR LPAREN RPAREN','methodMap',4,'p_methodMap','analisisSintactico.py',207),
  ('methodMap -> PERIOD LENGTH LPAREN RPAREN','methodMap',4,'p_methodMap','analisisSintactico.py',208),
  ('declareteFunction -> FUNCTION ID LPAREN params RPAREN sentencesCmpt','declareteFunction',6,'p_declareteFunction','analisisSintactico.py',213),
  ('declareteFunction -> FUNCTION ID LPAREN RPAREN sentencesCmpt','declareteFunction',5,'p_declareteFunction','analisisSintactico.py',214),
  ('sentencesCmpt -> LBLOCK sentencia RBLOCK','sentencesCmpt',3,'p_sentencesCmpt','analisisSintactico.py',219),
  ('sentencesCmpt -> LBLOCK RBLOCK','sentencesCmpt',2,'p_sentencesCmpt','analisisSintactico.py',220),
  ('sentencesCmpt -> LBLOCK RETURN valores_de_impresion COLON RBLOCK','sentencesCmpt',5,'p_sentencesCmpt','analisisSintactico.py',221),
  ('sentencesCmpt -> LBLOCK sentencia RETURN valores_de_impresion COLON RBLOCK','sentencesCmpt',6,'p_sentencesCmpt','analisisSintactico.py',222),
  ('return_ops -> javaScript_param','return_ops',1,'p_return_ops','analisisSintactico.py',226),
  ('return_ops -> javaScript_param operadores_mat return_ops','return_ops',3,'p_return_ops','analisisSintactico.py',227),
  ('operadores_mat -> PLUS','operadores_mat',1,'p_operadores_mat','analisisSintactico.py',230),
  ('operadores_mat -> MINUS','operadores_mat',1,'p_operadores_mat','analisisSintactico.py',231),
  ('operadores_mat -> DIVIDE','operadores_mat',1,'p_operadores_mat','analisisSintactico.py',232),
  ('operadores_mat -> TIMES','operadores_mat',1,'p_operadores_mat','analisisSintactico.py',233),
  ('callFunction -> ID LPAREN params RPAREN','callFunction',4,'p_callFunction','analisisSintactico.py',238),
  ('callFunction -> ID LPAREN RPAREN','callFunction',3,'p_callFunction','analisisSintactico.py',239),
  ('params -> paramList','params',1,'p_params','analisisSintactico.py',245),
  ('paramList -> javaScript_param','paramList',1,'p_paramList','analisisSintactico.py',251),
  ('paramList -> javaScript_param COMMA paramList','paramList',3,'p_paramList','analisisSintactico.py',252),
  ('declararSet -> NEW SET LPAREN RPAREN','declararSet',4,'p_declararSet','analisisSintactico.py',273),
  ('declararSet -> NEW SET LPAREN LBRACKET iterableSet RBRACKET RPAREN','declararSet',7,'p_declararSet','analisisSintactico.py',274),
  ('methodSet -> PERIOD ADD LPAREN javaScript_param RPAREN','methodSet',5,'p_methodSet','analisisSintactico.py',284),
  ('methodSet -> PERIOD DELETE LPAREN javaScript_param RPAREN','methodSet',5,'p_methodSet','analisisSintactico.py',285),
  ('methodSet -> PERIOD CLEAR LPAREN RPAREN','methodSet',4,'p_methodSet','analisisSintactico.py',286),
  ('inicializarOp -> suma','inicializarOp',1,'p_inicializarOp','analisisSintactico.py',294),
  ('inicializarOp -> resta','inicializarOp',1,'p_inicializarOp','analisisSintactico.py',295),
  ('suma -> numOperadores PLUS numOperadores','suma',3,'p_suma','analisisSintactico.py',302),
  ('suma -> numOperadores PLUS LPAREN numOperadores RPAREN','suma',5,'p_suma','analisisSintactico.py',303),
  ('suma -> numOperadores PLUS suma','suma',3,'p_suma','analisisSintactico.py',304),
  ('suma -> numOperadores PLUS LPAREN numOperadores RPAREN suma','suma',6,'p_suma','analisisSintactico.py',305),
  ('resta -> numOperadores MINUS numOperadores','resta',3,'p_resta','analisisSintactico.py',309),
  ('resta -> numOperadores MINUS LPAREN numOperadores RPAREN','resta',5,'p_resta','analisisSintactico.py',310),
  ('resta -> numOperadores MINUS resta','resta',3,'p_resta','analisisSintactico.py',311),
  ('resta -> numOperadores MINUS LPAREN numOperadores RPAREN resta','resta',6,'p_resta','analisisSintactico.py',312),
  ('numOperadores -> enteros','numOperadores',1,'p_numOperadores','analisisSintactico.py',350),
  ('numOperadores -> decimales','numOperadores',1,'p_numOperadores','analisisSintactico.py',351),
  ('enteros -> NUM','enteros',1,'p_enteros','analisisSintactico.py',354),
  ('enteros -> numNegative','enteros',1,'p_enteros','analisisSintactico.py',355),
  ('numNegative -> MINUS NUM','numNegative',2,'p_numNegative','analisisSintactico.py',358),
  ('numNegative -> <empty>','numNegative',0,'p_numNegative','analisisSintactico.py',359),
  ('decimales -> enteros PERIOD NUM','decimales',3,'p_decimales','analisisSintactico.py',362),
  ('conditionalEspecifico -> ID opConditional dataCondi','conditionalEspecifico',3,'p_coditionalEspecifico','analisisSintactico.py',368),
  ('conditionalEspecifico -> NUM opConditional NUM','conditionalEspecifico',3,'p_coditionalEspecifico','analisisSintactico.py',369),
  ('conditionalEspecifico -> STRING opConditional STRING','conditionalEspecifico',3,'p_coditionalEspecifico','analisisSintactico.py',370),
  ('dataCondi -> STRING','dataCondi',1,'p_dataCondi','analisisSintactico.py',375),
  ('dataCondi -> NUM','dataCondi',1,'p_dataCondi','analisisSintactico.py',376),
]
