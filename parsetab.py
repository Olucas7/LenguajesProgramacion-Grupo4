
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD ALERT AND ARRAY CLEAR COLON COMMA CONST DELETE DIVIDE ELSE EQUAL FALSE FUNCTION GREATER GREATEREQUAL ID IF ISEQUAL IS_IDENTICAL IS_NOT_IDENTICAL LBLOCK LBRACKET LESS LESSEQUAL LET LPAREN MAP MINUS NEW NOT NUM OR PERIOD PLUS POP PUSH RBLOCK RBRACKET RETURN RPAREN SET SIZE STRING TIMES TRUE UNSHIFT VAR WHILE sentencia :  callMethods\n                    | callFunction COLON\n                    | varDeclaration\n                    | controlExpression\n                    | declareteFunction\n\n\n       expression :  conditionalEspecifico\n                     | inicializarOp\n    controlExpression : sentencias_if\n                        | sentencias_if_else\n                        | sentencias_while\n                        | impresion\n                        | impresion_vacio\n             opConditional : ISEQUAL\n                      |  IS_NOT_IDENTICAL\n                      |  IS_IDENTICAL\n                      | GREATER\n                      | GREATEREQUAL\n                      | LESS\n                      | LESSEQUAL\n                      | boolean\n                      operadorLogical : AND\n                        | OR\n                        | NOT sentencias_if : IF LPAREN expression operadorLogical expression  RPAREN cuerpo_de_sentencias\n                    | IF LPAREN expression RPAREN cuerpo_de_sentencias\n    sentencias_if_else : IF LPAREN expression operadorLogical expression  RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias\n                          | IF LPAREN expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias\n    cuerpo_de_sentencias : LBLOCK sentencia RBLOCK\n                            | LBLOCK RBLOCK\n                            sentencias_while : WHILE LPAREN  expression RPAREN cuerpo_de_sentencias\n                        | WHILE LPAREN  expression operadorLogical expression RPAREN cuerpo_de_sentencias\n\n    impresion : ALERT LPAREN valores_de_impresion RPAREN COLON\n\n    valores_de_impresion : inicializarOp\n                              | javaScript_param\n                              | callFunction\n                              | estructuras_datos\n                              | return_ops\n\n\n    impresion_vacio : ALERT LPAREN RPAREN COLONjavaScript_param : STRING\n                         | inicializarOp\n                         | boolean\n                         | ID\n\n    boolean : TRUE\n             | FALSE\n         varType_let : LET\n                    | VAR\n     varType :  varType_let\n                  | CONST  varDeclaration : varType assign COLON\n                    | assign COLON\n                    | varType_let ID COLON\n                    | varType_let assign COLON\n    assign : ID  EQUAL  estructuras_datos\n                |  ID EQUAL javaScript_param\n                | ID EQUAL\n                  estructuras_datos : arrayDeclare\n                            | declararSet\n                            | declareMap\n\n     callMethods : ID methodArray COLON\n                     | ID methodSet COLON\n                     | ID methodMap COLON arrayDeclare :  LBRACKET  RBRACKET\n                       | LBRACKET  arrayValues RBRACKET\n                       | NEW ARRAY LPAREN arrayValues RPAREN\n                       | NEW ARRAY LPAREN  RPAREN\n                      arrayValues :  javaScript_param\n                    | javaScript_param COMMA arrayValues  methodArray : PERIOD PUSH LPAREN javaScript_param RPAREN\n                      | PERIOD UNSHIFT LPAREN arrayValues RPAREN\n                      | PERIOD POP LPAREN  RPAREN declareMap :  NEW MAP LPAREN LBRACKET iterableMap RBRACKET RPAREN\n                    | NEW MAP LPAREN  RPAREN\n                     iterableMap : LBRACKET keyValue COMMA keyValue RBRACKET\n                      | LBRACKET keyValue COMMA keyValue RBRACKET COMMA iterableMap keyValue : javaScript_param\n                  | declararSet\n                  | declareMap\n                  | arrayDeclare  iterableSet : keyValue\n                     | keyValue COMMA iterableSet\n                    | methodMap : PERIOD CLEAR LPAREN RPAREN\n                   | PERIOD SIZE  declareteFunction : FUNCTION  ID LPAREN params RPAREN sentencesCmpt\n                          | FUNCTION  ID LPAREN RPAREN sentencesCmpt\n    sentencesCmpt : LBLOCK sentencia RBLOCK\n                     | LBLOCK RBLOCK\n                     | LBLOCK RETURN valores_de_impresion COLON RBLOCK\n                     | LBLOCK sentencia RETURN valores_de_impresion COLON RBLOCK    return_ops : javaScript_param\n                    | javaScript_param operadores_mat return_ops  operadores_mat : PLUS\n                        | MINUS\n                        | DIVIDE\n                        | TIMES\n\n    callFunction : ID LPAREN params RPAREN\n                    | ID LPAREN RPAREN\n                    \n                     params :  javaScript_param\n            | javaScript_param COMMA params\n                args : javaScript_param\n             | javaScript_param COMMA args\n      declararSet : NEW SET LPAREN RPAREN\n                    | NEW SET LPAREN LBRACKET iterableSet RBRACKET RPAREN\n     methodSet : PERIOD ADD LPAREN javaScript_param RPAREN\n                      | PERIOD DELETE LPAREN javaScript_param RPAREN\n                      | PERIOD CLEAR LPAREN RPAREN  inicializarOp : MINUS operacionesMath\n                    | PLUS operacionesMath\n                    | operacionesMath\n                    | numOperadores  operacionesMath :  suma\n                       | resta\n                       | multiplicacion\n                       | divicion  suma : numOperadores PLUS inicializarOp\n           | numOperadores PLUS LPAREN inicializarOp RPAREN\n            | numOperadores PLUS suma\n            |  numOperadores PLUS LPAREN inicializarOp RPAREN suma\n          resta : numOperadores MINUS inicializarOp\n             | numOperadores MINUS LPAREN inicializarOp RPAREN\n             | numOperadores MINUS resta\n             | numOperadores MINUS LPAREN inicializarOp RPAREN resta multiplicacion : numOperadores TIMES LPAREN inicializarOp RPAREN\n                | numOperadores  TIMES  inicializarOp\n                | numOperadores  TIMES  multiplicacion\n                  divicion : numOperadores DIVIDE LPAREN inicializarOp RPAREN\n                | numOperadores  DIVIDE inicializarOp\n                | numOperadores  DIVIDE divicion  numOperadores : enteros\n                     |  decimales   enteros : NUM\n                 | numNegative numNegative : MINUS NUM\n                 | decimales : enteros PERIOD NUM   conditionalEspecifico :  ID opConditional dataCondi\n                    |  NUM opConditional NUM\n                    | STRING opConditional STRING \n                    dataCondi : STRING\n                  | NUM '
    
_lr_action_items = {'ID':([0,8,10,16,17,18,19,27,28,36,37,38,68,80,97,114,115,117,118,122,124,125,126,139,142,143,144,145,146,166,167,178,181,200,210,228,231,242,250,],[7,31,33,35,-48,-45,-46,42,42,84,84,95,42,42,42,42,42,42,42,84,-21,-22,-23,84,42,-92,-93,-94,-95,42,42,7,7,42,95,42,95,42,42,]),'FUNCTION':([0,178,181,],[16,16,16,]),'CONST':([0,178,181,],[17,17,17,]),'LET':([0,178,181,],[18,18,18,]),'VAR':([0,178,181,],[19,19,19,]),'IF':([0,178,181,],[20,20,20,]),'WHILE':([0,178,181,],[21,21,21,]),'ALERT':([0,178,181,],[22,22,22,]),'$end':([1,2,4,5,6,11,12,13,14,15,23,32,39,40,41,77,78,79,141,177,180,187,189,207,209,214,230,233,234,235,236,253,254,256,],[0,-1,-3,-4,-5,-8,-9,-10,-11,-12,-2,-50,-59,-60,-61,-49,-51,-52,-38,-85,-25,-30,-32,-84,-87,-29,-86,-24,-27,-28,-31,-88,-26,-89,]),'RBLOCK':([2,4,5,6,11,12,13,14,15,23,32,39,40,41,77,78,79,141,177,178,180,181,187,189,207,208,209,213,214,230,233,234,235,236,246,252,253,254,256,],[-1,-3,-4,-5,-8,-9,-10,-11,-12,-2,-50,-59,-60,-61,-49,-51,-52,-38,-85,209,-25,214,-30,-32,-84,230,-87,235,-29,-86,-24,-27,-28,-31,253,256,-88,-26,-89,]),'RETURN':([2,4,5,6,11,12,13,14,15,23,32,39,40,41,77,78,79,141,177,178,180,187,189,207,208,209,214,230,233,234,235,236,253,254,256,],[-1,-3,-4,-5,-8,-9,-10,-11,-12,-2,-50,-59,-60,-61,-49,-51,-52,-38,-85,210,-25,-30,-32,-84,231,-87,-29,-86,-24,-27,-28,-31,-88,-26,-89,]),'COLON':([3,9,24,25,26,28,30,33,34,42,44,46,47,48,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,76,89,90,91,92,93,94,95,96,99,100,102,103,104,105,106,108,140,142,143,144,145,146,149,151,152,153,155,156,158,159,160,162,163,164,165,172,175,190,191,198,199,202,203,204,205,206,210,216,217,218,219,220,231,232,238,240,245,248,251,],[23,32,39,40,41,-55,77,78,79,-42,-97,-39,-40,-41,-109,-110,-43,-44,-111,-112,-113,-114,-129,-130,-131,-132,-53,-54,-56,-57,-58,-83,141,-33,-34,-35,-36,-37,-42,-96,-107,-133,-108,-134,-134,-134,-134,-62,189,-134,-92,-93,-94,-95,-115,-111,-110,-119,-112,-110,-124,-113,-110,-127,-114,-135,-63,-70,-82,-90,-91,-65,-102,-72,-68,-69,-104,-105,-134,-116,-120,-123,-126,-64,-134,246,-118,-122,252,-103,-71,]),'LPAREN':([7,20,21,22,35,70,71,72,73,74,75,95,103,104,105,106,111,112,113,],[27,36,37,38,80,114,115,116,117,118,119,27,150,154,157,161,167,168,169,]),'EQUAL':([7,31,33,],[28,28,28,]),'PERIOD':([7,27,28,36,37,38,49,51,59,61,62,68,80,85,97,100,103,104,105,106,114,115,117,118,122,124,125,126,139,142,143,144,145,146,148,150,154,157,161,166,167,200,210,216,217,228,231,242,250,],[29,-134,-134,-134,-134,-134,-134,-134,107,-131,-132,-134,-134,-131,-134,-131,-134,-134,-134,-134,-134,-134,-134,-134,-134,-21,-22,-23,-134,-134,-92,-93,-94,-95,-133,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,-134,]),'RPAREN':([27,36,37,38,42,43,44,45,46,47,48,50,52,53,54,55,56,57,58,59,60,61,62,65,66,67,80,81,82,83,85,87,88,90,91,92,93,94,95,96,97,99,100,102,103,104,105,106,108,110,114,115,116,117,118,119,120,122,124,125,126,139,142,143,144,145,146,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,179,182,183,184,185,186,188,190,191,192,193,194,195,196,197,198,199,202,216,217,218,219,220,238,240,241,244,248,251,],[44,-134,-134,89,-42,96,-97,-98,-39,-40,-41,-109,-110,-43,-44,-111,-112,-113,-114,-129,-130,-131,-132,-56,-57,-58,121,123,-6,-7,-131,138,140,-33,-34,-35,-36,-37,-42,-96,-134,-107,-133,-108,-134,-134,-134,-134,-62,-66,-134,-134,172,-134,-134,175,176,-134,-21,-22,-23,-134,-134,-92,-93,-94,-95,-99,-115,-134,-111,-110,-119,-134,-112,-110,-134,-124,-113,-110,-134,-127,-114,-135,-63,-134,198,199,202,203,204,205,206,211,-136,-139,-140,-137,-138,215,-90,-91,216,217,218,219,-67,220,-65,-102,-72,-116,-120,-123,-126,-64,-118,-122,248,251,-103,-71,]),'STRING':([27,28,36,37,38,53,54,68,80,97,114,115,117,118,122,124,125,126,127,128,129,130,131,132,133,134,135,137,139,142,143,144,145,146,166,167,200,210,228,231,242,250,],[46,46,86,86,46,-43,-44,46,46,46,46,46,46,46,86,-21,-22,-23,183,-13,-14,-15,-16,-17,-18,-19,-20,186,86,46,-92,-93,-94,-95,46,46,46,46,46,46,46,46,]),'MINUS':([27,28,36,37,38,42,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,68,80,85,90,91,95,97,99,100,101,102,103,104,105,106,114,115,117,118,122,124,125,126,139,142,143,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,190,200,210,216,217,218,219,228,231,238,239,240,242,250,],[49,49,49,49,49,-42,-39,-40,-41,98,-109,98,104,-43,-44,-111,-112,-113,-114,-129,-130,-131,-132,49,49,-131,-40,144,-42,49,-107,-131,104,-108,49,49,49,49,49,49,49,49,49,-21,-22,-23,49,49,-92,-93,-94,-95,-133,-115,49,-111,104,-119,49,-112,104,49,-124,-113,104,49,-127,-114,-135,49,49,144,49,49,98,98,-123,-126,49,49,-118,104,-122,49,49,]),'PLUS':([27,28,36,37,38,42,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,68,80,85,90,91,95,97,99,100,101,102,103,104,105,106,114,115,117,118,122,124,125,126,139,142,143,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,190,200,210,216,217,218,219,228,231,237,238,240,242,250,],[51,51,51,51,51,-42,-39,-40,-41,-134,-109,-134,103,-43,-44,-111,-112,-113,-114,-129,-130,-131,-132,51,51,-131,-40,143,-42,51,-107,-131,103,-108,51,51,51,51,51,51,51,51,51,-21,-22,-23,51,51,-92,-93,-94,-95,-133,-115,51,-111,103,-119,51,-112,103,51,-124,-113,103,51,-127,-114,-135,51,51,143,51,51,-116,-120,-123,-126,51,51,103,-118,-122,51,51,]),'TRUE':([27,28,38,68,80,84,85,86,97,114,115,117,118,142,143,144,145,146,166,167,200,210,228,231,242,250,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,-92,-93,-94,-95,53,53,53,53,53,53,53,53,]),'FALSE':([27,28,38,68,80,84,85,86,97,114,115,117,118,142,143,144,145,146,166,167,200,210,228,231,242,250,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,-92,-93,-94,-95,54,54,54,54,54,54,54,54,]),'NUM':([27,28,36,37,38,49,51,53,54,68,80,97,98,103,104,105,106,107,114,115,117,118,122,124,125,126,127,128,129,130,131,132,133,134,135,136,139,142,143,144,145,146,150,154,157,161,166,167,200,210,216,217,228,231,242,250,],[61,61,85,85,61,100,61,-43,-44,61,61,61,148,61,61,61,61,164,61,61,61,61,85,-21,-22,-23,184,-13,-14,-15,-16,-17,-18,-19,-20,185,85,61,-92,-93,-94,-95,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'TIMES':([27,28,36,37,38,42,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,68,80,85,90,91,95,97,99,100,101,102,103,104,105,106,114,115,117,118,122,124,125,126,139,142,143,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,190,200,210,216,217,218,219,228,231,238,240,242,250,],[-134,-134,-134,-134,-134,-42,-39,-40,-41,-134,-109,-134,105,-43,-44,-111,-112,-113,-114,-129,-130,-131,-132,-134,-134,-131,-40,146,-42,-134,-107,-131,105,-108,-134,-134,-134,-134,-134,-134,-134,-134,-134,-21,-22,-23,-134,-134,-92,-93,-94,-95,-133,-115,-134,-111,105,-119,-134,-112,105,-134,-124,-113,105,-134,-127,-114,-135,-134,-134,146,-134,-134,-116,-120,-123,-126,-134,-134,-118,-122,-134,-134,]),'DIVIDE':([27,28,36,37,38,42,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,68,80,85,90,91,95,97,99,100,101,102,103,104,105,106,114,115,117,118,122,124,125,126,139,142,143,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,190,200,210,216,217,218,219,228,231,238,240,242,250,],[-134,-134,-134,-134,-134,-42,-39,-40,-41,-134,-109,-134,106,-43,-44,-111,-112,-113,-114,-129,-130,-131,-132,-134,-134,-131,-40,145,-42,-134,-107,-131,106,-108,-134,-134,-134,-134,-134,-134,-134,-134,-134,-21,-22,-23,-134,-134,-92,-93,-94,-95,-133,-115,-134,-111,106,-119,-134,-112,106,-134,-124,-113,106,-134,-127,-114,-135,-134,-134,145,-134,-134,-116,-120,-123,-126,-134,-134,-118,-122,-134,-134,]),'COMMA':([27,42,45,46,47,48,50,52,53,54,55,56,57,58,59,60,61,62,68,80,97,99,100,102,103,104,105,106,108,110,115,149,151,152,153,155,156,158,159,160,162,163,164,165,166,167,198,199,200,202,216,217,218,219,220,223,224,225,226,227,228,238,240,242,243,248,251,257,],[-134,-42,97,-39,-40,-41,-109,-110,-43,-44,-111,-112,-113,-114,-129,-130,-131,-132,-134,-134,-134,-107,-133,-108,-134,-134,-134,-134,-62,166,-134,-115,-111,-110,-119,-112,-110,-124,-113,-110,-127,-114,-135,-63,-134,-134,-65,-102,-134,-72,-116,-120,-123,-126,-64,242,-75,-76,-77,-78,-134,-118,-122,-134,250,-103,-71,258,]),'LBRACKET':([28,38,168,169,200,201,210,228,231,242,250,258,],[68,68,200,201,68,228,68,68,68,68,68,228,]),'NEW':([28,38,200,210,228,231,242,250,],[69,69,221,69,221,69,221,221,]),'PUSH':([29,],[70,]),'UNSHIFT':([29,],[71,]),'POP':([29,],[72,]),'ADD':([29,],[73,]),'DELETE':([29,],[74,]),'CLEAR':([29,],[75,]),'SIZE':([29,],[76,]),'AND':([36,37,50,52,55,56,57,58,59,60,61,62,81,82,83,85,87,99,100,102,103,104,105,106,149,151,152,153,155,156,158,159,160,162,163,164,182,183,184,185,186,216,217,218,219,238,240,],[-134,-134,-109,-110,-111,-112,-113,-114,-129,-130,-131,-132,124,-6,-7,-131,124,-107,-133,-108,-134,-134,-134,-134,-115,-111,-110,-119,-112,-110,-124,-113,-110,-127,-114,-135,-136,-139,-140,-137,-138,-116,-120,-123,-126,-118,-122,]),'OR':([36,37,50,52,55,56,57,58,59,60,61,62,81,82,83,85,87,99,100,102,103,104,105,106,149,151,152,153,155,156,158,159,160,162,163,164,182,183,184,185,186,216,217,218,219,238,240,],[-134,-134,-109,-110,-111,-112,-113,-114,-129,-130,-131,-132,125,-6,-7,-131,125,-107,-133,-108,-134,-134,-134,-134,-115,-111,-110,-119,-112,-110,-124,-113,-110,-127,-114,-135,-136,-139,-140,-137,-138,-116,-120,-123,-126,-118,-122,]),'NOT':([36,37,50,52,55,56,57,58,59,60,61,62,81,82,83,85,87,99,100,102,103,104,105,106,149,151,152,153,155,156,158,159,160,162,163,164,182,183,184,185,186,216,217,218,219,238,240,],[-134,-134,-109,-110,-111,-112,-113,-114,-129,-130,-131,-132,126,-6,-7,-131,126,-107,-133,-108,-134,-134,-134,-134,-115,-111,-110,-119,-112,-110,-124,-113,-110,-127,-114,-135,-136,-139,-140,-137,-138,-116,-120,-123,-126,-118,-122,]),'RBRACKET':([42,46,47,48,50,52,53,54,55,56,57,58,59,60,61,62,68,99,100,102,103,104,105,106,108,109,110,149,151,152,153,155,156,158,159,160,162,163,164,165,166,196,198,199,200,202,216,217,218,219,220,222,223,224,225,226,227,229,238,240,242,248,249,250,251,255,257,259,],[-42,-39,-40,-41,-109,-110,-43,-44,-111,-112,-113,-114,-129,-130,-131,-132,108,-107,-133,-108,-134,-134,-134,-134,-62,165,-66,-115,-111,-110,-119,-112,-110,-124,-113,-110,-127,-114,-135,-63,-134,-67,-65,-102,-81,-72,-116,-120,-123,-126,-64,241,-79,-75,-76,-77,-78,244,-118,-122,-81,-103,-80,-134,-71,257,-73,-74,]),'ARRAY':([69,221,],[111,111,]),'SET':([69,221,],[112,112,]),'MAP':([69,221,],[113,113,]),'ISEQUAL':([84,85,86,],[128,128,128,]),'IS_NOT_IDENTICAL':([84,85,86,],[129,129,129,]),'IS_IDENTICAL':([84,85,86,],[130,130,130,]),'GREATER':([84,85,86,],[131,131,131,]),'GREATEREQUAL':([84,85,86,],[132,132,132,]),'LESS':([84,85,86,],[133,133,133,]),'LESSEQUAL':([84,85,86,],[134,134,134,]),'LBLOCK':([121,123,138,176,211,212,215,247,],[178,181,181,178,181,181,181,181,]),'ELSE':([180,214,233,235,],[212,-29,247,-28,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'sentencia':([0,178,181,],[1,208,213,]),'callMethods':([0,178,181,],[2,2,2,]),'callFunction':([0,38,178,181,210,231,],[3,92,3,3,92,92,]),'varDeclaration':([0,178,181,],[4,4,4,]),'controlExpression':([0,178,181,],[5,5,5,]),'declareteFunction':([0,178,181,],[6,6,6,]),'varType':([0,178,181,],[8,8,8,]),'assign':([0,8,10,178,181,],[9,30,34,9,9,]),'varType_let':([0,178,181,],[10,10,10,]),'sentencias_if':([0,178,181,],[11,11,11,]),'sentencias_if_else':([0,178,181,],[12,12,12,]),'sentencias_while':([0,178,181,],[13,13,13,]),'impresion':([0,178,181,],[14,14,14,]),'impresion_vacio':([0,178,181,],[15,15,15,]),'methodArray':([7,],[24,]),'methodSet':([7,],[25,]),'methodMap':([7,],[26,]),'params':([27,80,97,],[43,120,147,]),'javaScript_param':([27,28,38,68,80,97,114,115,117,118,142,166,167,200,210,228,231,242,250,],[45,64,91,110,45,45,170,110,173,174,190,110,110,224,91,224,91,224,224,]),'inicializarOp':([27,28,36,37,38,68,80,97,103,104,105,106,114,115,117,118,122,139,142,150,154,157,161,166,167,200,210,228,231,242,250,],[47,47,83,83,90,47,47,47,149,153,158,162,47,47,47,47,83,83,47,192,193,194,195,47,47,47,90,47,90,47,47,]),'boolean':([27,28,38,68,80,84,85,86,97,114,115,117,118,142,166,167,200,210,228,231,242,250,],[48,48,48,48,48,135,135,135,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'operacionesMath':([27,28,36,37,38,49,51,68,80,97,103,104,105,106,114,115,117,118,122,139,142,150,154,157,161,166,167,200,210,228,231,242,250,],[50,50,50,50,50,99,102,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'numOperadores':([27,28,36,37,38,49,51,68,80,97,103,104,105,106,114,115,117,118,122,139,142,150,154,157,161,166,167,200,210,216,217,228,231,242,250,],[52,52,52,52,52,101,101,52,52,52,52,152,156,160,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,237,239,52,52,52,52,]),'suma':([27,28,36,37,38,49,51,68,80,97,103,104,105,106,114,115,117,118,122,139,142,150,154,157,161,166,167,200,210,216,228,231,242,250,],[55,55,55,55,55,55,55,55,55,55,151,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,238,55,55,55,55,]),'resta':([27,28,36,37,38,49,51,68,80,97,103,104,105,106,114,115,117,118,122,139,142,150,154,157,161,166,167,200,210,217,228,231,242,250,],[56,56,56,56,56,56,56,56,56,56,56,155,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,240,56,56,56,56,]),'multiplicacion':([27,28,36,37,38,49,51,68,80,97,103,104,105,106,114,115,117,118,122,139,142,150,154,157,161,166,167,200,210,228,231,242,250,],[57,57,57,57,57,57,57,57,57,57,57,57,159,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'divicion':([27,28,36,37,38,49,51,68,80,97,103,104,105,106,114,115,117,118,122,139,142,150,154,157,161,166,167,200,210,228,231,242,250,],[58,58,58,58,58,58,58,58,58,58,58,58,58,163,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'enteros':([27,28,36,37,38,49,51,68,80,97,103,104,105,106,114,115,117,118,122,139,142,150,154,157,161,166,167,200,210,216,217,228,231,242,250,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'decimales':([27,28,36,37,38,49,51,68,80,97,103,104,105,106,114,115,117,118,122,139,142,150,154,157,161,166,167,200,210,216,217,228,231,242,250,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'numNegative':([27,28,36,37,38,49,51,68,80,97,103,104,105,106,114,115,117,118,122,139,142,150,154,157,161,166,167,200,210,216,217,228,231,242,250,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'estructuras_datos':([28,38,210,231,],[63,93,93,93,]),'arrayDeclare':([28,38,200,210,228,231,242,250,],[65,65,227,65,227,65,227,227,]),'declararSet':([28,38,200,210,228,231,242,250,],[66,66,225,66,225,66,225,225,]),'declareMap':([28,38,200,210,228,231,242,250,],[67,67,226,67,226,67,226,226,]),'expression':([36,37,122,139,],[81,87,179,188,]),'conditionalEspecifico':([36,37,122,139,],[82,82,82,82,]),'valores_de_impresion':([38,210,231,],[88,232,245,]),'return_ops':([38,142,210,231,],[94,191,94,94,]),'arrayValues':([68,115,166,167,],[109,171,196,197,]),'operadorLogical':([81,87,],[122,139,]),'opConditional':([84,85,86,],[127,136,137,]),'operadores_mat':([91,190,],[142,142,]),'sentencesCmpt':([121,176,],[177,207,]),'cuerpo_de_sentencias':([123,138,211,212,215,247,],[180,187,233,234,236,254,]),'dataCondi':([127,],[182,]),'iterableSet':([200,242,],[222,249,]),'keyValue':([200,228,242,250,],[223,243,223,255,]),'iterableMap':([201,258,],[229,259,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> sentencia","S'",1,None,None,None),
  ('sentencia -> callMethods','sentencia',1,'p_sentencia','analisisSintactico.py',7),
  ('sentencia -> callFunction COLON','sentencia',2,'p_sentencia','analisisSintactico.py',8),
  ('sentencia -> varDeclaration','sentencia',1,'p_sentencia','analisisSintactico.py',9),
  ('sentencia -> controlExpression','sentencia',1,'p_sentencia','analisisSintactico.py',10),
  ('sentencia -> declareteFunction','sentencia',1,'p_sentencia','analisisSintactico.py',11),
  ('expression -> conditionalEspecifico','expression',1,'p_expression','analisisSintactico.py',16),
  ('expression -> inicializarOp','expression',1,'p_expression','analisisSintactico.py',17),
  ('controlExpression -> sentencias_if','controlExpression',1,'p_controlExpression','analisisSintactico.py',23),
  ('controlExpression -> sentencias_if_else','controlExpression',1,'p_controlExpression','analisisSintactico.py',24),
  ('controlExpression -> sentencias_while','controlExpression',1,'p_controlExpression','analisisSintactico.py',25),
  ('controlExpression -> impresion','controlExpression',1,'p_controlExpression','analisisSintactico.py',26),
  ('controlExpression -> impresion_vacio','controlExpression',1,'p_controlExpression','analisisSintactico.py',27),
  ('opConditional -> ISEQUAL','opConditional',1,'p_opConditional','analisisSintactico.py',32),
  ('opConditional -> IS_NOT_IDENTICAL','opConditional',1,'p_opConditional','analisisSintactico.py',33),
  ('opConditional -> IS_IDENTICAL','opConditional',1,'p_opConditional','analisisSintactico.py',34),
  ('opConditional -> GREATER','opConditional',1,'p_opConditional','analisisSintactico.py',35),
  ('opConditional -> GREATEREQUAL','opConditional',1,'p_opConditional','analisisSintactico.py',36),
  ('opConditional -> LESS','opConditional',1,'p_opConditional','analisisSintactico.py',37),
  ('opConditional -> LESSEQUAL','opConditional',1,'p_opConditional','analisisSintactico.py',38),
  ('opConditional -> boolean','opConditional',1,'p_opConditional','analisisSintactico.py',39),
  ('operadorLogical -> AND','operadorLogical',1,'p_operadorLogical','analisisSintactico.py',42),
  ('operadorLogical -> OR','operadorLogical',1,'p_operadorLogical','analisisSintactico.py',43),
  ('operadorLogical -> NOT','operadorLogical',1,'p_operadorLogical','analisisSintactico.py',44),
  ('sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias','sentencias_if',7,'p_sentencias_if','analisisSintactico.py',48),
  ('sentencias_if -> IF LPAREN expression RPAREN cuerpo_de_sentencias','sentencias_if',5,'p_sentencias_if','analisisSintactico.py',49),
  ('sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias','sentencias_if_else',9,'p_sentencias_if_else','analisisSintactico.py',54),
  ('sentencias_if_else -> IF LPAREN expression RPAREN cuerpo_de_sentencias ELSE cuerpo_de_sentencias','sentencias_if_else',7,'p_sentencias_if_else','analisisSintactico.py',55),
  ('cuerpo_de_sentencias -> LBLOCK sentencia RBLOCK','cuerpo_de_sentencias',3,'p_cuerpo_de_sentencias','analisisSintactico.py',58),
  ('cuerpo_de_sentencias -> LBLOCK RBLOCK','cuerpo_de_sentencias',2,'p_cuerpo_de_sentencias','analisisSintactico.py',59),
  ('sentencias_while -> WHILE LPAREN expression RPAREN cuerpo_de_sentencias','sentencias_while',5,'p_sentencias_while','analisisSintactico.py',63),
  ('sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN cuerpo_de_sentencias','sentencias_while',7,'p_sentencias_while','analisisSintactico.py',64),
  ('impresion -> ALERT LPAREN valores_de_impresion RPAREN COLON','impresion',5,'p_impresion','analisisSintactico.py',69),
  ('valores_de_impresion -> inicializarOp','valores_de_impresion',1,'p_valores_de_impresion','analisisSintactico.py',73),
  ('valores_de_impresion -> javaScript_param','valores_de_impresion',1,'p_valores_de_impresion','analisisSintactico.py',74),
  ('valores_de_impresion -> callFunction','valores_de_impresion',1,'p_valores_de_impresion','analisisSintactico.py',75),
  ('valores_de_impresion -> estructuras_datos','valores_de_impresion',1,'p_valores_de_impresion','analisisSintactico.py',76),
  ('valores_de_impresion -> return_ops','valores_de_impresion',1,'p_valores_de_impresion','analisisSintactico.py',77),
  ('impresion_vacio -> ALERT LPAREN RPAREN COLON','impresion_vacio',4,'p_impresion_vacio','analisisSintactico.py',82),
  ('javaScript_param -> STRING','javaScript_param',1,'p_javaScript_param','analisisSintactico.py',99),
  ('javaScript_param -> inicializarOp','javaScript_param',1,'p_javaScript_param','analisisSintactico.py',100),
  ('javaScript_param -> boolean','javaScript_param',1,'p_javaScript_param','analisisSintactico.py',101),
  ('javaScript_param -> ID','javaScript_param',1,'p_javaScript_param','analisisSintactico.py',102),
  ('boolean -> TRUE','boolean',1,'p_boolean','analisisSintactico.py',109),
  ('boolean -> FALSE','boolean',1,'p_boolean','analisisSintactico.py',110),
  ('varType_let -> LET','varType_let',1,'p_varType_let','analisisSintactico.py',116),
  ('varType_let -> VAR','varType_let',1,'p_varType_let','analisisSintactico.py',117),
  ('varType -> varType_let','varType',1,'p_varType','analisisSintactico.py',121),
  ('varType -> CONST','varType',1,'p_varType','analisisSintactico.py',122),
  ('varDeclaration -> varType assign COLON','varDeclaration',3,'p_varDeclaration','analisisSintactico.py',125),
  ('varDeclaration -> assign COLON','varDeclaration',2,'p_varDeclaration','analisisSintactico.py',126),
  ('varDeclaration -> varType_let ID COLON','varDeclaration',3,'p_varDeclaration','analisisSintactico.py',127),
  ('varDeclaration -> varType_let assign COLON','varDeclaration',3,'p_varDeclaration','analisisSintactico.py',128),
  ('assign -> ID EQUAL estructuras_datos','assign',3,'p_assign','analisisSintactico.py',133),
  ('assign -> ID EQUAL javaScript_param','assign',3,'p_assign','analisisSintactico.py',134),
  ('assign -> ID EQUAL','assign',2,'p_assign','analisisSintactico.py',135),
  ('estructuras_datos -> arrayDeclare','estructuras_datos',1,'p_estructuras_datos','analisisSintactico.py',140),
  ('estructuras_datos -> declararSet','estructuras_datos',1,'p_estructuras_datos','analisisSintactico.py',141),
  ('estructuras_datos -> declareMap','estructuras_datos',1,'p_estructuras_datos','analisisSintactico.py',142),
  ('callMethods -> ID methodArray COLON','callMethods',3,'p_callMethods','analisisSintactico.py',148),
  ('callMethods -> ID methodSet COLON','callMethods',3,'p_callMethods','analisisSintactico.py',149),
  ('callMethods -> ID methodMap COLON','callMethods',3,'p_callMethods','analisisSintactico.py',150),
  ('arrayDeclare -> LBRACKET RBRACKET','arrayDeclare',2,'p_arrayDeclare','analisisSintactico.py',155),
  ('arrayDeclare -> LBRACKET arrayValues RBRACKET','arrayDeclare',3,'p_arrayDeclare','analisisSintactico.py',156),
  ('arrayDeclare -> NEW ARRAY LPAREN arrayValues RPAREN','arrayDeclare',5,'p_arrayDeclare','analisisSintactico.py',157),
  ('arrayDeclare -> NEW ARRAY LPAREN RPAREN','arrayDeclare',4,'p_arrayDeclare','analisisSintactico.py',158),
  ('arrayValues -> javaScript_param','arrayValues',1,'p_arrayValues','analisisSintactico.py',163),
  ('arrayValues -> javaScript_param COMMA arrayValues','arrayValues',3,'p_arrayValues','analisisSintactico.py',164),
  ('methodArray -> PERIOD PUSH LPAREN javaScript_param RPAREN','methodArray',5,'p_methodArray','analisisSintactico.py',170),
  ('methodArray -> PERIOD UNSHIFT LPAREN arrayValues RPAREN','methodArray',5,'p_methodArray','analisisSintactico.py',171),
  ('methodArray -> PERIOD POP LPAREN RPAREN','methodArray',4,'p_methodArray','analisisSintactico.py',172),
  ('declareMap -> NEW MAP LPAREN LBRACKET iterableMap RBRACKET RPAREN','declareMap',7,'p_declareMap','analisisSintactico.py',176),
  ('declareMap -> NEW MAP LPAREN RPAREN','declareMap',4,'p_declareMap','analisisSintactico.py',177),
  ('iterableMap -> LBRACKET keyValue COMMA keyValue RBRACKET','iterableMap',5,'p_iterableMap','analisisSintactico.py',181),
  ('iterableMap -> LBRACKET keyValue COMMA keyValue RBRACKET COMMA iterableMap','iterableMap',7,'p_iterableMap','analisisSintactico.py',182),
  ('keyValue -> javaScript_param','keyValue',1,'p_keyValue','analisisSintactico.py',186),
  ('keyValue -> declararSet','keyValue',1,'p_keyValue','analisisSintactico.py',187),
  ('keyValue -> declareMap','keyValue',1,'p_keyValue','analisisSintactico.py',188),
  ('keyValue -> arrayDeclare','keyValue',1,'p_keyValue','analisisSintactico.py',189),
  ('iterableSet -> keyValue','iterableSet',1,'p_iterableSet','analisisSintactico.py',194),
  ('iterableSet -> keyValue COMMA iterableSet','iterableSet',3,'p_iterableSet','analisisSintactico.py',195),
  ('iterableSet -> <empty>','iterableSet',0,'p_iterableSet','analisisSintactico.py',196),
  ('methodMap -> PERIOD CLEAR LPAREN RPAREN','methodMap',4,'p_methodMap','analisisSintactico.py',199),
  ('methodMap -> PERIOD SIZE','methodMap',2,'p_methodMap','analisisSintactico.py',200),
  ('declareteFunction -> FUNCTION ID LPAREN params RPAREN sentencesCmpt','declareteFunction',6,'p_declareteFunction','analisisSintactico.py',205),
  ('declareteFunction -> FUNCTION ID LPAREN RPAREN sentencesCmpt','declareteFunction',5,'p_declareteFunction','analisisSintactico.py',206),
  ('sentencesCmpt -> LBLOCK sentencia RBLOCK','sentencesCmpt',3,'p_sentencesCmpt','analisisSintactico.py',211),
  ('sentencesCmpt -> LBLOCK RBLOCK','sentencesCmpt',2,'p_sentencesCmpt','analisisSintactico.py',212),
  ('sentencesCmpt -> LBLOCK RETURN valores_de_impresion COLON RBLOCK','sentencesCmpt',5,'p_sentencesCmpt','analisisSintactico.py',213),
  ('sentencesCmpt -> LBLOCK sentencia RETURN valores_de_impresion COLON RBLOCK','sentencesCmpt',6,'p_sentencesCmpt','analisisSintactico.py',214),
  ('return_ops -> javaScript_param','return_ops',1,'p_return_ops','analisisSintactico.py',218),
  ('return_ops -> javaScript_param operadores_mat return_ops','return_ops',3,'p_return_ops','analisisSintactico.py',219),
  ('operadores_mat -> PLUS','operadores_mat',1,'p_operadores_mat','analisisSintactico.py',222),
  ('operadores_mat -> MINUS','operadores_mat',1,'p_operadores_mat','analisisSintactico.py',223),
  ('operadores_mat -> DIVIDE','operadores_mat',1,'p_operadores_mat','analisisSintactico.py',224),
  ('operadores_mat -> TIMES','operadores_mat',1,'p_operadores_mat','analisisSintactico.py',225),
  ('callFunction -> ID LPAREN params RPAREN','callFunction',4,'p_callFunction','analisisSintactico.py',230),
  ('callFunction -> ID LPAREN RPAREN','callFunction',3,'p_callFunction','analisisSintactico.py',231),
  ('params -> javaScript_param','params',1,'p_params','analisisSintactico.py',237),
  ('params -> javaScript_param COMMA params','params',3,'p_params','analisisSintactico.py',238),
  ('args -> javaScript_param','args',1,'p_args','analisisSintactico.py',246),
  ('args -> javaScript_param COMMA args','args',3,'p_args','analisisSintactico.py',247),
  ('declararSet -> NEW SET LPAREN RPAREN','declararSet',4,'p_declararSet','analisisSintactico.py',256),
  ('declararSet -> NEW SET LPAREN LBRACKET iterableSet RBRACKET RPAREN','declararSet',7,'p_declararSet','analisisSintactico.py',257),
  ('methodSet -> PERIOD ADD LPAREN javaScript_param RPAREN','methodSet',5,'p_methodSet','analisisSintactico.py',267),
  ('methodSet -> PERIOD DELETE LPAREN javaScript_param RPAREN','methodSet',5,'p_methodSet','analisisSintactico.py',268),
  ('methodSet -> PERIOD CLEAR LPAREN RPAREN','methodSet',4,'p_methodSet','analisisSintactico.py',269),
  ('inicializarOp -> MINUS operacionesMath','inicializarOp',2,'p_inicializarOp','analisisSintactico.py',277),
  ('inicializarOp -> PLUS operacionesMath','inicializarOp',2,'p_inicializarOp','analisisSintactico.py',278),
  ('inicializarOp -> operacionesMath','inicializarOp',1,'p_inicializarOp','analisisSintactico.py',279),
  ('inicializarOp -> numOperadores','inicializarOp',1,'p_inicializarOp','analisisSintactico.py',280),
  ('operacionesMath -> suma','operacionesMath',1,'p_operacionesMath','analisisSintactico.py',283),
  ('operacionesMath -> resta','operacionesMath',1,'p_operacionesMath','analisisSintactico.py',284),
  ('operacionesMath -> multiplicacion','operacionesMath',1,'p_operacionesMath','analisisSintactico.py',285),
  ('operacionesMath -> divicion','operacionesMath',1,'p_operacionesMath','analisisSintactico.py',286),
  ('suma -> numOperadores PLUS inicializarOp','suma',3,'p_suma','analisisSintactico.py',289),
  ('suma -> numOperadores PLUS LPAREN inicializarOp RPAREN','suma',5,'p_suma','analisisSintactico.py',290),
  ('suma -> numOperadores PLUS suma','suma',3,'p_suma','analisisSintactico.py',291),
  ('suma -> numOperadores PLUS LPAREN inicializarOp RPAREN suma','suma',6,'p_suma','analisisSintactico.py',292),
  ('resta -> numOperadores MINUS inicializarOp','resta',3,'p_resta','analisisSintactico.py',296),
  ('resta -> numOperadores MINUS LPAREN inicializarOp RPAREN','resta',5,'p_resta','analisisSintactico.py',297),
  ('resta -> numOperadores MINUS resta','resta',3,'p_resta','analisisSintactico.py',298),
  ('resta -> numOperadores MINUS LPAREN inicializarOp RPAREN resta','resta',6,'p_resta','analisisSintactico.py',299),
  ('multiplicacion -> numOperadores TIMES LPAREN inicializarOp RPAREN','multiplicacion',5,'p_multiplicacion','analisisSintactico.py',303),
  ('multiplicacion -> numOperadores TIMES inicializarOp','multiplicacion',3,'p_multiplicacion','analisisSintactico.py',304),
  ('multiplicacion -> numOperadores TIMES multiplicacion','multiplicacion',3,'p_multiplicacion','analisisSintactico.py',305),
  ('divicion -> numOperadores DIVIDE LPAREN inicializarOp RPAREN','divicion',5,'p_divicion','analisisSintactico.py',309),
  ('divicion -> numOperadores DIVIDE inicializarOp','divicion',3,'p_divicion','analisisSintactico.py',310),
  ('divicion -> numOperadores DIVIDE divicion','divicion',3,'p_divicion','analisisSintactico.py',311),
  ('numOperadores -> enteros','numOperadores',1,'p_numOperadores','analisisSintactico.py',314),
  ('numOperadores -> decimales','numOperadores',1,'p_numOperadores','analisisSintactico.py',315),
  ('enteros -> NUM','enteros',1,'p_enteros','analisisSintactico.py',318),
  ('enteros -> numNegative','enteros',1,'p_enteros','analisisSintactico.py',319),
  ('numNegative -> MINUS NUM','numNegative',2,'p_numNegative','analisisSintactico.py',322),
  ('numNegative -> <empty>','numNegative',0,'p_numNegative','analisisSintactico.py',323),
  ('decimales -> enteros PERIOD NUM','decimales',3,'p_decimales','analisisSintactico.py',326),
  ('conditionalEspecifico -> ID opConditional dataCondi','conditionalEspecifico',3,'p_coditionalEspecifico','analisisSintactico.py',332),
  ('conditionalEspecifico -> NUM opConditional NUM','conditionalEspecifico',3,'p_coditionalEspecifico','analisisSintactico.py',333),
  ('conditionalEspecifico -> STRING opConditional STRING','conditionalEspecifico',3,'p_coditionalEspecifico','analisisSintactico.py',334),
  ('dataCondi -> STRING','dataCondi',1,'p_dataCondi','analisisSintactico.py',339),
  ('dataCondi -> NUM','dataCondi',1,'p_dataCondi','analisisSintactico.py',340),
]
