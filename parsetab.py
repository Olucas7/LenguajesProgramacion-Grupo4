
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD ALERT AND ARRAY BREAK CASE CATCH CLASS CLEAR COLON COMMA CONST CONTINUE DEBUGGER DEFAULT DELETE DIVIDE DIV_EQUAL DO ELSE EQUAL EXPORT EXTENDS FALSE FINALLY FOR FUNCTION GREATER GREATEREQUAL HAS ID IF IMPORT IN INSTANCEOF ISEQUAL IS_IDENTICAL IS_NOT_IDENTICAL LBLOCK LBRACKET LENGTH LESS LESSEQUAL LET LPAREN MAP MINUS MINUS_EQUAL MOD MOD_EQUAL MUL_EQUAL NEW NOT NUM OR PERIOD PLUS PLUS_EQUAL POP PRINT PUSH RBLOCK RBRACKET RETURN RPAREN SET STRING SWITCH THIS THROW TIMES TRUE TRY TWOPOINTS TYPEOF UNSHIFT VAR WHILE WITH YIELD sentencia :  callMethods\n                    | varType ID EQUAL callMethods\n                    | callFunction\n                    | javaScript_param\n                    | varDeclaration\n                    | controlExpression\n                    | impresion\n                    | declareteFunction\n                    | assingOperadores\n\n                     expression :  ID opConditional ID\n                     | ID opConditional NUM\n                     | NUM opConditional NUM\n                     | inicializarOp\n\n     assingOperadores : varType ID EQUAL inicializarOp  controlExpression : sentencias_if\n                        | sentencias_if_else\n                        | sentencias_while\n                        | impresion\n                        | impresion_vacio\n             opConditional : ISEQUAL\n                      |  IS_NOT_IDENTICAL\n                      |  IS_IDENTICAL\n                      | GREATER\n                      | GREATEREQUAL\n                      | LESS\n                      | LESSEQUAL\n                      operadorLogical : AND\n                        | OR\n                        | NOT sentencias_if : IF LPAREN expression operadorLogical expression  RPAREN LBLOCK sentencia RBLOCK\n                    | IF LPAREN expression RPAREN LBLOCK sentencia RBLOCKsentencias_if_else : IF LPAREN expression operadorLogical expression  RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK\n                          | IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK sentencias_while : WHILE LPAREN  expression RPAREN LBLOCK sentencia RBLOCK\n                        | WHILE LPAREN  expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCKimpresion : ALERT LPAREN expression  RPARENimpresion_vacio : ALERT LPAREN RPARENjavaScript_param : STRING\n                         | NUM\n                         | boolean\n                         | ID\n    empty : boolean : TRUE\n             | FALSE\n         varType : LET\n                | CONST\n                | VAR\n                 | empty  varDeclaration : varType ID  EQUAL  arrayDeclare COLON\n                    |  varType ID EQUAL declareMap COLON\n                    |  varType ID EQUAL declararSet COLON\n                    | varType ID COLON   callMethods : ID methodArray COLON\n                     | ID methodSet COLON\n                     | ID methodMap COLONarrayDeclare :  LBRACKET arrayValues RBRACKET\n                       | NEW ARRAY LPAREN arrayValues RPAREN\n                     arrayValues :  arrayValue\n                    | arrayValue COMMA arrayValue arrayValue :  LPAREN expression RPAREN\n                      | ID\n                      | NUM\n                      | STRING\n                      | boolean\n                      | empty  methodArray : PERIOD PUSH LPAREN arrayValue RPAREN\n                      | PERIOD UNSHIFT LPAREN arrayValue RPAREN\n                      | PERIOD POP LPAREN empty RPAREN declareMap :  NEW MAP LPAREN iterable RPAREN\n                    iterable  : arrayDeclare\n                   | declararSet\n                   | empty methodMap : PERIOD CLEAR LPAREN RPAREN\n                   | PERIOD LENGTH LPAREN RPAREN  declareteFunction : FUNCTION ID LPAREN params RPAREN\n                          | FUNCTION  ID LPAREN params RPAREN sentencesCmpt\n                          | varType ID EQUAL FUNCTION LPAREN params RPAREN\n                          sentencesCmpt : LBLOCK sentencia RBLOCK\n                     | LBLOCK sentencia RETURN RBLOCK  callFunction : ID LPAREN params RPAREN  \n                    \n                     params : paramList\n               | empty   param : ID\n              | ID LBRACKET RBRACKET\n               paramList : param\n                  | param COMMA paramList  args : argslist\n            | empty\n            | javaScript_param\n     argslist : args\n                   | args COMMA argslist\n    declararSet : NEW SET LPAREN setValues RPARENcontiene : ID PERIOD HAS LPAREN params RPARENsetValues :  setValue\n                    | setValue COMMA setValue setValue : ID\n                 | NUM\n                 | STRING\n                 | boolean\n                 | empty  methodSet : PERIOD ADD LPAREN setValue RPAREN\n                      | PERIOD DELETE LPAREN setValue RPAREN\n                      | PERIOD CLEAR LPAREN empty RPAREN  inicializarOp :  PLUS operacionesMath\n                        | MINUS operacionesMath\n                        | empty operacionesMath  operacionesMath :  numOperadores PLUS suma\n                         | suma\n                          | suma operacionesMath\n                         | restas\n                         | numOperadores MINUS restas\n                         | restas operacionesMath\n                         | multiplicacion\n                         | numOperadores TIMES multiplicacion\n                         | multiplicacion operacionesMathsuma : numOperadores PLUS LPAREN numOperadores RPAREN\n            | numOperadores PLUS NUM\n            | numOperadores\n\n             restas : numOperadores MINUS LPAREN numOperadores RPAREN\n               | numOperadores  MINUS NUM\n               | numOperadores  multiplicacion : numOperadores TIMES LPAREN numOperadores RPAREN\n               | numOperadores  TIMES NUM\n               | numOperadores  numOperadores : enteros\n                     |  decimales   enteros : NUM\n                 | numNegative numNegative : MINUS NUM\n                 | decimales : enteros PERIOD NUM  '
    
_lr_action_items = {'ID':([0,3,12,13,14,15,24,33,35,37,38,39,64,74,78,79,80,82,83,87,88,89,90,91,92,93,94,109,111,112,113,115,119,122,159,160,164,166,168,189,212,215,219,234,238,],[4,29,-45,-46,-47,-48,36,44,58,58,58,67,44,123,44,123,123,137,137,146,-20,-21,-22,-23,-24,-25,-26,58,-27,-28,-29,58,44,58,4,4,123,123,137,4,4,4,137,4,4,]),'LET':([0,159,160,189,212,215,234,238,],[12,12,12,12,12,12,12,12,]),'CONST':([0,159,160,189,212,215,234,238,],[13,13,13,13,13,13,13,13,]),'VAR':([0,159,160,189,212,215,234,238,],[14,14,14,14,14,14,14,14,]),'STRING':([0,74,79,80,82,83,159,160,164,166,168,189,212,215,219,234,238,],[16,125,125,125,139,139,16,16,125,125,139,16,16,16,139,16,16,]),'NUM':([0,35,37,38,39,61,62,63,74,79,80,82,83,87,88,89,90,91,92,93,94,95,97,98,99,100,101,102,103,104,105,109,111,112,113,115,122,149,150,151,154,156,159,160,164,166,168,177,178,181,182,185,186,187,189,205,207,209,212,215,219,221,223,225,234,238,],[17,59,59,59,-42,104,104,104,124,124,124,138,138,147,-20,-21,-22,-23,-24,-25,-26,148,-118,104,104,154,104,-125,-126,-127,-128,59,-27,-28,-29,59,59,178,182,186,-129,187,17,17,124,124,138,104,-117,104,-120,104,-123,-131,17,220,222,224,17,17,138,-116,-119,-122,17,17,]),'ALERT':([0,159,160,189,212,215,234,238,],[23,23,23,23,23,23,23,23,]),'FUNCTION':([0,39,159,160,189,212,215,234,238,],[24,72,24,24,24,24,24,24,24,]),'TRUE':([0,74,79,80,82,83,159,160,164,166,168,189,212,215,219,234,238,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'FALSE':([0,74,79,80,82,83,159,160,164,166,168,189,212,215,219,234,238,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'IF':([0,159,160,189,212,215,234,238,],[27,27,27,27,27,27,27,27,]),'WHILE':([0,159,160,189,212,215,234,238,],[28,28,28,28,28,28,28,28,]),'$end':([1,2,4,5,6,7,8,9,10,11,16,17,18,19,20,21,22,25,26,39,40,41,42,43,57,61,62,63,68,73,77,86,96,97,98,99,101,102,103,104,105,106,107,116,117,118,149,150,151,152,153,154,155,157,175,176,178,179,180,182,183,184,186,187,188,194,213,214,220,221,222,223,224,225,226,232,233,235,239,241,],[0,-1,-41,-3,-4,-5,-6,-7,-8,-9,-38,-39,-40,-15,-16,-17,-19,-43,-44,-42,-52,-53,-54,-55,-37,-130,-130,-130,-2,-14,-80,-36,-104,-118,-108,-110,-113,-125,-126,-127,-128,-105,-106,-49,-50,-51,-130,-130,-130,-109,-112,-129,-115,-75,-118,-107,-117,-121,-111,-120,-124,-114,-123,-131,-76,-77,-31,-34,-117,-116,-120,-119,-123,-122,-78,-79,-30,-35,-33,-32,]),'RBLOCK':([2,4,5,6,7,8,9,10,11,16,17,18,19,20,21,22,25,26,39,40,41,42,43,57,61,62,63,68,73,77,86,96,97,98,99,101,102,103,104,105,106,107,116,117,118,149,150,151,152,153,154,155,157,175,176,178,179,180,182,183,184,186,187,188,191,192,194,211,213,214,220,221,222,223,224,225,226,227,228,230,232,233,235,237,239,240,241,],[-1,-41,-3,-4,-5,-6,-7,-8,-9,-38,-39,-40,-15,-16,-17,-19,-43,-44,-42,-52,-53,-54,-55,-37,-130,-130,-130,-2,-14,-80,-36,-104,-118,-108,-110,-113,-125,-126,-127,-128,-105,-106,-49,-50,-51,-130,-130,-130,-109,-112,-129,-115,-75,-118,-107,-117,-121,-111,-120,-124,-114,-123,-131,-76,213,214,-77,226,-31,-34,-117,-116,-120,-119,-123,-122,-78,232,233,235,-79,-30,-35,239,-33,241,-32,]),'RETURN':([2,4,5,6,7,8,9,10,11,16,17,18,19,20,21,22,25,26,39,40,41,42,43,57,61,62,63,68,73,77,86,96,97,98,99,101,102,103,104,105,106,107,116,117,118,149,150,151,152,153,154,155,157,175,176,178,179,180,182,183,184,186,187,188,194,211,213,214,220,221,222,223,224,225,226,232,233,235,239,241,],[-1,-41,-3,-4,-5,-6,-7,-8,-9,-38,-39,-40,-15,-16,-17,-19,-43,-44,-42,-52,-53,-54,-55,-37,-130,-130,-130,-2,-14,-80,-36,-104,-118,-108,-110,-113,-125,-126,-127,-128,-105,-106,-49,-50,-51,-130,-130,-130,-109,-112,-129,-115,-75,-118,-107,-117,-121,-111,-120,-124,-114,-123,-131,-76,-77,227,-31,-34,-117,-116,-120,-119,-123,-122,-78,-79,-30,-35,-33,-32,]),'LPAREN':([4,23,27,28,36,49,50,51,52,53,54,55,72,74,79,80,128,129,130,149,150,151,164,166,205,207,209,],[33,35,37,38,64,79,80,81,82,83,84,85,119,122,122,122,166,167,168,177,181,185,122,122,177,181,185,]),'PERIOD':([4,35,37,38,39,61,62,63,67,97,98,99,101,102,103,104,105,109,111,112,113,115,122,149,150,151,154,177,178,181,182,185,186,187,221,223,225,],[34,-42,-42,-42,-42,-130,-130,-130,34,-118,-130,-130,-130,156,-126,-127,-128,-42,-27,-28,-29,-42,-42,-130,-130,-130,-129,-130,-117,-130,-120,-130,-123,-131,-116,-119,-122,]),'COMMA':([25,26,44,48,74,121,123,124,125,126,127,131,137,138,139,140,141,166,168,196,204,],[-43,-44,-83,78,-42,164,-61,-62,-63,-64,-65,-84,-96,-97,-98,-99,-100,-42,-42,-60,219,]),'RBRACKET':([25,26,74,76,120,121,123,124,125,126,127,164,195,196,],[-43,-44,-42,131,163,-58,-61,-62,-63,-64,-65,-42,-59,-60,]),'RPAREN':([25,26,33,35,37,38,44,45,46,47,48,56,60,61,62,63,64,65,66,79,80,81,82,83,84,85,96,97,98,99,101,102,103,104,105,106,107,108,109,111,112,113,115,119,121,122,123,124,125,126,127,131,132,133,134,135,136,137,138,139,140,141,142,143,146,147,148,149,150,151,152,153,154,155,158,161,162,163,164,165,166,167,168,175,176,177,178,179,180,181,182,183,184,185,186,187,195,196,197,199,200,201,202,203,204,206,208,210,216,218,219,220,221,222,223,224,225,231,],[-43,-44,-42,57,-42,-42,-83,77,-81,-82,-85,86,-13,-130,-130,-130,-42,110,114,-42,-42,-42,-42,-42,144,145,-104,-118,-108,-110,-113,-125,-126,-127,-128,-105,-106,157,-42,-27,-28,-29,-42,-42,-58,-42,-61,-62,-63,-64,-65,-84,-86,169,170,171,172,-96,-97,-98,-99,-100,173,174,-10,-11,-12,-130,-130,-130,-109,-112,-129,-115,190,193,194,-56,-42,196,-42,-42,-42,-118,-107,-130,-117,-121,-111,-130,-120,-124,-114,-130,-123,-131,-59,-60,216,217,-70,-71,-72,218,-94,221,223,225,-57,-92,-42,-117,-116,-120,-119,-123,-122,-95,]),'EQUAL':([29,],[39,]),'COLON':([29,30,31,32,69,70,71,144,145,163,169,170,171,172,173,174,216,217,218,],[40,41,42,43,116,117,118,-73,-74,-56,-66,-67,-68,-101,-102,-103,-57,-69,-92,]),'PUSH':([34,],[49,]),'UNSHIFT':([34,],[50,]),'POP':([34,],[51,]),'ADD':([34,],[52,]),'DELETE':([34,],[53,]),'CLEAR':([34,],[54,]),'LENGTH':([34,],[55,]),'PLUS':([35,37,38,39,61,62,63,97,98,99,101,102,103,104,105,109,111,112,113,115,122,149,154,175,178,182,186,187,221,223,225,],[61,61,61,61,-130,-130,-130,149,-130,-130,-130,-125,-126,-127,-128,61,-27,-28,-29,61,61,-130,-129,205,-117,-120,-123,-131,-116,-119,-122,]),'MINUS':([35,37,38,39,61,62,63,97,98,99,101,102,103,104,105,109,111,112,113,115,122,149,150,151,154,177,178,179,181,182,185,186,187,221,223,225,],[62,62,62,62,100,100,100,150,100,100,100,-125,-126,-127,-128,62,-27,-28,-29,62,62,100,100,100,-129,100,-117,207,100,-120,100,-123,-131,-116,-119,-122,]),'TIMES':([35,37,38,39,61,62,63,97,98,99,101,102,103,104,105,109,111,112,113,115,122,151,154,178,182,183,186,187,221,223,225,],[-42,-42,-42,-42,-130,-130,-130,151,-130,-130,-130,-125,-126,-127,-128,-42,-27,-28,-29,-42,-42,-130,-129,-117,-120,209,-123,-131,-116,-119,-122,]),'AND':([37,38,60,61,62,63,65,66,96,97,98,99,101,102,103,104,105,106,107,146,147,148,149,150,151,152,153,154,155,175,176,178,179,180,182,183,184,186,187,220,221,222,223,224,225,],[-42,-42,-13,-130,-130,-130,111,111,-104,-118,-108,-110,-113,-125,-126,-127,-128,-105,-106,-10,-11,-12,-130,-130,-130,-109,-112,-129,-115,-118,-107,-117,-121,-111,-120,-124,-114,-123,-131,-117,-116,-120,-119,-123,-122,]),'OR':([37,38,60,61,62,63,65,66,96,97,98,99,101,102,103,104,105,106,107,146,147,148,149,150,151,152,153,154,155,175,176,178,179,180,182,183,184,186,187,220,221,222,223,224,225,],[-42,-42,-13,-130,-130,-130,112,112,-104,-118,-108,-110,-113,-125,-126,-127,-128,-105,-106,-10,-11,-12,-130,-130,-130,-109,-112,-129,-115,-118,-107,-117,-121,-111,-120,-124,-114,-123,-131,-117,-116,-120,-119,-123,-122,]),'NOT':([37,38,60,61,62,63,65,66,96,97,98,99,101,102,103,104,105,106,107,146,147,148,149,150,151,152,153,154,155,175,176,178,179,180,182,183,184,186,187,220,221,222,223,224,225,],[-42,-42,-13,-130,-130,-130,113,113,-104,-118,-108,-110,-113,-125,-126,-127,-128,-105,-106,-10,-11,-12,-130,-130,-130,-109,-112,-129,-115,-118,-107,-117,-121,-111,-120,-124,-114,-123,-131,-117,-116,-120,-119,-123,-122,]),'LBRACKET':([39,44,167,],[74,76,74,]),'NEW':([39,167,],[75,198,]),'ISEQUAL':([58,59,],[88,88,]),'IS_NOT_IDENTICAL':([58,59,],[89,89,]),'IS_IDENTICAL':([58,59,],[90,90,]),'GREATER':([58,59,],[91,91,]),'GREATEREQUAL':([58,59,],[92,92,]),'LESS':([58,59,],[93,93,]),'LESSEQUAL':([58,59,],[94,94,]),'ARRAY':([75,198,],[128,128,]),'MAP':([75,],[129,]),'SET':([75,198,],[130,130,]),'LBLOCK':([110,114,157,190,193,229,236,],[159,160,189,212,215,234,238,]),'ELSE':([213,233,],[229,236,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'sentencia':([0,159,160,189,212,215,234,238,],[1,191,192,211,228,230,237,240,]),'callMethods':([0,39,159,160,189,212,215,234,238,],[2,68,2,2,2,2,2,2,2,]),'varType':([0,159,160,189,212,215,234,238,],[3,3,3,3,3,3,3,3,]),'callFunction':([0,159,160,189,212,215,234,238,],[5,5,5,5,5,5,5,5,]),'javaScript_param':([0,159,160,189,212,215,234,238,],[6,6,6,6,6,6,6,6,]),'varDeclaration':([0,159,160,189,212,215,234,238,],[7,7,7,7,7,7,7,7,]),'controlExpression':([0,159,160,189,212,215,234,238,],[8,8,8,8,8,8,8,8,]),'impresion':([0,159,160,189,212,215,234,238,],[9,9,9,9,9,9,9,9,]),'declareteFunction':([0,159,160,189,212,215,234,238,],[10,10,10,10,10,10,10,10,]),'assingOperadores':([0,159,160,189,212,215,234,238,],[11,11,11,11,11,11,11,11,]),'empty':([0,33,35,37,38,39,64,74,79,80,81,82,83,84,109,115,119,122,159,160,164,166,167,168,189,212,215,219,234,238,],[15,47,63,63,63,63,47,127,127,127,135,141,141,143,63,63,47,63,15,15,127,127,202,141,15,15,15,141,15,15,]),'boolean':([0,74,79,80,82,83,159,160,164,166,168,189,212,215,219,234,238,],[18,126,126,126,140,140,18,18,126,126,140,18,18,18,140,18,18,]),'sentencias_if':([0,159,160,189,212,215,234,238,],[19,19,19,19,19,19,19,19,]),'sentencias_if_else':([0,159,160,189,212,215,234,238,],[20,20,20,20,20,20,20,20,]),'sentencias_while':([0,159,160,189,212,215,234,238,],[21,21,21,21,21,21,21,21,]),'impresion_vacio':([0,159,160,189,212,215,234,238,],[22,22,22,22,22,22,22,22,]),'methodArray':([4,67,],[30,30,]),'methodSet':([4,67,],[31,31,]),'methodMap':([4,67,],[32,32,]),'params':([33,64,119,],[45,108,162,]),'paramList':([33,64,78,119,],[46,46,132,46,]),'param':([33,64,78,119,],[48,48,48,48,]),'expression':([35,37,38,109,115,122,],[56,65,66,158,161,165,]),'inicializarOp':([35,37,38,39,109,115,122,],[60,60,60,73,60,60,60,]),'arrayDeclare':([39,167,],[69,200,]),'declareMap':([39,],[70,]),'declararSet':([39,167,],[71,201,]),'opConditional':([58,59,],[87,95,]),'operacionesMath':([61,62,63,98,99,101,],[96,106,107,152,153,155,]),'numOperadores':([61,62,63,98,99,101,149,150,151,177,181,185,],[97,97,97,97,97,97,175,179,183,206,208,210,]),'suma':([61,62,63,98,99,101,149,],[98,98,98,98,98,98,176,]),'restas':([61,62,63,98,99,101,150,],[99,99,99,99,99,99,180,]),'multiplicacion':([61,62,63,98,99,101,151,],[101,101,101,101,101,101,184,]),'enteros':([61,62,63,98,99,101,149,150,151,177,181,185,],[102,102,102,102,102,102,102,102,102,102,102,102,]),'decimales':([61,62,63,98,99,101,149,150,151,177,181,185,],[103,103,103,103,103,103,103,103,103,103,103,103,]),'numNegative':([61,62,63,98,99,101,149,150,151,177,181,185,],[105,105,105,105,105,105,105,105,105,105,105,105,]),'operadorLogical':([65,66,],[109,115,]),'arrayValues':([74,166,],[120,197,]),'arrayValue':([74,79,80,164,166,],[121,133,134,195,121,]),'setValue':([82,83,168,219,],[136,142,204,231,]),'sentencesCmpt':([157,],[188,]),'iterable':([167,],[199,]),'setValues':([168,],[203,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> sentencia","S'",1,None,None,None),
  ('sentencia -> callMethods','sentencia',1,'p_sentencia','analisisSintactico.py',6),
  ('sentencia -> varType ID EQUAL callMethods','sentencia',4,'p_sentencia','analisisSintactico.py',7),
  ('sentencia -> callFunction','sentencia',1,'p_sentencia','analisisSintactico.py',8),
  ('sentencia -> javaScript_param','sentencia',1,'p_sentencia','analisisSintactico.py',9),
  ('sentencia -> varDeclaration','sentencia',1,'p_sentencia','analisisSintactico.py',10),
  ('sentencia -> controlExpression','sentencia',1,'p_sentencia','analisisSintactico.py',11),
  ('sentencia -> impresion','sentencia',1,'p_sentencia','analisisSintactico.py',12),
  ('sentencia -> declareteFunction','sentencia',1,'p_sentencia','analisisSintactico.py',13),
  ('sentencia -> assingOperadores','sentencia',1,'p_sentencia','analisisSintactico.py',14),
  ('expression -> ID opConditional ID','expression',3,'p_expression','analisisSintactico.py',18),
  ('expression -> ID opConditional NUM','expression',3,'p_expression','analisisSintactico.py',19),
  ('expression -> NUM opConditional NUM','expression',3,'p_expression','analisisSintactico.py',20),
  ('expression -> inicializarOp','expression',1,'p_expression','analisisSintactico.py',21),
  ('assingOperadores -> varType ID EQUAL inicializarOp','assingOperadores',4,'p_assingOperadores','analisisSintactico.py',26),
  ('controlExpression -> sentencias_if','controlExpression',1,'p_controlExpression','analisisSintactico.py',29),
  ('controlExpression -> sentencias_if_else','controlExpression',1,'p_controlExpression','analisisSintactico.py',30),
  ('controlExpression -> sentencias_while','controlExpression',1,'p_controlExpression','analisisSintactico.py',31),
  ('controlExpression -> impresion','controlExpression',1,'p_controlExpression','analisisSintactico.py',32),
  ('controlExpression -> impresion_vacio','controlExpression',1,'p_controlExpression','analisisSintactico.py',33),
  ('opConditional -> ISEQUAL','opConditional',1,'p_opConditional','analisisSintactico.py',38),
  ('opConditional -> IS_NOT_IDENTICAL','opConditional',1,'p_opConditional','analisisSintactico.py',39),
  ('opConditional -> IS_IDENTICAL','opConditional',1,'p_opConditional','analisisSintactico.py',40),
  ('opConditional -> GREATER','opConditional',1,'p_opConditional','analisisSintactico.py',41),
  ('opConditional -> GREATEREQUAL','opConditional',1,'p_opConditional','analisisSintactico.py',42),
  ('opConditional -> LESS','opConditional',1,'p_opConditional','analisisSintactico.py',43),
  ('opConditional -> LESSEQUAL','opConditional',1,'p_opConditional','analisisSintactico.py',44),
  ('operadorLogical -> AND','operadorLogical',1,'p_operadorLogical','analisisSintactico.py',47),
  ('operadorLogical -> OR','operadorLogical',1,'p_operadorLogical','analisisSintactico.py',48),
  ('operadorLogical -> NOT','operadorLogical',1,'p_operadorLogical','analisisSintactico.py',49),
  ('sentencias_if -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK','sentencias_if',9,'p_sentencias_if','analisisSintactico.py',53),
  ('sentencias_if -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK','sentencias_if',7,'p_sentencias_if','analisisSintactico.py',54),
  ('sentencias_if_else -> IF LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK','sentencias_if_else',13,'p_sentencias_if_else','analisisSintactico.py',57),
  ('sentencias_if_else -> IF LPAREN expression RPAREN LBLOCK sentencia RBLOCK ELSE LBLOCK sentencia RBLOCK','sentencias_if_else',11,'p_sentencias_if_else','analisisSintactico.py',58),
  ('sentencias_while -> WHILE LPAREN expression RPAREN LBLOCK sentencia RBLOCK','sentencias_while',7,'p_sentencias_while','analisisSintactico.py',61),
  ('sentencias_while -> WHILE LPAREN expression operadorLogical expression RPAREN LBLOCK sentencia RBLOCK','sentencias_while',9,'p_sentencias_while','analisisSintactico.py',62),
  ('impresion -> ALERT LPAREN expression RPAREN','impresion',4,'p_impresion','analisisSintactico.py',65),
  ('impresion_vacio -> ALERT LPAREN RPAREN','impresion_vacio',3,'p_impresion_vacio','analisisSintactico.py',67),
  ('javaScript_param -> STRING','javaScript_param',1,'p_javaScript_param','analisisSintactico.py',82),
  ('javaScript_param -> NUM','javaScript_param',1,'p_javaScript_param','analisisSintactico.py',83),
  ('javaScript_param -> boolean','javaScript_param',1,'p_javaScript_param','analisisSintactico.py',84),
  ('javaScript_param -> ID','javaScript_param',1,'p_javaScript_param','analisisSintactico.py',85),
  ('empty -> <empty>','empty',0,'p_empty','analisisSintactico.py',92),
  ('boolean -> TRUE','boolean',1,'p_boolean','analisisSintactico.py',97),
  ('boolean -> FALSE','boolean',1,'p_boolean','analisisSintactico.py',98),
  ('varType -> LET','varType',1,'p_varType','analisisSintactico.py',103),
  ('varType -> CONST','varType',1,'p_varType','analisisSintactico.py',104),
  ('varType -> VAR','varType',1,'p_varType','analisisSintactico.py',105),
  ('varType -> empty','varType',1,'p_varType','analisisSintactico.py',106),
  ('varDeclaration -> varType ID EQUAL arrayDeclare COLON','varDeclaration',5,'p_varDeclaration','analisisSintactico.py',110),
  ('varDeclaration -> varType ID EQUAL declareMap COLON','varDeclaration',5,'p_varDeclaration','analisisSintactico.py',111),
  ('varDeclaration -> varType ID EQUAL declararSet COLON','varDeclaration',5,'p_varDeclaration','analisisSintactico.py',112),
  ('varDeclaration -> varType ID COLON','varDeclaration',3,'p_varDeclaration','analisisSintactico.py',113),
  ('callMethods -> ID methodArray COLON','callMethods',3,'p_callMethods','analisisSintactico.py',118),
  ('callMethods -> ID methodSet COLON','callMethods',3,'p_callMethods','analisisSintactico.py',119),
  ('callMethods -> ID methodMap COLON','callMethods',3,'p_callMethods','analisisSintactico.py',120),
  ('arrayDeclare -> LBRACKET arrayValues RBRACKET','arrayDeclare',3,'p_arrayDeclare','analisisSintactico.py',125),
  ('arrayDeclare -> NEW ARRAY LPAREN arrayValues RPAREN','arrayDeclare',5,'p_arrayDeclare','analisisSintactico.py',126),
  ('arrayValues -> arrayValue','arrayValues',1,'p_arrayValues','analisisSintactico.py',131),
  ('arrayValues -> arrayValue COMMA arrayValue','arrayValues',3,'p_arrayValues','analisisSintactico.py',132),
  ('arrayValue -> LPAREN expression RPAREN','arrayValue',3,'p_arrayValue','analisisSintactico.py',136),
  ('arrayValue -> ID','arrayValue',1,'p_arrayValue','analisisSintactico.py',137),
  ('arrayValue -> NUM','arrayValue',1,'p_arrayValue','analisisSintactico.py',138),
  ('arrayValue -> STRING','arrayValue',1,'p_arrayValue','analisisSintactico.py',139),
  ('arrayValue -> boolean','arrayValue',1,'p_arrayValue','analisisSintactico.py',140),
  ('arrayValue -> empty','arrayValue',1,'p_arrayValue','analisisSintactico.py',141),
  ('methodArray -> PERIOD PUSH LPAREN arrayValue RPAREN','methodArray',5,'p_methodArray','analisisSintactico.py',144),
  ('methodArray -> PERIOD UNSHIFT LPAREN arrayValue RPAREN','methodArray',5,'p_methodArray','analisisSintactico.py',145),
  ('methodArray -> PERIOD POP LPAREN empty RPAREN','methodArray',5,'p_methodArray','analisisSintactico.py',146),
  ('declareMap -> NEW MAP LPAREN iterable RPAREN','declareMap',5,'p_declareMap','analisisSintactico.py',150),
  ('iterable -> arrayDeclare','iterable',1,'p_iterable','analisisSintactico.py',154),
  ('iterable -> declararSet','iterable',1,'p_iterable','analisisSintactico.py',155),
  ('iterable -> empty','iterable',1,'p_iterable','analisisSintactico.py',156),
  ('methodMap -> PERIOD CLEAR LPAREN RPAREN','methodMap',4,'p_methodMap','analisisSintactico.py',159),
  ('methodMap -> PERIOD LENGTH LPAREN RPAREN','methodMap',4,'p_methodMap','analisisSintactico.py',160),
  ('declareteFunction -> FUNCTION ID LPAREN params RPAREN','declareteFunction',5,'p_declareteFunction','analisisSintactico.py',165),
  ('declareteFunction -> FUNCTION ID LPAREN params RPAREN sentencesCmpt','declareteFunction',6,'p_declareteFunction','analisisSintactico.py',166),
  ('declareteFunction -> varType ID EQUAL FUNCTION LPAREN params RPAREN','declareteFunction',7,'p_declareteFunction','analisisSintactico.py',167),
  ('sentencesCmpt -> LBLOCK sentencia RBLOCK','sentencesCmpt',3,'p_sentencesCmpt','analisisSintactico.py',172),
  ('sentencesCmpt -> LBLOCK sentencia RETURN RBLOCK','sentencesCmpt',4,'p_sentencesCmpt','analisisSintactico.py',173),
  ('callFunction -> ID LPAREN params RPAREN','callFunction',4,'p_callFunction','analisisSintactico.py',178),
  ('params -> paramList','params',1,'p_params','analisisSintactico.py',184),
  ('params -> empty','params',1,'p_params','analisisSintactico.py',185),
  ('param -> ID','param',1,'p_param','analisisSintactico.py',189),
  ('param -> ID LBRACKET RBRACKET','param',3,'p_param','analisisSintactico.py',190),
  ('paramList -> param','paramList',1,'p_paramList','analisisSintactico.py',194),
  ('paramList -> param COMMA paramList','paramList',3,'p_paramList','analisisSintactico.py',195),
  ('args -> argslist','args',1,'p_args','analisisSintactico.py',201),
  ('args -> empty','args',1,'p_args','analisisSintactico.py',202),
  ('args -> javaScript_param','args',1,'p_args','analisisSintactico.py',203),
  ('argslist -> args','argslist',1,'p_argslist','analisisSintactico.py',207),
  ('argslist -> args COMMA argslist','argslist',3,'p_argslist','analisisSintactico.py',208),
  ('declararSet -> NEW SET LPAREN setValues RPAREN','declararSet',5,'p_declararSet','analisisSintactico.py',217),
  ('contiene -> ID PERIOD HAS LPAREN params RPAREN','contiene',6,'p_contiene','analisisSintactico.py',221),
  ('setValues -> setValue','setValues',1,'p_setValues','analisisSintactico.py',225),
  ('setValues -> setValue COMMA setValue','setValues',3,'p_setValues','analisisSintactico.py',226),
  ('setValue -> ID','setValue',1,'p_setValue','analisisSintactico.py',230),
  ('setValue -> NUM','setValue',1,'p_setValue','analisisSintactico.py',231),
  ('setValue -> STRING','setValue',1,'p_setValue','analisisSintactico.py',232),
  ('setValue -> boolean','setValue',1,'p_setValue','analisisSintactico.py',233),
  ('setValue -> empty','setValue',1,'p_setValue','analisisSintactico.py',234),
  ('methodSet -> PERIOD ADD LPAREN setValue RPAREN','methodSet',5,'p_methodSet','analisisSintactico.py',238),
  ('methodSet -> PERIOD DELETE LPAREN setValue RPAREN','methodSet',5,'p_methodSet','analisisSintactico.py',239),
  ('methodSet -> PERIOD CLEAR LPAREN empty RPAREN','methodSet',5,'p_methodSet','analisisSintactico.py',240),
  ('inicializarOp -> PLUS operacionesMath','inicializarOp',2,'p_inicializarOp','analisisSintactico.py',248),
  ('inicializarOp -> MINUS operacionesMath','inicializarOp',2,'p_inicializarOp','analisisSintactico.py',249),
  ('inicializarOp -> empty operacionesMath','inicializarOp',2,'p_inicializarOp','analisisSintactico.py',250),
  ('operacionesMath -> numOperadores PLUS suma','operacionesMath',3,'p_operacionesMath','analisisSintactico.py',253),
  ('operacionesMath -> suma','operacionesMath',1,'p_operacionesMath','analisisSintactico.py',254),
  ('operacionesMath -> suma operacionesMath','operacionesMath',2,'p_operacionesMath','analisisSintactico.py',255),
  ('operacionesMath -> restas','operacionesMath',1,'p_operacionesMath','analisisSintactico.py',256),
  ('operacionesMath -> numOperadores MINUS restas','operacionesMath',3,'p_operacionesMath','analisisSintactico.py',257),
  ('operacionesMath -> restas operacionesMath','operacionesMath',2,'p_operacionesMath','analisisSintactico.py',258),
  ('operacionesMath -> multiplicacion','operacionesMath',1,'p_operacionesMath','analisisSintactico.py',259),
  ('operacionesMath -> numOperadores TIMES multiplicacion','operacionesMath',3,'p_operacionesMath','analisisSintactico.py',260),
  ('operacionesMath -> multiplicacion operacionesMath','operacionesMath',2,'p_operacionesMath','analisisSintactico.py',261),
  ('suma -> numOperadores PLUS LPAREN numOperadores RPAREN','suma',5,'p_suma','analisisSintactico.py',264),
  ('suma -> numOperadores PLUS NUM','suma',3,'p_suma','analisisSintactico.py',265),
  ('suma -> numOperadores','suma',1,'p_suma','analisisSintactico.py',266),
  ('restas -> numOperadores MINUS LPAREN numOperadores RPAREN','restas',5,'p_restas','analisisSintactico.py',270),
  ('restas -> numOperadores MINUS NUM','restas',3,'p_restas','analisisSintactico.py',271),
  ('restas -> numOperadores','restas',1,'p_restas','analisisSintactico.py',272),
  ('multiplicacion -> numOperadores TIMES LPAREN numOperadores RPAREN','multiplicacion',5,'p_multiplicacion','analisisSintactico.py',275),
  ('multiplicacion -> numOperadores TIMES NUM','multiplicacion',3,'p_multiplicacion','analisisSintactico.py',276),
  ('multiplicacion -> numOperadores','multiplicacion',1,'p_multiplicacion','analisisSintactico.py',277),
  ('numOperadores -> enteros','numOperadores',1,'p_numOperadores','analisisSintactico.py',280),
  ('numOperadores -> decimales','numOperadores',1,'p_numOperadores','analisisSintactico.py',281),
  ('enteros -> NUM','enteros',1,'p_enteros','analisisSintactico.py',284),
  ('enteros -> numNegative','enteros',1,'p_enteros','analisisSintactico.py',285),
  ('numNegative -> MINUS NUM','numNegative',2,'p_numNegative','analisisSintactico.py',288),
  ('numNegative -> <empty>','numNegative',0,'p_numNegative','analisisSintactico.py',289),
  ('decimales -> enteros PERIOD NUM','decimales',3,'p_decimales','analisisSintactico.py',292),
]
